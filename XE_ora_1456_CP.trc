
AP: qesdpDPCSetupNextExec(enter): SQL_ID=fk4d7wf6r2tgg
AP: qesdpDPCSetupNextExec: Not an adaptive plan
AP: qesdpInitExecMutable(enter): SQL_ID=fk4d7wf6r2tgg
AP: qesdpInitExecMut (exit)
AP: qesdpSetupMutable(enter): SQL_ID=fk4d7wf6r2tgg

*** 2022-10-12T10:36:38.547469+00:00 (XEPDB1(3))
Registered qb: SEL$1 0x75bbf3b0 (PARSER)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$1 nbfros=2 flg=0
    fro(0): flg=4 objn=80828 hint_alias="X"@"SEL$1"
    fro(1): flg=4 objn=80831 hint_alias="Y"@"SEL$1"

Registered qb: SEL$2 0x758ae4e8 (PARSER)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$2 nbfros=2 flg=0
    fro(0): flg=4 objn=80833 hint_alias="Z"@"SEL$2"
    fro(1): flg=5 objn=0 hint_alias="from$_subquery$_003"@"SEL$2"

Registered qb: SEL$3 0x79197138 (PARSER)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$3 nbfros=1 flg=0
    fro(0): flg=5 objn=0 hint_alias="from$_subquery$_005"@"SEL$3"

SPM: statement not found in SMB
SPM: capture of plan baseline is OFF
kkoctx(): choosing CBO since optimizer mode set to all/first_rows

**************************
Automatic degree of parallelism (AUTODOP)
**************************
Automatic degree of parallelism is disabled: instance state restriction (parallelism not supported).

PM: Considering predicate move-around in query block SEL$3 (#0)
**************************
Predicate Move-Around (PM)
**************************
OPTIMIZER INFORMATION

******************************************
----- Current SQL Statement for this session (sql_id=g2uupqtwcpan6) -----
explain plan for
select /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null
  from x join y  on y.id = x.id join z on z.id = y.id
  where  ( ( x.a = 0 AND z.b = 1               ) OR 
           ( x.a = 1 AND z.b = 0 AND z.c = 0  )   )
*******************************************
Legend
The following abbreviations are used by optimizer trace.
CBQT - cost-based query transformation
JPPD - join predicate push-down
OJPPD - old-style (non-cost-based) JPPD
FPD - filter push-down
PM - predicate move-around
CVM - complex view merging
SPJ - select-project-join
SJC - set join conversion
SU - subquery unnesting
OBYE - order by elimination
OST - old style star transformation
ST - new (cbqt) star transformation
CNT - count(col) to count(*) transformation
JE - Join Elimination
JF - join factorization
CBY - connect by
SLP - select list pruning
DP - distinct placement
VT - vector transformation
AAT - Approximate Aggregate Transformation
ORE - CBQT OR-Expansion
LORE - Legacy OR-Expansion
qb - query block
LB - leaf blocks
DK - distinct keys
LB/K - average number of leaf blocks per key
DB/K - average number of data blocks per key
CLUF - clustering factor
NDV - number of distinct values
Resp - response cost
Card - cardinality
Resc - resource cost
NL - nested loops (join)
SM - sort merge (join)
HA - hash (join)
CPUSPEED - CPU Speed 
IOTFRSPEED - I/O transfer speed
IOSEEKTIM - I/O seek time
SREADTIM - average single block read time
MREADTIM - average multiblock read time
MBRC - average multiblock read count
MAXTHR - maximum I/O system throughput
SLAVETHR - average slave I/O throughput
dmeth - distribution method
  1: no partitioning required
  2: value partitioned
  4: right is random (round-robin)
  128: left is random (round-robin)
  8: broadcast right and partition left
  16: broadcast left and partition right
  32: partition left using partitioning of right
  64: partition right using partitioning of left
  256: run the join in serial
  0: invalid distribution method
sel - selectivity
ptn - partition
AP - adaptive plans
***************************************
PARAMETERS USED BY THE OPTIMIZER
********************************
  *************************************
  PARAMETERS WITH ALTERED VALUES
  ******************************
Compilation Environment Dump
_swat_ver_mv_knob                   = 0
Bug Fix Control Environment


  *************************************
  PARAMETERS WITH DEFAULT VALUES
  ******************************
Compilation Environment Dump
optimizer_mode_hinted               = false
optimizer_features_hinted           = 0.0.0
parallel_execution_enabled          = false
parallel_query_forced_dop           = 0
parallel_dml_forced_dop             = 0
parallel_ddl_forced_degree          = 0
parallel_ddl_forced_instances       = 0
_query_rewrite_fudge                = 90
optimizer_features_enable           = 21.1.0
_optimizer_search_limit             = 5
cpu_count                           = 4
active_instance_count               = 1
parallel_threads_per_cpu            = 1
hash_area_size                      = 131072
bitmap_merge_area_size              = 1048576
sort_area_size                      = 65536
sort_area_retained_size             = 0
_sort_elimination_cost_ratio        = 0
_optimizer_block_size               = 8192
_sort_multiblock_read_count         = 2
_hash_multiblock_io_count           = 0
_db_file_optimizer_read_count       = 8
_optimizer_max_permutations         = 2000
pga_aggregate_target                = 401408 KB
_pga_max_size                       = 204800 KB
_query_rewrite_maxdisjunct          = 257
_smm_auto_min_io_size               = 56 KB
_smm_auto_max_io_size               = 248 KB
_smm_min_size                       = 401 KB
_smm_max_size_static                = 80281 KB
_smm_px_max_size_static             = 200704 KB
_cpu_to_io                          = 0
_optimizer_undo_cost_change         = 21.1.0
parallel_query_mode                 = enabled
_enable_parallel_dml                = disabled
parallel_ddl_mode                   = enabled
optimizer_mode                      = all_rows
sqlstat_enabled                     = false
_optimizer_percent_parallel         = 101
_always_anti_join                   = choose
_always_semi_join                   = choose
_optimizer_mode_force               = true
_partition_view_enabled             = true
_always_star_transformation         = false
_query_rewrite_or_error             = false
_hash_join_enabled                  = true
cursor_sharing                      = exact
_b_tree_bitmap_plans                = true
star_transformation_enabled         = false
_optimizer_cost_model               = choose
_new_sort_cost_estimate             = true
_complex_view_merging               = true
_unnest_subquery                    = true
_eliminate_common_subexpr           = true
_pred_move_around                   = true
_convert_set_to_join                = false
_push_join_predicate                = true
_push_join_union_view               = true
_fast_full_scan_enabled             = true
_optim_enhance_nnull_detection      = true
_parallel_broadcast_enabled         = true
_px_broadcast_fudge_factor          = 100
_ordered_nested_loop                = true
_no_or_expansion                    = false
optimizer_index_cost_adj            = 100
optimizer_index_caching             = 0
_system_index_caching               = 0
_disable_datalayer_sampling         = false
query_rewrite_enabled               = true
query_rewrite_integrity             = enforced
_query_cost_rewrite                 = true
_query_rewrite_2                    = true
_query_rewrite_1                    = true
_query_rewrite_expression           = true
_query_rewrite_jgmigrate            = true
_query_rewrite_fpc                  = true
_query_rewrite_drj                  = false
_full_pwise_join_enabled            = true
_partial_pwise_join_enabled         = true
_left_nested_loops_random           = true
_improved_row_length_enabled        = true
_index_join_enabled                 = true
_enable_type_dep_selectivity        = true
_improved_outerjoin_card            = true
_optimizer_adjust_for_nulls         = true
_optimizer_degree                   = 0
_use_column_stats_for_function      = true
_subquery_pruning_enabled           = true
_subquery_pruning_mv_enabled        = false
_or_expand_nvl_predicate            = true
_like_with_bind_as_equality         = false
_table_scan_cost_plus_one           = true
_cost_equality_semi_join            = true
_default_non_equality_sel_check     = true
_new_initial_join_orders            = true
_oneside_colstat_for_equijoins      = true
_optim_peek_user_binds              = true
_minimal_stats_aggregation          = true
_force_temptables_for_gsets         = false
workarea_size_policy                = auto
_smm_auto_cost_enabled              = true
_gs_anti_semi_join_allowed          = true
_optim_new_default_join_sel         = true
optimizer_dynamic_sampling          = 2
_pre_rewrite_push_pred              = true
_optimizer_new_join_card_computation = true
_union_rewrite_for_gs               = yes_gset_mvs
_generalized_pruning_enabled        = true
_optim_adjust_for_part_skews        = true
_force_datefold_trunc               = false
statistics_level                    = typical
_optimizer_system_stats_usage       = true
skip_unusable_indexes               = true
_remove_aggr_subquery               = true
_optimizer_push_down_distinct       = 0
_dml_monitoring_enabled             = true
_optimizer_undo_changes             = false
_predicate_elimination_enabled      = true
_nested_loop_fudge                  = 100
_project_view_columns               = true
_local_communication_costing_enabled = true
_local_communication_ratio          = 50
_query_rewrite_vop_cleanup          = true
_slave_mapping_enabled              = true
_optimizer_cost_based_transformation = linear
_optimizer_mjc_enabled              = true
_right_outer_hash_enable            = true
_spr_push_pred_refspr               = true
_optimizer_cache_stats              = false
_optimizer_cbqt_factor              = 50
_optimizer_squ_bottomup             = true
_fic_area_size                      = 131072
_optimizer_skip_scan_enabled        = true
_optimizer_cost_filter_pred         = false
_optimizer_sortmerge_join_enabled   = true
_optimizer_join_sel_sanity_check    = true
_mmv_query_rewrite_enabled          = true
_bt_mmv_query_rewrite_enabled       = true
_add_stale_mv_to_dependency_list    = true
_distinct_view_unnesting            = false
_optimizer_dim_subq_join_sel        = true
_optimizer_disable_strans_sanity_checks = 0
_optimizer_compute_index_stats      = true
_push_join_union_view2              = true
optimizer_ignore_hints              = false
_optimizer_random_plan              = 0
_query_rewrite_setopgrw_enable      = true
_optimizer_correct_sq_selectivity   = true
_disable_function_based_index       = false
_optimizer_join_order_control       = 3
_optimizer_cartesian_enabled        = true
_optimizer_starplan_enabled         = true
_extended_pruning_enabled           = true
_optimizer_push_pred_cost_based     = true
_optimizer_null_aware_antijoin      = true
_optimizer_extend_jppd_view_types   = true
_sql_model_unfold_forloops          = run_time
_enable_dml_lock_escalation         = false
_bloom_filter_enabled               = true
_update_bji_ipdml_enabled           = 0
_optimizer_extended_cursor_sharing  = udo
_dm_max_shared_pool_pct             = 5
_optimizer_cost_hjsmj_multimatch    = true
_optimizer_transitivity_retain      = true
_px_pwg_enabled                     = true
optimizer_secure_view_merging       = true
_optimizer_join_elimination_enabled = true
flashback_table_rpi                 = non_fbt
_optimizer_cbqt_no_size_restriction = true
_optimizer_enhanced_filter_push     = true
_optimizer_filter_pred_pullup       = true
_rowsrc_trace_level                 = 0
_simple_view_merging                = true
_optimizer_rownum_pred_based_fkr    = true
_optimizer_better_inlist_costing    = all
_optimizer_self_induced_cache_cost  = false
_optimizer_min_cache_blocks         = 10
_optimizer_or_expansion             = depth
_optimizer_order_by_elimination_enabled = true
_optimizer_outer_to_anti_enabled    = true
_selfjoin_mv_duplicates             = true
_dimension_skip_null                = true
_force_rewrite_enable               = false
_optimizer_star_tran_in_with_clause = true
_optimizer_complex_pred_selectivity = true
_optimizer_connect_by_cost_based    = true
_gby_hash_aggregation_enabled       = true
_globalindex_pnum_filter_enabled    = true
_px_minus_intersect                 = true
_fix_control_key                    = 0
_force_slave_mapping_intra_part_loads = false
_force_tmp_segment_loads            = false
_query_mmvrewrite_maxpreds          = 10
_query_mmvrewrite_maxintervals      = 5
_query_mmvrewrite_maxinlists        = 5
_query_mmvrewrite_maxdmaps          = 10
_query_mmvrewrite_maxcmaps          = 20
_query_mmvrewrite_maxregperm        = 512
_query_mmvrewrite_maxqryinlistvals  = 500
_disable_parallel_conventional_load = false
_trace_virtual_columns              = false
_replace_virtual_columns            = true
_virtual_column_overload_allowed    = true
_kdt_buffering                      = true
_first_k_rows_dynamic_proration     = true
_optimizer_sortmerge_join_inequality = true
_optimizer_aw_stats_enabled         = true
_bloom_pruning_enabled              = true
_obsolete_result_cache_mode         = MANUAL
_px_ual_serial_input                = true
_optimizer_skip_scan_guess          = false
_enable_row_shipping                = true
_row_shipping_threshold             = 100
_row_shipping_explain               = false
transaction_isolation_level         = read_commited
_optimizer_distinct_elimination     = true
_optimizer_multi_level_push_pred    = true
_optimizer_group_by_placement       = true
_optimizer_rownum_bind_default      = 10
_enable_query_rewrite_on_remote_objs = true
_optimizer_extended_cursor_sharing_rel = simple
_optimizer_adaptive_cursor_sharing  = true
_direct_path_insert_features        = 0
_optimizer_improve_selectivity      = true
optimizer_use_pending_statistics    = false
_optimizer_enable_density_improvements = true
_optimizer_aw_join_push_enabled     = true
_optimizer_connect_by_combine_sw    = true
_enable_pmo_ctas                    = 0
_optimizer_native_full_outer_join   = force
_bloom_predicate_enabled            = true
_optimizer_enable_extended_stats    = true
_is_lock_table_for_ddl_wait_lock    = 0
_pivot_implementation_method        = choose
optimizer_capture_sql_plan_baselines = false
optimizer_use_sql_plan_baselines    = true
_optimizer_star_trans_min_cost      = 0
_optimizer_star_trans_min_ratio     = 0
_with_subquery                      = OPTIMIZER
_optimizer_fkr_index_cost_bias      = 10
_optimizer_use_subheap              = true
parallel_degree_policy              = manual
parallel_degree                     = 0
parallel_min_time_threshold         = 10
_parallel_time_unit                 = 10
_optimizer_or_expansion_subheap     = true
_optimizer_free_transformation_heap = true
_optimizer_reuse_cost_annotations   = true
_result_cache_auto_size_threshold   = 100
_result_cache_auto_time_threshold   = 1000
_optimizer_nested_rollup_for_gset   = 100
_nlj_batching_enabled               = 1
parallel_query_default_dop          = 0
is_recur_flags                      = 0
optimizer_use_invisible_indexes     = false
flashback_data_archive_internal_cursor = 0
_optimizer_extended_stats_usage_control = 192
_parallel_syspls_obey_force         = true
cell_offload_processing             = true
_rdbms_internal_fplib_enabled       = false
db_file_multiblock_read_count       = 58
_bloom_folding_enabled              = true
_mv_generalized_oj_refresh_opt      = true
cell_offload_compaction             = ADAPTIVE
cell_offload_plan_display           = AUTO
_bloom_predicate_offload            = true
_bloom_filter_size                  = 0
_bloom_pushing_max                  = 512
parallel_degree_limit               = 65535
parallel_force_local                = false
parallel_max_degree                 = 4
total_cpu_count                     = 4
_optimizer_coalesce_subqueries      = true
_optimizer_fast_pred_transitivity   = true
_optimizer_fast_access_pred_analysis = true
_optimizer_unnest_disjunctive_subq  = true
_optimizer_unnest_corr_set_subq     = true
_optimizer_distinct_agg_transform   = true
_aggregation_optimization_settings  = 0
_optimizer_connect_by_elim_dups     = true
_optimizer_eliminate_filtering_join = true
_connect_by_use_union_all           = true
dst_upgrade_insert_conv             = true
advanced_queuing_internal_cursor    = 0
_optimizer_unnest_all_subqueries    = true
parallel_autodop                    = 0
parallel_ddldml                     = 0
_parallel_cluster_cache_policy      = adaptive
_parallel_scalability               = 50
iot_internal_cursor                 = 0
_optimizer_instance_count           = 0
_optimizer_connect_by_cb_whr_only   = false
_suppress_scn_chk_for_cqn           = nosuppress_1466
_optimizer_join_factorization       = true
_optimizer_use_cbqt_star_transformation = true
_optimizer_table_expansion          = true
_and_pruning_enabled                = true
_deferred_constant_folding_mode     = DEFAULT
_optimizer_distinct_placement       = true
partition_pruning_internal_cursor   = 0
parallel_hinted                     = none
_sql_compatibility                  = 0
_optimizer_use_feedback             = true
_optimizer_try_st_before_jppd       = true
_dml_frequency_tracking             = false
_optimizer_interleave_jppd          = true
kkb_drop_empty_segments             = 0
_px_partition_scan_enabled          = true
_px_partition_scan_threshold        = 64
_optimizer_false_filter_pred_pullup = true
_bloom_minmax_enabled               = true
only_move_row                       = 0
_optimizer_enable_table_lookup_by_nl = true
parallel_execution_message_size     = 16384
_px_loc_msg_cost                    = 1000
_px_net_msg_cost                    = 10000
_optimizer_generate_transitive_pred = true
_optimizer_cube_join_enabled        = true
_optimizer_filter_pushdown          = true
deferred_segment_creation           = true
_optimizer_outer_join_to_inner      = true
_allow_level_without_connect_by     = false
_max_rwgs_groupings                 = 8192
_optimizer_hybrid_fpwj_enabled      = true
_px_replication_enabled             = true
ilm_filter                          = 0
_optimizer_partial_join_eval        = true
_px_concurrent                      = true
_px_object_sampling_enabled         = true
_px_back_to_parallel                = OFF
_optimizer_unnest_scalar_sq         = true
_optimizer_full_outer_join_to_outer = true
_px_filter_parallelized             = true
_px_filter_skew_handling            = true
_zonemap_use_enabled                = true
_zonemap_control                    = 0
_optimizer_multi_table_outerjoin    = true
_px_groupby_pushdown                = force
_partition_advisor_srs_active       = true
_optimizer_ansi_join_lateral_enhance = true
_px_parallelize_expression          = true
_fast_index_maintenance             = true
_optimizer_ansi_rearchitecture      = true
_optimizer_gather_stats_on_load     = true
ilm_access_tracking                 = 0
ilm_dml_timestamp                   = 0
_px_adaptive_dist_method            = choose
_px_adaptive_dist_method_threshold  = 0
_optimizer_batch_table_access_by_rowid = true
optimizer_adaptive_reporting_only   = false
_optimizer_ads_max_table_count      = 0
_optimizer_ads_time_limit           = 0
_optimizer_ads_use_result_cache     = true
_px_wif_dfo_declumping              = choose
_px_wif_extend_distribution_keys    = true
_px_join_skew_handling              = true
_px_join_skew_ratio                 = 10
_px_join_skew_minfreq               = 30
CLI_internal_cursor                 = 0
_parallel_fault_tolerance_enabled   = false
_parallel_fault_tolerance_threshold = 3
_px_partial_rollup_pushdown         = adaptive
_px_single_server_enabled           = true
_optimizer_dsdir_usage_control      = 0
_px_cpu_autodop_enabled             = true
_px_cpu_process_bandwidth           = 200
_sql_hvshare_threshold              = 0
_px_tq_rowhvs                       = true
_optimizer_use_gtt_session_stats    = true
_optimizer_proc_rate_level          = basic
_px_hybrid_TSM_HWMB_load            = true
_optimizer_use_histograms           = true
PMO_altidx_rebuild                  = 0
_cell_offload_expressions           = true
_cell_materialize_virtual_columns   = true
_cell_materialize_all_expressions   = false
_rowsets_enabled                    = true
_rowsets_target_maxsize             = 524288
_rowsets_max_rows                   = 256
_use_hidden_partitions              = 0
_px_load_monitor_threshold          = 10000
_px_numa_support_enabled            = false
total_processor_group_count         = 1
_adaptive_window_consolidator_enabled = true
_optimizer_strans_adaptive_pruning  = true
_bloom_rm_filter                    = false
_optimizer_null_accepting_semijoin  = true
_long_varchar_allow_IOT             = 0
_parallel_ctas_enabled              = true
_cell_offload_complex_processing    = true
_optimizer_performance_feedback     = off
_optimizer_proc_rate_source         = DEFAULT
_hashops_prefetch_size              = 4
_cell_offload_sys_context           = true
_multi_commit_global_index_maint    = 0
_stat_aggs_one_pass_algorithm       = false
_dbg_scan                           = 0
_oltp_comp_dbg_scan                 = 0
_arch_comp_dbg_scan                 = 0
_optimizer_gather_feedback          = true
_upddel_dba_hash_mask_bits          = 0
_px_pwmr_enabled                    = true
_px_cdb_view_enabled                = true
_bloom_sm_enabled                   = true
_optimizer_cluster_by_rowid         = true
_optimizer_cluster_by_rowid_control = 129
_partition_cdb_view_enabled         = true
_common_data_view_enabled           = true
_pred_push_cdb_view_enabled         = true
_rowsets_cdb_view_enabled           = true
_distinct_agg_optimization_gsets    = choose
_array_cdb_view_enabled             = true
_optimizer_adaptive_plan_control    = 0
_optimizer_adaptive_random_seed     = 0
_optimizer_cbqt_or_expansion        = on
_inmemory_dbg_scan                  = 0
_gby_vector_aggregation_enabled     = true
_optimizer_vector_transformation    = true
_optimizer_vector_fact_dim_ratio    = 10
_key_vector_max_size                = 0
_key_vector_predicate_enabled       = true
_key_vector_predicate_threshold     = 0
_vector_operations_control          = 0
_optimizer_vector_min_fact_rows     = 10000000
parallel_dblink                     = 0
_px_scalable_invdist                = true
_key_vector_offload                 = predicate
_optimizer_aggr_groupby_elim        = true
_optimizer_reduce_groupby_key       = true
_vector_serialize_temp_threshold    = 1000
_always_vector_transformation       = false
_optimizer_cluster_by_rowid_batched = true
_object_link_fixed_enabled          = true
optimizer_inmemory_aware            = true
_optimizer_inmemory_table_expansion = true
_optimizer_inmemory_gen_pushable_preds = true
_optimizer_inmemory_autodop         = true
_optimizer_inmemory_access_path     = true
_optimizer_inmemory_bloom_filter    = true
_parallel_inmemory_min_time_threshold = 1
_parallel_inmemory_time_unit        = 1
_rc_sys_obj_enabled                 = true
_optimizer_nlj_hj_adaptive_join     = true
_indexable_con_id                   = true
_bloom_serial_filter                = on
inmemory_force                      = default
inmemory_query                      = enable
_inmemory_query_scan                = true
_inmemory_query_fetch_by_rowid      = false
_inmemory_pruning                   = on
_px_autodop_pq_overhead             = true
_px_external_table_default_stats    = true
_optimizer_key_vector_aggr_factor   = 75
_optimizer_vector_cost_adj          = 100
_cdb_cross_container                = 65535
_cdb_view_parallel_degree           = 65535
_optimizer_hll_entry                = 4096
_px_cdb_view_join_enabled           = true
inmemory_size                       = 0
_external_table_smart_scan          = hadoop_only
_optimizer_inmemory_minmax_pruning  = true
_approx_cnt_distinct_gby_pushdown   = choose
_approx_cnt_distinct_optimization   = 0
_optimizer_ads_use_partial_results  = true
_query_execution_time_limit         = 0
_optimizer_inmemory_cluster_aware_dop = true
_optimizer_db_blocks_buffers        = 0 KB
_query_rewrite_use_on_query_computation = true
_px_scalable_invdist_mcol           = true
_optimizer_bushy_join               = off
_optimizer_bushy_fact_dim_ratio     = 20
_optimizer_bushy_fact_min_size      = 100000
_optimizer_bushy_cost_factor        = 100
_rmt_for_table_redef_enabled        = true
_optimizer_eliminate_subquery       = true
_sqlexec_cache_aware_hash_join_enabled = true
_zonemap_usage_tracking             = true
_sqlexec_hash_based_distagg_enabled = true
_sqlexec_disable_hash_based_distagg_tiv = false
_sqlexec_hash_based_distagg_ssf_enabled = true
_sqlexec_distagg_optimization_settings = 0
approx_for_aggregation              = false
approx_for_count_distinct           = false
_optimizer_union_all_gsets          = true
_rowsets_use_encoding               = true
_rowsets_max_enc_rows               = 64
_optimizer_enhanced_join_elimination = true
_optimizer_multicol_join_elimination = true
_key_vector_create_pushdown_threshold = 20000
_optimizer_enable_plsql_stats       = true
_recursive_with_parallel            = true
_recursive_with_branch_iterations   = 7
_px_dist_agg_partial_rollup_pushdown = adaptive
_px_adaptive_dist_bypass_enabled    = true
_enable_view_pdb                    = true
_optimizer_key_vector_pruning_enabled = true
_pwise_distinct_enabled             = true
_recursive_with_using_temp_table    = false
_partition_read_only                = true
_sql_alias_scope                    = true
_cdb_view_no_skip_migrate           = false
_approx_perc_sampling_err_rate      = 2
_sqlexec_encoding_aware_hj_enabled  = true
rim_node_exist                      = 0
_enable_containers_subquery         = true
_force_containers_subquery          = false
_cell_offload_vector_groupby        = true
_vector_encoding_mode               = manual
_ds_xt_split_count                  = 1
_ds_sampling_method                 = PROGRESSIVE
_optimizer_ads_use_spd_cache        = true
_optimizer_use_table_scanrate       = HADOOP_ONLY
_optimizer_use_xt_rowid             = true
_xt_sampling_scan_granules          = on
_recursive_with_control             = 0
_sqlexec_use_rwo_aware_expr_analysis = true
_optimizer_band_join_aware          = true
_optimizer_vector_base_dim_fact_factor = 200
approx_for_percentile               = none
_approx_percentile_optimization     = 0
_projection_pushdown                = true
_px_object_sampling                 = 200
_optimizer_adaptive_plans_continuous = false
_optimizer_adaptive_plans_iterative = false
_ds_enable_view_sampling            = true
_optimizer_generate_ptf_implied_preds = true
_optimizer_inmemory_use_stored_stats = AUTO
_cdb_special_old_xplan              = true
uniaud_internal_cursor              = 0
_kd_dbg_control                     = 0
_mv_access_compute_fresh_data       = on
_bloom_filter_ratio                 = 35
_optimizer_control_shard_qry_processing = 65472
containers_parallel_degree          = 65535
sql_from_coordinator                = 0
_xt_sampling_scan_granules_min_granules = 1
_in_memory_cdt                      = LIMITED
_in_memory_cdt_maxpx                = 4
_px_partition_load_dist_threshold   = 64
_px_adaptive_dist_bypass_optimization = 1
_optimizer_interleave_or_expansion  = true
optimizer_adaptive_plans            = true
optimizer_adaptive_statistics       = false
_optimizer_use_feedback_for_join    = false
_optimizer_ads_for_pq               = false
_px_join_skewed_values_count        = 0
optimizer_ignore_parallel_hints     = false
parallel_min_degree                 = 1
_px_nlj_bcast_rr_threshold          = 10
_optimizer_gather_stats_on_load_all = false
_optimizer_gather_stats_on_load_hist = false
_optimizer_allow_all_access_paths   = true
_key_vector_double_enabled          = true
_key_vector_timestamp_enabled       = true
_optimizer_answering_query_using_stats = false
_disable_dblink_optim               = true
_cell_offload_hybrid_processing     = true
_read_optimized_table_lookup        = true
_optimizer_key_vector_payload       = true
_optimizer_vector_fact_payload_ratio = 20
_bloom_pruning_setops_enabled       = true
_bloom_filter_setops_enabled        = true
_key_vector_shared_dgk_ht           = true
_px_pwise_wif_enabled               = true
_sqlexec_reorder_wif_enabled        = true
_px_partition_skew_threshold        = 80
_sqlexec_pwiseops_with_sqlfuncs_enabled = true
_sqlexec_pwiseops_with_binds_enabled = true
_px_shared_hash_join                = false
_px_reuse_server_groups             = multi
_px_join_skew_null_handling         = true
_px_join_skew_use_histogram         = true
_px_join_skew_sampling_time_limit   = 50
_px_join_skew_sampling_percent      = 0
_cdb_view_no_skip_restricted        = false
_inmemory_external_table            = true
_sqlexec_use_kgghash3               = true
_cell_offload_vector_groupby_force  = false
_hcs_enable_pred_push               = true
parallel_dop_doubled                = 0
_optimizer_gather_stats_on_load_index = true
_con_map_sql_enforcement            = true
_uniq_cons_sql_enforcement          = true
_ref_cons_sql_enforcement           = true
_is_lock_table_for_split_merge      = 0
_cell_offload_vector_groupby_fact_key = true
_px_scalable_gby_invdist            = true
_px_dynamic_granules                = true
_px_dynamic_granules_adjust         = 10
_px_hybrid_partition_execution_enabled = true
_px_hybrid_partition_skew_threshold = 10
_optimizer_key_vector_use_max_size  = 1048576
_cell_offload_vector_groupby_withnojoin = true
_key_vector_join_pushdown_enabled   = true
_cell_offload_grand_total           = true
_optimizer_key_vector_payload_dim_aggs = true
_optimizer_use_auto_indexes         = AUTO
_optimizer_use_stats_on_conventional_dml = false
_optimizer_gather_stats_on_conventional_dml = false
_optimizer_use_stats_on_conventional_config = 0
_skip_pset_col_chk                  = 0
_nls_binary                         = true
optimizer_use_sql_quarantine        = true
_optimizer_gather_stats_on_conventional_config = 0
_nls_forced_binary                  = 0
_utl32k_mv_query                    = false
optimizer_session_type              = NORMAL
_cell_offload_vector_groupby_external = true
_optimizer_wc_filter_pushdown       = true
BlockChain_ledger_infrastructure    = 0
_cell_metadata_compression          = AUTO
_sqlexec_use_delayed_unpacking      = true
_zonemap_refresh_within_load        = true
_px_parallelize_non_native_datatype = true
_inmemory_hpk4sql_flags             = 0
_sqlexec_hash_based_distagg_ser_civ_enabled = true
_optimizer_use_stats_models         = false
_cross_con_remove_pushed_preds      = false
_optimizer_exists_to_any_rewrite    = true
_update_global_index_from_part_exchange = 0
optimizer_cross_shard_resiliency    = false
shard_queries_restricted_by_key     = false
valid_shard_session_key             = 0
result_cache_mode                   = MANUAL
_bigdata_offload_flag               = false
_optimizer_nested_loop_join         = on
_groupby_orderby_combine            = 5000
_px_extended_join_skew_handling     = true
_autoptn_costing                    = false
translate_table_name_hash           = 0
_enable_columnar_cache              = 1
_px_adaptive_dist_nij_enabled       = on
_sqlexec_hash_rollup_enabled        = true
_sqlexec_hash_based_set_operation_enabled = true
container_data                      = ALL
_mv_logical_partition_rewrite_enabled = false

  ***************************************
  PARAMETERS IN OPT_PARAM HINT
  ****************************
  _optimizer_cbqt_or_expansion        = 'off'
***************************************
Column Usage Monitoring is ON: tracking level = 53
***************************************

Considering Query Transformations on query block SEL$3 (#0)
**************************
Query transformations (QT)
**************************
JF: Checking validity of join factorization for query block SEL$1 (#0)
JF: Bypassed: not a UNION or UNION-ALL query block.
ST: not valid since star transformation parameter is FALSE
TE: Checking validity of table expansion for query block SEL$1 (#0)
TE: Bypassed: No partitioned table in query block.
ORE: Checking validity of OR Expansion for query block SEL$1 (#0)
ORE: Predicate chain before QB validity check - SEL$1
"Y"."ID"="X"."ID"
ORE: Predicate chain after QB validity check - SEL$1
"Y"."ID"="X"."ID"
ORE: bypassed - Disabled by parameter.
VT: Initial VT validity check for query block SEL$1 (#0)
VT: Bypassed: inmemory is disabled.
BJ: Checking validity for bushy join for query block SEL$1 (#0)
invalid because Not enabled by hint/parameter
BJ: Bypassed: Not enabled by hint/parameter.
JF: Checking validity of join factorization for query block SEL$2 (#0)
JF: Bypassed: not a UNION or UNION-ALL query block.
ST: not valid since star transformation parameter is FALSE
TE: Checking validity of table expansion for query block SEL$2 (#0)
TE: Bypassed: No partitioned table in query block.
ORE: Checking validity of OR Expansion for query block SEL$2 (#0)
ORE: Predicate chain before QB validity check - SEL$2
"Z"."ID"="from$_subquery$_003"."QCSJ_C000000000300001_2"
ORE: Predicate chain after QB validity check - SEL$2
"Z"."ID"="from$_subquery$_003"."QCSJ_C000000000300001_2"
ORE: bypassed - Disabled by parameter.
VT: Initial VT validity check for query block SEL$2 (#0)
VT: Bypassed: inmemory is disabled.
BJ: Checking validity for bushy join for query block SEL$2 (#0)
invalid because Not enabled by hint/parameter
BJ: Bypassed: Not enabled by hint/parameter.
Check Basic Validity for Non-Union View for query block SEL$2 (#0)
JPPD:     JPPD bypassed: View has unsupported constructs.
Check Basic Validity for Non-Union View for query block SEL$1 (#0)
JPPD:     JPPD bypassed: View has unsupported constructs.
JF: Checking validity of join factorization for query block SEL$3 (#0)
JF: Bypassed: not a UNION or UNION-ALL query block.
ST: not valid since star transformation parameter is FALSE
TE: Checking validity of table expansion for query block SEL$3 (#0)
TE: Bypassed: No partitioned table in query block.
ORE: Checking validity of OR Expansion for query block SEL$3 (#0)
ORE: Predicate chain before QB validity check - SEL$3
"from$_subquery$_005"."A_1"=0 AND "from$_subquery$_005"."B_4"=1 OR "from$_subquery$_005"."A_1"=1 AND "from$_subquery$_005"."B_4"=0 AND "from$_subquery$_005"."C_5"=0
ORE: Predicate chain after QB validity check - SEL$3
"from$_subquery$_005"."A_1"=0 AND "from$_subquery$_005"."B_4"=1 OR "from$_subquery$_005"."A_1"=1 AND "from$_subquery$_005"."B_4"=0 AND "from$_subquery$_005"."C_5"=0
ORE: bypassed - Disabled by parameter.
VT: Initial VT validity check for query block SEL$3 (#0)
VT: Bypassed: inmemory is disabled.
BJ: Checking validity for bushy join for query block SEL$3 (#0)
invalid because Not enabled by hint/parameter
BJ: Bypassed: Not enabled by hint/parameter.
CBQT bypassed for query block SEL$3 (#0): no complex view, sub-queries or UNION (ALL) queries.
CBQT: Validity checks failed for g2uupqtwcpan6.
CSE: Considering common sub-expression elimination in query block SEL$3 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE: Considering common sub-expression elimination in query block SEL$2 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$2 (#0).
CSE: Considering common sub-expression elimination in query block SEL$1 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$1 (#0).
CSE:     CSE not performed on query block SEL$3 (#0).
OBYE:   Considering Order-by Elimination from view SEL$3 (#0)
***************************
Order-by elimination (OBYE)
***************************
OBYE:     OBYE bypassed: no order by to eliminate.
JE:[V2]   Considering Join Elimination on query block SEL$1 (#0)
*************************
Join Elimination [JE:R 12.2]    
*************************
SQL:******* UNPARSED QUERY IS *******
SELECT "X"."ID" "QCSJ_C000000000300000","X"."A" "A","Y"."ID" "QCSJ_C000000000300001_2" FROM "PDBADMIN"."X" "X","PDBADMIN"."Y" "Y" WHERE "Y"."ID"="X"."ID"
JE:[V2] Query block (0x75bbf3b0) before join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT "X"."ID" "QCSJ_C000000000300000","X"."A" "A","Y"."ID" "QCSJ_C000000000300001_2" FROM "PDBADMIN"."X" "X","PDBADMIN"."Y" "Y" WHERE "Y"."ID"="X"."ID"
JE:[V2]: Try to eliminate Y by ref. join elim using NTSID
JE:[V2]: Cannot eliminate Y by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate X by ref. join elim using NTSID
JE:[V2]: Cannot eliminate X by ref. join elim - no constr. based join pred(s)
JE:[V2] Query block (0x75bbf3b0) after join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT "X"."ID" "QCSJ_C000000000300000","X"."A" "A","Y"."ID" "QCSJ_C000000000300001_2" FROM "PDBADMIN"."X" "X","PDBADMIN"."Y" "Y" WHERE "Y"."ID"="X"."ID"

JE:[V2]   Considering Join Elimination on query block SEL$2 (#0)
*************************
Join Elimination [JE:R 12.2]    
*************************
SQL:******* UNPARSED QUERY IS *******
SELECT "from$_subquery$_003"."QCSJ_C000000000300000_0" "QCSJ_C000000000300000","from$_subquery$_003"."A_1" "A_1","from$_subquery$_003"."QCSJ_C000000000300001_2" "QCSJ_C000000000300001","Z"."ID" "ID","Z"."B" "B_4","Z"."C" "C_5" FROM  (SELECT "X"."ID" "QCSJ_C000000000300000_0","X"."A" "A_1","Y"."ID" "QCSJ_C000000000300001_2" FROM "PDBADMIN"."X" "X","PDBADMIN"."Y" "Y" WHERE "Y"."ID"="X"."ID") "from$_subquery$_003","PDBADMIN"."Z" "Z" WHERE "Z"."ID"="from$_subquery$_003"."QCSJ_C000000000300001_2"
JE:[V2] Query block (0x758ae4e8) before join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT "from$_subquery$_003"."QCSJ_C000000000300000_0" "QCSJ_C000000000300000","from$_subquery$_003"."A_1" "A_1","from$_subquery$_003"."QCSJ_C000000000300001_2" "QCSJ_C000000000300001","Z"."ID" "ID","Z"."B" "B_4","Z"."C" "C_5" FROM  (SELECT "X"."ID" "QCSJ_C000000000300000_0","X"."A" "A_1","Y"."ID" "QCSJ_C000000000300001_2" FROM "PDBADMIN"."X" "X","PDBADMIN"."Y" "Y" WHERE "Y"."ID"="X"."ID") "from$_subquery$_003","PDBADMIN"."Z" "Z" WHERE "Z"."ID"="from$_subquery$_003"."QCSJ_C000000000300001_2"
JE:[V2]: Try to eliminate Z by ref. join elim using NTSID
JE:[V2]: Cannot eliminate Z by ref. join elim - no constr. based join pred(s)
JE:[V2] Query block (0x758ae4e8) after join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT "from$_subquery$_003"."QCSJ_C000000000300000_0" "QCSJ_C000000000300000","from$_subquery$_003"."A_1" "A_1","from$_subquery$_003"."QCSJ_C000000000300001_2" "QCSJ_C000000000300001","Z"."ID" "ID","Z"."B" "B_4","Z"."C" "C_5" FROM  (SELECT "X"."ID" "QCSJ_C000000000300000_0","X"."A" "A_1","Y"."ID" "QCSJ_C000000000300001_2" FROM "PDBADMIN"."X" "X","PDBADMIN"."Y" "Y" WHERE "Y"."ID"="X"."ID") "from$_subquery$_003","PDBADMIN"."Z" "Z" WHERE "Z"."ID"="from$_subquery$_003"."QCSJ_C000000000300001_2"

CVM: Considering view merge in query block SEL$3 (#0)
OJE: Begin: find best directive for query block SEL$3 (#0)
OJE: End: finding best directive for query block SEL$3 (#0)
CVM:   Checking validity of merging in query block SEL$2 (#0)
CVM: Considering view merge in query block SEL$2 (#0)
OJE: Begin: find best directive for query block SEL$2 (#0)
OJE: End: finding best directive for query block SEL$2 (#0)
CVM:   Checking validity of merging in query block SEL$1 (#0)
CVM: Considering view merge in query block SEL$1 (#0)
OJE: Begin: find best directive for query block SEL$1 (#0)
OJE: End: finding best directive for query block SEL$1 (#0)
CVM:   Merging SPJ view SEL$1 (#0) into SEL$2 (#0)
Registered qb: SEL$58A6D7F6 0x758ae4e8 (VIEW MERGE SEL$2; SEL$1; SEL$2)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$58A6D7F6 nbfros=3 flg=0
    fro(0): flg=0 objn=80828 hint_alias="X"@"SEL$1"
    fro(1): flg=0 objn=80831 hint_alias="Y"@"SEL$1"
    fro(2): flg=0 objn=80833 hint_alias="Z"@"SEL$2"

OJE: Begin: find best directive for query block SEL$58A6D7F6 (#0)
OJE: End: finding best directive for query block SEL$58A6D7F6 (#0)
CVM:   Merging SPJ view SEL$58A6D7F6 (#0) into SEL$3 (#0)
Registered qb: SEL$9E43CB6E 0x79197138 (VIEW MERGE SEL$3; SEL$58A6D7F6; SEL$3)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$9E43CB6E nbfros=3 flg=0
    fro(0): flg=0 objn=80828 hint_alias="X"@"SEL$1"
    fro(1): flg=0 objn=80831 hint_alias="Y"@"SEL$1"
    fro(2): flg=0 objn=80833 hint_alias="Z"@"SEL$2"

OJE: Begin: find best directive for query block SEL$9E43CB6E (#0)
OJE: End: finding best directive for query block SEL$9E43CB6E (#0)
JE:[V2]   Considering Join Elimination on query block SEL$9E43CB6E (#0)
*************************
Join Elimination [JE:R 12.2]    
*************************
SQL:******* UNPARSED QUERY IS *******
SELECT NULL "NULL" FROM "PDBADMIN"."X" "X","PDBADMIN"."Y" "Y","PDBADMIN"."Z" "Z" WHERE ("X"."A"=0 AND "Z"."B"=1 OR "X"."A"=1 AND "Z"."B"=0 AND "Z"."C"=0) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"
JE:[V2] Query block (0x79197138) before join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT NULL "NULL" FROM "PDBADMIN"."X" "X","PDBADMIN"."Y" "Y","PDBADMIN"."Z" "Z" WHERE ("X"."A"=0 AND "Z"."B"=1 OR "X"."A"=1 AND "Z"."B"=0 AND "Z"."C"=0) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"
JE:[V2]: Try to eliminate Z by ref. join elim using NTSID
JE:[V2]: Cannot eliminate Z by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate Z by ref. join elim using NTSID
JE:[V2]: Cannot eliminate Z by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate Y by ref. join elim using NTSID
JE:[V2]: Cannot eliminate Y by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate Y by ref. join elim using NTSID
JE:[V2]: Cannot eliminate Y by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate X by ref. join elim using NTSID
JE:[V2]: Cannot eliminate X by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate X by ref. join elim using NTSID
JE:[V2]: Cannot eliminate X by ref. join elim - no constr. based join pred(s)
JE:[V2] Query block (0x79197138) after join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT NULL "NULL" FROM "PDBADMIN"."X" "X","PDBADMIN"."Y" "Y","PDBADMIN"."Z" "Z" WHERE ("X"."A"=0 AND "Z"."B"=1 OR "X"."A"=1 AND "Z"."B"=0 AND "Z"."C"=0) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"

query block SEL$3 transformed to SEL$9E43CB6E (#0)
Considering Query Transformations on query block SEL$9E43CB6E (#0)
**************************
Query transformations (QT)
**************************
JF: Checking validity of join factorization for query block SEL$9E43CB6E (#0)
JF: Bypassed: not a UNION or UNION-ALL query block.
ST: not valid since star transformation parameter is FALSE
TE: Checking validity of table expansion for query block SEL$9E43CB6E (#0)
TE: Bypassed: No partitioned table in query block.
ORE: Checking validity of OR Expansion for query block SEL$9E43CB6E (#0)
ORE: Predicate chain before QB validity check - SEL$9E43CB6E
("X"."A"=0 AND "Z"."B"=1 OR "X"."A"=1 AND "Z"."B"=0 AND "Z"."C"=0) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"
ORE: Predicate chain after QB validity check - SEL$9E43CB6E
("X"."A"=0 AND "Z"."B"=1 OR "X"."A"=1 AND "Z"."B"=0 AND "Z"."C"=0) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"
ORE: bypassed - Disabled by parameter.
VT: Initial VT validity check for query block SEL$9E43CB6E (#0)
VT: Bypassed: inmemory is disabled.
BJ: Checking validity for bushy join for query block SEL$9E43CB6E (#0)
invalid because Not enabled by hint/parameter
BJ: Bypassed: Not enabled by hint/parameter.
CBQT bypassed for query block SEL$9E43CB6E (#0): no complex view, sub-queries or UNION (ALL) queries.
CBQT: Validity checks failed for g2uupqtwcpan6.
CSE: Considering common sub-expression elimination in query block SEL$9E43CB6E (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$9E43CB6E (#0).
AAT:   Considering Approximate Aggregate Transformation on query block SEL$9E43CB6E (#0) 
*******************************************
Approximate Aggregate Transformation (AAT) 
*******************************************
AAT: no exact aggregates transformed
SQE: Trying SQ elimination.
Query after View Removal
******* UNPARSED QUERY IS *******
SELECT NULL "NULL" FROM "PDBADMIN"."X" "X","PDBADMIN"."Y" "Y","PDBADMIN"."Z" "Z" WHERE ("X"."A"=0 AND "Z"."B"=1 OR "X"."A"=1 AND "Z"."B"=0 AND "Z"."C"=0) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"
SU: Considering subquery unnesting in query block SEL$9E43CB6E (#0)
********************
Subquery Unnest (SU)
********************
SU: Considering bottom-up subquery unnesting
SJC: Considering set-join conversion in query block SEL$9E43CB6E (#0)
*************************
Set-Join Conversion (SJC)
*************************
SJC: not performed
DCL: Checking validity of group-by elimination SEL$9E43CB6E (#0)
DCL: Result of group-by elimination: Invalid
JE:[V2]   Considering Join Elimination on query block SEL$9E43CB6E (#0)
*************************
Join Elimination [JE:R 12.2]    
*************************
SQL:******* UNPARSED QUERY IS *******
SELECT NULL "NULL" FROM "PDBADMIN"."X" "X","PDBADMIN"."Y" "Y","PDBADMIN"."Z" "Z" WHERE ("X"."A"=0 AND "Z"."B"=1 OR "X"."A"=1 AND "Z"."B"=0 AND "Z"."C"=0) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"
JE:[V2] Query block (0x79197138) before join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT NULL "NULL" FROM "PDBADMIN"."X" "X","PDBADMIN"."Y" "Y","PDBADMIN"."Z" "Z" WHERE ("X"."A"=0 AND "Z"."B"=1 OR "X"."A"=1 AND "Z"."B"=0 AND "Z"."C"=0) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"
JE:[V2]: Try to eliminate Z by ref. join elim using NTSID
JE:[V2]: Cannot eliminate Z by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate Z by ref. join elim using NTSID
JE:[V2]: Cannot eliminate Z by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate Y by ref. join elim using NTSID
JE:[V2]: Cannot eliminate Y by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate Y by ref. join elim using NTSID
JE:[V2]: Cannot eliminate Y by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate X by ref. join elim using NTSID
JE:[V2]: Cannot eliminate X by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate X by ref. join elim using NTSID
JE:[V2]: Cannot eliminate X by ref. join elim - no constr. based join pred(s)
JE:[V2] Query block (0x79197138) after join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT NULL "NULL" FROM "PDBADMIN"."X" "X","PDBADMIN"."Y" "Y","PDBADMIN"."Z" "Z" WHERE ("X"."A"=0 AND "Z"."B"=1 OR "X"."A"=1 AND "Z"."B"=0 AND "Z"."C"=0) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"

PM: Considering predicate move-around in query block SEL$9E43CB6E (#0)
**************************
Predicate Move-Around (PM)
**************************
PM:     PM bypassed: Outer query contains no views.
PM:     PM bypassed: Outer query contains no views.
isReduceGrByValid:   Group By Validation (Failed).
isReduceGrByValid:   Group By Validation (Failed).
WCFPD: Considering simple filter push (pre rewrite) in query block SEL$9E43CB6E (#0)
WCFPD:  Current where clause predicates ("X"."A"=0 AND "Z"."B"=1 OR "X"."A"=1 AND "Z"."B"=0 AND "Z"."C"=0) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"

SQT:   Considering Statistic-based Query Transformation from query block SEL$9E43CB6E (#0)
***************************
Statistic-based Query Transformation (SQT)
***************************
SQT:     SQT bypassed: Disabled by parameter.
query block SEL$9E43CB6E (#0) unchanged
FPD: Considering simple filter push in query block SEL$9E43CB6E (#0)
("X"."A"=0 AND "Z"."B"=1 OR "X"."A"=1 AND "Z"."B"=0 AND "Z"."C"=0) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"
try to generate transitive predicate from check constraints for query block SEL$9E43CB6E (#0)
finally: ("X"."A"=0 AND "Z"."B"=1 OR "X"."A"=1 AND "Z"."B"=0 AND "Z"."C"=0) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"

apadrv-start sqlid=17396092227847629446
CSE: Considering common sub-expression elimination in query block SEL$9E43CB6E (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$9E43CB6E (#0).
  :
    call(in-use=16432, alloc=32720), compile(in-use=110584, alloc=120656), execution(in-use=173280, alloc=174752)

*******************************************
Peeked values of the binds in SQL statement
*******************************************


=====================================
SPD: BEGIN context at statement level
=====================================
Stmt: ******* UNPARSED QUERY IS *******
SELECT NULL "NULL" FROM "PDBADMIN"."X" "X","PDBADMIN"."Y" "Y","PDBADMIN"."Z" "Z" WHERE ("X"."A"=0 AND "Z"."B"=1 OR "X"."A"=1 AND "Z"."B"=0 AND "Z"."C"=0) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"
Objects referenced in the statement
  Z[Z] 80833, type = 1
  Y[Y] 80831, type = 1
  X[X] 80828, type = 1
Objects in the hash table
  Hash table Object 80833, type = 1, ownerid = 15786453349734587297:
    No Dynamic Sampling Directives for the object
  Hash table Object 80831, type = 1, ownerid = 14030567531776009701:
    No Dynamic Sampling Directives for the object
  Hash table Object 80828, type = 1, ownerid = 6159800611526574514:
    No Dynamic Sampling Directives for the object
Return code in qosdInitDirCtx: ENBLD
===================================
SPD: END context at statement level
===================================
Final query after transformations:******* UNPARSED QUERY IS *******
SELECT NULL "NULL" FROM "PDBADMIN"."X" "X","PDBADMIN"."Y" "Y","PDBADMIN"."Z" "Z" WHERE ("X"."A"=0 AND "Z"."B"=1 OR "X"."A"=1 AND "Z"."B"=0 AND "Z"."C"=0) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"
kkoqbc: optimizing query block SEL$9E43CB6E (#0)
        
        :
    call(in-use=16888, alloc=32720), compile(in-use=121472, alloc=124672), execution(in-use=177344, alloc=178816)

kkoqbc-subheap (create addr=0x7fd925bbb780)
****************
QUERY BLOCK TEXT
****************
select /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null
  from x join y  on y.id = x.id join z on z.id = y.id
  where  ( ( x.a = 0 AND z.b = 1               ) OR 
           ( x.a = 1 AND z.b = 0 AND z.c = 0  )   )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$9E43CB6E nbfros=3 flg=0
  fro(0): flg=0 objn=80828 hint_alias="X"@"SEL$1"
  fro(1): flg=0 objn=80831 hint_alias="Y"@"SEL$1"
  fro(2): flg=0 objn=80833 hint_alias="Z"@"SEL$2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3072 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table:  Z  Alias:  Z
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  28  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: Z_B_C  Col#: 2 3 1
  LVLS: 1  #LB: 30  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 210.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: Z_ID  Col#: 1
  LVLS: 1  #LB: 18  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  Y  Alias:  Y
  #Rows: 8  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  3.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 1.000000 Max: 8.000000
Index Stats::
  Index: Y_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 8  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 8.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  X  Alias:  X
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: X_A_ID  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: X_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$9E43CB6E (#0)
finally: ("X"."A"=0 OR "X"."A"=1) AND ("Z"."B"=1 OR "Z"."B"=0 AND "Z"."C"=0) AND ("X"."A"=0 AND "Z"."B"=1 OR "X"."A"=1 AND "Z"."B"=0 AND "Z"."C"=0) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$9E43CB6E (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for X
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for X[X] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE

 kkecdn: Single Table Predicate:"X"."A"=0 OR "X"."A"=1
  Column (#2): 
    NewDensity:0.250000, OldDensity:0.050000 BktCnt:10.000000, PopBktCnt:10.000000, PopValCnt:2, NDV:2
  Column (#2): A(NUMBER)
    AvgLen: 3 NDV: 2 Nulls: 0 Density: 0.250000 Min: 1.000000 Max: 2.000000
    Histogram: Freq  #Bkts: 2  UncompBkts: 10  EndPtVals: 2  ActualVal: yes
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Table: X  Alias: X
    Card: Original: 10.000000  Rounded: 6  Computed: 5.500000  Non Adjusted: 5.500000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 975.000000 (cpu filter eval) (= 97.500000 (per row) * 10.000000 (#rows))
                       =   38282.200000
  Access Path: TableScan
    Cost:  3.001038  Resp: 3.001038  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 38282
      Resp_io: 3.000000  Resp_cpu: 38282
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9296
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000252  Resp: 2.000252  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9296
      Resp_io: 2.000000  Resp_cpu: 9296
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 15443
    ix_sel: 0.550000  ix_sel_with_filters: 0.550000 
    Cost: 1.000419  Resp: 1.000419  Degree: 1
  ****** trying bitmap/domain indexes ******
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 7321
    ix_sel: 0.050000  ix_sel_with_filters: 0.050000 
    Cost: 1.000199  Resp: 1.000199  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 7321
    ix_sel: 0.050000  ix_sel_with_filters: 0.050000 
    Cost: 1.000199  Resp: 1.000199  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  Bitmap nodes:
    Not used X_A_ID
      Cost = 2.000201, sel = 0.050000
    Used X_A_ID
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: X_A_ID
         Cost: 1.000419  Degree: 1  Resp: 1.000419  Card: 5.500000  Bytes: 0.000000

Access path analysis for Y
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Y[Y] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: Y  Alias: Y
    Card: Original: 8.000000  Rounded: 8  Computed: 8.000000  Non Adjusted: 8.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                       =   36807.200000
  Access Path: TableScan
    Cost:  3.000998  Resp: 3.000998  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 36807
      Resp_io: 3.000000  Resp_cpu: 36807
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8081
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000219  Resp: 2.000219  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 8081
      Resp_io: 2.000000  Resp_cpu: 8081
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 1
  ****** trying bitmap/domain indexes ******
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Y_ID
         Cost: 1.000237  Degree: 1  Resp: 1.000237  Card: 8.000000  Bytes: 0.000000

Access path analysis for Z
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Z[Z] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE

 kkecdn: Single Table Predicate: ?? 
  Column (#2): 
    NewDensity:0.050000, OldDensity:0.000050 BktCnt:10000.000000, PopBktCnt:10000.000000, PopValCnt:10, NDV:10
  Column (#2): B(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.050000 Min: 1.000000 Max: 10.000000
    Histogram: Freq  #Bkts: 10  UncompBkts: 10000  EndPtVals: 10  ActualVal: yes
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Column (#3): C(NUMBER)
    AvgLen: 3 NDV: 1 Nulls: 0 Density: 0.000050 Min: 1.000000 Max: 1.000000
    Histogram: Freq  #Bkts: 1  UncompBkts: 10000  EndPtVals: 1  ActualVal: yes
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Table: Z  Alias: Z
    Card: Original: 10000.000000  Rounded: 1000  Computed: 1000.020000  Non Adjusted: 1000.020000
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 95.002250, sel = 0.100002 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
      io = 0.000000, cpu = 50.002500, sel = 0.000002 flag = 2048  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 950022.500000 (cpu filter eval) (= 95.002250 (per row) * 10000.000000 (#rows))
                       =   3049422.820000
  Access Path: TableScan
    Cost:  9.082711  Resp: 9.082711  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 3049423
      Resp_io: 9.000000  Resp_cpu: 3049423
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 2363666
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.064111  Resp: 10.064111  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2363666
      Resp_io: 10.000000  Resp_cpu: 2363666
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  Access Path: index (FullScan)
    Index: Z_B_C
    resc_io: 31.000000  resc_cpu: 2220765
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 31.086002  Resp: 31.086002  Degree: 1
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 4.000000  resc_cpu: 228486
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    Cost: 4.006197  Resp: 4.006197  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 2.2222e-06  ix_sel_with_filters: 2.2222e-06 
    Cost: 2.000392  Resp: 2.000392  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 4.000000  resc_cpu: 228486
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    Cost: 4.006197  Resp: 4.006197  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 2.2222e-06  ix_sel_with_filters: 2.2222e-06 
    Cost: 2.000392  Resp: 2.000392  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  Bitmap nodes:
    Used Z_B_C
      Cost = 3.000392, sel = 2.2222e-06
  Bitmap nodes:
    Used Z_B_C
      Cost = 5.022041, sel = 0.100000
    Used  bitmap node 
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  Access path: Bitmap index - accepted
    Cost: 17.729208 Cost_io: 15.696086 Cost_cpu: 74958316.452961 Sel: 0.100002
    Not Believed to be index-only
  ****** finished trying bitmap/domain indexes ******
******** Begin index join costing ********
 ****** Costing Index Z_B_C
  Access Path: index (FullScan)
    Index: Z_B_C
    resc_io: 31.000000  resc_cpu: 2220765
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 31.060235  Resp: 31.060235  Degree: 0
******** End index join costing ********
  Best:: AccessPath: TableScan
         Cost: 9.082711  Degree: 1  Resp: 9.082711  Card: 1000.020000  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
kkogast: Selectivities tab=X[X] tnum=0 astat=N 
  card=5.50 nrow=10.00 0.550000
kkogast: Selectivities tab=Y[Y] tnum=1 astat=N 
  card=8.00 nrow=8.00 1.000000
kkogast: Selectivities tab=Z[Z] tnum=2 astat=N 
  card=1000.02 nrow=10000.00 0.100002
kkogast: Best single table selectivities cnt=1
  Tab = 2
kkogast: smallest=5.50 astats=N card=8.00 tnum=1
kkogast: Final Alternative Starting Tables cnt=2
  Tab = 2 1
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  X[X]#0  Y[Y]#1  Z[Z]#2

***************
Now joining: Y[Y]#1
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   1.666667
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2048  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.666667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   1.666667
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 11.006474  Resp: 11.006474  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 238686
      Resp_io: 11.000000  Resp_cpu: 238686
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 0.500000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.001799  Resp: 4.001799  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 66332
      Resp_io: 4.000000  Resp_cpu: 66332
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743

  Best NL cost: 1.000590 (VALID)
          resc: 1.000590  resc_io: 1.000000  resc_cpu: 21743
          resp: 1.000590  resp_io: 1.000000  resc_cpu: 21743
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000709  Resp: 4.000709  [multiMatchCost=0.000005]
SM Join
  SM cost: 4.000709 
     resc: 4.000709 resc_io: 2.000000 resc_cpu: 73763282
     resp: 4.000709 resp_io: 2.000000 resp_cpu: 73763282
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016320  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016981  Resp: 2.016981  [multiMatchCost=0.000005]
HA Join
  HA cost: 2.016981  
     resc: 2.016981 resc_io: 2.000000 resc_cpu: 626064
     resp: 2.016981 resp_io: 2.000000 resp_cpu: 626064
Best:: JoinMethod: NestedLoop
       Cost: 1.000590  Degree: 1  Resp: 1.000590  Card: 10.000000 Bytes: 

***************
Now joining: Z[Z]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 1.000590  Resp: 1.000590  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.700000
  Scan CPU Cost (Disk) =   2099400.320000
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Cost of predicates:
    io = 0.000000, cpu = 95.002250, sel = 0.100002 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
      io = 0.000000, cpu = 50.002500, sel = 0.000002 flag = 2048  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 2048  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 2048  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2048  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.700000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.700000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 501077.178442 (cpu filter eval) (= 50.107718 (per row) * 10000.000000 (#rows))
                       =   2600477.498442
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 78.705927  Resp: 78.705927  Degree: 1
      Cost_io: 78.000000  Cost_cpu: 26026518
      Resp_io: 78.000000  Resp_cpu: 26026518
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.300000  resc_cpu: 1914720
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 84.519927  Resp: 84.519927  Degree: 1
      Cost_io: 84.000000  Cost_cpu: 19168947
      Resp_io: 84.000000  Resp_cpu: 19168947
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9319
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003117  Resp: 11.003117  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114936
      Resp_io: 11.000000  Resp_cpu: 114936
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Access Path: index (FullScan)
    Index: Z_B_C
    resc_io: 31.000000  resc_cpu: 2220765
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    NL Join : Cost: 311.738845  Resp: 311.738845  Degree: 1
      Cost_io: 311.000000  Cost_cpu: 27240161
      Resp_io: 311.000000  Resp_cpu: 27240161
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9319
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003117  Resp: 11.003117  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114936
      Resp_io: 11.000000  Resp_cpu: 114936

  Best NL cost: 11.003117 (VALID)
          resc: 11.003117  resc_io: 11.000000  resc_cpu: 114936
          resp: 11.003117  resp_io: 11.000000  resc_cpu: 114936
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.499611 = outer (10.000000) * inner (10000.000000) * sel (4.9961e-06)
Join cardinality for HJ/SMJ (no post filters):  99.900100, outer: 10.000000, inner: 10000.000000, sel: 4.9961e-06
Join Card - Rounded: 1 Computed: 0.499611
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 9.082711  card: 1000.020000  bytes:   deg: 1  resp: 9.082711
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36870066
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 12.095519  Resp: 12.095519  [multiMatchCost=0.000000]
SM Join
  SM cost: 12.095519 
     resc: 12.095519 resc_io: 10.000000 resc_cpu: 77258804
     resp: 12.095519 resp_io: 10.000000 resp_cpu: 77258804
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 9.082711  card: 1000.020000  bytes:   deg: 1  resp: 9.082711
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.019027  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 10.102327  Resp: 10.102327  [multiMatchCost=0.000000]
HA Join
  HA cost: 10.102327  
     resc: 10.102327 resc_io: 10.000000 resc_cpu: 3772666
     resp: 10.102327 resp_io: 10.000000 resp_cpu: 3772666
Best:: JoinMethod: Hash
       Cost: 10.102327  Degree: 1  Resp: 10.102327  Card: 0.499611 Bytes: 
***********************
Best so far:  Table#: 0  cost: 1.000419  card: 5.500000  bytes: 36.000000
              Table#: 1  cost: 1.000590  card: 10.000000  bytes: 90.000000
              Table#: 2  cost: 10.102327  card: 0.499611  bytes: 19.000000
***********************
Join order[2]:  X[X]#0  Z[Z]#2  Y[Y]#1

***************
Now joining: Z[Z]#2
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.833333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 95.002250, sel = 0.100002 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
      io = 0.000000, cpu = 50.002500, sel = 0.000002 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   7.833333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.833333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 1078255.620167 (cpu filter eval) (= 107.825562 (per row) * 10000.000000 (#rows))
                       =   3177655.940167
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 48.517551  Resp: 48.517551  Degree: 1
      Cost_io: 48.000000  Cost_cpu: 19081379
      Resp_io: 48.000000  Resp_cpu: 19081379
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.500000  resc_cpu: 2491899
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 52.405951  Resp: 52.405951  Degree: 1
      Cost_io: 52.000000  Cost_cpu: 14966836
      Resp_io: 52.000000  Resp_cpu: 14966836
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  Access Path: index (FullScan)
    Index: Z_B_C
    resc_io: 31.000000  resc_cpu: 2220765
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    NL Join : Cost: 187.537302  Resp: 187.537302  Degree: 1
      Cost_io: 187.000000  Cost_cpu: 19809564
      Resp_io: 187.000000  Resp_cpu: 19809564

  Best NL cost: 48.517551 (VALID)
          resc: 48.517551  resc_io: 48.000000  resc_cpu: 19081379
          resp: 48.517551  resp_io: 48.000000  resc_cpu: 19081379
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  500.110556 = outer (10.000000) * inner (10000.000000) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  100000.000000, outer: 10.000000, inner: 10000.000000, sel: 0.005001
Join Card - Rounded: 500 Computed: 500.110556
Join order aborted2: cost > best plan cost
***********************
Join order[3]:  Y[Y]#1  X[X]#0  Z[Z]#2

***************
Now joining: X[X]#0
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 621.875000 (cpu filter eval) (= 62.187500 (per row) * 10.000000 (#rows))
                       =   37929.075000
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 13.008467  Resp: 13.008467  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 312154
      Resp_io: 13.000000  Resp_cpu: 312154
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8943
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 5.002177  Resp: 5.002177  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 80268
      Resp_io: 5.000000  Resp_cpu: 80268
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8439
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002068  Resp: 9.002068  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 76233
      Resp_io: 9.000000  Resp_cpu: 76233
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup (#1, Index) X_A_ID
    Col#: 1 2    CorStregth: 2.00
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 14443
    ix_sel: 0.055000  ix_sel_with_filters: 0.055000 
    NL Join : Cost: 9.003370  Resp: 9.003370  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 124264
      Resp_io: 9.000000  Resp_cpu: 124264
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8439
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002068  Resp: 9.002068  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 76233
      Resp_io: 9.000000  Resp_cpu: 76233

  Best NL cost: 9.002068 (VALID)
          resc: 9.002068  resc_io: 9.000000  resc_cpu: 76233
          resp: 9.002068  resp_io: 9.000000  resc_cpu: 76233
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (8.000000) * inner (10.000000) * sel (0.100000)
Join cardinality for NL:  8.000000, outer: 8.000000, inner: 10.000000, sel: 0.100000
Join cardinality without POSQ:  8.000000, outer: 8.000000, inner: 10.000000, sel: 0.100000
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
  SM join: Resc: 3.000680  Resp: 3.000680  [multiMatchCost=0.000005]
SM Join
  SM cost: 3.000680 
     resc: 3.000680 resc_io: 2.000000 resc_cpu: 36893632
     resp: 3.000680 resp_io: 2.000000 resp_cpu: 36893632
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016323  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016989  Resp: 2.016989  [multiMatchCost=0.000011]
HA Join
  HA cost: 2.016989  
     resc: 2.016989 resc_io: 2.000000 resc_cpu: 626364
     resp: 2.016989 resp_io: 2.000000 resp_cpu: 626364
Best:: JoinMethod: Hash
       Cost: 2.016989  Degree: 1  Resp: 2.016989  Card: 10.000000 Bytes: 

***************
Now joining: Z[Z]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 2.016989  Resp: 2.016989  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.700000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 95.002250, sel = 0.100002 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
      io = 0.000000, cpu = 50.002500, sel = 0.000002 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.700000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.700000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 501077.178442 (cpu filter eval) (= 50.107718 (per row) * 10000.000000 (#rows))
                       =   2600477.498442
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 79.722326  Resp: 79.722326  Degree: 1
      Cost_io: 79.000000  Cost_cpu: 26631139
      Resp_io: 79.000000  Resp_cpu: 26631139
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.300000  resc_cpu: 1914720
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 85.536326  Resp: 85.536326  Degree: 1
      Cost_io: 85.000000  Cost_cpu: 19773568
      Resp_io: 85.000000  Resp_cpu: 19773568
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9319
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 12.019517  Resp: 12.019517  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 719557
      Resp_io: 12.000000  Resp_cpu: 719557
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Access Path: index (FullScan)
    Index: Z_B_C
    resc_io: 31.000000  resc_cpu: 2220765
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    NL Join : Cost: 312.755244  Resp: 312.755244  Degree: 1
      Cost_io: 312.000000  Cost_cpu: 27844783
      Resp_io: 312.000000  Resp_cpu: 27844783
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9319
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 12.019517  Resp: 12.019517  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 719557
      Resp_io: 12.000000  Resp_cpu: 719557

  Best NL cost: 12.019517 (VALID)
          resc: 12.019517  resc_io: 12.000000  resc_cpu: 719557
          resp: 12.019517  resp_io: 12.000000  resc_cpu: 719557
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.499611 = outer (10.000000) * inner (10000.000000) * sel (4.9961e-06)
Join cardinality for HJ/SMJ (no post filters):  99.900100, outer: 10.000000, inner: 10000.000000, sel: 4.9961e-06
Join cardinality without POSQ:  0.399689, outer: 8.000000, inner: 10000.000000, sel: 4.9961e-06
Join Card - Rounded: 1 Computed: 0.499611
  Outer table:  X  Alias: X
    resc: 2.016989  card 10.000000  bytes:   deg: 1  resp: 2.016989
  Inner table:  Z  Alias: Z
    resc: 9.082711  card: 1000.020000  bytes:   deg: 1  resp: 9.082711
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36870066
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 13.111919  Resp: 13.111919  [multiMatchCost=0.000000]
SM Join
  SM cost: 13.111919 
     resc: 13.111919 resc_io: 11.000000 resc_cpu: 77863426
     resp: 13.111919 resp_io: 11.000000 resp_cpu: 77863426
  Outer table:  X  Alias: X
    resc: 2.016989  card 10.000000  bytes:   deg: 1  resp: 2.016989
  Inner table:  Z  Alias: Z
    resc: 9.082711  card: 1000.020000  bytes:   deg: 1  resp: 9.082711
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.019027  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 11.118727  Resp: 11.118727  [multiMatchCost=0.000000]
HA Join
  HA cost: 11.118727  
     resc: 11.118727 resc_io: 11.000000 resc_cpu: 4377287
     resp: 11.118727 resp_io: 11.000000 resp_cpu: 4377287
Plan cardinality mismatch: best card= 0.49961094461   curr card= 0.39968875569
Join order aborted2: cost > best plan cost
***********************
Join order[4]:  Y[Y]#1  Z[Z]#2  X[X]#0

***************
Now joining: Z[Z]#2
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.750000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 95.002250, sel = 0.100002 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
      io = 0.000000, cpu = 50.002500, sel = 0.000002 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.750000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.750000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500949.073427 (cpu filter eval) (= 50.094907 (per row) * 10000.000000 (#rows))
                       =   2600349.393427
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 63.564479  Resp: 63.564479  Degree: 1
      Cost_io: 63.000000  Cost_cpu: 20811517
      Resp_io: 63.000000  Resp_cpu: 20811517
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.250000  resc_cpu: 1914592
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 67.415678  Resp: 67.415678  Degree: 1
      Cost_io: 67.000000  Cost_cpu: 15325460
      Resp_io: 67.000000  Resp_cpu: 15325460
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9306
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002256  Resp: 9.002256  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 83173
      Resp_io: 9.000000  Resp_cpu: 83173
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Access Path: index (FullScan)
    Index: Z_B_C
    resc_io: 31.000000  resc_cpu: 2220765
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    NL Join : Cost: 249.590813  Resp: 249.590813  Degree: 1
      Cost_io: 249.000000  Cost_cpu: 21782431
      Resp_io: 249.000000  Resp_cpu: 21782431
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9306
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002256  Resp: 9.002256  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 83173
      Resp_io: 9.000000  Resp_cpu: 83173

  Best NL cost: 9.002256 (VALID)
          resc: 9.002256  resc_io: 9.000000  resc_cpu: 83173
          resp: 9.002256  resp_io: 9.000000  resc_cpu: 83173
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  79.920080 = outer (8.000000) * inner (10000.000000) * sel (1.0000e-04)
Join cardinality for NL:  8.000000, outer: 8.000000, inner: 10000.000000, sel: 1.0000e-04
Join cardinality without POSQ:  8.000000, outer: 8.000000, inner: 10000.000000, sel: 1.0000e-04
Join Card - Rounded: 80 Computed: 79.920080
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 9.082711  card: 1000.020000  bytes:   deg: 1  resp: 9.082711
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 11.095126  Resp: 11.095126  [multiMatchCost=0.000000]
SM Join
  SM cost: 11.095126 
     resc: 11.095126 resc_io: 10.000000 resc_cpu: 40375717
     resp: 11.095126 resp_io: 10.000000 resp_cpu: 40375717
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 9.082711  card: 1000.020000  bytes:   deg: 1  resp: 9.082711
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.019019  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 10.101966  Resp: 10.101966  [multiMatchCost=0.000000]
HA Join
  HA cost: 10.101966  
     resc: 10.101966 resc_io: 10.000000 resc_cpu: 3759344
     resp: 10.101966 resp_io: 10.000000 resp_cpu: 3759344
Best:: JoinMethod: NestedLoop
       Cost: 9.002256  Degree: 1  Resp: 9.002256  Card: 8.000000 Bytes: 

***************
Now joining: X[X]#0
***************
NL Join
  Outer table: Card: 8.000000  Cost: 9.002256  Resp: 9.002256  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 660.897704 (cpu filter eval) (= 66.089770 (per row) * 10.000000 (#rows))
                       =   37968.097704
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 21.010495  Resp: 21.010495  Degree: 1
      Cost_io: 21.000000  Cost_cpu: 386918
      Resp_io: 21.000000  Resp_cpu: 386918
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8982
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 13.004205  Resp: 13.004205  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 155032
      Resp_io: 13.000000  Resp_cpu: 155032
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 17.004094  Resp: 17.004094  Degree: 1
      Cost_io: 17.000000  Cost_cpu: 150934
      Resp_io: 17.000000  Resp_cpu: 150934
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 14443
    ix_sel: 0.055000  ix_sel_with_filters: 2.7506e-04 
    NL Join : Cost: 17.005418  Resp: 17.005418  Degree: 1
      Cost_io: 17.000000  Cost_cpu: 199742
      Resp_io: 17.000000  Resp_cpu: 199742
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 17.004094  Resp: 17.004094  Degree: 1
      Cost_io: 17.000000  Cost_cpu: 150934
      Resp_io: 17.000000  Resp_cpu: 150934

  Best NL cost: 17.004094 (VALID)
          resc: 17.004094  resc_io: 17.000000  resc_cpu: 150934
          resp: 17.004094  resp_io: 17.000000  resc_cpu: 150934
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.050011 = outer (8.000000) * inner (10.000000) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  10.000000, outer: 8.000000, inner: 10.000000, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.050011
  Outer table:  Z  Alias: Z
    resc: 9.002256  card 8.000000  bytes:   deg: 1  resp: 9.002256
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
  SM join: Resc: 11.002699  Resp: 11.002699  [multiMatchCost=0.000005]
SM Join
  SM cost: 11.002699 
     resc: 11.002699 resc_io: 10.000000 resc_cpu: 36968084
     resp: 11.002699 resp_io: 10.000000 resp_cpu: 36968084
  Outer table:  Z  Alias: Z
    resc: 9.002256  card 8.000000  bytes:   deg: 1  resp: 9.002256
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016323  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 10.019008  Resp: 10.019008  [multiMatchCost=0.000011]
HA Join
  HA cost: 10.019008  
     resc: 10.019008 resc_io: 10.000000 resc_cpu: 700816
     resp: 10.019008 resp_io: 10.000000 resp_cpu: 700816
Plan cardinality mismatch: best card= 0.49961094461   curr card= 0.05001105556
Best:: JoinMethod: Hash
       Cost: 10.019008  Degree: 1  Resp: 10.019008  Card: 0.050011 Bytes: 
***********************
Best so far:  Table#: 1  cost: 1.000237  card: 8.000000  bytes: 24.000000
              Table#: 2  cost: 9.002256  card: 8.000000  bytes: 104.000000
              Table#: 0  cost: 10.019008  card: 0.050011  bytes: 19.000000
***********************
Join order[5]:  Z[Z]#2  X[X]#0  Y[Y]#1

***************
Now joining: X[X]#0
***************
NL Join
  Outer table: Card: 1000.020000  Cost: 9.082711  Resp: 9.082711  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.356000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   1.356000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.356000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 1287.181633 (cpu filter eval) (= 128.718163 (per row) * 10.000000 (#rows))
                       =   38594.381633
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 1366.129521  Resp: 1366.129521  Degree: 1
      Cost_io: 1365.000000  Cost_cpu: 41643804
      Resp_io: 1365.000000  Resp_cpu: 41643804
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.272000  resc_cpu: 9609
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 281.343329  Resp: 281.343329  Degree: 1
      Cost_io: 281.000000  Cost_cpu: 12658044
      Resp_io: 281.000000  Resp_cpu: 12658044
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 15443
    ix_sel: 0.550000  ix_sel_with_filters: 0.002751 
    NL Join : Cost: 1009.522442  Resp: 1009.522442  Degree: 1
      Cost_io: 1009.000000  Cost_cpu: 19261686
      Resp_io: 1009.000000  Resp_cpu: 19261686

  Best NL cost: 281.343329 (VALID)
          resc: 281.343329  resc_io: 281.000000  resc_cpu: 12658044
          resp: 281.343329  resp_io: 281.000000  resc_cpu: 12658044
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  500.110556 = outer (10000.000000) * inner (10.000000) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  100000.000000, outer: 10000.000000, inner: 10.000000, sel: 0.005001
Join Card - Rounded: 500 Computed: 500.110556
Join order aborted2: cost > best plan cost
***********************
Join order[6]:  Z[Z]#2  Y[Y]#1  X[X]#0

***************
Now joining: Y[Y]#1
***************
NL Join
  Outer table: Card: 1000.020000  Cost: 9.082711  Resp: 9.082711  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   1.356000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   1.356000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   1.356000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 1366.091895  Resp: 1366.091895  Degree: 1
      Cost_io: 1365.000000  Cost_cpu: 40256623
      Resp_io: 1365.000000  Resp_cpu: 40256623
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 0.272000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 281.312756  Resp: 281.312756  Degree: 1
      Cost_io: 281.000000  Cost_cpu: 11530863
      Resp_io: 281.000000  Resp_cpu: 11530863
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 9.111190  Resp: 9.111190  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 4099423
      Resp_io: 9.000000  Resp_cpu: 4099423
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 9.111190  Resp: 9.111190  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 4099423
      Resp_io: 9.000000  Resp_cpu: 4099423

  Best NL cost: 9.111190 (VALID)
          resc: 9.111190  resc_io: 9.000000  resc_cpu: 4099423
          resp: 9.111190  resp_io: 9.000000  resc_cpu: 4099423
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  79.920080 = outer (10000.000000) * inner (8.000000) * sel (9.9900e-04)
Join Card - Rounded: 80 Computed: 79.920080
  Outer table:  Z  Alias: Z
    resc: 9.082711  card 1000.020000  bytes:   deg: 1  resp: 9.082711
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 12.095155  Resp: 12.095155  [multiMatchCost=0.000000]
SM Join
  SM cost: 12.095155 
     resc: 12.095155 resc_io: 10.000000 resc_cpu: 77245367
     resp: 12.095155 resp_io: 10.000000 resp_cpu: 77245367
SM Join (with index on outer)
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: Z_ID
    resc_io: 40.000000  resc_cpu: 4685807
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 40.127095  Resp: 40.127095  Degree: 1
  Outer table:  Z  Alias: Z
    resc: 40.127095  card 1000.020000  bytes:   deg: 1  resp: 40.127095
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 42.127361  Resp: 42.127361  [multiMatchCost=0.000000]
  Outer table:  Z  Alias: Z
    resc: 9.082711  card 1000.020000  bytes:   deg: 1  resp: 9.082711
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020364  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 3  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 10.103507  Resp: 10.103507  [multiMatchCost=0.000195]
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 9.082711  card: 1000.020000  bytes:   deg: 1  resp: 9.082711
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.019019  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 10.101966  Resp: 10.101966  [multiMatchCost=0.000000]
HA Join
  HA cost: 10.101966 swapped 
     resc: 10.101966 resc_io: 10.000000 resc_cpu: 3759344
     resp: 10.101966 resp_io: 10.000000 resp_cpu: 3759344
Best:: JoinMethod: NestedLoop
       Cost: 9.111190  Degree: 1  Resp: 9.111190  Card: 79.920080 Bytes: 

***************
Now joining: X[X]#0
***************
NL Join
  Outer table: Card: 79.920080  Cost: 9.111190  Resp: 9.111190  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.375000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2064  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.375000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.375000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 660.897704 (cpu filter eval) (= 66.089770 (per row) * 10.000000 (#rows))
                       =   37968.097704
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 119.193576  Resp: 119.193576  Degree: 1
      Cost_io: 119.000000  Cost_cpu: 7136871
      Resp_io: 119.000000  Resp_cpu: 7136871
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.287500  resc_cpu: 8982
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 32.130681  Resp: 32.130681  Degree: 1
      Cost_io: 32.000000  Cost_cpu: 4818010
      Resp_io: 32.000000  Resp_cpu: 4818010
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 89.129569  Resp: 89.129569  Degree: 1
      Cost_io: 89.000000  Cost_cpu: 4777035
      Resp_io: 89.000000  Resp_cpu: 4777035
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 14443
    ix_sel: 0.055000  ix_sel_with_filters: 2.7506e-04 
    NL Join : Cost: 89.142808  Resp: 89.142808  Degree: 1
      Cost_io: 89.000000  Cost_cpu: 5265112
      Resp_io: 89.000000  Resp_cpu: 5265112
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 89.129569  Resp: 89.129569  Degree: 1
      Cost_io: 89.000000  Cost_cpu: 4777035
      Resp_io: 89.000000  Resp_cpu: 4777035

  Best NL cost: 89.129569 (VALID)
          resc: 89.129569  resc_io: 89.000000  resc_cpu: 4777035
          resp: 89.129569  resp_io: 89.000000  resc_cpu: 4777035
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.499611 = outer (79.920080) * inner (10.000000) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  99.900100, outer: 79.920080, inner: 10.000000, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.499611
  Outer table:  Y  Alias: Y
    resc: 9.111190  card 79.920080  bytes:   deg: 1  resp: 9.111190
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:             80
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36891355
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
  SM join: Resc: 12.112300  Resp: 12.112300  [multiMatchCost=0.000054]
SM Join
  SM cost: 12.112300 
     resc: 12.112300 resc_io: 10.000000 resc_cpu: 77877489
     resp: 12.112300 resp_io: 10.000000 resp_cpu: 77877489
  Outer table:  Y  Alias: Y
    resc: 9.111190  card 79.920080  bytes:   deg: 1  resp: 9.111190
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016616  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 10.128480  Resp: 10.128480  [multiMatchCost=0.000255]
HA Join
  HA cost: 10.128480  
     resc: 10.128480 resc_io: 10.000000 resc_cpu: 4736866
     resp: 10.128480 resp_io: 10.000000 resp_cpu: 4736866
Plan cardinality mismatch: best card= 0.05001105556   curr card= 0.49961094461
Join order aborted2: cost > best plan cost
***********************
(newjo-stop-1) k:0, spcnt:0, perm:6, maxperm:2000

*********************************
Number of join permutations tried: 6
*********************************
Consider using bloom filter between Z[Z] and X[X] with ??
kkoBloomFilter: join (lcdn:8 rcdn:6 jcdn:0 limit:22)
kkopqSingleJoinBloomNdv:Compute bloom ndv for lfro:Y[Y] and rfro:X[X] swap:no
kkopqSingleJoinBloomNdv: predCnt:#1 col1:(bndv:8 ndv:8) and col2:(bndv:10 ndv:6) creatorNDV:8.0 userNDV:10.0
kkopqSingleJoinBloomNdv:Compute bloom ndv for lfro:Z[Z] and rfro:X[X] swap:no
kkopqComputeBloomNdv: predCnt:1 creatorNdv:8.0 userNdv:10.0 singleTblPred:yes
kkoBloomFilter: join ndv:0 reduction:1.454545 (limit:0.500000)  rejected because distinct value ratio
(newjo-save)    [1 0 2 ]
LORE: Trying or-Expansion on query block SEL$9E43CB6E (#0)

LORE: ******** Next OR predicate ********

LORE: Trying or-Expansion on query block SEL$9E43CB6E (#0) on OR chain:
id=0  predicate=("Z"."B"=1 OR "Z"."C"=0 AND "Z"."B"=0) AND ("X"."A"=0 AND "Z"."B"=1 OR "X"."A"=1 AND "Z"."B"=0 AND "Z"."C"=0) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"

LORE: ******** OR-branching ********

LORE: or-expansion-subheap (create addr=0x7fd925c0ff60)
****************
QUERY BLOCK TEXT
****************
select /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null
  from x join y  on y.id = x.id join z on z.id = y.id
  where  ( ( x.a = 0 AND z.b = 1               ) OR 
           ( x.a = 1 AND z.b = 0 AND z.c = 0  )   )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$9E43CB6E nbfros=3 flg=0
  fro(0): flg=0 objn=80828 hint_alias="X"@"SEL$1"
  fro(1): flg=0 objn=80831 hint_alias="Y"@"SEL$1"
  fro(2): flg=0 objn=80833 hint_alias="Z"@"SEL$2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3072 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table:  Z  Alias:  Z
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  28  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): B(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.050000 Min: 1.000000 Max: 10.000000
    Histogram: Freq  #Bkts: 10  UncompBkts: 10000  EndPtVals: 10  ActualVal: yes
  Column (#3): C(NUMBER)
    AvgLen: 3 NDV: 1 Nulls: 0 Density: 0.000050 Min: 1.000000 Max: 1.000000
    Histogram: Freq  #Bkts: 1  UncompBkts: 10000  EndPtVals: 1  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: Z_B_C  Col#: 2 3 1
  LVLS: 1  #LB: 30  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 210.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: Z_ID  Col#: 1
  LVLS: 1  #LB: 18  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  Y  Alias:  Y
  #Rows: 8  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  3.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 1.000000 Max: 8.000000
Index Stats::
  Index: Y_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 8  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 8.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  X  Alias:  X
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): A(NUMBER)
    AvgLen: 3 NDV: 2 Nulls: 0 Density: 0.250000 Min: 1.000000 Max: 2.000000
    Histogram: Freq  #Bkts: 2  UncompBkts: 10  EndPtVals: 2  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: X_A_ID  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: X_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$9E43CB6E (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for X
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for X[X] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE

 kkecdn: Single Table Predicate:"X"."A"=0 OR "X"."A"=1
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Table: X  Alias: X
    Card: Original: 10.000000  Rounded: 6  Computed: 5.500000  Non Adjusted: 5.500000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 975.000000 (cpu filter eval) (= 97.500000 (per row) * 10.000000 (#rows))
                       =   38282.200000
  Access Path: TableScan
    Cost:  3.001038  Resp: 3.001038  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 38282
      Resp_io: 3.000000  Resp_cpu: 38282
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9296
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000252  Resp: 2.000252  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9296
      Resp_io: 2.000000  Resp_cpu: 9296
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 15443
    ix_sel: 0.550000  ix_sel_with_filters: 0.550000 
    Cost: 1.000419  Resp: 1.000419  Degree: 1
  ****** trying bitmap/domain indexes ******
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 7321
    ix_sel: 0.050000  ix_sel_with_filters: 0.050000 
    Cost: 1.000199  Resp: 1.000199  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 7321
    ix_sel: 0.050000  ix_sel_with_filters: 0.050000 
    Cost: 1.000199  Resp: 1.000199  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  Bitmap nodes:
    Not used X_A_ID
      Cost = 2.000201, sel = 0.050000
    Used X_A_ID
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: X_A_ID
         Cost: 1.000419  Degree: 1  Resp: 1.000419  Card: 5.500000  Bytes: 0.000000

Access path analysis for Y
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Y[Y] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: Y  Alias: Y
    Card: Original: 8.000000  Rounded: 8  Computed: 8.000000  Non Adjusted: 8.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                       =   36807.200000
  Access Path: TableScan
    Cost:  3.000998  Resp: 3.000998  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 36807
      Resp_io: 3.000000  Resp_cpu: 36807
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8081
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000219  Resp: 2.000219  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 8081
      Resp_io: 2.000000  Resp_cpu: 8081
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 1
  ****** trying bitmap/domain indexes ******
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Y_ID
         Cost: 1.000237  Degree: 1  Resp: 1.000237  Card: 8.000000  Bytes: 0.000000

Access path analysis for Z
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Z[Z] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE

 kkecdn: Single Table Predicate:"Z"."B"=1
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Table: Z  Alias: Z
    Card: Original: 10000.000000  Rounded: 1000  Computed: 1000.000000  Non Adjusted: 1000.000000
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   1919400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   1919400.320000 (scan (Disk))
                         + 500000.000000 (cpu filter eval) (= 50.000000 (per row) * 10000.000000 (#rows))
                       =   2419400.320000
  Access Path: TableScan
    Cost:  9.065622  Resp: 9.065622  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2419400
      Resp_io: 9.000000  Resp_cpu: 2419400
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1913643
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.051904  Resp: 10.051904  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1913643
      Resp_io: 10.000000  Resp_cpu: 1913643
 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 4.000000  resc_cpu: 228486
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    Cost: 4.006197  Resp: 4.006197  Degree: 1
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 4.000000  resc_cpu: 228486
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    Cost: 4.006197  Resp: 4.006197  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 4.000000  resc_cpu: 228486
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    Cost: 4.006197  Resp: 4.006197  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  Bitmap nodes:
    Used Z_B_C
      Cost = 5.022041, sel = 0.100000
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Z_B_C
         Cost: 4.006197  Degree: 1  Resp: 4.006197  Card: 1000.000000  Bytes: 0.000000

(newjo-restore) [1 0 2 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is undergoing OR expansion SEL$9E43CB6E (#0)
kkogast: Selectivities tab=Y[Y] tnum=0 astat=N 
  card=8.00 nrow=8.00 1.000000
kkogast: Selectivities tab=Z[Z] tnum=1 astat=N 
  card=1000.00 nrow=10000.00 0.100000
kkogast: Selectivities tab=X[X] tnum=2 astat=N 
  card=5.50 nrow=10.00 0.550000
kkogast: Best single table selectivities cnt=2
  Tab = 1 2
kkogast: Final Alternative Starting Tables cnt=2
  Tab = 1 2
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  Y[Y]#0  Z[Z]#1  X[X]#2

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.750000
  Scan CPU Cost (Disk) =   1919400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2048  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.750000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.750000
  Total Scan CPU  Cost =   1919400.320000 (scan (Disk))
                         + 500499.500500 (cpu filter eval) (= 50.049950 (per row) * 10000.000000 (#rows))
                       =   2419899.820500
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 63.525323  Resp: 63.525323  Degree: 1
      Cost_io: 63.000000  Cost_cpu: 19367920
      Resp_io: 63.000000  Resp_cpu: 19367920
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.250000  resc_cpu: 1914143
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 67.415581  Resp: 67.415581  Degree: 1
      Cost_io: 67.000000  Cost_cpu: 15321863
      Resp_io: 67.000000  Resp_cpu: 15321863
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002246  Resp: 9.002246  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82813
      Resp_io: 9.000000  Resp_cpu: 82813
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup (#1, Index) Z_B_C
    Col#: 1 2 3    CorStregth: 10.00
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 1.0000e-05 
    NL Join : Cost: 25.059304  Resp: 25.059304  Degree: 1
      Cost_io: 25.000000  Cost_cpu: 2186436
      Resp_io: 25.000000  Resp_cpu: 2186436
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002246  Resp: 9.002246  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82813
      Resp_io: 9.000000  Resp_cpu: 82813

  Best NL cost: 9.002246 (VALID)
          resc: 9.002246  resc_io: 9.000000  resc_cpu: 82813
          resp: 9.002246  resp_io: 9.000000  resc_cpu: 82813
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  8.000000 = outer (8.000000) * inner (1000.000000) * sel (0.001000)
Join Card - Rounded: 8 Computed: 8.000000
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 4.006197  card: 1000.000000  bytes:   deg: 1  resp: 4.006197
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 6.018612  Resp: 6.018612  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.018612 
     resc: 6.018612 resc_io: 5.000000 resc_cpu: 37554780
     resp: 6.018612 resp_io: 5.000000 resp_cpu: 37554780
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 4.006197  card: 1000.000000  bytes:   deg: 1  resp: 4.006197
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.019019  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.025453  Resp: 5.025453  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.025453  
     resc: 5.025453 resc_io: 5.000000 resc_cpu: 938407
     resp: 5.025453 resp_io: 5.000000 resp_cpu: 938407
Best:: JoinMethod: Hash
       Cost: 5.025453  Degree: 1  Resp: 5.025453  Card: 8.000000 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 8.000000  Cost: 5.025453  Resp: 5.025453  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 660.897704 (cpu filter eval) (= 66.089770 (per row) * 10.000000 (#rows))
                       =   37968.097704
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 17.033691  Resp: 17.033691  Degree: 1
      Cost_io: 17.000000  Cost_cpu: 1242152
      Resp_io: 17.000000  Resp_cpu: 1242152
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8982
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 9.027402  Resp: 9.027402  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 1010266
      Resp_io: 9.000000  Resp_cpu: 1010266
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 13.027291  Resp: 13.027291  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 1006168
      Resp_io: 13.000000  Resp_cpu: 1006168
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 14443
    ix_sel: 0.055000  ix_sel_with_filters: 2.7506e-04 
    NL Join : Cost: 13.028615  Resp: 13.028615  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 1054976
      Resp_io: 13.000000  Resp_cpu: 1054976
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 13.027291  Resp: 13.027291  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 1006168
      Resp_io: 13.000000  Resp_cpu: 1006168

  Best NL cost: 13.027291 (VALID)
          resc: 13.027291  resc_io: 13.000000  resc_cpu: 1006168
          resp: 13.027291  resp_io: 13.000000  resc_cpu: 1006168
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.050011 = outer (8.000000) * inner (10.000000) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  10.000000, outer: 8.000000, inner: 10.000000, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.050011
  Outer table:  Z  Alias: Z
    resc: 5.025453  card 8.000000  bytes:   deg: 1  resp: 5.025453
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
  SM join: Resc: 8.025925  Resp: 8.025925  [multiMatchCost=0.000005]
SM Join
  SM cost: 8.025925 
     resc: 8.025925 resc_io: 6.000000 resc_cpu: 74692968
     resp: 8.025925 resp_io: 6.000000 resp_cpu: 74692968
  Outer table:  Z  Alias: Z
    resc: 5.025453  card 8.000000  bytes:   deg: 1  resp: 5.025453
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016323  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 6.042205  Resp: 6.042205  [multiMatchCost=0.000011]
HA Join
  HA cost: 6.042205  
     resc: 6.042205 resc_io: 6.000000 resc_cpu: 1556050
     resp: 6.042205 resp_io: 6.000000 resp_cpu: 1556050
Best:: JoinMethod: Hash
       Cost: 6.042205  Degree: 1  Resp: 6.042205  Card: 0.050011 Bytes: 
***********************
Best so far:  Table#: 0  cost: 1.000237  card: 8.000000  bytes: 24.000000
              Table#: 1  cost: 5.025453  card: 8.000000  bytes: 104.000000
              Table#: 2  cost: 6.042205  card: 0.050011  bytes: 19.000000
***********************
Join order[2]:  Y[Y]#0  X[X]#2  Z[Z]#1

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 621.875000 (cpu filter eval) (= 62.187500 (per row) * 10.000000 (#rows))
                       =   37929.075000
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 13.008467  Resp: 13.008467  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 312154
      Resp_io: 13.000000  Resp_cpu: 312154
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8943
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 5.002177  Resp: 5.002177  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 80268
      Resp_io: 5.000000  Resp_cpu: 80268
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8439
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002068  Resp: 9.002068  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 76233
      Resp_io: 9.000000  Resp_cpu: 76233
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 14443
    ix_sel: 0.055000  ix_sel_with_filters: 0.055000 
    NL Join : Cost: 9.003370  Resp: 9.003370  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 124264
      Resp_io: 9.000000  Resp_cpu: 124264
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8439
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002068  Resp: 9.002068  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 76233
      Resp_io: 9.000000  Resp_cpu: 76233

  Best NL cost: 9.002068 (VALID)
          resc: 9.002068  resc_io: 9.000000  resc_cpu: 76233
          resp: 9.002068  resp_io: 9.000000  resc_cpu: 76233
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (8.000000) * inner (10.000000) * sel (0.100000)
Join cardinality for NL:  8.000000, outer: 8.000000, inner: 10.000000, sel: 0.100000
Join cardinality without POSQ:  8.000000, outer: 8.000000, inner: 10.000000, sel: 0.100000
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
  SM join: Resc: 3.000680  Resp: 3.000680  [multiMatchCost=0.000005]
SM Join
  SM cost: 3.000680 
     resc: 3.000680 resc_io: 2.000000 resc_cpu: 36893632
     resp: 3.000680 resp_io: 2.000000 resp_cpu: 36893632
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016323  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016989  Resp: 2.016989  [multiMatchCost=0.000011]
HA Join
  HA cost: 2.016989  
     resc: 2.016989 resc_io: 2.000000 resc_cpu: 626364
     resp: 2.016989 resp_io: 2.000000 resp_cpu: 626364
Best:: JoinMethod: Hash
       Cost: 2.016989  Degree: 1  Resp: 2.016989  Card: 10.000000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 2.016989  Resp: 2.016989  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.700000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.700000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.700000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500627.602953 (cpu filter eval) (= 50.062760 (per row) * 10000.000000 (#rows))
                       =   2600027.922953
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 79.722204  Resp: 79.722204  Degree: 1
      Cost_io: 79.000000  Cost_cpu: 26626644
      Resp_io: 79.000000  Resp_cpu: 26626644
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.300000  resc_cpu: 1914271
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 85.536204  Resp: 85.536204  Degree: 1
      Cost_io: 85.000000  Cost_cpu: 19769072
      Resp_io: 85.000000  Resp_cpu: 19769072
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9274
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 12.019505  Resp: 12.019505  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 719107
      Resp_io: 12.000000  Resp_cpu: 719107
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 5.0011e-08 
    NL Join : Cost: 32.090858  Resp: 32.090858  Degree: 1
      Cost_io: 32.000000  Cost_cpu: 3349789
      Resp_io: 32.000000  Resp_cpu: 3349789
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9274
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 12.019505  Resp: 12.019505  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 719107
      Resp_io: 12.000000  Resp_cpu: 719107

  Best NL cost: 12.019505 (VALID)
          resc: 12.019505  resc_io: 12.000000  resc_cpu: 719107
          resp: 12.019505  resp_io: 12.000000  resc_cpu: 719107
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.050011 = outer (10.000000) * inner (1000.000000) * sel (5.0011e-06)
Join cardinality for HJ/SMJ (no post filters):  10.000000, outer: 10.000000, inner: 1000.000000, sel: 5.0011e-06
Join cardinality without POSQ:  0.040009, outer: 8.000000, inner: 1000.000000, sel: 5.0011e-06
Join Card - Rounded: 1 Computed: 0.050011
  Outer table:  X  Alias: X
    resc: 2.016989  card 10.000000  bytes:   deg: 1  resp: 2.016989
  Inner table:  Z  Alias: Z
    resc: 4.006197  card: 1000.000000  bytes:   deg: 1  resp: 4.006197
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36870066
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 8.035406  Resp: 8.035406  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.035406 
     resc: 8.035406 resc_io: 6.000000 resc_cpu: 75042489
     resp: 8.035406 resp_io: 6.000000 resp_cpu: 75042489
  Outer table:  X  Alias: X
    resc: 2.016989  card 10.000000  bytes:   deg: 1  resp: 2.016989
  Inner table:  Z  Alias: Z
    resc: 4.006197  card: 1000.000000  bytes:   deg: 1  resp: 4.006197
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.019027  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 6.042213  Resp: 6.042213  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.042213  
     resc: 6.042213 resc_io: 6.000000 resc_cpu: 1556350
     resp: 6.042213 resp_io: 6.000000 resp_cpu: 1556350
Plan cardinality mismatch: best card= 0.05001105556   curr card= 0.04000884444
Join order aborted2: cost > best plan cost
***********************
Join order[3]:  Z[Z]#1  Y[Y]#0  X[X]#2

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 1000.000000  Cost: 4.006197  Resp: 4.006197  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   1.356000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   1.356000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   1.356000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 1361.015382  Resp: 1361.015382  Degree: 1
      Cost_io: 1360.000000  Cost_cpu: 37435686
      Resp_io: 1360.000000  Resp_cpu: 37435686
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 0.272000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 276.236243  Resp: 276.236243  Degree: 1
      Cost_io: 276.000000  Cost_cpu: 8709926
      Resp_io: 276.000000  Resp_cpu: 8709926
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 4.034677  Resp: 4.034677  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 1278486
      Resp_io: 4.000000  Resp_cpu: 1278486
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 4.034677  Resp: 4.034677  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 1278486
      Resp_io: 4.000000  Resp_cpu: 1278486

  Best NL cost: 4.034677 (VALID)
          resc: 4.034677  resc_io: 4.000000  resc_cpu: 1278486
          resp: 4.034677  resp_io: 4.000000  resc_cpu: 1278486
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  8.000000 = outer (1000.000000) * inner (8.000000) * sel (0.001000)
Join Card - Rounded: 8 Computed: 8.000000
  Outer table:  Z  Alias: Z
    resc: 4.006197  card 1000.000000  bytes:   deg: 1  resp: 4.006197
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 7.018642  Resp: 7.018642  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.018642 
     resc: 7.018642 resc_io: 5.000000 resc_cpu: 74424430
     resp: 7.018642 resp_io: 5.000000 resp_cpu: 74424430
  Outer table:  Z  Alias: Z
    resc: 4.006197  card 1000.000000  bytes:   deg: 1  resp: 4.006197
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020364  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 3  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.026798  Resp: 5.026798  [multiMatchCost=0.000000]
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 4.006197  card: 1000.000000  bytes:   deg: 1  resp: 4.006197
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.019019  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.025453  Resp: 5.025453  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.025453 swapped 
     resc: 5.025453 resc_io: 5.000000 resc_cpu: 938407
     resp: 5.025453 resp_io: 5.000000 resp_cpu: 938407
Best:: JoinMethod: NestedLoop
       Cost: 4.034677  Degree: 1  Resp: 4.034677  Card: 8.000000 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 8.000000  Cost: 4.034677  Resp: 4.034677  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 660.897704 (cpu filter eval) (= 66.089770 (per row) * 10.000000 (#rows))
                       =   37968.097704
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 16.042915  Resp: 16.042915  Degree: 1
      Cost_io: 16.000000  Cost_cpu: 1582231
      Resp_io: 16.000000  Resp_cpu: 1582231
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8982
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 8.036626  Resp: 8.036626  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 1350344
      Resp_io: 8.000000  Resp_cpu: 1350344
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 12.036515  Resp: 12.036515  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1346247
      Resp_io: 12.000000  Resp_cpu: 1346247
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 14443
    ix_sel: 0.055000  ix_sel_with_filters: 2.7506e-04 
    NL Join : Cost: 12.037839  Resp: 12.037839  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1395055
      Resp_io: 12.000000  Resp_cpu: 1395055
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 12.036515  Resp: 12.036515  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1346247
      Resp_io: 12.000000  Resp_cpu: 1346247

  Best NL cost: 12.036515 (VALID)
          resc: 12.036515  resc_io: 12.000000  resc_cpu: 1346247
          resp: 12.036515  resp_io: 12.000000  resc_cpu: 1346247
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.050011 = outer (8.000000) * inner (10.000000) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  10.000000, outer: 8.000000, inner: 10.000000, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.050011
  Outer table:  Y  Alias: Y
    resc: 4.034677  card 8.000000  bytes:   deg: 1  resp: 4.034677
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
  SM join: Resc: 7.035149  Resp: 7.035149  [multiMatchCost=0.000005]
SM Join
  SM cost: 7.035149 
     resc: 7.035149 resc_io: 5.000000 resc_cpu: 75033047
     resp: 7.035149 resp_io: 5.000000 resp_cpu: 75033047
  Outer table:  Y  Alias: Y
    resc: 4.034677  card 8.000000  bytes:   deg: 1  resp: 4.034677
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016323  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.051429  Resp: 5.051429  [multiMatchCost=0.000011]
HA Join
  HA cost: 5.051429  
     resc: 5.051429 resc_io: 5.000000 resc_cpu: 1896129
     resp: 5.051429 resp_io: 5.000000 resp_cpu: 1896129
Best:: JoinMethod: Hash
       Cost: 5.051429  Degree: 1  Resp: 5.051429  Card: 0.050011 Bytes: 
***********************
Best so far:  Table#: 1  cost: 4.006197  card: 1000.000000  bytes: 10000.000000
              Table#: 0  cost: 4.034677  card: 8.000000  bytes: 104.000000
              Table#: 2  cost: 5.051429  card: 0.050011  bytes: 19.000000
***********************
Join order[4]:  Z[Z]#1  X[X]#2  Y[Y]#0

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 1000.000000  Cost: 4.006197  Resp: 4.006197  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.356000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   1.356000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.356000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 1287.181633 (cpu filter eval) (= 128.718163 (per row) * 10.000000 (#rows))
                       =   38594.381633
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 1361.053007  Resp: 1361.053007  Degree: 1
      Cost_io: 1360.000000  Cost_cpu: 38822867
      Resp_io: 1360.000000  Resp_cpu: 38822867
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.272000  resc_cpu: 9609
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 276.266816  Resp: 276.266816  Degree: 1
      Cost_io: 276.000000  Cost_cpu: 9837107
      Resp_io: 276.000000  Resp_cpu: 9837107
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 15443
    ix_sel: 0.550000  ix_sel_with_filters: 0.002751 
    NL Join : Cost: 1004.445929  Resp: 1004.445929  Degree: 1
      Cost_io: 1004.000000  Cost_cpu: 16440749
      Resp_io: 1004.000000  Resp_cpu: 16440749

  Best NL cost: 276.266816 (VALID)
          resc: 276.266816  resc_io: 276.000000  resc_cpu: 9837107
          resp: 276.266816  resp_io: 276.000000  resc_cpu: 9837107
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  50.011056 = outer (1000.000000) * inner (10.000000) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  10000.000000, outer: 1000.000000, inner: 10.000000, sel: 0.005001
Join Card - Rounded: 50 Computed: 50.011056
Join order aborted2: cost > best plan cost
***********************
Join order[5]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   1.666667
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.666667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   1.666667
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 11.006474  Resp: 11.006474  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 238686
      Resp_io: 11.000000  Resp_cpu: 238686
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 0.500000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.001799  Resp: 4.001799  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 66332
      Resp_io: 4.000000  Resp_cpu: 66332
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743

  Best NL cost: 1.000590 (VALID)
          resc: 1.000590  resc_io: 1.000000  resc_cpu: 21743
          resp: 1.000590  resp_io: 1.000000  resc_cpu: 21743
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000709  Resp: 4.000709  [multiMatchCost=0.000005]
SM Join
  SM cost: 4.000709 
     resc: 4.000709 resc_io: 2.000000 resc_cpu: 73763282
     resp: 4.000709 resp_io: 2.000000 resp_cpu: 73763282
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016320  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016981  Resp: 2.016981  [multiMatchCost=0.000005]
HA Join
  HA cost: 2.016981  
     resc: 2.016981 resc_io: 2.000000 resc_cpu: 626064
     resp: 2.016981 resp_io: 2.000000 resp_cpu: 626064
Best:: JoinMethod: NestedLoop
       Cost: 1.000590  Degree: 1  Resp: 1.000590  Card: 10.000000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 1.000590  Resp: 1.000590  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.700000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.700000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.700000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500627.602953 (cpu filter eval) (= 50.062760 (per row) * 10000.000000 (#rows))
                       =   2600027.922953
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 78.705805  Resp: 78.705805  Degree: 1
      Cost_io: 78.000000  Cost_cpu: 26022022
      Resp_io: 78.000000  Resp_cpu: 26022022
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.300000  resc_cpu: 1914271
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 84.519805  Resp: 84.519805  Degree: 1
      Cost_io: 84.000000  Cost_cpu: 19164451
      Resp_io: 84.000000  Resp_cpu: 19164451
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9274
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003105  Resp: 11.003105  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114486
      Resp_io: 11.000000  Resp_cpu: 114486
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 5.0011e-08 
    NL Join : Cost: 31.074458  Resp: 31.074458  Degree: 1
      Cost_io: 31.000000  Cost_cpu: 2745167
      Resp_io: 31.000000  Resp_cpu: 2745167
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9274
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003105  Resp: 11.003105  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114486
      Resp_io: 11.000000  Resp_cpu: 114486

  Best NL cost: 11.003105 (VALID)
          resc: 11.003105  resc_io: 11.000000  resc_cpu: 114486
          resp: 11.003105  resp_io: 11.000000  resc_cpu: 114486
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.050011 = outer (10.000000) * inner (1000.000000) * sel (5.0011e-06)
Join cardinality for HJ/SMJ (no post filters):  10.000000, outer: 10.000000, inner: 1000.000000, sel: 5.0011e-06
Join Card - Rounded: 1 Computed: 0.050011
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 4.006197  card: 1000.000000  bytes:   deg: 1  resp: 4.006197
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36870066
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 7.019006  Resp: 7.019006  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.019006 
     resc: 7.019006 resc_io: 5.000000 resc_cpu: 74437867
     resp: 7.019006 resp_io: 5.000000 resp_cpu: 74437867
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 4.006197  card: 1000.000000  bytes:   deg: 1  resp: 4.006197
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.019027  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.025814  Resp: 5.025814  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.025814  
     resc: 5.025814 resc_io: 5.000000 resc_cpu: 951729
     resp: 5.025814 resp_io: 5.000000 resp_cpu: 951729
Best:: JoinMethod: Hash
       Cost: 5.025814  Degree: 1  Resp: 5.025814  Card: 0.050011 Bytes: 
***********************
Best so far:  Table#: 2  cost: 1.000419  card: 5.500000  bytes: 36.000000
              Table#: 0  cost: 1.000590  card: 10.000000  bytes: 90.000000
              Table#: 1  cost: 5.025814  card: 0.050011  bytes: 19.000000
***********************
Join order[6]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.833333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   7.833333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.833333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 628230.555556 (cpu filter eval) (= 62.823056 (per row) * 10000.000000 (#rows))
                       =   2727630.875556
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 48.444314  Resp: 48.444314  Degree: 1
      Cost_io: 48.000000  Cost_cpu: 16381228
      Resp_io: 48.000000  Resp_cpu: 16381228
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.500000  resc_cpu: 2041874
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 52.332714  Resp: 52.332714  Degree: 1
      Cost_io: 52.000000  Cost_cpu: 12266685
      Resp_io: 52.000000  Resp_cpu: 12266685
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 5.0011e-04 
    NL Join : Cost: 19.057450  Resp: 19.057450  Degree: 1
      Cost_io: 19.000000  Cost_cpu: 2118112
      Resp_io: 19.000000  Resp_cpu: 2118112

  Best NL cost: 19.057450 (VALID)
          resc: 19.057450  resc_io: 19.000000  resc_cpu: 2118112
          resp: 19.057450  resp_io: 19.000000  resc_cpu: 2118112
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  50.011056 = outer (10.000000) * inner (1000.000000) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  10000.000000, outer: 10.000000, inner: 1000.000000, sel: 0.005001
Join Card - Rounded: 50 Computed: 50.011056
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :1
Join order[7]:  Z[Z]#1  Y[Y]#0  X[X]#2

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 1000.000000  Cost: 4.006197  Resp: 4.006197  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   1.356000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   1.356000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   1.356000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 1361.015382  Resp: 1361.015382  Degree: 1
      Cost_io: 1360.000000  Cost_cpu: 37435686
      Resp_io: 1360.000000  Resp_cpu: 37435686
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 0.272000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 276.236243  Resp: 276.236243  Degree: 1
      Cost_io: 276.000000  Cost_cpu: 8709926
      Resp_io: 276.000000  Resp_cpu: 8709926
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 4.034677  Resp: 4.034677  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 1278486
      Resp_io: 4.000000  Resp_cpu: 1278486
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 4.034677  Resp: 4.034677  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 1278486
      Resp_io: 4.000000  Resp_cpu: 1278486

  Best NL cost: 4.034677 (VALID)
          resc: 4.034677  resc_io: 4.000000  resc_cpu: 1278486
          resp: 4.034677  resp_io: 4.000000  resc_cpu: 1278486
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  8.000000 = outer (1000.000000) * inner (8.000000) * sel (0.001000)
Join Card - Rounded: 8 Computed: 8.000000
  Outer table:  Z  Alias: Z
    resc: 4.006197  card 1000.000000  bytes:   deg: 1  resp: 4.006197
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 7.018642  Resp: 7.018642  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.018642 
     resc: 7.018642 resc_io: 5.000000 resc_cpu: 74424430
     resp: 7.018642 resp_io: 5.000000 resp_cpu: 74424430
  Outer table:  Z  Alias: Z
    resc: 4.006197  card 1000.000000  bytes:   deg: 1  resp: 4.006197
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020364  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 3  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.026798  Resp: 5.026798  [multiMatchCost=0.000000]
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 4.006197  card: 1000.000000  bytes:   deg: 1  resp: 4.006197
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.019019  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.025453  Resp: 5.025453  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.025453 swapped 
     resc: 5.025453 resc_io: 5.000000 resc_cpu: 938407
     resp: 5.025453 resp_io: 5.000000 resp_cpu: 938407
Best:: JoinMethod: NestedLoop
       Cost: 4.034677  Degree: 1  Resp: 4.034677  Card: 8.000000 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 8.000000  Cost: 4.034677  Resp: 4.034677  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2064  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 660.897704 (cpu filter eval) (= 66.089770 (per row) * 10.000000 (#rows))
                       =   37968.097704
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 16.042915  Resp: 16.042915  Degree: 1
      Cost_io: 16.000000  Cost_cpu: 1582231
      Resp_io: 16.000000  Resp_cpu: 1582231
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8982
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 8.036626  Resp: 8.036626  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 1350344
      Resp_io: 8.000000  Resp_cpu: 1350344
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 12.036515  Resp: 12.036515  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1346247
      Resp_io: 12.000000  Resp_cpu: 1346247
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 14443
    ix_sel: 0.055000  ix_sel_with_filters: 2.7506e-04 
    NL Join : Cost: 12.037839  Resp: 12.037839  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1395055
      Resp_io: 12.000000  Resp_cpu: 1395055
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 12.036515  Resp: 12.036515  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1346247
      Resp_io: 12.000000  Resp_cpu: 1346247

  Best NL cost: 12.036515 (VALID)
          resc: 12.036515  resc_io: 12.000000  resc_cpu: 1346247
          resp: 12.036515  resp_io: 12.000000  resc_cpu: 1346247
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.050011 = outer (8.000000) * inner (10.000000) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  10.000000, outer: 8.000000, inner: 10.000000, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.050011
  Outer table:  Y  Alias: Y
    resc: 4.034677  card 8.000000  bytes:   deg: 1  resp: 4.034677
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
  SM join: Resc: 7.035149  Resp: 7.035149  [multiMatchCost=0.000005]
SM Join
  SM cost: 7.035149 
     resc: 7.035149 resc_io: 5.000000 resc_cpu: 75033047
     resp: 7.035149 resp_io: 5.000000 resp_cpu: 75033047
  Outer table:  Y  Alias: Y
    resc: 4.034677  card 8.000000  bytes:   deg: 1  resp: 4.034677
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016323  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.051429  Resp: 5.051429  [multiMatchCost=0.000011]
HA Join
  HA cost: 5.051429  
     resc: 5.051429 resc_io: 5.000000 resc_cpu: 1896129
     resp: 5.051429 resp_io: 5.000000 resp_cpu: 1896129
Join order aborted2: cost > best plan cost
***********************
Join order[8]:  Z[Z]#1  X[X]#2  Y[Y]#0

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 1000.000000  Cost: 4.006197  Resp: 4.006197  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.356000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   1.356000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.356000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 1287.181633 (cpu filter eval) (= 128.718163 (per row) * 10.000000 (#rows))
                       =   38594.381633
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 1361.053007  Resp: 1361.053007  Degree: 1
      Cost_io: 1360.000000  Cost_cpu: 38822867
      Resp_io: 1360.000000  Resp_cpu: 38822867
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.272000  resc_cpu: 9609
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 276.266816  Resp: 276.266816  Degree: 1
      Cost_io: 276.000000  Cost_cpu: 9837107
      Resp_io: 276.000000  Resp_cpu: 9837107
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 15443
    ix_sel: 0.550000  ix_sel_with_filters: 0.002751 
    NL Join : Cost: 1004.445929  Resp: 1004.445929  Degree: 1
      Cost_io: 1004.000000  Cost_cpu: 16440749
      Resp_io: 1004.000000  Resp_cpu: 16440749

  Best NL cost: 276.266816 (VALID)
          resc: 276.266816  resc_io: 276.000000  resc_cpu: 9837107
          resp: 276.266816  resp_io: 276.000000  resc_cpu: 9837107
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  50.011056 = outer (1000.000000) * inner (10.000000) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  10000.000000, outer: 1000.000000, inner: 10.000000, sel: 0.005001
Join Card - Rounded: 50 Computed: 50.011056
Join order aborted2: cost > best plan cost
***********************
Join order[9]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   1.666667
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.666667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   1.666667
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 11.006474  Resp: 11.006474  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 238686
      Resp_io: 11.000000  Resp_cpu: 238686
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 0.500000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.001799  Resp: 4.001799  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 66332
      Resp_io: 4.000000  Resp_cpu: 66332
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743

  Best NL cost: 1.000590 (VALID)
          resc: 1.000590  resc_io: 1.000000  resc_cpu: 21743
          resp: 1.000590  resp_io: 1.000000  resc_cpu: 21743
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000709  Resp: 4.000709  [multiMatchCost=0.000005]
SM Join
  SM cost: 4.000709 
     resc: 4.000709 resc_io: 2.000000 resc_cpu: 73763282
     resp: 4.000709 resp_io: 2.000000 resp_cpu: 73763282
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016320  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016981  Resp: 2.016981  [multiMatchCost=0.000005]
HA Join
  HA cost: 2.016981  
     resc: 2.016981 resc_io: 2.000000 resc_cpu: 626064
     resp: 2.016981 resp_io: 2.000000 resp_cpu: 626064
Best:: JoinMethod: NestedLoop
       Cost: 1.000590  Degree: 1  Resp: 1.000590  Card: 10.000000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 1.000590  Resp: 1.000590  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.700000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2065  ("Z"."B"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.700000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.700000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500627.602953 (cpu filter eval) (= 50.062760 (per row) * 10000.000000 (#rows))
                       =   2600027.922953
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 78.705805  Resp: 78.705805  Degree: 1
      Cost_io: 78.000000  Cost_cpu: 26022022
      Resp_io: 78.000000  Resp_cpu: 26022022
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.300000  resc_cpu: 1914271
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 84.519805  Resp: 84.519805  Degree: 1
      Cost_io: 84.000000  Cost_cpu: 19164451
      Resp_io: 84.000000  Resp_cpu: 19164451
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9274
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003105  Resp: 11.003105  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114486
      Resp_io: 11.000000  Resp_cpu: 114486
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 5.0011e-08 
    NL Join : Cost: 31.074458  Resp: 31.074458  Degree: 1
      Cost_io: 31.000000  Cost_cpu: 2745167
      Resp_io: 31.000000  Resp_cpu: 2745167
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9274
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003105  Resp: 11.003105  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114486
      Resp_io: 11.000000  Resp_cpu: 114486

  Best NL cost: 11.003105 (VALID)
          resc: 11.003105  resc_io: 11.000000  resc_cpu: 114486
          resp: 11.003105  resp_io: 11.000000  resc_cpu: 114486
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.050011 = outer (10.000000) * inner (1000.000000) * sel (5.0011e-06)
Join cardinality for HJ/SMJ (no post filters):  10.000000, outer: 10.000000, inner: 1000.000000, sel: 5.0011e-06
Join Card - Rounded: 1 Computed: 0.050011
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 4.006197  card: 1000.000000  bytes:   deg: 1  resp: 4.006197
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36870066
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 7.019006  Resp: 7.019006  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.019006 
     resc: 7.019006 resc_io: 5.000000 resc_cpu: 74437867
     resp: 7.019006 resp_io: 5.000000 resp_cpu: 74437867
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 4.006197  card: 1000.000000  bytes:   deg: 1  resp: 4.006197
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.019027  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.025814  Resp: 5.025814  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.025814  
     resc: 5.025814 resc_io: 5.000000 resc_cpu: 951729
     resp: 5.025814 resp_io: 5.000000 resp_cpu: 951729
Join order aborted2: cost > best plan cost
***********************
Join order[10]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.833333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   7.833333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.833333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 628230.555556 (cpu filter eval) (= 62.823056 (per row) * 10000.000000 (#rows))
                       =   2727630.875556
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 48.444314  Resp: 48.444314  Degree: 1
      Cost_io: 48.000000  Cost_cpu: 16381228
      Resp_io: 48.000000  Resp_cpu: 16381228
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.500000  resc_cpu: 2041874
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 52.332714  Resp: 52.332714  Degree: 1
      Cost_io: 52.000000  Cost_cpu: 12266685
      Resp_io: 52.000000  Resp_cpu: 12266685
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 5.0011e-04 
    NL Join : Cost: 19.057450  Resp: 19.057450  Degree: 1
      Cost_io: 19.000000  Cost_cpu: 2118112
      Resp_io: 19.000000  Resp_cpu: 2118112

  Best NL cost: 19.057450 (VALID)
          resc: 19.057450  resc_io: 19.000000  resc_cpu: 2118112
          resp: 19.057450  resp_io: 19.000000  resc_cpu: 2118112
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  50.011056 = outer (10.000000) * inner (1000.000000) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  10000.000000, outer: 10.000000, inner: 1000.000000, sel: 0.005001
Join Card - Rounded: 50 Computed: 50.011056
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[11]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   1.666667
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.666667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   1.666667
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 11.006474  Resp: 11.006474  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 238686
      Resp_io: 11.000000  Resp_cpu: 238686
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 0.500000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.001799  Resp: 4.001799  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 66332
      Resp_io: 4.000000  Resp_cpu: 66332
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743

  Best NL cost: 1.000590 (VALID)
          resc: 1.000590  resc_io: 1.000000  resc_cpu: 21743
          resp: 1.000590  resp_io: 1.000000  resc_cpu: 21743
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000709  Resp: 4.000709  [multiMatchCost=0.000005]
SM Join
  SM cost: 4.000709 
     resc: 4.000709 resc_io: 2.000000 resc_cpu: 73763282
     resp: 4.000709 resp_io: 2.000000 resp_cpu: 73763282
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016320  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016981  Resp: 2.016981  [multiMatchCost=0.000005]
HA Join
  HA cost: 2.016981  
     resc: 2.016981 resc_io: 2.000000 resc_cpu: 626064
     resp: 2.016981 resp_io: 2.000000 resp_cpu: 626064
Best:: JoinMethod: NestedLoop
       Cost: 1.000590  Degree: 1  Resp: 1.000590  Card: 10.000000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 1.000590  Resp: 1.000590  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.700000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2065  ("Z"."B"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.700000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.700000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500627.602953 (cpu filter eval) (= 50.062760 (per row) * 10000.000000 (#rows))
                       =   2600027.922953
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 78.705805  Resp: 78.705805  Degree: 1
      Cost_io: 78.000000  Cost_cpu: 26022022
      Resp_io: 78.000000  Resp_cpu: 26022022
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.300000  resc_cpu: 1914271
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 84.519805  Resp: 84.519805  Degree: 1
      Cost_io: 84.000000  Cost_cpu: 19164451
      Resp_io: 84.000000  Resp_cpu: 19164451
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9274
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003105  Resp: 11.003105  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114486
      Resp_io: 11.000000  Resp_cpu: 114486
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 5.0011e-08 
    NL Join : Cost: 31.074458  Resp: 31.074458  Degree: 1
      Cost_io: 31.000000  Cost_cpu: 2745167
      Resp_io: 31.000000  Resp_cpu: 2745167
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9274
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003105  Resp: 11.003105  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114486
      Resp_io: 11.000000  Resp_cpu: 114486

  Best NL cost: 11.003105 (VALID)
          resc: 11.003105  resc_io: 11.000000  resc_cpu: 114486
          resp: 11.003105  resp_io: 11.000000  resc_cpu: 114486
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.050011 = outer (10.000000) * inner (1000.000000) * sel (5.0011e-06)
Join cardinality for HJ/SMJ (no post filters):  10.000000, outer: 10.000000, inner: 1000.000000, sel: 5.0011e-06
Join Card - Rounded: 1 Computed: 0.050011
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 4.006197  card: 1000.000000  bytes:   deg: 1  resp: 4.006197
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36870066
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 7.019006  Resp: 7.019006  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.019006 
     resc: 7.019006 resc_io: 5.000000 resc_cpu: 74437867
     resp: 7.019006 resp_io: 5.000000 resp_cpu: 74437867
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 4.006197  card: 1000.000000  bytes:   deg: 1  resp: 4.006197
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.019027  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.025814  Resp: 5.025814  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.025814  
     resc: 5.025814 resc_io: 5.000000 resc_cpu: 951729
     resp: 5.025814 resp_io: 5.000000 resp_cpu: 951729
Join order aborted2: cost > best plan cost
***********************
Join order[12]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.833333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   7.833333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.833333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 628230.555556 (cpu filter eval) (= 62.823056 (per row) * 10000.000000 (#rows))
                       =   2727630.875556
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 48.444314  Resp: 48.444314  Degree: 1
      Cost_io: 48.000000  Cost_cpu: 16381228
      Resp_io: 48.000000  Resp_cpu: 16381228
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.500000  resc_cpu: 2041874
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 52.332714  Resp: 52.332714  Degree: 1
      Cost_io: 52.000000  Cost_cpu: 12266685
      Resp_io: 52.000000  Resp_cpu: 12266685
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 5.0011e-04 
    NL Join : Cost: 19.057450  Resp: 19.057450  Degree: 1
      Cost_io: 19.000000  Cost_cpu: 2118112
      Resp_io: 19.000000  Resp_cpu: 2118112

  Best NL cost: 19.057450 (VALID)
          resc: 19.057450  resc_io: 19.000000  resc_cpu: 2118112
          resp: 19.057450  resp_io: 19.000000  resc_cpu: 2118112
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  50.011056 = outer (10.000000) * inner (1000.000000) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  10000.000000, outer: 10.000000, inner: 1000.000000, sel: 0.005001
Join Card - Rounded: 50 Computed: 50.011056
Join order aborted2: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
Consider using bloom filter between Y[Y] and Z[Z] with ??
kkoBloomFilter: join (lcdn:10 rcdn:1000 jcdn:0 limit:5000)
kkopqSingleJoinBloomNdv:Compute bloom ndv for lfro:X[X] and rfro:Z[Z] swap:no
kkopqSingleJoinBloomNdv:Compute bloom ndv for lfro:Y[Y] and rfro:Z[Z] swap:no
kkopqSingleJoinBloomNdv: predCnt:#1 col1:(bndv:10000 ndv:10000) and col2:(bndv:8 ndv:8) creatorNDV:8.0 userNDV:10000.0
kkopqComputeBloomNdv: predCnt:1 creatorNdv:8.0 userNdv:10000.0 singleTblPred:yes
kkoBloomFilter: join ndv:10 reduction:0.010000 (limit:0.500000)  accepted, but final decision will be made in code generation
LORE: or-expansion-subheap (delete addr=0x7fd925c0ff60, in-use=63752, alloc=71640)

LORE: ******** OR-branching ********

LORE: or-expansion-subheap (create addr=0x7fd925c0ff60)
****************
QUERY BLOCK TEXT
****************
select /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null
  from x join y  on y.id = x.id join z on z.id = y.id
  where  ( ( x.a = 0 AND z.b = 1               ) OR 
           ( x.a = 1 AND z.b = 0 AND z.c = 0  )   )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$9E43CB6E nbfros=3 flg=0
  fro(0): flg=0 objn=80828 hint_alias="X"@"SEL$1"
  fro(1): flg=0 objn=80831 hint_alias="Y"@"SEL$1"
  fro(2): flg=0 objn=80833 hint_alias="Z"@"SEL$2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3072 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table:  Z  Alias:  Z
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  28  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): B(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.050000 Min: 1.000000 Max: 10.000000
    Histogram: Freq  #Bkts: 10  UncompBkts: 10000  EndPtVals: 10  ActualVal: yes
  Column (#3): C(NUMBER)
    AvgLen: 3 NDV: 1 Nulls: 0 Density: 0.000050 Min: 1.000000 Max: 1.000000
    Histogram: Freq  #Bkts: 1  UncompBkts: 10000  EndPtVals: 1  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: Z_B_C  Col#: 2 3 1
  LVLS: 1  #LB: 30  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 210.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: Z_ID  Col#: 1
  LVLS: 1  #LB: 18  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  Y  Alias:  Y
  #Rows: 8  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  3.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 1.000000 Max: 8.000000
Index Stats::
  Index: Y_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 8  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 8.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  X  Alias:  X
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): A(NUMBER)
    AvgLen: 3 NDV: 2 Nulls: 0 Density: 0.250000 Min: 1.000000 Max: 2.000000
    Histogram: Freq  #Bkts: 2  UncompBkts: 10  EndPtVals: 2  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: X_A_ID  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: X_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$9E43CB6E (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for X
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for X[X] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE

 kkecdn: Single Table Predicate:"X"."A"=0 OR "X"."A"=1
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Table: X  Alias: X
    Card: Original: 10.000000  Rounded: 6  Computed: 5.500000  Non Adjusted: 5.500000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2064  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 975.000000 (cpu filter eval) (= 97.500000 (per row) * 10.000000 (#rows))
                       =   38282.200000
  Access Path: TableScan
    Cost:  3.001038  Resp: 3.001038  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 38282
      Resp_io: 3.000000  Resp_cpu: 38282
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9296
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000252  Resp: 2.000252  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9296
      Resp_io: 2.000000  Resp_cpu: 9296
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 15443
    ix_sel: 0.550000  ix_sel_with_filters: 0.550000 
    Cost: 1.000419  Resp: 1.000419  Degree: 1
  ****** trying bitmap/domain indexes ******
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 7321
    ix_sel: 0.050000  ix_sel_with_filters: 0.050000 
    Cost: 1.000199  Resp: 1.000199  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 7321
    ix_sel: 0.050000  ix_sel_with_filters: 0.050000 
    Cost: 1.000199  Resp: 1.000199  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  Bitmap nodes:
    Not used X_A_ID
      Cost = 2.000201, sel = 0.050000
    Used X_A_ID
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: X_A_ID
         Cost: 1.000419  Degree: 1  Resp: 1.000419  Card: 5.500000  Bytes: 0.000000

Access path analysis for Y
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Y[Y] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: Y  Alias: Y
    Card: Original: 8.000000  Rounded: 8  Computed: 8.000000  Non Adjusted: 8.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                       =   36807.200000
  Access Path: TableScan
    Cost:  3.000998  Resp: 3.000998  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 36807
      Resp_io: 3.000000  Resp_cpu: 36807
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8081
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000219  Resp: 2.000219  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 8081
      Resp_io: 2.000000  Resp_cpu: 8081
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 1
  ****** trying bitmap/domain indexes ******
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Y_ID
         Cost: 1.000237  Degree: 1  Resp: 1.000237  Card: 8.000000  Bytes: 0.000000

Access path analysis for Z
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Z[Z] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred


 kkecdn: Single Table Predicate:"Z"."C"=0
  Estimated selectivity: 5.0000e-05 , col: #3 

 kkecdn: Single Table Predicate:"Z"."B"=0
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Table: Z  Alias: Z
    Card: Original: 10000.000000  Rounded: 1  Computed: 0.022222  Non Adjusted: 0.022222
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.000000 (cpu filter eval) (= 50.002500 (per row) * 10000.000000 (#rows))
                       =   2599425.320000
  Access Path: TableScan
    Cost:  9.070505  Resp: 9.070505  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2599425
      Resp_io: 9.000000  Resp_cpu: 2599425
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.051905  Resp: 10.051905  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1913668
      Resp_io: 10.000000  Resp_cpu: 1913668
 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 2.2222e-06  ix_sel_with_filters: 2.2222e-06 
    Cost: 2.000392  Resp: 2.000392  Degree: 1
  ****** trying bitmap/domain indexes ******

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 2.2222e-06  ix_sel_with_filters: 2.2222e-06 
    Cost: 2.000392  Resp: 2.000392  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 4.000000  resc_cpu: 228486
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    Cost: 4.006197  Resp: 4.006197  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  Bitmap nodes:
    Used Z_B_C
      Cost = 3.000392, sel = 2.2222e-06
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Z_B_C
         Cost: 2.000392  Degree: 1  Resp: 2.000392  Card: 0.022222  Bytes: 0.000000

(newjo-restore) [1 0 2 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is undergoing OR expansion SEL$9E43CB6E (#0)
kkogast: Selectivities tab=Y[Y] tnum=0 astat=N 
  card=8.00 nrow=8.00 1.000000
kkogast: Selectivities tab=Z[Z] tnum=1 astat=N 
  card=0.02 nrow=10000.00 2.2222e-06
kkogast: Selectivities tab=X[X] tnum=2 astat=N 
  card=5.50 nrow=10.00 0.550000
kkogast: Best single table selectivities cnt=2
  Tab = 1 2
kkogast: Final Alternative Starting Tables cnt=2
  Tab = 1 2
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  Y[Y]#0  Z[Z]#1  X[X]#2

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.750000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.750000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.750000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.024975 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2599425.344975
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 63.564278  Resp: 63.564278  Degree: 1
      Cost_io: 63.000000  Cost_cpu: 20804124
      Resp_io: 63.000000  Resp_cpu: 20804124
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.250000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 67.415478  Resp: 67.415478  Degree: 1
      Cost_io: 67.000000  Cost_cpu: 15318067
      Resp_io: 67.000000  Resp_cpu: 15318067
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002246  Resp: 9.002246  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82813
      Resp_io: 9.000000  Resp_cpu: 82813
 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 2.2222e-10 
    NL Join : Cost: 9.002010  Resp: 9.002010  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 74093
      Resp_io: 9.000000  Resp_cpu: 74093
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002246  Resp: 9.002246  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82813
      Resp_io: 9.000000  Resp_cpu: 82813

  Best NL cost: 9.002010 (VALID)
          resc: 9.002010  resc_io: 9.000000  resc_cpu: 74093
          resp: 9.002010  resp_io: 9.000000  resc_cpu: 74093
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.022222 = outer (8.000000) * inner (0.022222) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.022222
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 4.000628  Resp: 4.000628  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000628 
     resc: 4.000628 resc_io: 3.000000 resc_cpu: 36891733
     resp: 4.000628 resp_io: 3.000000 resp_cpu: 36891733
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016309  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016938  Resp: 3.016938  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016938  
     resc: 3.016938 resc_io: 3.000000 resc_cpu: 624464
     resp: 3.016938 resp_io: 3.000000 resp_cpu: 624464
Best:: JoinMethod: Hash
       Cost: 3.016938  Degree: 1  Resp: 3.016938  Card: 0.022222 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.022222  Cost: 3.016938  Resp: 3.016938  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 660.897704 (cpu filter eval) (= 66.089770 (per row) * 10.000000 (#rows))
                       =   37968.097704
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 6.017967  Resp: 6.017967  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 662432
      Resp_io: 6.000000  Resp_cpu: 662432
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8982
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 5.017181  Resp: 5.017181  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 633447
      Resp_io: 5.000000  Resp_cpu: 633447
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.017167  Resp: 4.017167  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 632934
      Resp_io: 4.000000  Resp_cpu: 632934
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 14443
    ix_sel: 0.055000  ix_sel_with_filters: 2.7506e-04 
    NL Join : Cost: 4.017333  Resp: 4.017333  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 639035
      Resp_io: 4.000000  Resp_cpu: 639035
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.017167  Resp: 4.017167  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 632934
      Resp_io: 4.000000  Resp_cpu: 632934

  Best NL cost: 4.017167 (VALID)
          resc: 4.017167  resc_io: 4.000000  resc_cpu: 632934
          resp: 4.017167  resp_io: 4.000000  resc_cpu: 632934
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.000139 = outer (0.022222) * inner (10.000000) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  0.027778, outer: 0.022222, inner: 10.000000, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.000139
  Outer table:  Z  Alias: Z
    resc: 3.016938  card 0.022222  bytes:   deg: 1  resp: 3.016938
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
  SM join: Resc: 6.017375  Resp: 6.017375  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.017375 
     resc: 6.017375 resc_io: 4.000000 resc_cpu: 74377744
     resp: 6.017375 resp_io: 4.000000 resp_cpu: 74377744
  Outer table:  Z  Alias: Z
    resc: 3.016938  card 0.022222  bytes:   deg: 1  resp: 3.016938
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016294  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 4.033651  Resp: 4.033651  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.033651  
     resc: 4.033651 resc_io: 4.000000 resc_cpu: 1240657
     resp: 4.033651 resp_io: 4.000000 resp_cpu: 1240657
Best:: JoinMethod: NestedLoop
       Cost: 4.017167  Degree: 1  Resp: 4.017167  Card: 0.000139 Bytes: 
***********************
Best so far:  Table#: 0  cost: 1.000237  card: 8.000000  bytes: 24.000000
              Table#: 1  cost: 3.016938  card: 0.022222  bytes: 13.000000
              Table#: 2  cost: 4.017167  card: 0.000139  bytes: 19.000000
***********************
Join order[2]:  Y[Y]#0  X[X]#2  Z[Z]#1

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 621.875000 (cpu filter eval) (= 62.187500 (per row) * 10.000000 (#rows))
                       =   37929.075000
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 13.008467  Resp: 13.008467  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 312154
      Resp_io: 13.000000  Resp_cpu: 312154
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8943
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 5.002177  Resp: 5.002177  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 80268
      Resp_io: 5.000000  Resp_cpu: 80268
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8439
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002068  Resp: 9.002068  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 76233
      Resp_io: 9.000000  Resp_cpu: 76233
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 14443
    ix_sel: 0.055000  ix_sel_with_filters: 0.055000 
    NL Join : Cost: 9.003370  Resp: 9.003370  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 124264
      Resp_io: 9.000000  Resp_cpu: 124264
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8439
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002068  Resp: 9.002068  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 76233
      Resp_io: 9.000000  Resp_cpu: 76233

  Best NL cost: 9.002068 (VALID)
          resc: 9.002068  resc_io: 9.000000  resc_cpu: 76233
          resp: 9.002068  resp_io: 9.000000  resc_cpu: 76233
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (8.000000) * inner (10.000000) * sel (0.100000)
Join cardinality for NL:  8.000000, outer: 8.000000, inner: 10.000000, sel: 0.100000
Join cardinality without POSQ:  8.000000, outer: 8.000000, inner: 10.000000, sel: 0.100000
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
  SM join: Resc: 3.000680  Resp: 3.000680  [multiMatchCost=0.000005]
SM Join
  SM cost: 3.000680 
     resc: 3.000680 resc_io: 2.000000 resc_cpu: 36893632
     resp: 3.000680 resp_io: 2.000000 resp_cpu: 36893632
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016323  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016989  Resp: 2.016989  [multiMatchCost=0.000011]
HA Join
  HA cost: 2.016989  
     resc: 2.016989 resc_io: 2.000000 resc_cpu: 626364
     resp: 2.016989 resp_io: 2.000000 resp_cpu: 626364
Best:: JoinMethod: Hash
       Cost: 2.016989  Degree: 1  Resp: 2.016989  Card: 10.000000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 2.016989  Resp: 2.016989  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.700000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.700000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.700000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.027822 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.347822
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 79.722041  Resp: 79.722041  Degree: 1
      Cost_io: 79.000000  Cost_cpu: 26620618
      Resp_io: 79.000000  Resp_cpu: 26620618
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.300000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 85.536041  Resp: 85.536041  Degree: 1
      Cost_io: 85.000000  Cost_cpu: 19763047
      Resp_io: 85.000000  Resp_cpu: 19763047
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 12.019501  Resp: 12.019501  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 718979
      Resp_io: 12.000000  Resp_cpu: 718979
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 1.1114e-12 
    NL Join : Cost: 12.019240  Resp: 12.019240  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 709361
      Resp_io: 12.000000  Resp_cpu: 709361
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 12.019501  Resp: 12.019501  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 718979
      Resp_io: 12.000000  Resp_cpu: 718979

  Best NL cost: 12.019240 (VALID)
          resc: 12.019240  resc_io: 12.000000  resc_cpu: 709361
          resp: 12.019240  resp_io: 12.000000  resc_cpu: 709361
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.000139 = outer (10.000000) * inner (0.022222) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  0.027778, outer: 10.000000, inner: 0.022222, sel: 6.2514e-04
Join cardinality without POSQ:  0.000111, outer: 8.000000, inner: 0.022222, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.000139
  Outer table:  X  Alias: X
    resc: 2.016989  card 10.000000  bytes:   deg: 1  resp: 2.016989
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36870066
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 6.017421  Resp: 6.017421  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.017421 
     resc: 6.017421 resc_io: 4.000000 resc_cpu: 74379442
     resp: 6.017421 resp_io: 4.000000 resp_cpu: 74379442
  Outer table:  X  Alias: X
    resc: 2.016989  card 10.000000  bytes:   deg: 1  resp: 2.016989
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016317  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 4.033698  Resp: 4.033698  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.033698  
     resc: 4.033698 resc_io: 4.000000 resc_cpu: 1242407
     resp: 4.033698 resp_io: 4.000000 resp_cpu: 1242407
Plan cardinality mismatch: best card= 0.00013891960   curr card= 0.00011113568
Join order aborted2: cost > best plan cost
***********************
Join order[3]:  Z[Z]#1  Y[Y]#0  X[X]#2

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000392  Resp: 2.000392  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 5.001401  Resp: 5.001401  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 51650
      Resp_io: 5.000000  Resp_cpu: 51650
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000622  Resp: 4.000622  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 22924
      Resp_io: 4.000000  Resp_cpu: 22924
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000420  Resp: 2.000420  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15493
      Resp_io: 2.000000  Resp_cpu: 15493
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000420  Resp: 2.000420  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15493
      Resp_io: 2.000000  Resp_cpu: 15493

  Best NL cost: 2.000420 (VALID)
          resc: 2.000420  resc_io: 2.000000  resc_cpu: 15493
          resp: 2.000420  resp_io: 2.000000  resc_cpu: 15493
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.022222 = outer (0.022222) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.022222
  Outer table:  Z  Alias: Z
    resc: 2.000392  card 0.022222  bytes:   deg: 1  resp: 2.000392
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 5.000658  Resp: 5.000658  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000658 
     resc: 5.000658 resc_io: 3.000000 resc_cpu: 73761383
     resp: 5.000658 resp_io: 3.000000 resp_cpu: 73761383
  Outer table:  Z  Alias: Z
    resc: 2.000392  card 0.022222  bytes:   deg: 1  resp: 2.000392
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016928  Resp: 3.016928  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016928  
     resc: 3.016928 resc_io: 3.000000 resc_cpu: 624114
     resp: 3.016928 resp_io: 3.000000 resp_cpu: 624114
Best:: JoinMethod: NestedLoop
       Cost: 2.000420  Degree: 1  Resp: 2.000420  Card: 0.022222 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000420  Resp: 2.000420  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 660.897704 (cpu filter eval) (= 66.089770 (per row) * 10.000000 (#rows))
                       =   37968.097704
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001450  Resp: 5.001450  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 53461
      Resp_io: 5.000000  Resp_cpu: 53461
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8982
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000664  Resp: 4.000664  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24475
      Resp_io: 4.000000  Resp_cpu: 24475
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000650  Resp: 3.000650  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23963
      Resp_io: 3.000000  Resp_cpu: 23963
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 14443
    ix_sel: 0.055000  ix_sel_with_filters: 2.7506e-04 
    NL Join : Cost: 3.000815  Resp: 3.000815  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 30064
      Resp_io: 3.000000  Resp_cpu: 30064
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000650  Resp: 3.000650  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23963
      Resp_io: 3.000000  Resp_cpu: 23963

  Best NL cost: 3.000650 (VALID)
          resc: 3.000650  resc_io: 3.000000  resc_cpu: 23963
          resp: 3.000650  resp_io: 3.000000  resc_cpu: 23963
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.000139 = outer (0.022222) * inner (10.000000) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  0.027778, outer: 0.022222, inner: 10.000000, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.000139
  Outer table:  Y  Alias: Y
    resc: 2.000420  card 0.022222  bytes:   deg: 1  resp: 2.000420
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
  SM join: Resc: 5.000858  Resp: 5.000858  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000858 
     resc: 5.000858 resc_io: 3.000000 resc_cpu: 73768772
     resp: 5.000858 resp_io: 3.000000 resp_cpu: 73768772
  Outer table:  Y  Alias: Y
    resc: 2.000420  card 0.022222  bytes:   deg: 1  resp: 2.000420
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016294  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017133  Resp: 3.017133  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017133  
     resc: 3.017133 resc_io: 3.000000 resc_cpu: 631686
     resp: 3.017133 resp_io: 3.000000 resp_cpu: 631686
Best:: JoinMethod: NestedLoop
       Cost: 3.000650  Degree: 1  Resp: 3.000650  Card: 0.000139 Bytes: 
***********************
Best so far:  Table#: 1  cost: 2.000392  card: 0.022222  bytes: 10.000000
              Table#: 0  cost: 2.000420  card: 0.022222  bytes: 13.000000
              Table#: 2  cost: 3.000650  card: 0.000139  bytes: 19.000000
***********************
Join order[4]:  Z[Z]#1  X[X]#2  Y[Y]#0

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000392  Resp: 2.000392  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 1287.181633 (cpu filter eval) (= 128.718163 (per row) * 10.000000 (#rows))
                       =   38594.381633
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001439  Resp: 5.001439  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 53037
      Resp_io: 5.000000  Resp_cpu: 53037
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9609
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000652  Resp: 4.000652  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24052
      Resp_io: 4.000000  Resp_cpu: 24052
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 15443
    ix_sel: 0.550000  ix_sel_with_filters: 0.002751 
    NL Join : Cost: 3.000831  Resp: 3.000831  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 30655
      Resp_io: 3.000000  Resp_cpu: 30655

  Best NL cost: 3.000831 (VALID)
          resc: 3.000831  resc_io: 3.000000  resc_cpu: 30655
          resp: 3.000831  resp_io: 3.000000  resc_cpu: 30655
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.001111 = outer (0.022222) * inner (10.000000) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  0.222222, outer: 0.022222, inner: 10.000000, sel: 0.005001
Join Card - Rounded: 1 Computed: 0.001111
Join order aborted2: cost > best plan cost
***********************
Join order[5]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   1.666667
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.666667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   1.666667
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 11.006474  Resp: 11.006474  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 238686
      Resp_io: 11.000000  Resp_cpu: 238686
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 0.500000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.001799  Resp: 4.001799  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 66332
      Resp_io: 4.000000  Resp_cpu: 66332
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743

  Best NL cost: 1.000590 (VALID)
          resc: 1.000590  resc_io: 1.000000  resc_cpu: 21743
          resp: 1.000590  resp_io: 1.000000  resc_cpu: 21743
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000709  Resp: 4.000709  [multiMatchCost=0.000005]
SM Join
  SM cost: 4.000709 
     resc: 4.000709 resc_io: 2.000000 resc_cpu: 73763282
     resp: 4.000709 resp_io: 2.000000 resp_cpu: 73763282
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016320  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016981  Resp: 2.016981  [multiMatchCost=0.000005]
HA Join
  HA cost: 2.016981  
     resc: 2.016981 resc_io: 2.000000 resc_cpu: 626064
     resp: 2.016981 resp_io: 2.000000 resp_cpu: 626064
Best:: JoinMethod: NestedLoop
       Cost: 1.000590  Degree: 1  Resp: 1.000590  Card: 10.000000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 1.000590  Resp: 1.000590  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.700000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.700000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.700000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.027822 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.347822
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 78.705642  Resp: 78.705642  Degree: 1
      Cost_io: 78.000000  Cost_cpu: 26015996
      Resp_io: 78.000000  Resp_cpu: 26015996
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.300000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 84.519641  Resp: 84.519641  Degree: 1
      Cost_io: 84.000000  Cost_cpu: 19158425
      Resp_io: 84.000000  Resp_cpu: 19158425
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003102  Resp: 11.003102  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114357
      Resp_io: 11.000000  Resp_cpu: 114357
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 1.1114e-12 
    NL Join : Cost: 11.002841  Resp: 11.002841  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 104740
      Resp_io: 11.000000  Resp_cpu: 104740
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003102  Resp: 11.003102  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114357
      Resp_io: 11.000000  Resp_cpu: 114357

  Best NL cost: 11.002841 (VALID)
          resc: 11.002841  resc_io: 11.000000  resc_cpu: 104740
          resp: 11.002841  resp_io: 11.000000  resc_cpu: 104740
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.000139 = outer (10.000000) * inner (0.022222) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  0.027778, outer: 10.000000, inner: 0.022222, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.000139
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36870066
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.001022  Resp: 5.001022  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.001022 
     resc: 5.001022 resc_io: 3.000000 resc_cpu: 73774820
     resp: 5.001022 resp_io: 3.000000 resp_cpu: 73774820
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016317  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017299  Resp: 3.017299  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017299  
     resc: 3.017299 resc_io: 3.000000 resc_cpu: 637786
     resp: 3.017299 resp_io: 3.000000 resp_cpu: 637786
Join order aborted2: cost > best plan cost
***********************
Join order[6]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.833333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   7.833333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.833333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500027.849568 (cpu filter eval) (= 50.002785 (per row) * 10000.000000 (#rows))
                       =   2599428.169568
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 48.423450  Resp: 48.423450  Degree: 1
      Cost_io: 48.000000  Cost_cpu: 15612012
      Resp_io: 48.000000  Resp_cpu: 15612012
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.500000  resc_cpu: 1913671
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 52.311850  Resp: 52.311850  Degree: 1
      Cost_io: 52.000000  Cost_cpu: 11497469
      Resp_io: 52.000000  Resp_cpu: 11497469
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-06  ix_sel_with_filters: 1.1114e-08 
    NL Join : Cost: 7.001770  Resp: 7.001770  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 65241
      Resp_io: 7.000000  Resp_cpu: 65241

  Best NL cost: 7.001770 (VALID)
          resc: 7.001770  resc_io: 7.000000  resc_cpu: 65241
          resp: 7.001770  resp_io: 7.000000  resc_cpu: 65241
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.001111 = outer (10.000000) * inner (0.022222) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  0.222222, outer: 10.000000, inner: 0.022222, sel: 0.005001
Join Card - Rounded: 1 Computed: 0.001111
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :1
Join order[7]:  Z[Z]#1  Y[Y]#0  X[X]#2

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000392  Resp: 2.000392  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 5.001401  Resp: 5.001401  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 51650
      Resp_io: 5.000000  Resp_cpu: 51650
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000622  Resp: 4.000622  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 22924
      Resp_io: 4.000000  Resp_cpu: 22924
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000420  Resp: 2.000420  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15493
      Resp_io: 2.000000  Resp_cpu: 15493
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000420  Resp: 2.000420  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15493
      Resp_io: 2.000000  Resp_cpu: 15493

  Best NL cost: 2.000420 (VALID)
          resc: 2.000420  resc_io: 2.000000  resc_cpu: 15493
          resp: 2.000420  resp_io: 2.000000  resc_cpu: 15493
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.022222 = outer (0.022222) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.022222
  Outer table:  Z  Alias: Z
    resc: 2.000392  card 0.022222  bytes:   deg: 1  resp: 2.000392
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 5.000658  Resp: 5.000658  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000658 
     resc: 5.000658 resc_io: 3.000000 resc_cpu: 73761383
     resp: 5.000658 resp_io: 3.000000 resp_cpu: 73761383
  Outer table:  Z  Alias: Z
    resc: 2.000392  card 0.022222  bytes:   deg: 1  resp: 2.000392
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016928  Resp: 3.016928  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016928  
     resc: 3.016928 resc_io: 3.000000 resc_cpu: 624114
     resp: 3.016928 resp_io: 3.000000 resp_cpu: 624114
Best:: JoinMethod: NestedLoop
       Cost: 2.000420  Degree: 1  Resp: 2.000420  Card: 0.022222 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000420  Resp: 2.000420  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2064  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 660.897704 (cpu filter eval) (= 66.089770 (per row) * 10.000000 (#rows))
                       =   37968.097704
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001450  Resp: 5.001450  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 53461
      Resp_io: 5.000000  Resp_cpu: 53461
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8982
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000664  Resp: 4.000664  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24475
      Resp_io: 4.000000  Resp_cpu: 24475
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000650  Resp: 3.000650  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23963
      Resp_io: 3.000000  Resp_cpu: 23963
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 14443
    ix_sel: 0.055000  ix_sel_with_filters: 2.7506e-04 
    NL Join : Cost: 3.000815  Resp: 3.000815  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 30064
      Resp_io: 3.000000  Resp_cpu: 30064
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000650  Resp: 3.000650  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23963
      Resp_io: 3.000000  Resp_cpu: 23963

  Best NL cost: 3.000650 (VALID)
          resc: 3.000650  resc_io: 3.000000  resc_cpu: 23963
          resp: 3.000650  resp_io: 3.000000  resc_cpu: 23963
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.000139 = outer (0.022222) * inner (10.000000) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  0.027778, outer: 0.022222, inner: 10.000000, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.000139
  Outer table:  Y  Alias: Y
    resc: 2.000420  card 0.022222  bytes:   deg: 1  resp: 2.000420
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
  SM join: Resc: 5.000858  Resp: 5.000858  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000858 
     resc: 5.000858 resc_io: 3.000000 resc_cpu: 73768772
     resp: 5.000858 resp_io: 3.000000 resp_cpu: 73768772
  Outer table:  Y  Alias: Y
    resc: 2.000420  card 0.022222  bytes:   deg: 1  resp: 2.000420
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016294  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017133  Resp: 3.017133  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017133  
     resc: 3.017133 resc_io: 3.000000 resc_cpu: 631686
     resp: 3.017133 resp_io: 3.000000 resp_cpu: 631686
Join order aborted2: cost > best plan cost
***********************
Join order[8]:  Z[Z]#1  X[X]#2  Y[Y]#0

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000392  Resp: 2.000392  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 1287.181633 (cpu filter eval) (= 128.718163 (per row) * 10.000000 (#rows))
                       =   38594.381633
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001439  Resp: 5.001439  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 53037
      Resp_io: 5.000000  Resp_cpu: 53037
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9609
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000652  Resp: 4.000652  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24052
      Resp_io: 4.000000  Resp_cpu: 24052
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 15443
    ix_sel: 0.550000  ix_sel_with_filters: 0.002751 
    NL Join : Cost: 3.000831  Resp: 3.000831  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 30655
      Resp_io: 3.000000  Resp_cpu: 30655

  Best NL cost: 3.000831 (VALID)
          resc: 3.000831  resc_io: 3.000000  resc_cpu: 30655
          resp: 3.000831  resp_io: 3.000000  resc_cpu: 30655
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.001111 = outer (0.022222) * inner (10.000000) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  0.222222, outer: 0.022222, inner: 10.000000, sel: 0.005001
Join Card - Rounded: 1 Computed: 0.001111
Join order aborted2: cost > best plan cost
***********************
Join order[9]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   1.666667
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.666667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   1.666667
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 11.006474  Resp: 11.006474  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 238686
      Resp_io: 11.000000  Resp_cpu: 238686
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 0.500000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.001799  Resp: 4.001799  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 66332
      Resp_io: 4.000000  Resp_cpu: 66332
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743

  Best NL cost: 1.000590 (VALID)
          resc: 1.000590  resc_io: 1.000000  resc_cpu: 21743
          resp: 1.000590  resp_io: 1.000000  resc_cpu: 21743
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000709  Resp: 4.000709  [multiMatchCost=0.000005]
SM Join
  SM cost: 4.000709 
     resc: 4.000709 resc_io: 2.000000 resc_cpu: 73763282
     resp: 4.000709 resp_io: 2.000000 resp_cpu: 73763282
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016320  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016981  Resp: 2.016981  [multiMatchCost=0.000005]
HA Join
  HA cost: 2.016981  
     resc: 2.016981 resc_io: 2.000000 resc_cpu: 626064
     resp: 2.016981 resp_io: 2.000000 resp_cpu: 626064
Best:: JoinMethod: NestedLoop
       Cost: 1.000590  Degree: 1  Resp: 1.000590  Card: 10.000000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 1.000590  Resp: 1.000590  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.700000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.700000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.700000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.027822 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.347822
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 78.705642  Resp: 78.705642  Degree: 1
      Cost_io: 78.000000  Cost_cpu: 26015996
      Resp_io: 78.000000  Resp_cpu: 26015996
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.300000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 84.519641  Resp: 84.519641  Degree: 1
      Cost_io: 84.000000  Cost_cpu: 19158425
      Resp_io: 84.000000  Resp_cpu: 19158425
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003102  Resp: 11.003102  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114357
      Resp_io: 11.000000  Resp_cpu: 114357
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 1.1114e-12 
    NL Join : Cost: 11.002841  Resp: 11.002841  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 104740
      Resp_io: 11.000000  Resp_cpu: 104740
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003102  Resp: 11.003102  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114357
      Resp_io: 11.000000  Resp_cpu: 114357

  Best NL cost: 11.002841 (VALID)
          resc: 11.002841  resc_io: 11.000000  resc_cpu: 104740
          resp: 11.002841  resp_io: 11.000000  resc_cpu: 104740
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.000139 = outer (10.000000) * inner (0.022222) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  0.027778, outer: 10.000000, inner: 0.022222, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.000139
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36870066
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.001022  Resp: 5.001022  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.001022 
     resc: 5.001022 resc_io: 3.000000 resc_cpu: 73774820
     resp: 5.001022 resp_io: 3.000000 resp_cpu: 73774820
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016317  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017299  Resp: 3.017299  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017299  
     resc: 3.017299 resc_io: 3.000000 resc_cpu: 637786
     resp: 3.017299 resp_io: 3.000000 resp_cpu: 637786
Join order aborted2: cost > best plan cost
***********************
Join order[10]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.833333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   7.833333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.833333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500027.849568 (cpu filter eval) (= 50.002785 (per row) * 10000.000000 (#rows))
                       =   2599428.169568
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 48.423450  Resp: 48.423450  Degree: 1
      Cost_io: 48.000000  Cost_cpu: 15612012
      Resp_io: 48.000000  Resp_cpu: 15612012
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.500000  resc_cpu: 1913671
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 52.311850  Resp: 52.311850  Degree: 1
      Cost_io: 52.000000  Cost_cpu: 11497469
      Resp_io: 52.000000  Resp_cpu: 11497469
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-06  ix_sel_with_filters: 1.1114e-08 
    NL Join : Cost: 7.001770  Resp: 7.001770  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 65241
      Resp_io: 7.000000  Resp_cpu: 65241

  Best NL cost: 7.001770 (VALID)
          resc: 7.001770  resc_io: 7.000000  resc_cpu: 65241
          resp: 7.001770  resp_io: 7.000000  resc_cpu: 65241
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.001111 = outer (10.000000) * inner (0.022222) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  0.222222, outer: 10.000000, inner: 0.022222, sel: 0.005001
Join Card - Rounded: 1 Computed: 0.001111
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[11]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   1.666667
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.666667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   1.666667
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 11.006474  Resp: 11.006474  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 238686
      Resp_io: 11.000000  Resp_cpu: 238686
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 0.500000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.001799  Resp: 4.001799  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 66332
      Resp_io: 4.000000  Resp_cpu: 66332
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743

  Best NL cost: 1.000590 (VALID)
          resc: 1.000590  resc_io: 1.000000  resc_cpu: 21743
          resp: 1.000590  resp_io: 1.000000  resc_cpu: 21743
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000709  Resp: 4.000709  [multiMatchCost=0.000005]
SM Join
  SM cost: 4.000709 
     resc: 4.000709 resc_io: 2.000000 resc_cpu: 73763282
     resp: 4.000709 resp_io: 2.000000 resp_cpu: 73763282
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016320  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016981  Resp: 2.016981  [multiMatchCost=0.000005]
HA Join
  HA cost: 2.016981  
     resc: 2.016981 resc_io: 2.000000 resc_cpu: 626064
     resp: 2.016981 resp_io: 2.000000 resp_cpu: 626064
Best:: JoinMethod: NestedLoop
       Cost: 1.000590  Degree: 1  Resp: 1.000590  Card: 10.000000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 1.000590  Resp: 1.000590  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.700000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.700000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.700000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.027822 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.347822
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 78.705642  Resp: 78.705642  Degree: 1
      Cost_io: 78.000000  Cost_cpu: 26015996
      Resp_io: 78.000000  Resp_cpu: 26015996
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.300000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 84.519641  Resp: 84.519641  Degree: 1
      Cost_io: 84.000000  Cost_cpu: 19158425
      Resp_io: 84.000000  Resp_cpu: 19158425
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003102  Resp: 11.003102  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114357
      Resp_io: 11.000000  Resp_cpu: 114357
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 1.1114e-12 
    NL Join : Cost: 11.002841  Resp: 11.002841  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 104740
      Resp_io: 11.000000  Resp_cpu: 104740
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003102  Resp: 11.003102  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114357
      Resp_io: 11.000000  Resp_cpu: 114357

  Best NL cost: 11.002841 (VALID)
          resc: 11.002841  resc_io: 11.000000  resc_cpu: 104740
          resp: 11.002841  resp_io: 11.000000  resc_cpu: 104740
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.000139 = outer (10.000000) * inner (0.022222) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  0.027778, outer: 10.000000, inner: 0.022222, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.000139
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36870066
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.001022  Resp: 5.001022  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.001022 
     resc: 5.001022 resc_io: 3.000000 resc_cpu: 73774820
     resp: 5.001022 resp_io: 3.000000 resp_cpu: 73774820
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016317  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017299  Resp: 3.017299  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017299  
     resc: 3.017299 resc_io: 3.000000 resc_cpu: 637786
     resp: 3.017299 resp_io: 3.000000 resp_cpu: 637786
Join order aborted2: cost > best plan cost
***********************
Join order[12]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.833333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   7.833333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.833333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500027.849568 (cpu filter eval) (= 50.002785 (per row) * 10000.000000 (#rows))
                       =   2599428.169568
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 48.423450  Resp: 48.423450  Degree: 1
      Cost_io: 48.000000  Cost_cpu: 15612012
      Resp_io: 48.000000  Resp_cpu: 15612012
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.500000  resc_cpu: 1913671
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 52.311850  Resp: 52.311850  Degree: 1
      Cost_io: 52.000000  Cost_cpu: 11497469
      Resp_io: 52.000000  Resp_cpu: 11497469
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-06  ix_sel_with_filters: 1.1114e-08 
    NL Join : Cost: 7.001770  Resp: 7.001770  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 65241
      Resp_io: 7.000000  Resp_cpu: 65241

  Best NL cost: 7.001770 (VALID)
          resc: 7.001770  resc_io: 7.000000  resc_cpu: 65241
          resp: 7.001770  resp_io: 7.000000  resc_cpu: 65241
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.001111 = outer (10.000000) * inner (0.022222) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  0.222222, outer: 10.000000, inner: 0.022222, sel: 0.005001
Join Card - Rounded: 1 Computed: 0.001111
Join order aborted2: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
LORE: or-expansion-subheap (delete addr=0x7fd925c0ff60, in-use=64880, alloc=69040)
LORE: or-expansion is better cost:8.026464

LORE: ******** Same chain after expansion ********
****************
QUERY BLOCK TEXT
****************
select /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null
  from x join y  on y.id = x.id join z on z.id = y.id
  where  ( ( x.a = 0 AND z.b = 1               ) OR 
           ( x.a = 1 AND z.b = 0 AND z.c = 0  )   )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$9E43CB6E nbfros=3 flg=0
  fro(0): flg=0 objn=80828 hint_alias="X"@"SEL$1"
  fro(1): flg=0 objn=80831 hint_alias="Y"@"SEL$1"
  fro(2): flg=0 objn=80833 hint_alias="Z"@"SEL$2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3072 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table:  Z  Alias:  Z
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  28  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): B(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.050000 Min: 1.000000 Max: 10.000000
    Histogram: Freq  #Bkts: 10  UncompBkts: 10000  EndPtVals: 10  ActualVal: yes
  Column (#3): C(NUMBER)
    AvgLen: 3 NDV: 1 Nulls: 0 Density: 0.000050 Min: 1.000000 Max: 1.000000
    Histogram: Freq  #Bkts: 1  UncompBkts: 10000  EndPtVals: 1  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: Z_B_C  Col#: 2 3 1
  LVLS: 1  #LB: 30  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 210.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: Z_ID  Col#: 1
  LVLS: 1  #LB: 18  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  Y  Alias:  Y
  #Rows: 8  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  3.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 1.000000 Max: 8.000000
Index Stats::
  Index: Y_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 8  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 8.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  X  Alias:  X
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): A(NUMBER)
    AvgLen: 3 NDV: 2 Nulls: 0 Density: 0.250000 Min: 1.000000 Max: 2.000000
    Histogram: Freq  #Bkts: 2  UncompBkts: 10  EndPtVals: 2  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: X_A_ID  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: X_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$9E43CB6E (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for X
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for X[X] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE

 kkecdn: Single Table Predicate:"X"."A"=0 OR "X"."A"=1
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Table: X  Alias: X
    Card: Original: 10.000000  Rounded: 6  Computed: 5.500000  Non Adjusted: 5.500000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2064  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 975.000000 (cpu filter eval) (= 97.500000 (per row) * 10.000000 (#rows))
                       =   38282.200000
  Access Path: TableScan
    Cost:  3.001038  Resp: 3.001038  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 38282
      Resp_io: 3.000000  Resp_cpu: 38282
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9296
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000252  Resp: 2.000252  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9296
      Resp_io: 2.000000  Resp_cpu: 9296
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 15443
    ix_sel: 0.550000  ix_sel_with_filters: 0.550000 
    Cost: 1.000419  Resp: 1.000419  Degree: 1
  ****** trying bitmap/domain indexes ******
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 7321
    ix_sel: 0.050000  ix_sel_with_filters: 0.050000 
    Cost: 1.000199  Resp: 1.000199  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 7321
    ix_sel: 0.050000  ix_sel_with_filters: 0.050000 
    Cost: 1.000199  Resp: 1.000199  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  Bitmap nodes:
    Not used X_A_ID
      Cost = 2.000201, sel = 0.050000
    Used X_A_ID
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: X_A_ID
         Cost: 1.000419  Degree: 1  Resp: 1.000419  Card: 5.500000  Bytes: 0.000000

Access path analysis for Y
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Y[Y] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: Y  Alias: Y
    Card: Original: 8.000000  Rounded: 8  Computed: 8.000000  Non Adjusted: 8.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                       =   36807.200000
  Access Path: TableScan
    Cost:  3.000998  Resp: 3.000998  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 36807
      Resp_io: 3.000000  Resp_cpu: 36807
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8081
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000219  Resp: 2.000219  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 8081
      Resp_io: 2.000000  Resp_cpu: 8081
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 1
  ****** trying bitmap/domain indexes ******
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Y_ID
         Cost: 1.000237  Degree: 1  Resp: 1.000237  Card: 8.000000  Bytes: 0.000000

Access path analysis for Z
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Z[Z] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred


 kkecdn: Single Table Predicate:"Z"."C"=0
  Estimated selectivity: 5.0000e-05 , col: #3 

 kkecdn: Single Table Predicate:"Z"."B"=0
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Table: Z  Alias: Z
    Card: Original: 10000.000000  Rounded: 1  Computed: 0.022222  Non Adjusted: 0.022222
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.000000 (cpu filter eval) (= 50.002500 (per row) * 10000.000000 (#rows))
                       =   2599425.320000
  Access Path: TableScan
    Cost:  9.070505  Resp: 9.070505  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2599425
      Resp_io: 9.000000  Resp_cpu: 2599425
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.051905  Resp: 10.051905  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1913668
      Resp_io: 10.000000  Resp_cpu: 1913668
 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 2.2222e-06  ix_sel_with_filters: 2.2222e-06 
    Cost: 2.000392  Resp: 2.000392  Degree: 1
  ****** trying bitmap/domain indexes ******

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 2.2222e-06  ix_sel_with_filters: 2.2222e-06 
    Cost: 2.000392  Resp: 2.000392  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 4.000000  resc_cpu: 228486
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    Cost: 4.006197  Resp: 4.006197  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  Bitmap nodes:
    Used Z_B_C
      Cost = 3.000392, sel = 2.2222e-06
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Z_B_C
         Cost: 2.000392  Degree: 1  Resp: 2.000392  Card: 0.022222  Bytes: 0.000000

(newjo-restore) [1 0 2 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is OR expanded SEL$9E43CB6E (#0)
kkogast: Selectivities tab=Y[Y] tnum=0 astat=N 
  card=8.00 nrow=8.00 1.000000
kkogast: Selectivities tab=Z[Z] tnum=1 astat=N 
  card=0.02 nrow=10000.00 2.2222e-06
kkogast: Selectivities tab=X[X] tnum=2 astat=N 
  card=5.50 nrow=10.00 0.550000
kkogast: Best single table selectivities cnt=2
  Tab = 1 2
kkogast: Final Alternative Starting Tables cnt=2
  Tab = 1 2
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  Y[Y]#0  Z[Z]#1  X[X]#2

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.750000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.750000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.750000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.024975 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2599425.344975
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 63.564278  Resp: 63.564278  Degree: 1
      Cost_io: 63.000000  Cost_cpu: 20804124
      Resp_io: 63.000000  Resp_cpu: 20804124
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.250000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 67.415478  Resp: 67.415478  Degree: 1
      Cost_io: 67.000000  Cost_cpu: 15318067
      Resp_io: 67.000000  Resp_cpu: 15318067
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002246  Resp: 9.002246  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82813
      Resp_io: 9.000000  Resp_cpu: 82813
 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 2.2222e-10 
    NL Join : Cost: 9.002010  Resp: 9.002010  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 74093
      Resp_io: 9.000000  Resp_cpu: 74093
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002246  Resp: 9.002246  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82813
      Resp_io: 9.000000  Resp_cpu: 82813

  Best NL cost: 9.002010 (VALID)
          resc: 9.002010  resc_io: 9.000000  resc_cpu: 74093
          resp: 9.002010  resp_io: 9.000000  resc_cpu: 74093
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.022222 = outer (8.000000) * inner (0.022222) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.022222
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 4.000628  Resp: 4.000628  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000628 
     resc: 4.000628 resc_io: 3.000000 resc_cpu: 36891733
     resp: 4.000628 resp_io: 3.000000 resp_cpu: 36891733
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016309  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016938  Resp: 3.016938  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016938  
     resc: 3.016938 resc_io: 3.000000 resc_cpu: 624464
     resp: 3.016938 resp_io: 3.000000 resp_cpu: 624464
Best:: JoinMethod: Hash
       Cost: 3.016938  Degree: 1  Resp: 3.016938  Card: 0.022222 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.022222  Cost: 3.016938  Resp: 3.016938  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 660.897704 (cpu filter eval) (= 66.089770 (per row) * 10.000000 (#rows))
                       =   37968.097704
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 6.017967  Resp: 6.017967  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 662432
      Resp_io: 6.000000  Resp_cpu: 662432
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8982
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 5.017181  Resp: 5.017181  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 633447
      Resp_io: 5.000000  Resp_cpu: 633447
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.017167  Resp: 4.017167  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 632934
      Resp_io: 4.000000  Resp_cpu: 632934
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 14443
    ix_sel: 0.055000  ix_sel_with_filters: 2.7506e-04 
    NL Join : Cost: 4.017333  Resp: 4.017333  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 639035
      Resp_io: 4.000000  Resp_cpu: 639035
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.017167  Resp: 4.017167  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 632934
      Resp_io: 4.000000  Resp_cpu: 632934

  Best NL cost: 4.017167 (VALID)
          resc: 4.017167  resc_io: 4.000000  resc_cpu: 632934
          resp: 4.017167  resp_io: 4.000000  resc_cpu: 632934
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.000139 = outer (0.022222) * inner (10.000000) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  0.027778, outer: 0.022222, inner: 10.000000, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.000139
  Outer table:  Z  Alias: Z
    resc: 3.016938  card 0.022222  bytes:   deg: 1  resp: 3.016938
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
  SM join: Resc: 6.017375  Resp: 6.017375  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.017375 
     resc: 6.017375 resc_io: 4.000000 resc_cpu: 74377744
     resp: 6.017375 resp_io: 4.000000 resp_cpu: 74377744
  Outer table:  Z  Alias: Z
    resc: 3.016938  card 0.022222  bytes:   deg: 1  resp: 3.016938
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016294  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 4.033651  Resp: 4.033651  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.033651  
     resc: 4.033651 resc_io: 4.000000 resc_cpu: 1240657
     resp: 4.033651 resp_io: 4.000000 resp_cpu: 1240657
Best:: JoinMethod: NestedLoop
       Cost: 4.017167  Degree: 1  Resp: 4.017167  Card: 0.000139 Bytes: 
***********************
Best so far:  Table#: 0  cost: 1.000237  card: 8.000000  bytes: 24.000000
              Table#: 1  cost: 3.016938  card: 0.022222  bytes: 13.000000
              Table#: 2  cost: 4.017167  card: 0.000139  bytes: 19.000000
***********************
Join order[2]:  Y[Y]#0  X[X]#2  Z[Z]#1

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 621.875000 (cpu filter eval) (= 62.187500 (per row) * 10.000000 (#rows))
                       =   37929.075000
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 13.008467  Resp: 13.008467  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 312154
      Resp_io: 13.000000  Resp_cpu: 312154
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8943
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 5.002177  Resp: 5.002177  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 80268
      Resp_io: 5.000000  Resp_cpu: 80268
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8439
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002068  Resp: 9.002068  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 76233
      Resp_io: 9.000000  Resp_cpu: 76233
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 14443
    ix_sel: 0.055000  ix_sel_with_filters: 0.055000 
    NL Join : Cost: 9.003370  Resp: 9.003370  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 124264
      Resp_io: 9.000000  Resp_cpu: 124264
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8439
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002068  Resp: 9.002068  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 76233
      Resp_io: 9.000000  Resp_cpu: 76233

  Best NL cost: 9.002068 (VALID)
          resc: 9.002068  resc_io: 9.000000  resc_cpu: 76233
          resp: 9.002068  resp_io: 9.000000  resc_cpu: 76233
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (8.000000) * inner (10.000000) * sel (0.100000)
Join cardinality for NL:  8.000000, outer: 8.000000, inner: 10.000000, sel: 0.100000
Join cardinality without POSQ:  8.000000, outer: 8.000000, inner: 10.000000, sel: 0.100000
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
  SM join: Resc: 3.000680  Resp: 3.000680  [multiMatchCost=0.000005]
SM Join
  SM cost: 3.000680 
     resc: 3.000680 resc_io: 2.000000 resc_cpu: 36893632
     resp: 3.000680 resp_io: 2.000000 resp_cpu: 36893632
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016323  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016989  Resp: 2.016989  [multiMatchCost=0.000011]
HA Join
  HA cost: 2.016989  
     resc: 2.016989 resc_io: 2.000000 resc_cpu: 626364
     resp: 2.016989 resp_io: 2.000000 resp_cpu: 626364
Best:: JoinMethod: Hash
       Cost: 2.016989  Degree: 1  Resp: 2.016989  Card: 10.000000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 2.016989  Resp: 2.016989  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.700000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.700000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.700000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.027822 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.347822
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 79.722041  Resp: 79.722041  Degree: 1
      Cost_io: 79.000000  Cost_cpu: 26620618
      Resp_io: 79.000000  Resp_cpu: 26620618
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.300000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 85.536041  Resp: 85.536041  Degree: 1
      Cost_io: 85.000000  Cost_cpu: 19763047
      Resp_io: 85.000000  Resp_cpu: 19763047
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 12.019501  Resp: 12.019501  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 718979
      Resp_io: 12.000000  Resp_cpu: 718979
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 1.1114e-12 
    NL Join : Cost: 12.019240  Resp: 12.019240  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 709361
      Resp_io: 12.000000  Resp_cpu: 709361
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 12.019501  Resp: 12.019501  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 718979
      Resp_io: 12.000000  Resp_cpu: 718979

  Best NL cost: 12.019240 (VALID)
          resc: 12.019240  resc_io: 12.000000  resc_cpu: 709361
          resp: 12.019240  resp_io: 12.000000  resc_cpu: 709361
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.000139 = outer (10.000000) * inner (0.022222) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  0.027778, outer: 10.000000, inner: 0.022222, sel: 6.2514e-04
Join cardinality without POSQ:  0.000111, outer: 8.000000, inner: 0.022222, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.000139
  Outer table:  X  Alias: X
    resc: 2.016989  card 10.000000  bytes:   deg: 1  resp: 2.016989
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36870066
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 6.017421  Resp: 6.017421  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.017421 
     resc: 6.017421 resc_io: 4.000000 resc_cpu: 74379442
     resp: 6.017421 resp_io: 4.000000 resp_cpu: 74379442
  Outer table:  X  Alias: X
    resc: 2.016989  card 10.000000  bytes:   deg: 1  resp: 2.016989
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016317  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 4.033698  Resp: 4.033698  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.033698  
     resc: 4.033698 resc_io: 4.000000 resc_cpu: 1242407
     resp: 4.033698 resp_io: 4.000000 resp_cpu: 1242407
Plan cardinality mismatch: best card= 0.00013891960   curr card= 0.00011113568
Join order aborted2: cost > best plan cost
***********************
Join order[3]:  Z[Z]#1  Y[Y]#0  X[X]#2

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000392  Resp: 2.000392  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 5.001401  Resp: 5.001401  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 51650
      Resp_io: 5.000000  Resp_cpu: 51650
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000622  Resp: 4.000622  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 22924
      Resp_io: 4.000000  Resp_cpu: 22924
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000420  Resp: 2.000420  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15493
      Resp_io: 2.000000  Resp_cpu: 15493
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000420  Resp: 2.000420  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15493
      Resp_io: 2.000000  Resp_cpu: 15493

  Best NL cost: 2.000420 (VALID)
          resc: 2.000420  resc_io: 2.000000  resc_cpu: 15493
          resp: 2.000420  resp_io: 2.000000  resc_cpu: 15493
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.022222 = outer (0.022222) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.022222
  Outer table:  Z  Alias: Z
    resc: 2.000392  card 0.022222  bytes:   deg: 1  resp: 2.000392
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 5.000658  Resp: 5.000658  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000658 
     resc: 5.000658 resc_io: 3.000000 resc_cpu: 73761383
     resp: 5.000658 resp_io: 3.000000 resp_cpu: 73761383
  Outer table:  Z  Alias: Z
    resc: 2.000392  card 0.022222  bytes:   deg: 1  resp: 2.000392
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016928  Resp: 3.016928  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016928  
     resc: 3.016928 resc_io: 3.000000 resc_cpu: 624114
     resp: 3.016928 resp_io: 3.000000 resp_cpu: 624114
Best:: JoinMethod: NestedLoop
       Cost: 2.000420  Degree: 1  Resp: 2.000420  Card: 0.022222 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000420  Resp: 2.000420  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 660.897704 (cpu filter eval) (= 66.089770 (per row) * 10.000000 (#rows))
                       =   37968.097704
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001450  Resp: 5.001450  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 53461
      Resp_io: 5.000000  Resp_cpu: 53461
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8982
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000664  Resp: 4.000664  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24475
      Resp_io: 4.000000  Resp_cpu: 24475
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000650  Resp: 3.000650  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23963
      Resp_io: 3.000000  Resp_cpu: 23963
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 14443
    ix_sel: 0.055000  ix_sel_with_filters: 2.7506e-04 
    NL Join : Cost: 3.000815  Resp: 3.000815  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 30064
      Resp_io: 3.000000  Resp_cpu: 30064
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000650  Resp: 3.000650  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23963
      Resp_io: 3.000000  Resp_cpu: 23963

  Best NL cost: 3.000650 (VALID)
          resc: 3.000650  resc_io: 3.000000  resc_cpu: 23963
          resp: 3.000650  resp_io: 3.000000  resc_cpu: 23963
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.000139 = outer (0.022222) * inner (10.000000) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  0.027778, outer: 0.022222, inner: 10.000000, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.000139
  Outer table:  Y  Alias: Y
    resc: 2.000420  card 0.022222  bytes:   deg: 1  resp: 2.000420
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
  SM join: Resc: 5.000858  Resp: 5.000858  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000858 
     resc: 5.000858 resc_io: 3.000000 resc_cpu: 73768772
     resp: 5.000858 resp_io: 3.000000 resp_cpu: 73768772
  Outer table:  Y  Alias: Y
    resc: 2.000420  card 0.022222  bytes:   deg: 1  resp: 2.000420
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016294  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017133  Resp: 3.017133  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017133  
     resc: 3.017133 resc_io: 3.000000 resc_cpu: 631686
     resp: 3.017133 resp_io: 3.000000 resp_cpu: 631686
Best:: JoinMethod: NestedLoop
       Cost: 3.000650  Degree: 1  Resp: 3.000650  Card: 0.000139 Bytes: 
***********************
Best so far:  Table#: 1  cost: 2.000392  card: 0.022222  bytes: 10.000000
              Table#: 0  cost: 2.000420  card: 0.022222  bytes: 13.000000
              Table#: 2  cost: 3.000650  card: 0.000139  bytes: 19.000000
***********************
Join order[4]:  Z[Z]#1  X[X]#2  Y[Y]#0

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000392  Resp: 2.000392  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 1287.181633 (cpu filter eval) (= 128.718163 (per row) * 10.000000 (#rows))
                       =   38594.381633
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001439  Resp: 5.001439  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 53037
      Resp_io: 5.000000  Resp_cpu: 53037
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9609
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000652  Resp: 4.000652  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24052
      Resp_io: 4.000000  Resp_cpu: 24052
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 15443
    ix_sel: 0.550000  ix_sel_with_filters: 0.002751 
    NL Join : Cost: 3.000831  Resp: 3.000831  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 30655
      Resp_io: 3.000000  Resp_cpu: 30655

  Best NL cost: 3.000831 (VALID)
          resc: 3.000831  resc_io: 3.000000  resc_cpu: 30655
          resp: 3.000831  resp_io: 3.000000  resc_cpu: 30655
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.001111 = outer (0.022222) * inner (10.000000) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  0.222222, outer: 0.022222, inner: 10.000000, sel: 0.005001
Join Card - Rounded: 1 Computed: 0.001111
Join order aborted2: cost > best plan cost
***********************
Join order[5]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   1.666667
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.666667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   1.666667
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 11.006474  Resp: 11.006474  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 238686
      Resp_io: 11.000000  Resp_cpu: 238686
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 0.500000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.001799  Resp: 4.001799  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 66332
      Resp_io: 4.000000  Resp_cpu: 66332
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743

  Best NL cost: 1.000590 (VALID)
          resc: 1.000590  resc_io: 1.000000  resc_cpu: 21743
          resp: 1.000590  resp_io: 1.000000  resc_cpu: 21743
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000709  Resp: 4.000709  [multiMatchCost=0.000005]
SM Join
  SM cost: 4.000709 
     resc: 4.000709 resc_io: 2.000000 resc_cpu: 73763282
     resp: 4.000709 resp_io: 2.000000 resp_cpu: 73763282
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016320  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016981  Resp: 2.016981  [multiMatchCost=0.000005]
HA Join
  HA cost: 2.016981  
     resc: 2.016981 resc_io: 2.000000 resc_cpu: 626064
     resp: 2.016981 resp_io: 2.000000 resp_cpu: 626064
Best:: JoinMethod: NestedLoop
       Cost: 1.000590  Degree: 1  Resp: 1.000590  Card: 10.000000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 1.000590  Resp: 1.000590  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.700000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.700000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.700000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.027822 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.347822
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 78.705642  Resp: 78.705642  Degree: 1
      Cost_io: 78.000000  Cost_cpu: 26015996
      Resp_io: 78.000000  Resp_cpu: 26015996
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.300000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 84.519641  Resp: 84.519641  Degree: 1
      Cost_io: 84.000000  Cost_cpu: 19158425
      Resp_io: 84.000000  Resp_cpu: 19158425
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003102  Resp: 11.003102  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114357
      Resp_io: 11.000000  Resp_cpu: 114357
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 1.1114e-12 
    NL Join : Cost: 11.002841  Resp: 11.002841  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 104740
      Resp_io: 11.000000  Resp_cpu: 104740
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003102  Resp: 11.003102  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114357
      Resp_io: 11.000000  Resp_cpu: 114357

  Best NL cost: 11.002841 (VALID)
          resc: 11.002841  resc_io: 11.000000  resc_cpu: 104740
          resp: 11.002841  resp_io: 11.000000  resc_cpu: 104740
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.000139 = outer (10.000000) * inner (0.022222) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  0.027778, outer: 10.000000, inner: 0.022222, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.000139
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36870066
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.001022  Resp: 5.001022  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.001022 
     resc: 5.001022 resc_io: 3.000000 resc_cpu: 73774820
     resp: 5.001022 resp_io: 3.000000 resp_cpu: 73774820
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016317  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017299  Resp: 3.017299  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017299  
     resc: 3.017299 resc_io: 3.000000 resc_cpu: 637786
     resp: 3.017299 resp_io: 3.000000 resp_cpu: 637786
Join order aborted2: cost > best plan cost
***********************
Join order[6]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.833333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   7.833333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.833333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500027.849568 (cpu filter eval) (= 50.002785 (per row) * 10000.000000 (#rows))
                       =   2599428.169568
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 48.423450  Resp: 48.423450  Degree: 1
      Cost_io: 48.000000  Cost_cpu: 15612012
      Resp_io: 48.000000  Resp_cpu: 15612012
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.500000  resc_cpu: 1913671
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 52.311850  Resp: 52.311850  Degree: 1
      Cost_io: 52.000000  Cost_cpu: 11497469
      Resp_io: 52.000000  Resp_cpu: 11497469
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-06  ix_sel_with_filters: 1.1114e-08 
    NL Join : Cost: 7.001770  Resp: 7.001770  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 65241
      Resp_io: 7.000000  Resp_cpu: 65241

  Best NL cost: 7.001770 (VALID)
          resc: 7.001770  resc_io: 7.000000  resc_cpu: 65241
          resp: 7.001770  resp_io: 7.000000  resc_cpu: 65241
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.001111 = outer (10.000000) * inner (0.022222) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  0.222222, outer: 10.000000, inner: 0.022222, sel: 0.005001
Join Card - Rounded: 1 Computed: 0.001111
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :1
Join order[7]:  Z[Z]#1  Y[Y]#0  X[X]#2

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000392  Resp: 2.000392  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 5.001401  Resp: 5.001401  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 51650
      Resp_io: 5.000000  Resp_cpu: 51650
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000622  Resp: 4.000622  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 22924
      Resp_io: 4.000000  Resp_cpu: 22924
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000420  Resp: 2.000420  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15493
      Resp_io: 2.000000  Resp_cpu: 15493
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000420  Resp: 2.000420  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15493
      Resp_io: 2.000000  Resp_cpu: 15493

  Best NL cost: 2.000420 (VALID)
          resc: 2.000420  resc_io: 2.000000  resc_cpu: 15493
          resp: 2.000420  resp_io: 2.000000  resc_cpu: 15493
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.022222 = outer (0.022222) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.022222
  Outer table:  Z  Alias: Z
    resc: 2.000392  card 0.022222  bytes:   deg: 1  resp: 2.000392
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 5.000658  Resp: 5.000658  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000658 
     resc: 5.000658 resc_io: 3.000000 resc_cpu: 73761383
     resp: 5.000658 resp_io: 3.000000 resp_cpu: 73761383
  Outer table:  Z  Alias: Z
    resc: 2.000392  card 0.022222  bytes:   deg: 1  resp: 2.000392
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016928  Resp: 3.016928  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016928  
     resc: 3.016928 resc_io: 3.000000 resc_cpu: 624114
     resp: 3.016928 resp_io: 3.000000 resp_cpu: 624114
Best:: JoinMethod: NestedLoop
       Cost: 2.000420  Degree: 1  Resp: 2.000420  Card: 0.022222 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000420  Resp: 2.000420  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2064  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 660.897704 (cpu filter eval) (= 66.089770 (per row) * 10.000000 (#rows))
                       =   37968.097704
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001450  Resp: 5.001450  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 53461
      Resp_io: 5.000000  Resp_cpu: 53461
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8982
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000664  Resp: 4.000664  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24475
      Resp_io: 4.000000  Resp_cpu: 24475
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000650  Resp: 3.000650  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23963
      Resp_io: 3.000000  Resp_cpu: 23963
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 14443
    ix_sel: 0.055000  ix_sel_with_filters: 2.7506e-04 
    NL Join : Cost: 3.000815  Resp: 3.000815  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 30064
      Resp_io: 3.000000  Resp_cpu: 30064
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000650  Resp: 3.000650  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23963
      Resp_io: 3.000000  Resp_cpu: 23963

  Best NL cost: 3.000650 (VALID)
          resc: 3.000650  resc_io: 3.000000  resc_cpu: 23963
          resp: 3.000650  resp_io: 3.000000  resc_cpu: 23963
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.000139 = outer (0.022222) * inner (10.000000) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  0.027778, outer: 0.022222, inner: 10.000000, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.000139
  Outer table:  Y  Alias: Y
    resc: 2.000420  card 0.022222  bytes:   deg: 1  resp: 2.000420
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
  SM join: Resc: 5.000858  Resp: 5.000858  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000858 
     resc: 5.000858 resc_io: 3.000000 resc_cpu: 73768772
     resp: 5.000858 resp_io: 3.000000 resp_cpu: 73768772
  Outer table:  Y  Alias: Y
    resc: 2.000420  card 0.022222  bytes:   deg: 1  resp: 2.000420
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016294  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017133  Resp: 3.017133  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017133  
     resc: 3.017133 resc_io: 3.000000 resc_cpu: 631686
     resp: 3.017133 resp_io: 3.000000 resp_cpu: 631686
Join order aborted2: cost > best plan cost
***********************
Join order[8]:  Z[Z]#1  X[X]#2  Y[Y]#0

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000392  Resp: 2.000392  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 1287.181633 (cpu filter eval) (= 128.718163 (per row) * 10.000000 (#rows))
                       =   38594.381633
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001439  Resp: 5.001439  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 53037
      Resp_io: 5.000000  Resp_cpu: 53037
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9609
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000652  Resp: 4.000652  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24052
      Resp_io: 4.000000  Resp_cpu: 24052
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 15443
    ix_sel: 0.550000  ix_sel_with_filters: 0.002751 
    NL Join : Cost: 3.000831  Resp: 3.000831  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 30655
      Resp_io: 3.000000  Resp_cpu: 30655

  Best NL cost: 3.000831 (VALID)
          resc: 3.000831  resc_io: 3.000000  resc_cpu: 30655
          resp: 3.000831  resp_io: 3.000000  resc_cpu: 30655
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.001111 = outer (0.022222) * inner (10.000000) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  0.222222, outer: 0.022222, inner: 10.000000, sel: 0.005001
Join Card - Rounded: 1 Computed: 0.001111
Join order aborted2: cost > best plan cost
***********************
Join order[9]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   1.666667
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.666667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   1.666667
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 11.006474  Resp: 11.006474  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 238686
      Resp_io: 11.000000  Resp_cpu: 238686
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 0.500000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.001799  Resp: 4.001799  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 66332
      Resp_io: 4.000000  Resp_cpu: 66332
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743

  Best NL cost: 1.000590 (VALID)
          resc: 1.000590  resc_io: 1.000000  resc_cpu: 21743
          resp: 1.000590  resp_io: 1.000000  resc_cpu: 21743
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000709  Resp: 4.000709  [multiMatchCost=0.000005]
SM Join
  SM cost: 4.000709 
     resc: 4.000709 resc_io: 2.000000 resc_cpu: 73763282
     resp: 4.000709 resp_io: 2.000000 resp_cpu: 73763282
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016320  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016981  Resp: 2.016981  [multiMatchCost=0.000005]
HA Join
  HA cost: 2.016981  
     resc: 2.016981 resc_io: 2.000000 resc_cpu: 626064
     resp: 2.016981 resp_io: 2.000000 resp_cpu: 626064
Best:: JoinMethod: NestedLoop
       Cost: 1.000590  Degree: 1  Resp: 1.000590  Card: 10.000000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 1.000590  Resp: 1.000590  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.700000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.700000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.700000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.027822 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.347822
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 78.705642  Resp: 78.705642  Degree: 1
      Cost_io: 78.000000  Cost_cpu: 26015996
      Resp_io: 78.000000  Resp_cpu: 26015996
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.300000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 84.519641  Resp: 84.519641  Degree: 1
      Cost_io: 84.000000  Cost_cpu: 19158425
      Resp_io: 84.000000  Resp_cpu: 19158425
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003102  Resp: 11.003102  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114357
      Resp_io: 11.000000  Resp_cpu: 114357
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 1.1114e-12 
    NL Join : Cost: 11.002841  Resp: 11.002841  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 104740
      Resp_io: 11.000000  Resp_cpu: 104740
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003102  Resp: 11.003102  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114357
      Resp_io: 11.000000  Resp_cpu: 114357

  Best NL cost: 11.002841 (VALID)
          resc: 11.002841  resc_io: 11.000000  resc_cpu: 104740
          resp: 11.002841  resp_io: 11.000000  resc_cpu: 104740
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.000139 = outer (10.000000) * inner (0.022222) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  0.027778, outer: 10.000000, inner: 0.022222, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.000139
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36870066
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.001022  Resp: 5.001022  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.001022 
     resc: 5.001022 resc_io: 3.000000 resc_cpu: 73774820
     resp: 5.001022 resp_io: 3.000000 resp_cpu: 73774820
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016317  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017299  Resp: 3.017299  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017299  
     resc: 3.017299 resc_io: 3.000000 resc_cpu: 637786
     resp: 3.017299 resp_io: 3.000000 resp_cpu: 637786
Join order aborted2: cost > best plan cost
***********************
Join order[10]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.833333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   7.833333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.833333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500027.849568 (cpu filter eval) (= 50.002785 (per row) * 10000.000000 (#rows))
                       =   2599428.169568
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 48.423450  Resp: 48.423450  Degree: 1
      Cost_io: 48.000000  Cost_cpu: 15612012
      Resp_io: 48.000000  Resp_cpu: 15612012
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.500000  resc_cpu: 1913671
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 52.311850  Resp: 52.311850  Degree: 1
      Cost_io: 52.000000  Cost_cpu: 11497469
      Resp_io: 52.000000  Resp_cpu: 11497469
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-06  ix_sel_with_filters: 1.1114e-08 
    NL Join : Cost: 7.001770  Resp: 7.001770  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 65241
      Resp_io: 7.000000  Resp_cpu: 65241

  Best NL cost: 7.001770 (VALID)
          resc: 7.001770  resc_io: 7.000000  resc_cpu: 65241
          resp: 7.001770  resp_io: 7.000000  resc_cpu: 65241
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.001111 = outer (10.000000) * inner (0.022222) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  0.222222, outer: 10.000000, inner: 0.022222, sel: 0.005001
Join Card - Rounded: 1 Computed: 0.001111
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[11]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   1.666667
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.666667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   1.666667
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 11.006474  Resp: 11.006474  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 238686
      Resp_io: 11.000000  Resp_cpu: 238686
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 0.500000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.001799  Resp: 4.001799  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 66332
      Resp_io: 4.000000  Resp_cpu: 66332
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743

  Best NL cost: 1.000590 (VALID)
          resc: 1.000590  resc_io: 1.000000  resc_cpu: 21743
          resp: 1.000590  resp_io: 1.000000  resc_cpu: 21743
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000709  Resp: 4.000709  [multiMatchCost=0.000005]
SM Join
  SM cost: 4.000709 
     resc: 4.000709 resc_io: 2.000000 resc_cpu: 73763282
     resp: 4.000709 resp_io: 2.000000 resp_cpu: 73763282
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016320  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016981  Resp: 2.016981  [multiMatchCost=0.000005]
HA Join
  HA cost: 2.016981  
     resc: 2.016981 resc_io: 2.000000 resc_cpu: 626064
     resp: 2.016981 resp_io: 2.000000 resp_cpu: 626064
Best:: JoinMethod: NestedLoop
       Cost: 1.000590  Degree: 1  Resp: 1.000590  Card: 10.000000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 1.000590  Resp: 1.000590  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.700000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.700000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.700000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.027822 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.347822
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 78.705642  Resp: 78.705642  Degree: 1
      Cost_io: 78.000000  Cost_cpu: 26015996
      Resp_io: 78.000000  Resp_cpu: 26015996
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.300000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 84.519641  Resp: 84.519641  Degree: 1
      Cost_io: 84.000000  Cost_cpu: 19158425
      Resp_io: 84.000000  Resp_cpu: 19158425
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003102  Resp: 11.003102  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114357
      Resp_io: 11.000000  Resp_cpu: 114357
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 1.1114e-12 
    NL Join : Cost: 11.002841  Resp: 11.002841  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 104740
      Resp_io: 11.000000  Resp_cpu: 104740
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003102  Resp: 11.003102  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114357
      Resp_io: 11.000000  Resp_cpu: 114357

  Best NL cost: 11.002841 (VALID)
          resc: 11.002841  resc_io: 11.000000  resc_cpu: 104740
          resp: 11.002841  resp_io: 11.000000  resc_cpu: 104740
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.000139 = outer (10.000000) * inner (0.022222) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  0.027778, outer: 10.000000, inner: 0.022222, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.000139
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36870066
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.001022  Resp: 5.001022  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.001022 
     resc: 5.001022 resc_io: 3.000000 resc_cpu: 73774820
     resp: 5.001022 resp_io: 3.000000 resp_cpu: 73774820
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016317  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017299  Resp: 3.017299  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017299  
     resc: 3.017299 resc_io: 3.000000 resc_cpu: 637786
     resp: 3.017299 resp_io: 3.000000 resp_cpu: 637786
Join order aborted2: cost > best plan cost
***********************
Join order[12]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.833333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   7.833333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.833333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500027.849568 (cpu filter eval) (= 50.002785 (per row) * 10000.000000 (#rows))
                       =   2599428.169568
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 48.423450  Resp: 48.423450  Degree: 1
      Cost_io: 48.000000  Cost_cpu: 15612012
      Resp_io: 48.000000  Resp_cpu: 15612012
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.500000  resc_cpu: 1913671
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 52.311850  Resp: 52.311850  Degree: 1
      Cost_io: 52.000000  Cost_cpu: 11497469
      Resp_io: 52.000000  Resp_cpu: 11497469
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-06  ix_sel_with_filters: 1.1114e-08 
    NL Join : Cost: 7.001770  Resp: 7.001770  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 65241
      Resp_io: 7.000000  Resp_cpu: 65241

  Best NL cost: 7.001770 (VALID)
          resc: 7.001770  resc_io: 7.000000  resc_cpu: 65241
          resp: 7.001770  resp_io: 7.000000  resc_cpu: 65241
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.001111 = outer (10.000000) * inner (0.022222) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  0.222222, outer: 10.000000, inner: 0.022222, sel: 0.005001
Join Card - Rounded: 1 Computed: 0.001111
Join order aborted2: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
LORE: Trying or-Expansion on query block SEL$9E43CB6E (#0)

LORE: ******** Next OR predicate ********

LORE: Trying or-Expansion on query block SEL$9E43CB6E (#0) on OR chain:
id=0  predicate=("X"."A"=0 AND "Z"."B"=1 OR "X"."A"=1 AND "Z"."B"=0 AND "Z"."C"=0) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"

LORE: ******** OR-branching ********

LORE: or-expansion-subheap (create addr=0x7fd925c03e90)
****************
QUERY BLOCK TEXT
****************
select /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null
  from x join y  on y.id = x.id join z on z.id = y.id
  where  ( ( x.a = 0 AND z.b = 1               ) OR 
           ( x.a = 1 AND z.b = 0 AND z.c = 0  )   )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$9E43CB6E nbfros=3 flg=0
  fro(0): flg=0 objn=80828 hint_alias="X"@"SEL$1"
  fro(1): flg=0 objn=80831 hint_alias="Y"@"SEL$1"
  fro(2): flg=0 objn=80833 hint_alias="Z"@"SEL$2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3072 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table:  Z  Alias:  Z
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  28  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): B(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.050000 Min: 1.000000 Max: 10.000000
    Histogram: Freq  #Bkts: 10  UncompBkts: 10000  EndPtVals: 10  ActualVal: yes
  Column (#3): C(NUMBER)
    AvgLen: 3 NDV: 1 Nulls: 0 Density: 0.000050 Min: 1.000000 Max: 1.000000
    Histogram: Freq  #Bkts: 1  UncompBkts: 10000  EndPtVals: 1  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: Z_B_C  Col#: 2 3 1
  LVLS: 1  #LB: 30  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 210.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: Z_ID  Col#: 1
  LVLS: 1  #LB: 18  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  Y  Alias:  Y
  #Rows: 8  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  3.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 1.000000 Max: 8.000000
Index Stats::
  Index: Y_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 8  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 8.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  X  Alias:  X
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): A(NUMBER)
    AvgLen: 3 NDV: 2 Nulls: 0 Density: 0.250000 Min: 1.000000 Max: 2.000000
    Histogram: Freq  #Bkts: 2  UncompBkts: 10  EndPtVals: 2  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: X_A_ID  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: X_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$9E43CB6E (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for X
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for X[X] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE


 kkecdn: Single Table Predicate:"X"."A"=0 OR "X"."A"=1
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

 kkecdn: Single Table Predicate:"X"."A"=0
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Table: X  Alias: X
    Card: Original: 10.000000  Rounded: 1  Computed: 0.275000  Non Adjusted: 0.275000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2064  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 548.750000 (cpu filter eval) (= 54.875000 (per row) * 10.000000 (#rows))
                       =   37855.950000
  Access Path: TableScan
    Cost:  3.001027  Resp: 3.001027  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 37856
      Resp_io: 3.000000  Resp_cpu: 37856
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8870
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000241  Resp: 2.000241  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 8870
      Resp_io: 2.000000  Resp_cpu: 8870
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 7321
    ix_sel: 0.050000  ix_sel_with_filters: 0.027500 
    Cost: 1.000201  Resp: 1.000201  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: X_A_ID
         Cost: 1.000201  Degree: 1  Resp: 1.000201  Card: 0.275000  Bytes: 0.000000

Access path analysis for Y
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Y[Y] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: Y  Alias: Y
    Card: Original: 8.000000  Rounded: 8  Computed: 8.000000  Non Adjusted: 8.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                       =   36807.200000
  Access Path: TableScan
    Cost:  3.000998  Resp: 3.000998  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 36807
      Resp_io: 3.000000  Resp_cpu: 36807
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8081
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000219  Resp: 2.000219  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 8081
      Resp_io: 2.000000  Resp_cpu: 8081
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 1
  ****** trying bitmap/domain indexes ******
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Y_ID
         Cost: 1.000237  Degree: 1  Resp: 1.000237  Card: 8.000000  Bytes: 0.000000

Access path analysis for Z
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Z[Z] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred


 kkecdn: Single Table Predicate:"Z"."C"=0
  Estimated selectivity: 5.0000e-05 , col: #3 

 kkecdn: Single Table Predicate:"Z"."B"=0
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"Z"."B"=1
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Table: Z  Alias: Z
    Card: Original: 10000.000000  Rounded: 1  Computed: 0.000000  Non Adjusted: 0.000000
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500026.111111 (cpu filter eval) (= 50.002611 (per row) * 10000.000000 (#rows))
                       =   2599426.431111
  Access Path: TableScan
    Cost:  9.070505  Resp: 9.070505  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2599426
      Resp_io: 9.000000  Resp_cpu: 2599426
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1913669
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.051905  Resp: 10.051905  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1913669
      Resp_io: 10.000000  Resp_cpu: 1913669
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 5.0000e-06  ix_sel_with_filters: 2.2222e-07 
    Cost: 2.000393  Resp: 2.000393  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Z_B_C
         Cost: 2.000393  Degree: 1  Resp: 2.000393  Card: 0.000000  Bytes: 0.000000

(newjo-restore) [1 0 2 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is OR expanded SEL$9E43CB6E (#0)
kkogast: Selectivities tab=Y[Y] tnum=0 astat=N 
  card=8.00 nrow=8.00 1.000000
kkogast: Selectivities tab=Z[Z] tnum=1 astat=N 
  card=0.00 nrow=10000.00 1.0000e-13
kkogast: Selectivities tab=X[X] tnum=2 astat=N 
  card=0.28 nrow=10.00 0.027500
kkogast: Best single table selectivities cnt=2
  Tab = 1 2
kkogast: Final Alternative Starting Tables cnt=2
  Tab = 1 2
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  Y[Y]#0  Z[Z]#1  X[X]#2

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.750000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2080  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.750000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.750000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.026085 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.346085
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 63.564278  Resp: 63.564278  Degree: 1
      Cost_io: 63.000000  Cost_cpu: 20804124
      Resp_io: 63.000000  Resp_cpu: 20804124
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.250000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 67.415478  Resp: 67.415478  Degree: 1
      Cost_io: 67.000000  Cost_cpu: 15318067
      Resp_io: 67.000000  Resp_cpu: 15318067
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002246  Resp: 9.002246  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82813
      Resp_io: 9.000000  Resp_cpu: 82813
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-10  ix_sel_with_filters: 2.2222e-11 
    NL Join : Cost: 9.002021  Resp: 9.002021  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 74493
      Resp_io: 9.000000  Resp_cpu: 74493
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002246  Resp: 9.002246  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82813
      Resp_io: 9.000000  Resp_cpu: 82813

  Best NL cost: 9.002021 (VALID)
          resc: 9.002021  resc_io: 9.000000  resc_cpu: 74493
          resp: 9.002021  resp_io: 9.000000  resc_cpu: 74493
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (8.000000) * inner (0.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 4.000630  Resp: 4.000630  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000630 
     resc: 4.000630 resc_io: 3.000000 resc_cpu: 36891783
     resp: 4.000630 resp_io: 3.000000 resp_cpu: 36891783
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016309  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016939  Resp: 3.016939  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016939  
     resc: 3.016939 resc_io: 3.000000 resc_cpu: 624514
     resp: 3.016939 resp_io: 3.000000 resp_cpu: 624514
Best:: JoinMethod: Hash
       Cost: 3.016939  Degree: 1  Resp: 3.016939  Card: 0.000000 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.000000  Cost: 3.016939  Resp: 3.016939  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2064  ("X"."A"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 531.093750 (cpu filter eval) (= 53.109375 (per row) * 10.000000 (#rows))
                       =   37838.293750
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 6.017965  Resp: 6.017965  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 662353
      Resp_io: 6.000000  Resp_cpu: 662353
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8853
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 5.017179  Resp: 5.017179  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 633367
      Resp_io: 5.000000  Resp_cpu: 633367
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8396
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.017167  Resp: 4.017167  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 632911
      Resp_io: 4.000000  Resp_cpu: 632911
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.005000  ix_sel_with_filters: 0.002750 
    NL Join : Cost: 3.016970  Resp: 3.016970  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 625662
      Resp_io: 3.000000  Resp_cpu: 625662
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8396
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.017167  Resp: 4.017167  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 632911
      Resp_io: 4.000000  Resp_cpu: 632911

  Best NL cost: 3.016970 (VALID)
          resc: 3.016970  resc_io: 3.000000  resc_cpu: 625662
          resp: 3.016970  resp_io: 3.000000  resc_cpu: 625662
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (0.500000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Z  Alias: Z
    resc: 3.016939  card 0.000000  bytes:   deg: 1  resp: 3.016939
  Inner table:  X  Alias: X
    resc: 1.000201  card: 0.275000  bytes:   deg: 1  resp: 1.000201
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 6.017140  Resp: 6.017140  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.017140 
     resc: 6.017140 resc_io: 4.000000 resc_cpu: 74369071
     resp: 6.017140 resp_io: 4.000000 resp_cpu: 74369071
  Outer table:  Z  Alias: Z
    resc: 3.016939  card 0.000000  bytes:   deg: 1  resp: 3.016939
  Inner table:  X  Alias: X
    resc: 1.000201  card: 0.275000  bytes:   deg: 1  resp: 1.000201
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016281  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 4.033421  Resp: 4.033421  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.033421  
     resc: 4.033421 resc_io: 4.000000 resc_cpu: 1232183
     resp: 4.033421 resp_io: 4.000000 resp_cpu: 1232183
Best:: JoinMethod: NestedLoop
       Cost: 3.016970  Degree: 1  Resp: 3.016970  Card: 0.000000 Bytes: 
***********************
Best so far:  Table#: 0  cost: 1.000237  card: 8.000000  bytes: 24.000000
              Table#: 1  cost: 3.016939  card: 0.000000  bytes: 13.000000
              Table#: 2  cost: 3.016970  card: 0.000000  bytes: 19.000000
***********************
Join order[2]:  Y[Y]#0  X[X]#2  Z[Z]#1

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 531.093750 (cpu filter eval) (= 53.109375 (per row) * 10.000000 (#rows))
                       =   37838.293750
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 13.008447  Resp: 13.008447  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 311428
      Resp_io: 13.000000  Resp_cpu: 311428
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8853
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 5.002157  Resp: 5.002157  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 79542
      Resp_io: 5.000000  Resp_cpu: 79542
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8396
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002058  Resp: 9.002058  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 75892
      Resp_io: 9.000000  Resp_cpu: 75892
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.005000  ix_sel_with_filters: 0.002750 
    NL Join : Cost: 1.000486  Resp: 1.000486  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 17901
      Resp_io: 1.000000  Resp_cpu: 17901
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8396
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002058  Resp: 9.002058  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 75892
      Resp_io: 9.000000  Resp_cpu: 75892

  Best NL cost: 1.000486 (VALID)
          resc: 1.000486  resc_io: 1.000000  resc_cpu: 17901
          resp: 1.000486  resp_io: 1.000000  resc_cpu: 17901
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.500000 = outer (8.000000) * inner (0.500000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.500000
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000201  card: 0.275000  bytes:   deg: 1  resp: 1.000201
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 3.000438  Resp: 3.000438  [multiMatchCost=0.000000]
SM Join
  SM cost: 3.000438 
     resc: 3.000438 resc_io: 2.000000 resc_cpu: 36884709
     resp: 3.000438 resp_io: 2.000000 resp_cpu: 36884709
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000201  card: 0.275000  bytes:   deg: 1  resp: 1.000201
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016309  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016747  Resp: 2.016747  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016747  
     resc: 2.016747 resc_io: 2.000000 resc_cpu: 617440
     resp: 2.016747 resp_io: 2.000000 resp_cpu: 617440
Best:: JoinMethod: NestedLoop
       Cost: 1.000486  Degree: 1  Resp: 1.000486  Card: 0.500000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.500000  Cost: 1.000486  Resp: 1.000486  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.026085 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.346085
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.070991  Resp: 10.070991  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2617327
      Resp_io: 10.000000  Resp_cpu: 2617327
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.052391  Resp: 11.052391  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1931570
      Resp_io: 11.000000  Resp_cpu: 1931570
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000737  Resp: 2.000737  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 27163
      Resp_io: 2.000000  Resp_cpu: 27163
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-10  ix_sel_with_filters: 2.2222e-11 
    NL Join : Cost: 2.000709  Resp: 2.000709  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 26123
      Resp_io: 2.000000  Resp_cpu: 26123
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000737  Resp: 2.000737  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 27163
      Resp_io: 2.000000  Resp_cpu: 27163

  Best NL cost: 2.000709 (VALID)
          resc: 2.000709  resc_io: 2.000000  resc_cpu: 26123
          resp: 2.000709  resp_io: 2.000000  resc_cpu: 26123
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.500000) * inner (0.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  X  Alias: X
    resc: 1.000486  card 0.500000  bytes:   deg: 1  resp: 1.000486
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 4.000879  Resp: 4.000879  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000879 
     resc: 4.000879 resc_io: 3.000000 resc_cpu: 36900963
     resp: 4.000879 resp_io: 3.000000 resp_cpu: 36900963
  Outer table:  X  Alias: X
    resc: 1.000486  card 0.500000  bytes:   deg: 1  resp: 1.000486
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016281  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017159  Resp: 3.017159  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017159  
     resc: 3.017159 resc_io: 3.000000 resc_cpu: 632644
     resp: 3.017159 resp_io: 3.000000 resp_cpu: 632644
Best:: JoinMethod: NestedLoop
       Cost: 2.000709  Degree: 1  Resp: 2.000709  Card: 0.000000 Bytes: 
***********************
Best so far:  Table#: 0  cost: 1.000237  card: 8.000000  bytes: 24.000000
              Table#: 2  cost: 1.000486  card: 0.500000  bytes: 9.000000
              Table#: 1  cost: 2.000709  card: 0.000000  bytes: 19.000000
***********************
Join order[3]:  Z[Z]#1  Y[Y]#0  X[X]#2

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000393  Resp: 2.000393  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 5.001402  Resp: 5.001402  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 51700
      Resp_io: 5.000000  Resp_cpu: 51700
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000623  Resp: 4.000623  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 22974
      Resp_io: 4.000000  Resp_cpu: 22974
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000422  Resp: 2.000422  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15543
      Resp_io: 2.000000  Resp_cpu: 15543
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000422  Resp: 2.000422  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15543
      Resp_io: 2.000000  Resp_cpu: 15543

  Best NL cost: 2.000422 (VALID)
          resc: 2.000422  resc_io: 2.000000  resc_cpu: 15543
          resp: 2.000422  resp_io: 2.000000  resc_cpu: 15543
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Z  Alias: Z
    resc: 2.000393  card 0.000000  bytes:   deg: 1  resp: 2.000393
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 5.000659  Resp: 5.000659  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000659 
     resc: 5.000659 resc_io: 3.000000 resc_cpu: 73761433
     resp: 5.000659 resp_io: 3.000000 resp_cpu: 73761433
  Outer table:  Z  Alias: Z
    resc: 2.000393  card 0.000000  bytes:   deg: 1  resp: 2.000393
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016929  Resp: 3.016929  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016929  
     resc: 3.016929 resc_io: 3.000000 resc_cpu: 624164
     resp: 3.016929 resp_io: 3.000000 resp_cpu: 624164
Best:: JoinMethod: NestedLoop
       Cost: 2.000422  Degree: 1  Resp: 2.000422  Card: 0.000000 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000422  Resp: 2.000422  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 531.093750 (cpu filter eval) (= 53.109375 (per row) * 10.000000 (#rows))
                       =   37838.293750
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001448  Resp: 5.001448  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 53381
      Resp_io: 5.000000  Resp_cpu: 53381
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8853
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000662  Resp: 4.000662  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24395
      Resp_io: 4.000000  Resp_cpu: 24395
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8396
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000649  Resp: 3.000649  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23939
      Resp_io: 3.000000  Resp_cpu: 23939
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.005000  ix_sel_with_filters: 0.002750 
    NL Join : Cost: 2.000453  Resp: 2.000453  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16690
      Resp_io: 2.000000  Resp_cpu: 16690
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8396
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000649  Resp: 3.000649  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23939
      Resp_io: 3.000000  Resp_cpu: 23939

  Best NL cost: 2.000453 (VALID)
          resc: 2.000453  resc_io: 2.000000  resc_cpu: 16690
          resp: 2.000453  resp_io: 2.000000  resc_cpu: 16690
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (0.500000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 2.000422  card 0.000000  bytes:   deg: 1  resp: 2.000422
  Inner table:  X  Alias: X
    resc: 1.000201  card: 0.275000  bytes:   deg: 1  resp: 1.000201
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.000623  Resp: 5.000623  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000623 
     resc: 5.000623 resc_io: 3.000000 resc_cpu: 73760100
     resp: 5.000623 resp_io: 3.000000 resp_cpu: 73760100
  Outer table:  Y  Alias: Y
    resc: 2.000422  card 0.000000  bytes:   deg: 1  resp: 2.000422
  Inner table:  X  Alias: X
    resc: 1.000201  card: 0.275000  bytes:   deg: 1  resp: 1.000201
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016281  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016904  Resp: 3.016904  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016904  
     resc: 3.016904 resc_io: 3.000000 resc_cpu: 623212
     resp: 3.016904 resp_io: 3.000000 resp_cpu: 623212
Best:: JoinMethod: NestedLoop
       Cost: 2.000453  Degree: 1  Resp: 2.000453  Card: 0.000000 Bytes: 
***********************
Best so far:  Table#: 1  cost: 2.000393  card: 0.000000  bytes: 10.000000
              Table#: 0  cost: 2.000422  card: 0.000000  bytes: 13.000000
              Table#: 2  cost: 2.000453  card: 0.000000  bytes: 19.000000
***********************
Join order[4]:  Z[Z]#1  X[X]#2  Y[Y]#0

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000393  Resp: 2.000393  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 548.750000 (cpu filter eval) (= 54.875000 (per row) * 10.000000 (#rows))
                       =   37855.950000
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001420  Resp: 5.001420  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 52349
      Resp_io: 5.000000  Resp_cpu: 52349
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8870
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000634  Resp: 4.000634  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23363
      Resp_io: 4.000000  Resp_cpu: 23363
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 7321
    ix_sel: 0.050000  ix_sel_with_filters: 0.027500 
    NL Join : Cost: 3.000594  Resp: 3.000594  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 21912
      Resp_io: 3.000000  Resp_cpu: 21912

  Best NL cost: 3.000594 (VALID)
          resc: 3.000594  resc_io: 3.000000  resc_cpu: 21912
          resp: 3.000594  resp_io: 3.000000  resc_cpu: 21912
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (0.500000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Join order aborted2: cost > best plan cost
***********************
Join order[5]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 4.001210  Resp: 4.001210  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 44626
      Resp_io: 4.000000  Resp_cpu: 44626
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 3.000431  Resp: 3.000431  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 15900
      Resp_io: 3.000000  Resp_cpu: 15900
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469

  Best NL cost: 1.000230 (VALID)
          resc: 1.000230  resc_io: 1.000000  resc_cpu: 8469
          resp: 1.000230  resp_io: 1.000000  resc_cpu: 8469
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.500000 = outer (0.500000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.500000
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000467  Resp: 4.000467  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000467 
     resc: 4.000467 resc_io: 2.000000 resc_cpu: 73754360
     resp: 4.000467 resp_io: 2.000000 resp_cpu: 73754360
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016738  Resp: 2.016738  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016738  
     resc: 2.016738 resc_io: 2.000000 resc_cpu: 617090
     resp: 2.016738 resp_io: 2.000000 resp_cpu: 617090
Best:: JoinMethod: NestedLoop
       Cost: 1.000230  Degree: 1  Resp: 1.000230  Card: 0.500000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.500000  Cost: 1.000230  Resp: 1.000230  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.026085 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.346085
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.070735  Resp: 10.070735  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2607894
      Resp_io: 10.000000  Resp_cpu: 2607894
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.052135  Resp: 11.052135  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1922137
      Resp_io: 11.000000  Resp_cpu: 1922137
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17730
      Resp_io: 2.000000  Resp_cpu: 17730
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-10  ix_sel_with_filters: 2.2222e-11 
    NL Join : Cost: 2.000453  Resp: 2.000453  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16690
      Resp_io: 2.000000  Resp_cpu: 16690
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17730
      Resp_io: 2.000000  Resp_cpu: 17730

  Best NL cost: 2.000453 (VALID)
          resc: 2.000453  resc_io: 2.000000  resc_cpu: 16690
          resp: 2.000453  resp_io: 2.000000  resc_cpu: 16690
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.500000) * inner (0.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.500000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.000623  Resp: 5.000623  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000623 
     resc: 5.000623 resc_io: 3.000000 resc_cpu: 73760100
     resp: 5.000623 resp_io: 3.000000 resp_cpu: 73760100
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.500000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016281  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016904  Resp: 3.016904  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016904  
     resc: 3.016904 resc_io: 3.000000 resc_cpu: 623212
     resp: 3.016904 resp_io: 3.000000 resp_cpu: 623212
Best:: JoinMethod: NestedLoop
       Cost: 2.000453  Degree: 1  Resp: 2.000453  Card: 0.000000 Bytes: 
***********************
Best so far:  Table#: 2  cost: 1.000201  card: 0.275000  bytes: 6.000000
              Table#: 0  cost: 1.000230  card: 0.500000  bytes: 9.000000
              Table#: 1  cost: 2.000453  card: 0.000000  bytes: 19.000000
***********************
Join order[6]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500026.111111 (cpu filter eval) (= 50.002611 (per row) * 10000.000000 (#rows))
                       =   2599426.431111
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.070706  Resp: 10.070706  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2606845
      Resp_io: 10.000000  Resp_cpu: 2606845
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1913669
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.052106  Resp: 11.052106  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1921088
      Resp_io: 11.000000  Resp_cpu: 1921088
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-06  ix_sel_with_filters: 2.2222e-07 
    NL Join : Cost: 2.000424  Resp: 2.000424  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15640
      Resp_io: 2.000000  Resp_cpu: 15640

  Best NL cost: 2.000424 (VALID)
          resc: 2.000424  resc_io: 2.000000  resc_cpu: 15640
          resp: 2.000424  resp_io: 2.000000  resc_cpu: 15640
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.500000) * inner (0.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Best:: JoinMethod: NestedLoop
       Cost: 2.000424  Degree: 1  Resp: 2.000424  Card: 0.000000 Bytes: 

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000424  Resp: 2.000424  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.399600 (cpu filter eval) (= 50.049950 (per row) * 8.000000 (#rows))
                       =   37207.599600
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 5.001433  Resp: 5.001433  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 52848
      Resp_io: 5.000000  Resp_cpu: 52848
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8482
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000654  Resp: 4.000654  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24122
      Resp_io: 4.000000  Resp_cpu: 24122
kkotap: kkoSkipNL returns TRUE
kkofmx: filter for index: Y_ID
kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000454  Resp: 2.000454  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16740
      Resp_io: 2.000000  Resp_cpu: 16740
kkofmx: filter for index: Y_ID
kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.015625 
    NL Join : Cost: 2.000454  Resp: 2.000454  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16740
      Resp_io: 2.000000  Resp_cpu: 16740

  Best NL cost: 2.000454 (VALID)
          resc: 2.000454  resc_io: 2.000000  resc_cpu: 16740
          resp: 2.000454  resp_io: 2.000000  resc_cpu: 16740
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (8.000000) * sel (0.015625)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Z  Alias: Z
    resc: 2.000424  card 0.000000  bytes:   deg: 1  resp: 2.000424
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 5.000690  Resp: 5.000690  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000690 
     resc: 5.000690 resc_io: 3.000000 resc_cpu: 73762581
     resp: 5.000690 resp_io: 3.000000 resp_cpu: 73762581
  Outer table:  Z  Alias: Z
    resc: 2.000424  card 0.000000  bytes:   deg: 1  resp: 2.000424
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016961  Resp: 3.016961  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016961  
     resc: 3.016961 resc_io: 3.000000 resc_cpu: 625312
     resp: 3.016961 resp_io: 3.000000 resp_cpu: 625312
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :1
Join order[7]:  Z[Z]#1  Y[Y]#0  X[X]#2

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000393  Resp: 2.000393  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2080  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 5.001402  Resp: 5.001402  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 51700
      Resp_io: 5.000000  Resp_cpu: 51700
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000623  Resp: 4.000623  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 22974
      Resp_io: 4.000000  Resp_cpu: 22974
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000422  Resp: 2.000422  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15543
      Resp_io: 2.000000  Resp_cpu: 15543
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000422  Resp: 2.000422  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15543
      Resp_io: 2.000000  Resp_cpu: 15543

  Best NL cost: 2.000422 (VALID)
          resc: 2.000422  resc_io: 2.000000  resc_cpu: 15543
          resp: 2.000422  resp_io: 2.000000  resc_cpu: 15543
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Z  Alias: Z
    resc: 2.000393  card 0.000000  bytes:   deg: 1  resp: 2.000393
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 5.000659  Resp: 5.000659  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000659 
     resc: 5.000659 resc_io: 3.000000 resc_cpu: 73761433
     resp: 5.000659 resp_io: 3.000000 resp_cpu: 73761433
  Outer table:  Z  Alias: Z
    resc: 2.000393  card 0.000000  bytes:   deg: 1  resp: 2.000393
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016929  Resp: 3.016929  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016929  
     resc: 3.016929 resc_io: 3.000000 resc_cpu: 624164
     resp: 3.016929 resp_io: 3.000000 resp_cpu: 624164
Best:: JoinMethod: NestedLoop
       Cost: 2.000422  Degree: 1  Resp: 2.000422  Card: 0.000000 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000422  Resp: 2.000422  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2064  ("X"."A"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 531.093750 (cpu filter eval) (= 53.109375 (per row) * 10.000000 (#rows))
                       =   37838.293750
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001448  Resp: 5.001448  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 53381
      Resp_io: 5.000000  Resp_cpu: 53381
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8853
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000662  Resp: 4.000662  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24395
      Resp_io: 4.000000  Resp_cpu: 24395
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8396
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000649  Resp: 3.000649  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23939
      Resp_io: 3.000000  Resp_cpu: 23939
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.005000  ix_sel_with_filters: 0.002750 
    NL Join : Cost: 2.000453  Resp: 2.000453  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16690
      Resp_io: 2.000000  Resp_cpu: 16690
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8396
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000649  Resp: 3.000649  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23939
      Resp_io: 3.000000  Resp_cpu: 23939

  Best NL cost: 2.000453 (VALID)
          resc: 2.000453  resc_io: 2.000000  resc_cpu: 16690
          resp: 2.000453  resp_io: 2.000000  resc_cpu: 16690
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (0.500000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 2.000422  card 0.000000  bytes:   deg: 1  resp: 2.000422
  Inner table:  X  Alias: X
    resc: 1.000201  card: 0.275000  bytes:   deg: 1  resp: 1.000201
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.000623  Resp: 5.000623  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000623 
     resc: 5.000623 resc_io: 3.000000 resc_cpu: 73760100
     resp: 5.000623 resp_io: 3.000000 resp_cpu: 73760100
  Outer table:  Y  Alias: Y
    resc: 2.000422  card 0.000000  bytes:   deg: 1  resp: 2.000422
  Inner table:  X  Alias: X
    resc: 1.000201  card: 0.275000  bytes:   deg: 1  resp: 1.000201
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016281  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016904  Resp: 3.016904  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016904  
     resc: 3.016904 resc_io: 3.000000 resc_cpu: 623212
     resp: 3.016904 resp_io: 3.000000 resp_cpu: 623212
Join order aborted2: cost > best plan cost
***********************
Join order[8]:  Z[Z]#1  X[X]#2  Y[Y]#0

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000393  Resp: 2.000393  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 548.750000 (cpu filter eval) (= 54.875000 (per row) * 10.000000 (#rows))
                       =   37855.950000
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001420  Resp: 5.001420  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 52349
      Resp_io: 5.000000  Resp_cpu: 52349
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8870
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000634  Resp: 4.000634  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23363
      Resp_io: 4.000000  Resp_cpu: 23363
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 7321
    ix_sel: 0.050000  ix_sel_with_filters: 0.027500 
    NL Join : Cost: 3.000594  Resp: 3.000594  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 21912
      Resp_io: 3.000000  Resp_cpu: 21912

  Best NL cost: 3.000594 (VALID)
          resc: 3.000594  resc_io: 3.000000  resc_cpu: 21912
          resp: 3.000594  resp_io: 3.000000  resc_cpu: 21912
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (0.500000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Join order aborted2: cost > best plan cost
***********************
Join order[9]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 4.001210  Resp: 4.001210  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 44626
      Resp_io: 4.000000  Resp_cpu: 44626
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 3.000431  Resp: 3.000431  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 15900
      Resp_io: 3.000000  Resp_cpu: 15900
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469

  Best NL cost: 1.000230 (VALID)
          resc: 1.000230  resc_io: 1.000000  resc_cpu: 8469
          resp: 1.000230  resp_io: 1.000000  resc_cpu: 8469
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.500000 = outer (0.500000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.500000
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000467  Resp: 4.000467  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000467 
     resc: 4.000467 resc_io: 2.000000 resc_cpu: 73754360
     resp: 4.000467 resp_io: 2.000000 resp_cpu: 73754360
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016738  Resp: 2.016738  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016738  
     resc: 2.016738 resc_io: 2.000000 resc_cpu: 617090
     resp: 2.016738 resp_io: 2.000000 resp_cpu: 617090
Best:: JoinMethod: NestedLoop
       Cost: 1.000230  Degree: 1  Resp: 1.000230  Card: 0.500000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.500000  Cost: 1.000230  Resp: 1.000230  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2080  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.026085 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.346085
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.070735  Resp: 10.070735  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2607894
      Resp_io: 10.000000  Resp_cpu: 2607894
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.052135  Resp: 11.052135  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1922137
      Resp_io: 11.000000  Resp_cpu: 1922137
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17730
      Resp_io: 2.000000  Resp_cpu: 17730
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-10  ix_sel_with_filters: 2.2222e-11 
    NL Join : Cost: 2.000453  Resp: 2.000453  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16690
      Resp_io: 2.000000  Resp_cpu: 16690
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17730
      Resp_io: 2.000000  Resp_cpu: 17730

  Best NL cost: 2.000453 (VALID)
          resc: 2.000453  resc_io: 2.000000  resc_cpu: 16690
          resp: 2.000453  resp_io: 2.000000  resc_cpu: 16690
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.500000) * inner (0.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.500000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.000623  Resp: 5.000623  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000623 
     resc: 5.000623 resc_io: 3.000000 resc_cpu: 73760100
     resp: 5.000623 resp_io: 3.000000 resp_cpu: 73760100
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.500000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016281  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016904  Resp: 3.016904  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016904  
     resc: 3.016904 resc_io: 3.000000 resc_cpu: 623212
     resp: 3.016904 resp_io: 3.000000 resp_cpu: 623212
Join order aborted2: cost > best plan cost
***********************
Join order[10]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500026.111111 (cpu filter eval) (= 50.002611 (per row) * 10000.000000 (#rows))
                       =   2599426.431111
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.070706  Resp: 10.070706  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2606845
      Resp_io: 10.000000  Resp_cpu: 2606845
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1913669
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.052106  Resp: 11.052106  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1921088
      Resp_io: 11.000000  Resp_cpu: 1921088
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-06  ix_sel_with_filters: 2.2222e-07 
    NL Join : Cost: 2.000424  Resp: 2.000424  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15640
      Resp_io: 2.000000  Resp_cpu: 15640

  Best NL cost: 2.000424 (VALID)
          resc: 2.000424  resc_io: 2.000000  resc_cpu: 15640
          resp: 2.000424  resp_io: 2.000000  resc_cpu: 15640
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.500000) * inner (0.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Best:: JoinMethod: NestedLoop
       Cost: 2.000424  Degree: 1  Resp: 2.000424  Card: 0.000000 Bytes: 

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000424  Resp: 2.000424  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.399600 (cpu filter eval) (= 50.049950 (per row) * 8.000000 (#rows))
                       =   37207.599600
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 5.001433  Resp: 5.001433  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 52848
      Resp_io: 5.000000  Resp_cpu: 52848
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8482
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000654  Resp: 4.000654  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24122
      Resp_io: 4.000000  Resp_cpu: 24122
kkotap: kkoSkipNL returns TRUE
kkofmx: filter for index: Y_ID
kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000454  Resp: 2.000454  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16740
      Resp_io: 2.000000  Resp_cpu: 16740
kkofmx: filter for index: Y_ID
kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.015625 
    NL Join : Cost: 2.000454  Resp: 2.000454  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16740
      Resp_io: 2.000000  Resp_cpu: 16740

  Best NL cost: 2.000454 (VALID)
          resc: 2.000454  resc_io: 2.000000  resc_cpu: 16740
          resp: 2.000454  resp_io: 2.000000  resc_cpu: 16740
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (8.000000) * sel (0.015625)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Z  Alias: Z
    resc: 2.000424  card 0.000000  bytes:   deg: 1  resp: 2.000424
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 5.000690  Resp: 5.000690  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000690 
     resc: 5.000690 resc_io: 3.000000 resc_cpu: 73762581
     resp: 5.000690 resp_io: 3.000000 resp_cpu: 73762581
  Outer table:  Z  Alias: Z
    resc: 2.000424  card 0.000000  bytes:   deg: 1  resp: 2.000424
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016961  Resp: 3.016961  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016961  
     resc: 3.016961 resc_io: 3.000000 resc_cpu: 625312
     resp: 3.016961 resp_io: 3.000000 resp_cpu: 625312
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[11]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 4.001210  Resp: 4.001210  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 44626
      Resp_io: 4.000000  Resp_cpu: 44626
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 3.000431  Resp: 3.000431  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 15900
      Resp_io: 3.000000  Resp_cpu: 15900
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469

  Best NL cost: 1.000230 (VALID)
          resc: 1.000230  resc_io: 1.000000  resc_cpu: 8469
          resp: 1.000230  resp_io: 1.000000  resc_cpu: 8469
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.500000 = outer (0.500000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.500000
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000467  Resp: 4.000467  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000467 
     resc: 4.000467 resc_io: 2.000000 resc_cpu: 73754360
     resp: 4.000467 resp_io: 2.000000 resp_cpu: 73754360
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016738  Resp: 2.016738  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016738  
     resc: 2.016738 resc_io: 2.000000 resc_cpu: 617090
     resp: 2.016738 resp_io: 2.000000 resp_cpu: 617090
Best:: JoinMethod: NestedLoop
       Cost: 1.000230  Degree: 1  Resp: 1.000230  Card: 0.500000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.500000  Cost: 1.000230  Resp: 1.000230  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2080  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2080  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.026085 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.346085
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.070735  Resp: 10.070735  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2607894
      Resp_io: 10.000000  Resp_cpu: 2607894
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.052135  Resp: 11.052135  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1922137
      Resp_io: 11.000000  Resp_cpu: 1922137
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17730
      Resp_io: 2.000000  Resp_cpu: 17730
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-10  ix_sel_with_filters: 2.2222e-11 
    NL Join : Cost: 2.000453  Resp: 2.000453  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16690
      Resp_io: 2.000000  Resp_cpu: 16690
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17730
      Resp_io: 2.000000  Resp_cpu: 17730

  Best NL cost: 2.000453 (VALID)
          resc: 2.000453  resc_io: 2.000000  resc_cpu: 16690
          resp: 2.000453  resp_io: 2.000000  resc_cpu: 16690
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.500000) * inner (0.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.500000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.000623  Resp: 5.000623  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000623 
     resc: 5.000623 resc_io: 3.000000 resc_cpu: 73760100
     resp: 5.000623 resp_io: 3.000000 resp_cpu: 73760100
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.500000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016281  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016904  Resp: 3.016904  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016904  
     resc: 3.016904 resc_io: 3.000000 resc_cpu: 623212
     resp: 3.016904 resp_io: 3.000000 resp_cpu: 623212
Join order aborted2: cost > best plan cost
***********************
Join order[12]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500026.111111 (cpu filter eval) (= 50.002611 (per row) * 10000.000000 (#rows))
                       =   2599426.431111
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.070706  Resp: 10.070706  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2606845
      Resp_io: 10.000000  Resp_cpu: 2606845
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1913669
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.052106  Resp: 11.052106  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1921088
      Resp_io: 11.000000  Resp_cpu: 1921088
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-06  ix_sel_with_filters: 2.2222e-07 
    NL Join : Cost: 2.000424  Resp: 2.000424  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15640
      Resp_io: 2.000000  Resp_cpu: 15640

  Best NL cost: 2.000424 (VALID)
          resc: 2.000424  resc_io: 2.000000  resc_cpu: 15640
          resp: 2.000424  resp_io: 2.000000  resc_cpu: 15640
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.500000) * inner (0.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Best:: JoinMethod: NestedLoop
       Cost: 2.000424  Degree: 1  Resp: 2.000424  Card: 0.000000 Bytes: 

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000424  Resp: 2.000424  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.399600 (cpu filter eval) (= 50.049950 (per row) * 8.000000 (#rows))
                       =   37207.599600
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 5.001433  Resp: 5.001433  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 52848
      Resp_io: 5.000000  Resp_cpu: 52848
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8482
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000654  Resp: 4.000654  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24122
      Resp_io: 4.000000  Resp_cpu: 24122
kkotap: kkoSkipNL returns TRUE
kkofmx: filter for index: Y_ID
kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000454  Resp: 2.000454  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16740
      Resp_io: 2.000000  Resp_cpu: 16740
kkofmx: filter for index: Y_ID
kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.015625 
    NL Join : Cost: 2.000454  Resp: 2.000454  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16740
      Resp_io: 2.000000  Resp_cpu: 16740

  Best NL cost: 2.000454 (VALID)
          resc: 2.000454  resc_io: 2.000000  resc_cpu: 16740
          resp: 2.000454  resp_io: 2.000000  resc_cpu: 16740
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (8.000000) * sel (0.015625)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Z  Alias: Z
    resc: 2.000424  card 0.000000  bytes:   deg: 1  resp: 2.000424
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 5.000690  Resp: 5.000690  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000690 
     resc: 5.000690 resc_io: 3.000000 resc_cpu: 73762581
     resp: 5.000690 resp_io: 3.000000 resp_cpu: 73762581
  Outer table:  Z  Alias: Z
    resc: 2.000424  card 0.000000  bytes:   deg: 1  resp: 2.000424
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016961  Resp: 3.016961  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016961  
     resc: 3.016961 resc_io: 3.000000 resc_cpu: 625312
     resp: 3.016961 resp_io: 3.000000 resp_cpu: 625312
Join order aborted2: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
LORE: or-expansion-subheap (delete addr=0x7fd925c03e90, in-use=56264, alloc=58384)

LORE: ******** OR-branching ********

LORE: or-expansion-subheap (create addr=0x7fd925c03e90)
****************
QUERY BLOCK TEXT
****************
select /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null
  from x join y  on y.id = x.id join z on z.id = y.id
  where  ( ( x.a = 0 AND z.b = 1               ) OR 
           ( x.a = 1 AND z.b = 0 AND z.c = 0  )   )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$9E43CB6E nbfros=3 flg=0
  fro(0): flg=0 objn=80828 hint_alias="X"@"SEL$1"
  fro(1): flg=0 objn=80831 hint_alias="Y"@"SEL$1"
  fro(2): flg=0 objn=80833 hint_alias="Z"@"SEL$2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3072 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table:  Z  Alias:  Z
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  28  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): B(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.050000 Min: 1.000000 Max: 10.000000
    Histogram: Freq  #Bkts: 10  UncompBkts: 10000  EndPtVals: 10  ActualVal: yes
  Column (#3): C(NUMBER)
    AvgLen: 3 NDV: 1 Nulls: 0 Density: 0.000050 Min: 1.000000 Max: 1.000000
    Histogram: Freq  #Bkts: 1  UncompBkts: 10000  EndPtVals: 1  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: Z_B_C  Col#: 2 3 1
  LVLS: 1  #LB: 30  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 210.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: Z_ID  Col#: 1
  LVLS: 1  #LB: 18  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  Y  Alias:  Y
  #Rows: 8  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  3.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 1.000000 Max: 8.000000
Index Stats::
  Index: Y_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 8  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 8.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  X  Alias:  X
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): A(NUMBER)
    AvgLen: 3 NDV: 2 Nulls: 0 Density: 0.250000 Min: 1.000000 Max: 2.000000
    Histogram: Freq  #Bkts: 2  UncompBkts: 10  EndPtVals: 2  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: X_A_ID  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: X_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$9E43CB6E (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for X
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for X[X] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE


 kkecdn: Single Table Predicate:"X"."A"=0 OR "X"."A"=1
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

 kkecdn: Single Table Predicate:"X"."A"=1
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Table: X  Alias: X
    Card: Original: 10.000000  Rounded: 3  Computed: 2.750000  Non Adjusted: 2.750000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 987.500000 (cpu filter eval) (= 98.750000 (per row) * 10.000000 (#rows))
                       =   38294.700000
  Access Path: TableScan
    Cost:  3.001039  Resp: 3.001039  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 38295
      Resp_io: 3.000000  Resp_cpu: 38295
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9309
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000252  Resp: 2.000252  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9309
      Resp_io: 2.000000  Resp_cpu: 9309
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 8121
    ix_sel: 0.500000  ix_sel_with_filters: 0.275000 
    Cost: 1.000234  Resp: 1.000234  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: X_A_ID
         Cost: 1.000234  Degree: 1  Resp: 1.000234  Card: 2.750000  Bytes: 0.000000

Access path analysis for Y
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Y[Y] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: Y  Alias: Y
    Card: Original: 8.000000  Rounded: 8  Computed: 8.000000  Non Adjusted: 8.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                       =   36807.200000
  Access Path: TableScan
    Cost:  3.000998  Resp: 3.000998  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 36807
      Resp_io: 3.000000  Resp_cpu: 36807
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8081
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000219  Resp: 2.000219  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 8081
      Resp_io: 2.000000  Resp_cpu: 8081
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 1
  ****** trying bitmap/domain indexes ******
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Y_ID
         Cost: 1.000237  Degree: 1  Resp: 1.000237  Card: 8.000000  Bytes: 0.000000

Access path analysis for Z
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Z[Z] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred


 kkecdn: Single Table Predicate:"Z"."C"=0
  Estimated selectivity: 5.0000e-05 , col: #3 

 kkecdn: Single Table Predicate:"Z"."B"=0
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"Z"."B"=0
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"Z"."C"=0
  Estimated selectivity: 5.0000e-05 , col: #3 
  Table: Z  Alias: Z
    Card: Original: 10000.000000  Rounded: 1  Computed: 0.022222  Non Adjusted: 0.022222
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2080  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.001306 (cpu filter eval) (= 50.002500 (per row) * 10000.000000 (#rows))
                       =   2599425.321306
  Access Path: TableScan
    Cost:  9.070505  Resp: 9.070505  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2599425
      Resp_io: 9.000000  Resp_cpu: 2599425
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.051905  Resp: 10.051905  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1913668
      Resp_io: 10.000000  Resp_cpu: 1913668
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."C"=0

kkofmx: index filter:"Z"."B"=0

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 2.2222e-06  ix_sel_with_filters: 4.9383e-12 
    Cost: 2.000393  Resp: 2.000393  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Z_B_C
         Cost: 2.000393  Degree: 1  Resp: 2.000393  Card: 0.022222  Bytes: 0.000000

(newjo-restore) [1 0 2 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is OR expanded SEL$9E43CB6E (#0)
kkogast: Selectivities tab=Y[Y] tnum=0 astat=N 
  card=8.00 nrow=8.00 1.000000
kkogast: Selectivities tab=Z[Z] tnum=1 astat=N 
  card=0.02 nrow=10000.00 2.2222e-06
kkogast: Selectivities tab=X[X] tnum=2 astat=N 
  card=2.75 nrow=10.00 0.275000
kkogast: Best single table selectivities cnt=2
  Tab = 1 2
kkogast: Final Alternative Starting Tables cnt=2
  Tab = 1 2
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  Y[Y]#0  Z[Z]#1  X[X]#2

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.750000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2081  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2080  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2080  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.750000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.750000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.001251 (cpu filter eval) (= 50.002500 (per row) * 10000.000000 (#rows))
                       =   2599425.321251
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 63.564278  Resp: 63.564278  Degree: 1
      Cost_io: 63.000000  Cost_cpu: 20804124
      Resp_io: 63.000000  Resp_cpu: 20804124
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.250000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 67.415478  Resp: 67.415478  Degree: 1
      Cost_io: 67.000000  Cost_cpu: 15318067
      Resp_io: 67.000000  Resp_cpu: 15318067
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002246  Resp: 9.002246  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82813
      Resp_io: 9.000000  Resp_cpu: 82813
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."C"=0

kkofmx: index filter:"Z"."B"=0

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 4.9383e-16 
    NL Join : Cost: 9.002021  Resp: 9.002021  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 74493
      Resp_io: 9.000000  Resp_cpu: 74493
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002246  Resp: 9.002246  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82813
      Resp_io: 9.000000  Resp_cpu: 82813

  Best NL cost: 9.002021 (VALID)
          resc: 9.002021  resc_io: 9.000000  resc_cpu: 74493
          resp: 9.002021  resp_io: 9.000000  resc_cpu: 74493
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.022222 = outer (8.000000) * inner (0.022222) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.022222
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.022222  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 4.000630  Resp: 4.000630  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000630 
     resc: 4.000630 resc_io: 3.000000 resc_cpu: 36891783
     resp: 4.000630 resp_io: 3.000000 resp_cpu: 36891783
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.022222  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016309  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016939  Resp: 3.016939  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016939  
     resc: 3.016939 resc_io: 3.000000 resc_cpu: 624514
     resp: 3.016939 resp_io: 3.000000 resp_cpu: 624514
Best:: JoinMethod: Hash
       Cost: 3.016939  Degree: 1  Resp: 3.016939  Card: 0.022222 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.022222  Cost: 3.016939  Resp: 3.016939  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2064  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 623.437500 (cpu filter eval) (= 62.343750 (per row) * 10.000000 (#rows))
                       =   37930.637500
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 6.017968  Resp: 6.017968  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 662445
      Resp_io: 6.000000  Resp_cpu: 662445
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8945
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 5.017182  Resp: 5.017182  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 633459
      Resp_io: 5.000000  Resp_cpu: 633459
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.017168  Resp: 4.017168  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 632955
      Resp_io: 4.000000  Resp_cpu: 632955
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.050000  ix_sel_with_filters: 0.027500 
    NL Join : Cost: 3.016970  Resp: 3.016970  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 625662
      Resp_io: 3.000000  Resp_cpu: 625662
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.017168  Resp: 4.017168  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 632955
      Resp_io: 4.000000  Resp_cpu: 632955

  Best NL cost: 3.016970 (VALID)
          resc: 3.016970  resc_io: 3.000000  resc_cpu: 625662
          resp: 3.016970  resp_io: 3.000000  resc_cpu: 625662
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.013889 = outer (0.022222) * inner (5.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.013889
  Outer table:  Z  Alias: Z
    resc: 3.016939  card 0.022222  bytes:   deg: 1  resp: 3.016939
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
  SM join: Resc: 6.017178  Resp: 6.017178  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.017178 
     resc: 6.017178 resc_io: 4.000000 resc_cpu: 74370475
     resp: 6.017178 resp_io: 4.000000 resp_cpu: 74370475
  Outer table:  Z  Alias: Z
    resc: 3.016939  card 0.022222  bytes:   deg: 1  resp: 3.016939
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016286  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 4.033459  Resp: 4.033459  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.033459  
     resc: 4.033459 resc_io: 4.000000 resc_cpu: 1233573
     resp: 4.033459 resp_io: 4.000000 resp_cpu: 1233573
Best:: JoinMethod: NestedLoop
       Cost: 3.016970  Degree: 1  Resp: 3.016970  Card: 0.013889 Bytes: 
***********************
Best so far:  Table#: 0  cost: 1.000237  card: 8.000000  bytes: 24.000000
              Table#: 1  cost: 3.016939  card: 0.022222  bytes: 13.000000
              Table#: 2  cost: 3.016970  card: 0.013889  bytes: 19.000000
***********************
Join order[2]:  Y[Y]#0  X[X]#2  Z[Z]#1

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 623.437500 (cpu filter eval) (= 62.343750 (per row) * 10.000000 (#rows))
                       =   37930.637500
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 13.008467  Resp: 13.008467  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 312167
      Resp_io: 13.000000  Resp_cpu: 312167
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8945
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 5.002177  Resp: 5.002177  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 80280
      Resp_io: 5.000000  Resp_cpu: 80280
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002068  Resp: 9.002068  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 76243
      Resp_io: 9.000000  Resp_cpu: 76243
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.050000  ix_sel_with_filters: 0.027500 
    NL Join : Cost: 1.000486  Resp: 1.000486  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 17901
      Resp_io: 1.000000  Resp_cpu: 17901
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002068  Resp: 9.002068  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 76243
      Resp_io: 9.000000  Resp_cpu: 76243

  Best NL cost: 1.000486 (VALID)
          resc: 1.000486  resc_io: 1.000000  resc_cpu: 17901
          resp: 1.000486  resp_io: 1.000000  resc_cpu: 17901
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  5.000000 = outer (8.000000) * inner (5.000000) * sel (0.125000)
Join Card - Rounded: 5 Computed: 5.000000
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
  SM join: Resc: 3.000476  Resp: 3.000476  [multiMatchCost=0.000000]
SM Join
  SM cost: 3.000476 
     resc: 3.000476 resc_io: 2.000000 resc_cpu: 36886114
     resp: 3.000476 resp_io: 2.000000 resp_cpu: 36886114
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016315  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016790  Resp: 2.016790  [multiMatchCost=0.000005]
HA Join
  HA cost: 2.016790  
     resc: 2.016790 resc_io: 2.000000 resc_cpu: 619030
     resp: 2.016790 resp_io: 2.000000 resp_cpu: 619030
Best:: JoinMethod: NestedLoop
       Cost: 1.000486  Degree: 1  Resp: 1.000486  Card: 5.000000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 5.000000  Cost: 1.000486  Resp: 1.000486  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   8.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.001251 (cpu filter eval) (= 50.002500 (per row) * 10000.000000 (#rows))
                       =   2599425.321251
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 41.353011  Resp: 41.353011  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 13015028
      Resp_io: 41.000000  Resp_cpu: 13015028
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.400000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 43.260011  Resp: 43.260011  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 9586242
      Resp_io: 43.000000  Resp_cpu: 9586242
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 6.001742  Resp: 6.001742  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 64209
      Resp_io: 6.000000  Resp_cpu: 64209
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."C"=0

kkofmx: index filter:"Z"."B"=0

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 4.9383e-16 
    NL Join : Cost: 6.001601  Resp: 6.001601  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 59009
      Resp_io: 6.000000  Resp_cpu: 59009
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 6.001742  Resp: 6.001742  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 64209
      Resp_io: 6.000000  Resp_cpu: 64209

  Best NL cost: 6.001601 (VALID)
          resc: 6.001601  resc_io: 6.000000  resc_cpu: 59009
          resp: 6.001601  resp_io: 6.000000  resc_cpu: 59009
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.013889 = outer (5.000000) * inner (0.022222) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.013889
  Outer table:  X  Alias: X
    resc: 1.000486  card 5.000000  bytes:   deg: 1  resp: 1.000486
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.022222  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 4.000879  Resp: 4.000879  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000879 
     resc: 4.000879 resc_io: 3.000000 resc_cpu: 36900963
     resp: 4.000879 resp_io: 3.000000 resp_cpu: 36900963
  Outer table:  X  Alias: X
    resc: 1.000486  card 5.000000  bytes:   deg: 1  resp: 1.000486
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.022222  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016297  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017176  Resp: 3.017176  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017176  
     resc: 3.017176 resc_io: 3.000000 resc_cpu: 633244
     resp: 3.017176 resp_io: 3.000000 resp_cpu: 633244
Join order aborted2: cost > best plan cost
***********************
Join order[3]:  Z[Z]#1  Y[Y]#0  X[X]#2

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000393  Resp: 2.000393  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 5.001402  Resp: 5.001402  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 51700
      Resp_io: 5.000000  Resp_cpu: 51700
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000623  Resp: 4.000623  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 22974
      Resp_io: 4.000000  Resp_cpu: 22974
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000422  Resp: 2.000422  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15543
      Resp_io: 2.000000  Resp_cpu: 15543
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000422  Resp: 2.000422  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15543
      Resp_io: 2.000000  Resp_cpu: 15543

  Best NL cost: 2.000422 (VALID)
          resc: 2.000422  resc_io: 2.000000  resc_cpu: 15543
          resp: 2.000422  resp_io: 2.000000  resc_cpu: 15543
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.022222 = outer (0.022222) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.022222
  Outer table:  Z  Alias: Z
    resc: 2.000393  card 0.022222  bytes:   deg: 1  resp: 2.000393
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 5.000659  Resp: 5.000659  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000659 
     resc: 5.000659 resc_io: 3.000000 resc_cpu: 73761433
     resp: 5.000659 resp_io: 3.000000 resp_cpu: 73761433
  Outer table:  Z  Alias: Z
    resc: 2.000393  card 0.022222  bytes:   deg: 1  resp: 2.000393
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016929  Resp: 3.016929  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016929  
     resc: 3.016929 resc_io: 3.000000 resc_cpu: 624164
     resp: 3.016929 resp_io: 3.000000 resp_cpu: 624164
Best:: JoinMethod: NestedLoop
       Cost: 2.000422  Degree: 1  Resp: 2.000422  Card: 0.022222 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000422  Resp: 2.000422  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 623.437500 (cpu filter eval) (= 62.343750 (per row) * 10.000000 (#rows))
                       =   37930.637500
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001450  Resp: 5.001450  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 53474
      Resp_io: 5.000000  Resp_cpu: 53474
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8945
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000664  Resp: 4.000664  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24488
      Resp_io: 4.000000  Resp_cpu: 24488
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000651  Resp: 3.000651  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23983
      Resp_io: 3.000000  Resp_cpu: 23983
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.050000  ix_sel_with_filters: 0.027500 
    NL Join : Cost: 2.000453  Resp: 2.000453  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16690
      Resp_io: 2.000000  Resp_cpu: 16690
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000651  Resp: 3.000651  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23983
      Resp_io: 3.000000  Resp_cpu: 23983

  Best NL cost: 2.000453 (VALID)
          resc: 2.000453  resc_io: 2.000000  resc_cpu: 16690
          resp: 2.000453  resp_io: 2.000000  resc_cpu: 16690
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.013889 = outer (0.022222) * inner (5.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.013889
  Outer table:  Y  Alias: Y
    resc: 2.000422  card 0.022222  bytes:   deg: 1  resp: 2.000422
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
  SM join: Resc: 5.000661  Resp: 5.000661  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000661 
     resc: 5.000661 resc_io: 3.000000 resc_cpu: 73761504
     resp: 5.000661 resp_io: 3.000000 resp_cpu: 73761504
  Outer table:  Y  Alias: Y
    resc: 2.000422  card 0.022222  bytes:   deg: 1  resp: 2.000422
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016286  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016941  Resp: 3.016941  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016941  
     resc: 3.016941 resc_io: 3.000000 resc_cpu: 624602
     resp: 3.016941 resp_io: 3.000000 resp_cpu: 624602
Best:: JoinMethod: NestedLoop
       Cost: 2.000453  Degree: 1  Resp: 2.000453  Card: 0.013889 Bytes: 
***********************
Best so far:  Table#: 1  cost: 2.000393  card: 0.022222  bytes: 10.000000
              Table#: 0  cost: 2.000422  card: 0.022222  bytes: 13.000000
              Table#: 2  cost: 2.000453  card: 0.013889  bytes: 19.000000
***********************
Join order[4]:  Z[Z]#1  X[X]#2  Y[Y]#0

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000393  Resp: 2.000393  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 987.500000 (cpu filter eval) (= 98.750000 (per row) * 10.000000 (#rows))
                       =   38294.700000
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001432  Resp: 5.001432  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 52788
      Resp_io: 5.000000  Resp_cpu: 52788
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9309
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000646  Resp: 4.000646  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23802
      Resp_io: 4.000000  Resp_cpu: 23802
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 8121
    ix_sel: 0.500000  ix_sel_with_filters: 0.275000 
    NL Join : Cost: 3.000627  Resp: 3.000627  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23102
      Resp_io: 3.000000  Resp_cpu: 23102

  Best NL cost: 3.000627 (VALID)
          resc: 3.000627  resc_io: 3.000000  resc_cpu: 23102
          resp: 3.000627  resp_io: 3.000000  resc_cpu: 23102
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.111111 = outer (0.022222) * inner (5.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.111111
Join order aborted2: cost > best plan cost
***********************
Join order[5]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   2.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   2.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   2.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 7.003261  Resp: 7.003261  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 120231
      Resp_io: 7.000000  Resp_cpu: 120231
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000924  Resp: 4.000924  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 34053
      Resp_io: 4.000000  Resp_cpu: 34053
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759

  Best NL cost: 1.000319 (VALID)
          resc: 1.000319  resc_io: 1.000000  resc_cpu: 11759
          resp: 1.000319  resp_io: 1.000000  resc_cpu: 11759
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  5.000000 = outer (5.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 5 Computed: 5.000000
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000505  Resp: 4.000505  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000505 
     resc: 4.000505 resc_io: 2.000000 resc_cpu: 73755764
     resp: 4.000505 resp_io: 2.000000 resp_cpu: 73755764
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016308  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016778  Resp: 2.016778  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016778  
     resc: 2.016778 resc_io: 2.000000 resc_cpu: 618580
     resp: 2.016778 resp_io: 2.000000 resp_cpu: 618580
Best:: JoinMethod: NestedLoop
       Cost: 1.000319  Degree: 1  Resp: 1.000319  Card: 5.000000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 5.000000  Cost: 1.000319  Resp: 1.000319  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   8.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.001251 (cpu filter eval) (= 50.002500 (per row) * 10000.000000 (#rows))
                       =   2599425.321251
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 41.352845  Resp: 41.352845  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 13008886
      Resp_io: 41.000000  Resp_cpu: 13008886
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.400000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 43.259845  Resp: 43.259845  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 9580100
      Resp_io: 43.000000  Resp_cpu: 9580100
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 6.001575  Resp: 6.001575  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 58066
      Resp_io: 6.000000  Resp_cpu: 58066
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."C"=0

kkofmx: index filter:"Z"."B"=0

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 4.9383e-16 
    NL Join : Cost: 6.001434  Resp: 6.001434  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 52866
      Resp_io: 6.000000  Resp_cpu: 52866
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 6.001575  Resp: 6.001575  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 58066
      Resp_io: 6.000000  Resp_cpu: 58066

  Best NL cost: 6.001434 (VALID)
          resc: 6.001434  resc_io: 6.000000  resc_cpu: 52866
          resp: 6.001434  resp_io: 6.000000  resc_cpu: 52866
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.013889 = outer (5.000000) * inner (0.022222) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.013889
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 5.000000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.022222  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              5
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869092
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.000726  Resp: 5.000726  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000726 
     resc: 5.000726 resc_io: 3.000000 resc_cpu: 73763913
     resp: 5.000726 resp_io: 3.000000 resp_cpu: 73763913
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 5.000000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.022222  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016297  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017009  Resp: 3.017009  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017009  
     resc: 3.017009 resc_io: 3.000000 resc_cpu: 627102
     resp: 3.017009 resp_io: 3.000000 resp_cpu: 627102
Join order aborted2: cost > best plan cost
***********************
Join order[6]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.001306 (cpu filter eval) (= 50.002500 (per row) * 10000.000000 (#rows))
                       =   2599425.321306
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.211749  Resp: 26.211749  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7806885
      Resp_io: 26.000000  Resp_cpu: 7806885
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.155949  Resp: 27.155949  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5749614
      Resp_io: 27.000000  Resp_cpu: 5749614
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."C"=0

kkofmx: index filter:"Z"."B"=0

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-06  ix_sel_with_filters: 4.9383e-12 
    NL Join : Cost: 4.000902  Resp: 4.000902  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 33273
      Resp_io: 4.000000  Resp_cpu: 33273

  Best NL cost: 4.000902 (VALID)
          resc: 4.000902  resc_io: 4.000000  resc_cpu: 33273
          resp: 4.000902  resp_io: 4.000000  resc_cpu: 33273
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.111111 = outer (5.000000) * inner (0.022222) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.111111
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :1
Join order[7]:  Z[Z]#1  Y[Y]#0  X[X]#2

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000393  Resp: 2.000393  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 5.001402  Resp: 5.001402  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 51700
      Resp_io: 5.000000  Resp_cpu: 51700
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000623  Resp: 4.000623  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 22974
      Resp_io: 4.000000  Resp_cpu: 22974
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000422  Resp: 2.000422  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15543
      Resp_io: 2.000000  Resp_cpu: 15543
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000422  Resp: 2.000422  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15543
      Resp_io: 2.000000  Resp_cpu: 15543

  Best NL cost: 2.000422 (VALID)
          resc: 2.000422  resc_io: 2.000000  resc_cpu: 15543
          resp: 2.000422  resp_io: 2.000000  resc_cpu: 15543
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.022222 = outer (0.022222) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.022222
  Outer table:  Z  Alias: Z
    resc: 2.000393  card 0.022222  bytes:   deg: 1  resp: 2.000393
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 5.000659  Resp: 5.000659  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000659 
     resc: 5.000659 resc_io: 3.000000 resc_cpu: 73761433
     resp: 5.000659 resp_io: 3.000000 resp_cpu: 73761433
  Outer table:  Z  Alias: Z
    resc: 2.000393  card 0.022222  bytes:   deg: 1  resp: 2.000393
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016929  Resp: 3.016929  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016929  
     resc: 3.016929 resc_io: 3.000000 resc_cpu: 624164
     resp: 3.016929 resp_io: 3.000000 resp_cpu: 624164
Best:: JoinMethod: NestedLoop
       Cost: 2.000422  Degree: 1  Resp: 2.000422  Card: 0.022222 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000422  Resp: 2.000422  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2064  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 623.437500 (cpu filter eval) (= 62.343750 (per row) * 10.000000 (#rows))
                       =   37930.637500
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001450  Resp: 5.001450  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 53474
      Resp_io: 5.000000  Resp_cpu: 53474
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8945
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000664  Resp: 4.000664  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24488
      Resp_io: 4.000000  Resp_cpu: 24488
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000651  Resp: 3.000651  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23983
      Resp_io: 3.000000  Resp_cpu: 23983
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.050000  ix_sel_with_filters: 0.027500 
    NL Join : Cost: 2.000453  Resp: 2.000453  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16690
      Resp_io: 2.000000  Resp_cpu: 16690
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000651  Resp: 3.000651  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23983
      Resp_io: 3.000000  Resp_cpu: 23983

  Best NL cost: 2.000453 (VALID)
          resc: 2.000453  resc_io: 2.000000  resc_cpu: 16690
          resp: 2.000453  resp_io: 2.000000  resc_cpu: 16690
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.013889 = outer (0.022222) * inner (5.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.013889
  Outer table:  Y  Alias: Y
    resc: 2.000422  card 0.022222  bytes:   deg: 1  resp: 2.000422
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
  SM join: Resc: 5.000661  Resp: 5.000661  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000661 
     resc: 5.000661 resc_io: 3.000000 resc_cpu: 73761504
     resp: 5.000661 resp_io: 3.000000 resp_cpu: 73761504
  Outer table:  Y  Alias: Y
    resc: 2.000422  card 0.022222  bytes:   deg: 1  resp: 2.000422
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016286  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016941  Resp: 3.016941  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016941  
     resc: 3.016941 resc_io: 3.000000 resc_cpu: 624602
     resp: 3.016941 resp_io: 3.000000 resp_cpu: 624602
Join order aborted2: cost > best plan cost
***********************
Join order[8]:  Z[Z]#1  X[X]#2  Y[Y]#0

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000393  Resp: 2.000393  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 987.500000 (cpu filter eval) (= 98.750000 (per row) * 10.000000 (#rows))
                       =   38294.700000
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001432  Resp: 5.001432  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 52788
      Resp_io: 5.000000  Resp_cpu: 52788
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9309
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000646  Resp: 4.000646  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23802
      Resp_io: 4.000000  Resp_cpu: 23802
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 8121
    ix_sel: 0.500000  ix_sel_with_filters: 0.275000 
    NL Join : Cost: 3.000627  Resp: 3.000627  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23102
      Resp_io: 3.000000  Resp_cpu: 23102

  Best NL cost: 3.000627 (VALID)
          resc: 3.000627  resc_io: 3.000000  resc_cpu: 23102
          resp: 3.000627  resp_io: 3.000000  resc_cpu: 23102
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.111111 = outer (0.022222) * inner (5.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.111111
Join order aborted2: cost > best plan cost
***********************
Join order[9]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   2.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   2.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   2.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 7.003261  Resp: 7.003261  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 120231
      Resp_io: 7.000000  Resp_cpu: 120231
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000924  Resp: 4.000924  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 34053
      Resp_io: 4.000000  Resp_cpu: 34053
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759

  Best NL cost: 1.000319 (VALID)
          resc: 1.000319  resc_io: 1.000000  resc_cpu: 11759
          resp: 1.000319  resp_io: 1.000000  resc_cpu: 11759
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  5.000000 = outer (5.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 5 Computed: 5.000000
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000505  Resp: 4.000505  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000505 
     resc: 4.000505 resc_io: 2.000000 resc_cpu: 73755764
     resp: 4.000505 resp_io: 2.000000 resp_cpu: 73755764
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016308  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016778  Resp: 2.016778  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016778  
     resc: 2.016778 resc_io: 2.000000 resc_cpu: 618580
     resp: 2.016778 resp_io: 2.000000 resp_cpu: 618580
Best:: JoinMethod: NestedLoop
       Cost: 1.000319  Degree: 1  Resp: 1.000319  Card: 5.000000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 5.000000  Cost: 1.000319  Resp: 1.000319  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2081  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2080  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   8.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.001251 (cpu filter eval) (= 50.002500 (per row) * 10000.000000 (#rows))
                       =   2599425.321251
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 41.352845  Resp: 41.352845  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 13008886
      Resp_io: 41.000000  Resp_cpu: 13008886
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.400000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 43.259845  Resp: 43.259845  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 9580100
      Resp_io: 43.000000  Resp_cpu: 9580100
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 6.001575  Resp: 6.001575  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 58066
      Resp_io: 6.000000  Resp_cpu: 58066
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."C"=0

kkofmx: index filter:"Z"."B"=0

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 4.9383e-16 
    NL Join : Cost: 6.001434  Resp: 6.001434  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 52866
      Resp_io: 6.000000  Resp_cpu: 52866
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 6.001575  Resp: 6.001575  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 58066
      Resp_io: 6.000000  Resp_cpu: 58066

  Best NL cost: 6.001434 (VALID)
          resc: 6.001434  resc_io: 6.000000  resc_cpu: 52866
          resp: 6.001434  resp_io: 6.000000  resc_cpu: 52866
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.013889 = outer (5.000000) * inner (0.022222) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.013889
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 5.000000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.022222  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              5
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869092
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.000726  Resp: 5.000726  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000726 
     resc: 5.000726 resc_io: 3.000000 resc_cpu: 73763913
     resp: 5.000726 resp_io: 3.000000 resp_cpu: 73763913
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 5.000000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.022222  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016297  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017009  Resp: 3.017009  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017009  
     resc: 3.017009 resc_io: 3.000000 resc_cpu: 627102
     resp: 3.017009 resp_io: 3.000000 resp_cpu: 627102
Join order aborted2: cost > best plan cost
***********************
Join order[10]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.001306 (cpu filter eval) (= 50.002500 (per row) * 10000.000000 (#rows))
                       =   2599425.321306
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.211749  Resp: 26.211749  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7806885
      Resp_io: 26.000000  Resp_cpu: 7806885
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.155949  Resp: 27.155949  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5749614
      Resp_io: 27.000000  Resp_cpu: 5749614
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."C"=0

kkofmx: index filter:"Z"."B"=0

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-06  ix_sel_with_filters: 4.9383e-12 
    NL Join : Cost: 4.000902  Resp: 4.000902  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 33273
      Resp_io: 4.000000  Resp_cpu: 33273

  Best NL cost: 4.000902 (VALID)
          resc: 4.000902  resc_io: 4.000000  resc_cpu: 33273
          resp: 4.000902  resp_io: 4.000000  resc_cpu: 33273
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.111111 = outer (5.000000) * inner (0.022222) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.111111
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[11]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   2.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   2.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   2.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 7.003261  Resp: 7.003261  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 120231
      Resp_io: 7.000000  Resp_cpu: 120231
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000924  Resp: 4.000924  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 34053
      Resp_io: 4.000000  Resp_cpu: 34053
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759

  Best NL cost: 1.000319 (VALID)
          resc: 1.000319  resc_io: 1.000000  resc_cpu: 11759
          resp: 1.000319  resp_io: 1.000000  resc_cpu: 11759
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  5.000000 = outer (5.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 5 Computed: 5.000000
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000505  Resp: 4.000505  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000505 
     resc: 4.000505 resc_io: 2.000000 resc_cpu: 73755764
     resp: 4.000505 resp_io: 2.000000 resp_cpu: 73755764
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016308  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016778  Resp: 2.016778  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016778  
     resc: 2.016778 resc_io: 2.000000 resc_cpu: 618580
     resp: 2.016778 resp_io: 2.000000 resp_cpu: 618580
Best:: JoinMethod: NestedLoop
       Cost: 1.000319  Degree: 1  Resp: 1.000319  Card: 5.000000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 5.000000  Cost: 1.000319  Resp: 1.000319  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2081  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2080  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   8.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.001251 (cpu filter eval) (= 50.002500 (per row) * 10000.000000 (#rows))
                       =   2599425.321251
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 41.352845  Resp: 41.352845  Degree: 1
      Cost_io: 41.000000  Cost_cpu: 13008886
      Resp_io: 41.000000  Resp_cpu: 13008886
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.400000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 43.259845  Resp: 43.259845  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 9580100
      Resp_io: 43.000000  Resp_cpu: 9580100
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 6.001575  Resp: 6.001575  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 58066
      Resp_io: 6.000000  Resp_cpu: 58066
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."C"=0

kkofmx: index filter:"Z"."B"=0

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 4.9383e-16 
    NL Join : Cost: 6.001434  Resp: 6.001434  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 52866
      Resp_io: 6.000000  Resp_cpu: 52866
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 6.001575  Resp: 6.001575  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 58066
      Resp_io: 6.000000  Resp_cpu: 58066

  Best NL cost: 6.001434 (VALID)
          resc: 6.001434  resc_io: 6.000000  resc_cpu: 52866
          resp: 6.001434  resp_io: 6.000000  resc_cpu: 52866
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.013889 = outer (5.000000) * inner (0.022222) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.013889
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 5.000000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.022222  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              5
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869092
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.000726  Resp: 5.000726  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000726 
     resc: 5.000726 resc_io: 3.000000 resc_cpu: 73763913
     resp: 5.000726 resp_io: 3.000000 resp_cpu: 73763913
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 5.000000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.022222  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016297  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017009  Resp: 3.017009  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017009  
     resc: 3.017009 resc_io: 3.000000 resc_cpu: 627102
     resp: 3.017009 resp_io: 3.000000 resp_cpu: 627102
Join order aborted2: cost > best plan cost
***********************
Join order[12]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.001306 (cpu filter eval) (= 50.002500 (per row) * 10000.000000 (#rows))
                       =   2599425.321306
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.211749  Resp: 26.211749  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7806885
      Resp_io: 26.000000  Resp_cpu: 7806885
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.155949  Resp: 27.155949  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5749614
      Resp_io: 27.000000  Resp_cpu: 5749614
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."C"=0

kkofmx: index filter:"Z"."B"=0

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-06  ix_sel_with_filters: 4.9383e-12 
    NL Join : Cost: 4.000902  Resp: 4.000902  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 33273
      Resp_io: 4.000000  Resp_cpu: 33273

  Best NL cost: 4.000902 (VALID)
          resc: 4.000902  resc_io: 4.000000  resc_cpu: 33273
          resp: 4.000902  resp_io: 4.000000  resc_cpu: 33273
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.111111 = outer (5.000000) * inner (0.022222) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.111111
Join order aborted2: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
LORE: or-expansion-subheap (delete addr=0x7fd925c03e90, in-use=57568, alloc=60528)
LORE: or-expansion is worse cost:4.000905
****************
QUERY BLOCK TEXT
****************
select /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null
  from x join y  on y.id = x.id join z on z.id = y.id
  where  ( ( x.a = 0 AND z.b = 1               ) OR 
           ( x.a = 1 AND z.b = 0 AND z.c = 0  )   )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$9E43CB6E nbfros=3 flg=0
  fro(0): flg=4 objn=80828 hint_alias="X"@"SEL$9E43CB6E"
  fro(1): flg=4 objn=80831 hint_alias="Y"@"SEL$9E43CB6E"
  fro(2): flg=4 objn=80833 hint_alias="Z"@"SEL$9E43CB6E"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3072 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table:  Z  Alias:  Z
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  28  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): B(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.050000 Min: 1.000000 Max: 10.000000
    Histogram: Freq  #Bkts: 10  UncompBkts: 10000  EndPtVals: 10  ActualVal: yes
  Column (#3): C(NUMBER)
    AvgLen: 3 NDV: 1 Nulls: 0 Density: 0.000050 Min: 1.000000 Max: 1.000000
    Histogram: Freq  #Bkts: 1  UncompBkts: 10000  EndPtVals: 1  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: Z_B_C  Col#: 2 3 1
  LVLS: 1  #LB: 30  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 210.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: Z_ID  Col#: 1
  LVLS: 1  #LB: 18  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  Y  Alias:  Y
  #Rows: 8  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  3.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 1.000000 Max: 8.000000
Index Stats::
  Index: Y_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 8  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 8.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  X  Alias:  X
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): A(NUMBER)
    AvgLen: 3 NDV: 2 Nulls: 0 Density: 0.250000 Min: 1.000000 Max: 2.000000
    Histogram: Freq  #Bkts: 2  UncompBkts: 10  EndPtVals: 2  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: X_A_ID  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: X_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$9E43CB6E (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for X
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for X[X] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE

 kkecdn: Single Table Predicate:"X"."A"=0 OR "X"."A"=1
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Table: X  Alias: X
    Card: Original: 10.000000  Rounded: 6  Computed: 5.500000  Non Adjusted: 5.500000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 975.000000 (cpu filter eval) (= 97.500000 (per row) * 10.000000 (#rows))
                       =   38282.200000
  Access Path: TableScan
    Cost:  3.001038  Resp: 3.001038  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 38282
      Resp_io: 3.000000  Resp_cpu: 38282
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9296
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000252  Resp: 2.000252  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9296
      Resp_io: 2.000000  Resp_cpu: 9296
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 15443
    ix_sel: 0.550000  ix_sel_with_filters: 0.550000 
    Cost: 1.000419  Resp: 1.000419  Degree: 1
  ****** trying bitmap/domain indexes ******
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 7321
    ix_sel: 0.050000  ix_sel_with_filters: 0.050000 
    Cost: 1.000199  Resp: 1.000199  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 7321
    ix_sel: 0.050000  ix_sel_with_filters: 0.050000 
    Cost: 1.000199  Resp: 1.000199  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  Bitmap nodes:
    Not used X_A_ID
      Cost = 2.000201, sel = 0.050000
    Used X_A_ID
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: X_A_ID
         Cost: 1.000419  Degree: 1  Resp: 1.000419  Card: 5.500000  Bytes: 0.000000

Access path analysis for Y
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Y[Y] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: Y  Alias: Y
    Card: Original: 8.000000  Rounded: 8  Computed: 8.000000  Non Adjusted: 8.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                       =   36807.200000
  Access Path: TableScan
    Cost:  3.000998  Resp: 3.000998  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 36807
      Resp_io: 3.000000  Resp_cpu: 36807
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8081
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000219  Resp: 2.000219  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 8081
      Resp_io: 2.000000  Resp_cpu: 8081
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 1
  ****** trying bitmap/domain indexes ******
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Y_ID
         Cost: 1.000237  Degree: 1  Resp: 1.000237  Card: 8.000000  Bytes: 0.000000

Access path analysis for Z
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Z[Z] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 


 kkecdn: Single Table Predicate: ?? 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"Z"."B"=1
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Table: Z  Alias: Z
    Card: Original: 10000.000000  Rounded: 1000  Computed: 999.997778  Non Adjusted: 999.997778
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2065  ("Z"."B"=1)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 550002.500000 (cpu filter eval) (= 55.000250 (per row) * 10000.000000 (#rows))
                       =   2649402.820000
  Access Path: TableScan
    Cost:  9.071861  Resp: 9.071861  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2649403
      Resp_io: 9.000000  Resp_cpu: 2649403
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1963646
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.053261  Resp: 10.053261  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1963646
      Resp_io: 10.000000  Resp_cpu: 1963646
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 4.000000  resc_cpu: 228486
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    Cost: 4.007554  Resp: 4.007554  Degree: 1
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 4.000000  resc_cpu: 228486
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    Cost: 4.006197  Resp: 4.006197  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 4.000000  resc_cpu: 228486
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    Cost: 4.006197  Resp: 4.006197  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  Bitmap nodes:
    Used Z_B_C
      Cost = 5.022041, sel = 0.100000
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Z_B_C
         Cost: 4.007554  Degree: 1  Resp: 4.007554  Card: 999.997778  Bytes: 0.000000

(newjo-restore) [1 0 2 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is OR expanded SEL$9E43CB6E (#0)
kkogast: Selectivities tab=Y[Y] tnum=0 astat=N 
  card=8.00 nrow=8.00 1.000000
kkogast: Selectivities tab=Z[Z] tnum=1 astat=N 
  card=1000.00 nrow=10000.00 0.100000
kkogast: Selectivities tab=X[X] tnum=2 astat=N 
  card=5.50 nrow=10.00 0.550000
kkogast: Best single table selectivities cnt=2
  Tab = 1 2
kkogast: Final Alternative Starting Tables cnt=2
  Tab = 1 2
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  Y[Y]#0  Z[Z]#1  X[X]#2

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.750000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2048  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.750000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.750000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500550.002500 (cpu filter eval) (= 50.055000 (per row) * 10000.000000 (#rows))
                       =   2599950.322500
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 63.564392  Resp: 63.564392  Degree: 1
      Cost_io: 63.000000  Cost_cpu: 20808324
      Resp_io: 63.000000  Resp_cpu: 20808324
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.250000  resc_cpu: 1914193
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 67.415592  Resp: 67.415592  Degree: 1
      Cost_io: 67.000000  Cost_cpu: 15322267
      Resp_io: 67.000000  Resp_cpu: 15322267
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9266
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002247  Resp: 9.002247  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82853
      Resp_io: 9.000000  Resp_cpu: 82853
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 1.0000e-05 
    NL Join : Cost: 25.059314  Resp: 25.059314  Degree: 1
      Cost_io: 25.000000  Cost_cpu: 2186836
      Resp_io: 25.000000  Resp_cpu: 2186836
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9266
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002247  Resp: 9.002247  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82853
      Resp_io: 9.000000  Resp_cpu: 82853

  Best NL cost: 9.002247 (VALID)
          resc: 9.002247  resc_io: 9.000000  resc_cpu: 82853
          resp: 9.002247  resp_io: 9.000000  resc_cpu: 82853
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  7.999982 = outer (8.000000) * inner (999.997778) * sel (0.001000)
Join Card - Rounded: 8 Computed: 7.999982
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 4.007554  card: 999.997778  bytes:   deg: 1  resp: 4.007554
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 6.019969  Resp: 6.019969  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.019969 
     resc: 6.019969 resc_io: 5.000000 resc_cpu: 37604783
     resp: 6.019969 resp_io: 5.000000 resp_cpu: 37604783
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 4.007554  card: 999.997778  bytes:   deg: 1  resp: 4.007554
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.019019  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.026809  Resp: 5.026809  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.026809  
     resc: 5.026809 resc_io: 5.000000 resc_cpu: 988410
     resp: 5.026809 resp_io: 5.000000 resp_cpu: 988410
Best:: JoinMethod: Hash
       Cost: 5.026809  Degree: 1  Resp: 5.026809  Card: 7.999982 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 7.999982  Cost: 5.026809  Resp: 5.026809  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 2048  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 2048  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2048  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 660.897704 (cpu filter eval) (= 66.089770 (per row) * 10.000000 (#rows))
                       =   37968.097704
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 17.035048  Resp: 17.035048  Degree: 1
      Cost_io: 17.000000  Cost_cpu: 1292154
      Resp_io: 17.000000  Resp_cpu: 1292154
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8982
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 9.028758  Resp: 9.028758  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 1060268
      Resp_io: 9.000000  Resp_cpu: 1060268
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 13.028647  Resp: 13.028647  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 1056171
      Resp_io: 13.000000  Resp_cpu: 1056171
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 14443
    ix_sel: 0.055000  ix_sel_with_filters: 2.7506e-04 
    NL Join : Cost: 13.029971  Resp: 13.029971  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 1104979
      Resp_io: 13.000000  Resp_cpu: 1104979
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 13.028647  Resp: 13.028647  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 1056171
      Resp_io: 13.000000  Resp_cpu: 1056171

  Best NL cost: 13.028647 (VALID)
          resc: 13.028647  resc_io: 13.000000  resc_cpu: 1056171
          resp: 13.028647  resp_io: 13.000000  resc_cpu: 1056171
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.027506 = outer (7.999982) * inner (5.500000) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  5.499988, outer: 7.999982, inner: 5.500000, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.027506
  Outer table:  Z  Alias: Z
    resc: 5.026809  card 7.999982  bytes:   deg: 1  resp: 5.026809
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
  SM join: Resc: 8.027276  Resp: 8.027276  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.027276 
     resc: 8.027276 resc_io: 6.000000 resc_cpu: 74742770
     resp: 8.027276 resp_io: 6.000000 resp_cpu: 74742770
  Outer table:  Z  Alias: Z
    resc: 5.026809  card 7.999982  bytes:   deg: 1  resp: 5.026809
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016323  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 6.043551  Resp: 6.043551  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.043551  
     resc: 6.043551 resc_io: 6.000000 resc_cpu: 1605653
     resp: 6.043551 resp_io: 6.000000 resp_cpu: 1605653
Best:: JoinMethod: Hash
       Cost: 6.043551  Degree: 1  Resp: 6.043551  Card: 0.027506 Bytes: 
***********************
Best so far:  Table#: 0  cost: 1.000237  card: 8.000000  bytes: 24.000000
              Table#: 1  cost: 5.026809  card: 7.999982  bytes: 104.000000
              Table#: 2  cost: 6.043551  card: 0.027506  bytes: 19.000000
***********************
Join order[2]:  Y[Y]#0  X[X]#2  Z[Z]#1

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 621.875000 (cpu filter eval) (= 62.187500 (per row) * 10.000000 (#rows))
                       =   37929.075000
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 13.008467  Resp: 13.008467  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 312154
      Resp_io: 13.000000  Resp_cpu: 312154
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8943
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 5.002177  Resp: 5.002177  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 80268
      Resp_io: 5.000000  Resp_cpu: 80268
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8439
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002068  Resp: 9.002068  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 76233
      Resp_io: 9.000000  Resp_cpu: 76233
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 14443
    ix_sel: 0.055000  ix_sel_with_filters: 0.055000 
    NL Join : Cost: 9.003370  Resp: 9.003370  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 124264
      Resp_io: 9.000000  Resp_cpu: 124264
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8439
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002068  Resp: 9.002068  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 76233
      Resp_io: 9.000000  Resp_cpu: 76233

  Best NL cost: 9.002068 (VALID)
          resc: 9.002068  resc_io: 9.000000  resc_cpu: 76233
          resp: 9.002068  resp_io: 9.000000  resc_cpu: 76233
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  5.500000 = outer (8.000000) * inner (5.500000) * sel (0.125000)
Join Card - Rounded: 6 Computed: 5.500000
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
  SM join: Resc: 3.000674  Resp: 3.000674  [multiMatchCost=0.000000]
SM Join
  SM cost: 3.000674 
     resc: 3.000674 resc_io: 2.000000 resc_cpu: 36893432
     resp: 3.000674 resp_io: 2.000000 resp_cpu: 36893432
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016323  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016978  Resp: 2.016978  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016978  
     resc: 2.016978 resc_io: 2.000000 resc_cpu: 625964
     resp: 2.016978 resp_io: 2.000000 resp_cpu: 625964
Best:: JoinMethod: Hash
       Cost: 2.016978  Degree: 1  Resp: 2.016978  Card: 5.500000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 5.500000  Cost: 2.016978  Resp: 2.016978  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.833333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.833333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.833333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500628.480623 (cpu filter eval) (= 50.062848 (per row) * 10000.000000 (#rows))
                       =   2600028.800623
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 49.440108  Resp: 49.440108  Degree: 1
      Cost_io: 49.000000  Cost_cpu: 16226137
      Resp_io: 49.000000  Resp_cpu: 16226137
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.500000  resc_cpu: 1914272
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 53.328507  Resp: 53.328507  Degree: 1
      Cost_io: 53.000000  Cost_cpu: 12111594
      Resp_io: 53.000000  Resp_cpu: 12111594
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9274
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 8.018488  Resp: 8.018488  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 681610
      Resp_io: 8.000000  Resp_cpu: 681610
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 5.0011e-08 
    NL Join : Cost: 20.061299  Resp: 20.061299  Degree: 1
      Cost_io: 20.000000  Cost_cpu: 2260021
      Resp_io: 20.000000  Resp_cpu: 2260021
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9274
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 8.018488  Resp: 8.018488  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 681610
      Resp_io: 8.000000  Resp_cpu: 681610

  Best NL cost: 8.018488 (VALID)
          resc: 8.018488  resc_io: 8.000000  resc_cpu: 681610
          resp: 8.018488  resp_io: 8.000000  resc_cpu: 681610
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.027506 = outer (5.500000) * inner (999.997778) * sel (5.0011e-06)
Join cardinality for HJ/SMJ (no post filters):  5.499988, outer: 5.500000, inner: 999.997778, sel: 5.0011e-06
Join Card - Rounded: 1 Computed: 0.027506
  Outer table:  X  Alias: X
    resc: 2.016978  card 5.500000  bytes:   deg: 1  resp: 2.016978
  Inner table:  Z  Alias: Z
    resc: 4.007554  card: 999.997778  bytes:   deg: 1  resp: 4.007554
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 8.036729  Resp: 8.036729  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.036729 
     resc: 8.036729 resc_io: 6.000000 resc_cpu: 75091293
     resp: 8.036729 resp_io: 6.000000 resp_cpu: 75091293
  Outer table:  X  Alias: X
    resc: 2.016978  card 5.500000  bytes:   deg: 1  resp: 2.016978
  Inner table:  Z  Alias: Z
    resc: 4.007554  card: 999.997778  bytes:   deg: 1  resp: 4.007554
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.019011  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 6.043543  Resp: 6.043543  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.043543  
     resc: 6.043543 resc_io: 6.000000 resc_cpu: 1605353
     resp: 6.043543 resp_io: 6.000000 resp_cpu: 1605353
Plan cardinality mismatch: best card= 0.02750601943   curr card= 0.02750601943
Best:: JoinMethod: Hash
       Cost: 6.043543  Degree: 1  Resp: 6.043543  Card: 0.027506 Bytes: 
***********************
Best so far:  Table#: 0  cost: 1.000237  card: 8.000000  bytes: 24.000000
              Table#: 2  cost: 2.016978  card: 5.500000  bytes: 54.000000
              Table#: 1  cost: 6.043543  card: 0.027506  bytes: 19.000000
***********************
Join order[3]:  Z[Z]#1  Y[Y]#0  X[X]#2

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 999.997778  Cost: 4.007554  Resp: 4.007554  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   1.356000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   1.356000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   1.356000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 1361.016738  Resp: 1361.016738  Degree: 1
      Cost_io: 1360.000000  Cost_cpu: 37485688
      Resp_io: 1360.000000  Resp_cpu: 37485688
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 0.272000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 276.237599  Resp: 276.237599  Degree: 1
      Cost_io: 276.000000  Cost_cpu: 8759928
      Resp_io: 276.000000  Resp_cpu: 8759928
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 4.036033  Resp: 4.036033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 1328488
      Resp_io: 4.000000  Resp_cpu: 1328488
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 4.036033  Resp: 4.036033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 1328488
      Resp_io: 4.000000  Resp_cpu: 1328488

  Best NL cost: 4.036033 (VALID)
          resc: 4.036033  resc_io: 4.000000  resc_cpu: 1328488
          resp: 4.036033  resp_io: 4.000000  resc_cpu: 1328488
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  7.999982 = outer (999.997778) * inner (8.000000) * sel (0.001000)
Join Card - Rounded: 8 Computed: 7.999982
  Outer table:  Z  Alias: Z
    resc: 4.007554  card 999.997778  bytes:   deg: 1  resp: 4.007554
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 7.019998  Resp: 7.019998  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.019998 
     resc: 7.019998 resc_io: 5.000000 resc_cpu: 74474433
     resp: 7.019998 resp_io: 5.000000 resp_cpu: 74474433
  Outer table:  Z  Alias: Z
    resc: 4.007554  card 999.997778  bytes:   deg: 1  resp: 4.007554
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020364  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 3  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.028154  Resp: 5.028154  [multiMatchCost=0.000000]
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 4.007554  card: 999.997778  bytes:   deg: 1  resp: 4.007554
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.019019  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.026809  Resp: 5.026809  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.026809 swapped 
     resc: 5.026809 resc_io: 5.000000 resc_cpu: 988410
     resp: 5.026809 resp_io: 5.000000 resp_cpu: 988410
Best:: JoinMethod: NestedLoop
       Cost: 4.036033  Degree: 1  Resp: 4.036033  Card: 7.999982 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 7.999982  Cost: 4.036033  Resp: 4.036033  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 660.897704 (cpu filter eval) (= 66.089770 (per row) * 10.000000 (#rows))
                       =   37968.097704
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 16.044272  Resp: 16.044272  Degree: 1
      Cost_io: 16.000000  Cost_cpu: 1632233
      Resp_io: 16.000000  Resp_cpu: 1632233
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8982
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 8.037982  Resp: 8.037982  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 1400347
      Resp_io: 8.000000  Resp_cpu: 1400347
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 12.037871  Resp: 12.037871  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1396250
      Resp_io: 12.000000  Resp_cpu: 1396250
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 14443
    ix_sel: 0.055000  ix_sel_with_filters: 2.7506e-04 
    NL Join : Cost: 12.039195  Resp: 12.039195  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1445057
      Resp_io: 12.000000  Resp_cpu: 1445057
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 12.037871  Resp: 12.037871  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1396250
      Resp_io: 12.000000  Resp_cpu: 1396250

  Best NL cost: 12.037871 (VALID)
          resc: 12.037871  resc_io: 12.000000  resc_cpu: 1396250
          resp: 12.037871  resp_io: 12.000000  resc_cpu: 1396250
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.027506 = outer (7.999982) * inner (5.500000) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  5.499988, outer: 7.999982, inner: 5.500000, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.027506
  Outer table:  Y  Alias: Y
    resc: 4.036033  card 7.999982  bytes:   deg: 1  resp: 4.036033
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
  SM join: Resc: 7.036500  Resp: 7.036500  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.036500 
     resc: 7.036500 resc_io: 5.000000 resc_cpu: 75082849
     resp: 7.036500 resp_io: 5.000000 resp_cpu: 75082849
  Outer table:  Y  Alias: Y
    resc: 4.036033  card 7.999982  bytes:   deg: 1  resp: 4.036033
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016323  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.052775  Resp: 5.052775  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.052775  
     resc: 5.052775 resc_io: 5.000000 resc_cpu: 1945731
     resp: 5.052775 resp_io: 5.000000 resp_cpu: 1945731
Plan cardinality mismatch: best card= 0.02750601943   curr card= 0.02750601943
Best:: JoinMethod: Hash
       Cost: 5.052775  Degree: 1  Resp: 5.052775  Card: 0.027506 Bytes: 
***********************
Best so far:  Table#: 1  cost: 4.007554  card: 999.997778  bytes: 10000.000000
              Table#: 0  cost: 4.036033  card: 7.999982  bytes: 104.000000
              Table#: 2  cost: 5.052775  card: 0.027506  bytes: 19.000000
***********************
Join order[4]:  Z[Z]#1  X[X]#2  Y[Y]#0

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 999.997778  Cost: 4.007554  Resp: 4.007554  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.356000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   1.356000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.356000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 1287.181633 (cpu filter eval) (= 128.718163 (per row) * 10.000000 (#rows))
                       =   38594.381633
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 1361.054363  Resp: 1361.054363  Degree: 1
      Cost_io: 1360.000000  Cost_cpu: 38872870
      Resp_io: 1360.000000  Resp_cpu: 38872870
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.272000  resc_cpu: 9609
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 276.268172  Resp: 276.268172  Degree: 1
      Cost_io: 276.000000  Cost_cpu: 9887110
      Resp_io: 276.000000  Resp_cpu: 9887110
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 15443
    ix_sel: 0.550000  ix_sel_with_filters: 0.002751 
    NL Join : Cost: 1004.447285  Resp: 1004.447285  Degree: 1
      Cost_io: 1004.000000  Cost_cpu: 16490752
      Resp_io: 1004.000000  Resp_cpu: 16490752

  Best NL cost: 276.268172 (VALID)
          resc: 276.268172  resc_io: 276.000000  resc_cpu: 9887110
          resp: 276.268172  resp_io: 276.000000  resc_cpu: 9887110
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  27.506019 = outer (999.997778) * inner (5.500000) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  5499.987778, outer: 999.997778, inner: 5.500000, sel: 0.005001
Join Card - Rounded: 28 Computed: 27.506019
Join order aborted2: cost > best plan cost
***********************
Join order[5]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   1.666667
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.666667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   1.666667
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 11.006474  Resp: 11.006474  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 238686
      Resp_io: 11.000000  Resp_cpu: 238686
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 0.500000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.001799  Resp: 4.001799  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 66332
      Resp_io: 4.000000  Resp_cpu: 66332
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743

  Best NL cost: 1.000590 (VALID)
          resc: 1.000590  resc_io: 1.000000  resc_cpu: 21743
          resp: 1.000590  resp_io: 1.000000  resc_cpu: 21743
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  5.500000 = outer (5.500000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 6 Computed: 5.500000
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000704  Resp: 4.000704  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000704 
     resc: 4.000704 resc_io: 2.000000 resc_cpu: 73763082
     resp: 4.000704 resp_io: 2.000000 resp_cpu: 73763082
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016320  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016976  Resp: 2.016976  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016976  
     resc: 2.016976 resc_io: 2.000000 resc_cpu: 625864
     resp: 2.016976 resp_io: 2.000000 resp_cpu: 625864
Best:: JoinMethod: NestedLoop
       Cost: 1.000590  Degree: 1  Resp: 1.000590  Card: 5.500000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000590  Resp: 1.000590  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.833333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.833333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.833333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500628.480623 (cpu filter eval) (= 50.062848 (per row) * 10000.000000 (#rows))
                       =   2600028.800623
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 48.423719  Resp: 48.423719  Degree: 1
      Cost_io: 48.000000  Cost_cpu: 15621916
      Resp_io: 48.000000  Resp_cpu: 15621916
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.500000  resc_cpu: 1914272
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 52.312119  Resp: 52.312119  Degree: 1
      Cost_io: 52.000000  Cost_cpu: 11507373
      Resp_io: 52.000000  Resp_cpu: 11507373
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9274
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 7.002099  Resp: 7.002099  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 77389
      Resp_io: 7.000000  Resp_cpu: 77389
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 5.0011e-08 
    NL Join : Cost: 19.044911  Resp: 19.044911  Degree: 1
      Cost_io: 19.000000  Cost_cpu: 1655800
      Resp_io: 19.000000  Resp_cpu: 1655800
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9274
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 7.002099  Resp: 7.002099  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 77389
      Resp_io: 7.000000  Resp_cpu: 77389

  Best NL cost: 7.002099 (VALID)
          resc: 7.002099  resc_io: 7.000000  resc_cpu: 77389
          resp: 7.002099  resp_io: 7.000000  resc_cpu: 77389
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.027506 = outer (5.500000) * inner (999.997778) * sel (5.0011e-06)
Join cardinality for HJ/SMJ (no post filters):  5.499988, outer: 5.500000, inner: 999.997778, sel: 5.0011e-06
Join Card - Rounded: 1 Computed: 0.027506
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 5.500000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 4.007554  card: 999.997778  bytes:   deg: 1  resp: 4.007554
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 7.020341  Resp: 7.020341  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.020341 
     resc: 7.020341 resc_io: 5.000000 resc_cpu: 74487072
     resp: 7.020341 resp_io: 5.000000 resp_cpu: 74487072
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 5.500000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 4.007554  card: 999.997778  bytes:   deg: 1  resp: 4.007554
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.019011  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.027154  Resp: 5.027154  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.027154  
     resc: 5.027154 resc_io: 5.000000 resc_cpu: 1001131
     resp: 5.027154 resp_io: 5.000000 resp_cpu: 1001131
Plan cardinality mismatch: best card= 0.02750601943   curr card= 0.02750601943
Best:: JoinMethod: Hash
       Cost: 5.027154  Degree: 1  Resp: 5.027154  Card: 0.027506 Bytes: 
***********************
Best so far:  Table#: 2  cost: 1.000419  card: 5.500000  bytes: 36.000000
              Table#: 0  cost: 1.000590  card: 5.500000  bytes: 54.000000
              Table#: 1  cost: 5.027154  card: 0.027506  bytes: 19.000000
***********************
Join order[6]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.833333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   7.833333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.833333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 628480.623336 (cpu filter eval) (= 62.848062 (per row) * 10000.000000 (#rows))
                       =   2727880.943336
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 48.444355  Resp: 48.444355  Degree: 1
      Cost_io: 48.000000  Cost_cpu: 16382729
      Resp_io: 48.000000  Resp_cpu: 16382729
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.500000  resc_cpu: 2042124
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 52.332755  Resp: 52.332755  Degree: 1
      Cost_io: 52.000000  Cost_cpu: 12268186
      Resp_io: 52.000000  Resp_cpu: 12268186
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 5.0011e-04 
    NL Join : Cost: 19.057491  Resp: 19.057491  Degree: 1
      Cost_io: 19.000000  Cost_cpu: 2119613
      Resp_io: 19.000000  Resp_cpu: 2119613

  Best NL cost: 19.057491 (VALID)
          resc: 19.057491  resc_io: 19.000000  resc_cpu: 2119613
          resp: 19.057491  resp_io: 19.000000  resc_cpu: 2119613
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  27.506019 = outer (5.500000) * inner (999.997778) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  5499.987778, outer: 5.500000, inner: 999.997778, sel: 0.005001
Join Card - Rounded: 28 Computed: 27.506019
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :1
Join order[7]:  Z[Z]#1  Y[Y]#0  X[X]#2

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 999.997778  Cost: 4.007554  Resp: 4.007554  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   1.356000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   1.356000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   1.356000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 1361.016738  Resp: 1361.016738  Degree: 1
      Cost_io: 1360.000000  Cost_cpu: 37485688
      Resp_io: 1360.000000  Resp_cpu: 37485688
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 0.272000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 276.237599  Resp: 276.237599  Degree: 1
      Cost_io: 276.000000  Cost_cpu: 8759928
      Resp_io: 276.000000  Resp_cpu: 8759928
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 4.036033  Resp: 4.036033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 1328488
      Resp_io: 4.000000  Resp_cpu: 1328488
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 4.036033  Resp: 4.036033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 1328488
      Resp_io: 4.000000  Resp_cpu: 1328488

  Best NL cost: 4.036033 (VALID)
          resc: 4.036033  resc_io: 4.000000  resc_cpu: 1328488
          resp: 4.036033  resp_io: 4.000000  resc_cpu: 1328488
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  7.999982 = outer (999.997778) * inner (8.000000) * sel (0.001000)
Join Card - Rounded: 8 Computed: 7.999982
  Outer table:  Z  Alias: Z
    resc: 4.007554  card 999.997778  bytes:   deg: 1  resp: 4.007554
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 7.019998  Resp: 7.019998  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.019998 
     resc: 7.019998 resc_io: 5.000000 resc_cpu: 74474433
     resp: 7.019998 resp_io: 5.000000 resp_cpu: 74474433
  Outer table:  Z  Alias: Z
    resc: 4.007554  card 999.997778  bytes:   deg: 1  resp: 4.007554
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020364  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 3  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.028154  Resp: 5.028154  [multiMatchCost=0.000000]
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 4.007554  card: 999.997778  bytes:   deg: 1  resp: 4.007554
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.019019  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.026809  Resp: 5.026809  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.026809 swapped 
     resc: 5.026809 resc_io: 5.000000 resc_cpu: 988410
     resp: 5.026809 resp_io: 5.000000 resp_cpu: 988410
Best:: JoinMethod: NestedLoop
       Cost: 4.036033  Degree: 1  Resp: 4.036033  Card: 7.999982 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 7.999982  Cost: 4.036033  Resp: 4.036033  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2064  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 660.897704 (cpu filter eval) (= 66.089770 (per row) * 10.000000 (#rows))
                       =   37968.097704
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 16.044272  Resp: 16.044272  Degree: 1
      Cost_io: 16.000000  Cost_cpu: 1632233
      Resp_io: 16.000000  Resp_cpu: 1632233
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8982
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 8.037982  Resp: 8.037982  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 1400347
      Resp_io: 8.000000  Resp_cpu: 1400347
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 12.037871  Resp: 12.037871  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1396250
      Resp_io: 12.000000  Resp_cpu: 1396250
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 14443
    ix_sel: 0.055000  ix_sel_with_filters: 2.7506e-04 
    NL Join : Cost: 12.039195  Resp: 12.039195  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1445057
      Resp_io: 12.000000  Resp_cpu: 1445057
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 12.037871  Resp: 12.037871  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1396250
      Resp_io: 12.000000  Resp_cpu: 1396250

  Best NL cost: 12.037871 (VALID)
          resc: 12.037871  resc_io: 12.000000  resc_cpu: 1396250
          resp: 12.037871  resp_io: 12.000000  resc_cpu: 1396250
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.027506 = outer (7.999982) * inner (5.500000) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  5.499988, outer: 7.999982, inner: 5.500000, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.027506
  Outer table:  Y  Alias: Y
    resc: 4.036033  card 7.999982  bytes:   deg: 1  resp: 4.036033
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
  SM join: Resc: 7.036500  Resp: 7.036500  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.036500 
     resc: 7.036500 resc_io: 5.000000 resc_cpu: 75082849
     resp: 7.036500 resp_io: 5.000000 resp_cpu: 75082849
  Outer table:  Y  Alias: Y
    resc: 4.036033  card 7.999982  bytes:   deg: 1  resp: 4.036033
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016323  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.052775  Resp: 5.052775  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.052775  
     resc: 5.052775 resc_io: 5.000000 resc_cpu: 1945731
     resp: 5.052775 resp_io: 5.000000 resp_cpu: 1945731
Plan cardinality mismatch: best card= 0.02750601943   curr card= 0.02750601943
Join order aborted2: cost > best plan cost
***********************
Join order[8]:  Z[Z]#1  X[X]#2  Y[Y]#0

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 999.997778  Cost: 4.007554  Resp: 4.007554  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.356000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   1.356000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.356000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 1287.181633 (cpu filter eval) (= 128.718163 (per row) * 10.000000 (#rows))
                       =   38594.381633
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 1361.054363  Resp: 1361.054363  Degree: 1
      Cost_io: 1360.000000  Cost_cpu: 38872870
      Resp_io: 1360.000000  Resp_cpu: 38872870
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.272000  resc_cpu: 9609
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 276.268172  Resp: 276.268172  Degree: 1
      Cost_io: 276.000000  Cost_cpu: 9887110
      Resp_io: 276.000000  Resp_cpu: 9887110
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 15443
    ix_sel: 0.550000  ix_sel_with_filters: 0.002751 
    NL Join : Cost: 1004.447285  Resp: 1004.447285  Degree: 1
      Cost_io: 1004.000000  Cost_cpu: 16490752
      Resp_io: 1004.000000  Resp_cpu: 16490752

  Best NL cost: 276.268172 (VALID)
          resc: 276.268172  resc_io: 276.000000  resc_cpu: 9887110
          resp: 276.268172  resp_io: 276.000000  resc_cpu: 9887110
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  27.506019 = outer (999.997778) * inner (5.500000) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  5499.987778, outer: 999.997778, inner: 5.500000, sel: 0.005001
Join Card - Rounded: 28 Computed: 27.506019
Join order aborted2: cost > best plan cost
***********************
Join order[9]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   1.666667
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.666667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   1.666667
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 11.006474  Resp: 11.006474  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 238686
      Resp_io: 11.000000  Resp_cpu: 238686
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 0.500000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.001799  Resp: 4.001799  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 66332
      Resp_io: 4.000000  Resp_cpu: 66332
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743

  Best NL cost: 1.000590 (VALID)
          resc: 1.000590  resc_io: 1.000000  resc_cpu: 21743
          resp: 1.000590  resp_io: 1.000000  resc_cpu: 21743
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  5.500000 = outer (5.500000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 6 Computed: 5.500000
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000704  Resp: 4.000704  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000704 
     resc: 4.000704 resc_io: 2.000000 resc_cpu: 73763082
     resp: 4.000704 resp_io: 2.000000 resp_cpu: 73763082
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016320  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016976  Resp: 2.016976  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016976  
     resc: 2.016976 resc_io: 2.000000 resc_cpu: 625864
     resp: 2.016976 resp_io: 2.000000 resp_cpu: 625864
Best:: JoinMethod: NestedLoop
       Cost: 1.000590  Degree: 1  Resp: 1.000590  Card: 5.500000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000590  Resp: 1.000590  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.833333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2065  ("Z"."B"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.833333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.833333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500628.480623 (cpu filter eval) (= 50.062848 (per row) * 10000.000000 (#rows))
                       =   2600028.800623
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 48.423719  Resp: 48.423719  Degree: 1
      Cost_io: 48.000000  Cost_cpu: 15621916
      Resp_io: 48.000000  Resp_cpu: 15621916
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.500000  resc_cpu: 1914272
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 52.312119  Resp: 52.312119  Degree: 1
      Cost_io: 52.000000  Cost_cpu: 11507373
      Resp_io: 52.000000  Resp_cpu: 11507373
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9274
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 7.002099  Resp: 7.002099  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 77389
      Resp_io: 7.000000  Resp_cpu: 77389
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 5.0011e-08 
    NL Join : Cost: 19.044911  Resp: 19.044911  Degree: 1
      Cost_io: 19.000000  Cost_cpu: 1655800
      Resp_io: 19.000000  Resp_cpu: 1655800
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9274
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 7.002099  Resp: 7.002099  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 77389
      Resp_io: 7.000000  Resp_cpu: 77389

  Best NL cost: 7.002099 (VALID)
          resc: 7.002099  resc_io: 7.000000  resc_cpu: 77389
          resp: 7.002099  resp_io: 7.000000  resc_cpu: 77389
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.027506 = outer (5.500000) * inner (999.997778) * sel (5.0011e-06)
Join cardinality for HJ/SMJ (no post filters):  5.499988, outer: 5.500000, inner: 999.997778, sel: 5.0011e-06
Join Card - Rounded: 1 Computed: 0.027506
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 5.500000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 4.007554  card: 999.997778  bytes:   deg: 1  resp: 4.007554
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 7.020341  Resp: 7.020341  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.020341 
     resc: 7.020341 resc_io: 5.000000 resc_cpu: 74487072
     resp: 7.020341 resp_io: 5.000000 resp_cpu: 74487072
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 5.500000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 4.007554  card: 999.997778  bytes:   deg: 1  resp: 4.007554
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.019011  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.027154  Resp: 5.027154  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.027154  
     resc: 5.027154 resc_io: 5.000000 resc_cpu: 1001131
     resp: 5.027154 resp_io: 5.000000 resp_cpu: 1001131
Join order aborted2: cost > best plan cost
***********************
Join order[10]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.833333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   7.833333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.833333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 628480.623336 (cpu filter eval) (= 62.848062 (per row) * 10000.000000 (#rows))
                       =   2727880.943336
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 48.444355  Resp: 48.444355  Degree: 1
      Cost_io: 48.000000  Cost_cpu: 16382729
      Resp_io: 48.000000  Resp_cpu: 16382729
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.500000  resc_cpu: 2042124
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 52.332755  Resp: 52.332755  Degree: 1
      Cost_io: 52.000000  Cost_cpu: 12268186
      Resp_io: 52.000000  Resp_cpu: 12268186
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 5.0011e-04 
    NL Join : Cost: 19.057491  Resp: 19.057491  Degree: 1
      Cost_io: 19.000000  Cost_cpu: 2119613
      Resp_io: 19.000000  Resp_cpu: 2119613

  Best NL cost: 19.057491 (VALID)
          resc: 19.057491  resc_io: 19.000000  resc_cpu: 2119613
          resp: 19.057491  resp_io: 19.000000  resc_cpu: 2119613
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  27.506019 = outer (5.500000) * inner (999.997778) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  5499.987778, outer: 5.500000, inner: 999.997778, sel: 0.005001
Join Card - Rounded: 28 Computed: 27.506019
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[11]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   1.666667
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.666667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   1.666667
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 11.006474  Resp: 11.006474  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 238686
      Resp_io: 11.000000  Resp_cpu: 238686
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 0.500000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.001799  Resp: 4.001799  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 66332
      Resp_io: 4.000000  Resp_cpu: 66332
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743

  Best NL cost: 1.000590 (VALID)
          resc: 1.000590  resc_io: 1.000000  resc_cpu: 21743
          resp: 1.000590  resp_io: 1.000000  resc_cpu: 21743
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  5.500000 = outer (5.500000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 6 Computed: 5.500000
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000704  Resp: 4.000704  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000704 
     resc: 4.000704 resc_io: 2.000000 resc_cpu: 73763082
     resp: 4.000704 resp_io: 2.000000 resp_cpu: 73763082
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016320  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016976  Resp: 2.016976  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016976  
     resc: 2.016976 resc_io: 2.000000 resc_cpu: 625864
     resp: 2.016976 resp_io: 2.000000 resp_cpu: 625864
Best:: JoinMethod: NestedLoop
       Cost: 1.000590  Degree: 1  Resp: 1.000590  Card: 5.500000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000590  Resp: 1.000590  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.833333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2065  ("Z"."B"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.833333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.833333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500628.480623 (cpu filter eval) (= 50.062848 (per row) * 10000.000000 (#rows))
                       =   2600028.800623
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 48.423719  Resp: 48.423719  Degree: 1
      Cost_io: 48.000000  Cost_cpu: 15621916
      Resp_io: 48.000000  Resp_cpu: 15621916
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.500000  resc_cpu: 1914272
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 52.312119  Resp: 52.312119  Degree: 1
      Cost_io: 52.000000  Cost_cpu: 11507373
      Resp_io: 52.000000  Resp_cpu: 11507373
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9274
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 7.002099  Resp: 7.002099  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 77389
      Resp_io: 7.000000  Resp_cpu: 77389
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 5.0011e-08 
    NL Join : Cost: 19.044911  Resp: 19.044911  Degree: 1
      Cost_io: 19.000000  Cost_cpu: 1655800
      Resp_io: 19.000000  Resp_cpu: 1655800
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9274
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 7.002099  Resp: 7.002099  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 77389
      Resp_io: 7.000000  Resp_cpu: 77389

  Best NL cost: 7.002099 (VALID)
          resc: 7.002099  resc_io: 7.000000  resc_cpu: 77389
          resp: 7.002099  resp_io: 7.000000  resc_cpu: 77389
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.027506 = outer (5.500000) * inner (999.997778) * sel (5.0011e-06)
Join cardinality for HJ/SMJ (no post filters):  5.499988, outer: 5.500000, inner: 999.997778, sel: 5.0011e-06
Join Card - Rounded: 1 Computed: 0.027506
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 5.500000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 4.007554  card: 999.997778  bytes:   deg: 1  resp: 4.007554
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 7.020341  Resp: 7.020341  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.020341 
     resc: 7.020341 resc_io: 5.000000 resc_cpu: 74487072
     resp: 7.020341 resp_io: 5.000000 resp_cpu: 74487072
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 5.500000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 4.007554  card: 999.997778  bytes:   deg: 1  resp: 4.007554
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.019011  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.027154  Resp: 5.027154  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.027154  
     resc: 5.027154 resc_io: 5.000000 resc_cpu: 1001131
     resp: 5.027154 resp_io: 5.000000 resp_cpu: 1001131
Join order aborted2: cost > best plan cost
***********************
Join order[12]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.833333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   7.833333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.833333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 628480.623336 (cpu filter eval) (= 62.848062 (per row) * 10000.000000 (#rows))
                       =   2727880.943336
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 48.444355  Resp: 48.444355  Degree: 1
      Cost_io: 48.000000  Cost_cpu: 16382729
      Resp_io: 48.000000  Resp_cpu: 16382729
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.500000  resc_cpu: 2042124
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 52.332755  Resp: 52.332755  Degree: 1
      Cost_io: 52.000000  Cost_cpu: 12268186
      Resp_io: 52.000000  Resp_cpu: 12268186
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 5.0011e-04 
    NL Join : Cost: 19.057491  Resp: 19.057491  Degree: 1
      Cost_io: 19.000000  Cost_cpu: 2119613
      Resp_io: 19.000000  Resp_cpu: 2119613

  Best NL cost: 19.057491 (VALID)
          resc: 19.057491  resc_io: 19.000000  resc_cpu: 2119613
          resp: 19.057491  resp_io: 19.000000  resc_cpu: 2119613
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  27.506019 = outer (5.500000) * inner (999.997778) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  5499.987778, outer: 5.500000, inner: 999.997778, sel: 0.005001
Join Card - Rounded: 28 Computed: 27.506019
Join order aborted2: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
Consider using bloom filter between Y[Y] and Z[Z] with ??
kkoBloomFilter: join (lcdn:6 rcdn:1000 jcdn:0 limit:2750)
kkopqSingleJoinBloomNdv:Compute bloom ndv for lfro:X[X] and rfro:Z[Z] swap:no
kkopqSingleJoinBloomNdv:Compute bloom ndv for lfro:Y[Y] and rfro:Z[Z] swap:no
kkopqSingleJoinBloomNdv: predCnt:#1 col1:(bndv:10000 ndv:10000) and col2:(bndv:8 ndv:8) creatorNDV:8.0 userNDV:10000.0
kkopqComputeBloomNdv: predCnt:1 creatorNdv:8.0 userNdv:10000.0 singleTblPred:yes
kkoBloomFilter: join ndv:6 reduction:0.005500 (limit:0.500000)  accepted, but final decision will be made in code generation
LORE: Trying or-Expansion on query block SEL$9E43CB6E (#0)
LORE: Or-expansion bypassed: No index driver found in OR chain: 
id=0  predicate=(LNNVL("Z"."C"=0) OR LNNVL("Z"."B"=0)) AND "Z"."B"=1 AND ("X"."A"=0 OR "X"."A"=1) AND ("X"."A"=0 AND "Z"."B"=1 OR "X"."A"=1 AND "Z"."B"=0 AND "Z"."C"=0) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"

LORE: ******** Next OR predicate ********

LORE: Trying or-Expansion on query block SEL$9E43CB6E (#0) on OR chain:
id=0  predicate=("X"."A"=0 AND "Z"."B"=1 OR "X"."A"=1 AND "Z"."B"=0 AND "Z"."C"=0) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"

LORE: ******** OR-branching ********

LORE: or-expansion-subheap (create addr=0x7fd92079bf20)
****************
QUERY BLOCK TEXT
****************
select /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null
  from x join y  on y.id = x.id join z on z.id = y.id
  where  ( ( x.a = 0 AND z.b = 1               ) OR 
           ( x.a = 1 AND z.b = 0 AND z.c = 0  )   )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$9E43CB6E nbfros=3 flg=0
  fro(0): flg=4 objn=80828 hint_alias="X"@"SEL$9E43CB6E"
  fro(1): flg=4 objn=80831 hint_alias="Y"@"SEL$9E43CB6E"
  fro(2): flg=4 objn=80833 hint_alias="Z"@"SEL$9E43CB6E"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3072 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table:  Z  Alias:  Z
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  28  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): B(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.050000 Min: 1.000000 Max: 10.000000
    Histogram: Freq  #Bkts: 10  UncompBkts: 10000  EndPtVals: 10  ActualVal: yes
  Column (#3): C(NUMBER)
    AvgLen: 3 NDV: 1 Nulls: 0 Density: 0.000050 Min: 1.000000 Max: 1.000000
    Histogram: Freq  #Bkts: 1  UncompBkts: 10000  EndPtVals: 1  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: Z_B_C  Col#: 2 3 1
  LVLS: 1  #LB: 30  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 210.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: Z_ID  Col#: 1
  LVLS: 1  #LB: 18  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  Y  Alias:  Y
  #Rows: 8  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  3.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 1.000000 Max: 8.000000
Index Stats::
  Index: Y_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 8  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 8.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  X  Alias:  X
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): A(NUMBER)
    AvgLen: 3 NDV: 2 Nulls: 0 Density: 0.250000 Min: 1.000000 Max: 2.000000
    Histogram: Freq  #Bkts: 2  UncompBkts: 10  EndPtVals: 2  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: X_A_ID  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: X_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$9E43CB6E (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for X
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for X[X] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE


 kkecdn: Single Table Predicate:"X"."A"=0 OR "X"."A"=1
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

 kkecdn: Single Table Predicate:"X"."A"=0
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Table: X  Alias: X
    Card: Original: 10.000000  Rounded: 1  Computed: 0.275000  Non Adjusted: 0.275000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2064  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 548.750000 (cpu filter eval) (= 54.875000 (per row) * 10.000000 (#rows))
                       =   37855.950000
  Access Path: TableScan
    Cost:  3.001027  Resp: 3.001027  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 37856
      Resp_io: 3.000000  Resp_cpu: 37856
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8870
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000241  Resp: 2.000241  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 8870
      Resp_io: 2.000000  Resp_cpu: 8870
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 7321
    ix_sel: 0.050000  ix_sel_with_filters: 0.027500 
    Cost: 1.000201  Resp: 1.000201  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: X_A_ID
         Cost: 1.000201  Degree: 1  Resp: 1.000201  Card: 0.275000  Bytes: 0.000000

Access path analysis for Y
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Y[Y] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: Y  Alias: Y
    Card: Original: 8.000000  Rounded: 8  Computed: 8.000000  Non Adjusted: 8.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                       =   36807.200000
  Access Path: TableScan
    Cost:  3.000998  Resp: 3.000998  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 36807
      Resp_io: 3.000000  Resp_cpu: 36807
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8081
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000219  Resp: 2.000219  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 8081
      Resp_io: 2.000000  Resp_cpu: 8081
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 1
  ****** trying bitmap/domain indexes ******
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Y_ID
         Cost: 1.000237  Degree: 1  Resp: 1.000237  Card: 8.000000  Bytes: 0.000000

Access path analysis for Z
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Z[Z] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 


 kkecdn: Single Table Predicate: ?? 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"Z"."B"=1
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

 kkecdn: Single Table Predicate:"Z"."B"=1
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Table: Z  Alias: Z
    Card: Original: 10000.000000  Rounded: 1000  Computed: 999.997778  Non Adjusted: 999.997778
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2065  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 555000.250000 (cpu filter eval) (= 55.500025 (per row) * 10000.000000 (#rows))
                       =   2654400.570000
  Access Path: TableScan
    Cost:  9.071996  Resp: 9.071996  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2654401
      Resp_io: 9.000000  Resp_cpu: 2654401
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1968643
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.053396  Resp: 10.053396  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1968643
      Resp_io: 10.000000  Resp_cpu: 1968643
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."B"=1

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 4.000000  resc_cpu: 228486
    ix_sel: 0.100000  ix_sel_with_filters: 0.010000 
    Cost: 4.007689  Resp: 4.007689  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Z_B_C
         Cost: 4.007689  Degree: 1  Resp: 4.007689  Card: 999.997778  Bytes: 0.000000

(newjo-restore) [1 0 2 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is OR expanded SEL$9E43CB6E (#0)
kkogast: Selectivities tab=Y[Y] tnum=0 astat=N 
  card=8.00 nrow=8.00 1.000000
kkogast: Selectivities tab=Z[Z] tnum=1 astat=N 
  card=1000.00 nrow=10000.00 0.100000
kkogast: Selectivities tab=X[X] tnum=2 astat=N 
  card=0.28 nrow=10.00 0.027500
kkogast: Best single table selectivities cnt=2
  Tab = 2 1
kkogast: Final Alternative Starting Tables cnt=2
  Tab = 2 1
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  Y[Y]#0  Z[Z]#1  X[X]#2

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.750000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2081  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.750000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.750000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500555.000250 (cpu filter eval) (= 50.055500 (per row) * 10000.000000 (#rows))
                       =   2599955.320250
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 63.564393  Resp: 63.564393  Degree: 1
      Cost_io: 63.000000  Cost_cpu: 20808364
      Resp_io: 63.000000  Resp_cpu: 20808364
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.250000  resc_cpu: 1914198
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 67.415593  Resp: 67.415593  Degree: 1
      Cost_io: 67.000000  Cost_cpu: 15322307
      Resp_io: 67.000000  Resp_cpu: 15322307
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002247  Resp: 9.002247  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82857
      Resp_io: 9.000000  Resp_cpu: 82857
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."B"=1

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 1.0000e-06 
    NL Join : Cost: 25.059315  Resp: 25.059315  Degree: 1
      Cost_io: 25.000000  Cost_cpu: 2186876
      Resp_io: 25.000000  Resp_cpu: 2186876
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002247  Resp: 9.002247  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82857
      Resp_io: 9.000000  Resp_cpu: 82857

  Best NL cost: 9.002247 (VALID)
          resc: 9.002247  resc_io: 9.000000  resc_cpu: 82857
          resp: 9.002247  resp_io: 9.000000  resc_cpu: 82857
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  7.999982 = outer (8.000000) * inner (999.997778) * sel (0.001000)
Join Card - Rounded: 8 Computed: 7.999982
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 6.020104  Resp: 6.020104  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.020104 
     resc: 6.020104 resc_io: 5.000000 resc_cpu: 37609780
     resp: 6.020104 resp_io: 5.000000 resp_cpu: 37609780
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.019019  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.026945  Resp: 5.026945  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.026945  
     resc: 5.026945 resc_io: 5.000000 resc_cpu: 993407
     resp: 5.026945 resp_io: 5.000000 resp_cpu: 993407
Best:: JoinMethod: Hash
       Cost: 5.026945  Degree: 1  Resp: 5.026945  Card: 7.999982 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 7.999982  Cost: 5.026945  Resp: 5.026945  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2064  ("X"."A"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 531.093750 (cpu filter eval) (= 53.109375 (per row) * 10.000000 (#rows))
                       =   37838.293750
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 17.035155  Resp: 17.035155  Degree: 1
      Cost_io: 17.000000  Cost_cpu: 1296114
      Resp_io: 17.000000  Resp_cpu: 1296114
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8853
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 9.028865  Resp: 9.028865  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 1064228
      Resp_io: 9.000000  Resp_cpu: 1064228
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8396
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 13.028766  Resp: 13.028766  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 1060578
      Resp_io: 13.000000  Resp_cpu: 1060578
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.005000  ix_sel_with_filters: 0.002750 
    NL Join : Cost: 5.027194  Resp: 5.027194  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 1002587
      Resp_io: 5.000000  Resp_cpu: 1002587
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8396
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 13.028766  Resp: 13.028766  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 1060578
      Resp_io: 13.000000  Resp_cpu: 1060578

  Best NL cost: 5.027194 (VALID)
          resc: 5.027194  resc_io: 5.000000  resc_cpu: 1002587
          resp: 5.027194  resp_io: 5.000000  resc_cpu: 1002587
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.274999 = outer (7.999982) * inner (0.275000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.274999
  Outer table:  Z  Alias: Z
    resc: 5.026945  card 7.999982  bytes:   deg: 1  resp: 5.026945
  Inner table:  X  Alias: X
    resc: 1.000201  card: 0.275000  bytes:   deg: 1  resp: 1.000201
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 8.027175  Resp: 8.027175  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.027175 
     resc: 8.027175 resc_io: 6.000000 resc_cpu: 74739046
     resp: 8.027175 resp_io: 6.000000 resp_cpu: 74739046
  Outer table:  Z  Alias: Z
    resc: 5.026945  card 7.999982  bytes:   deg: 1  resp: 5.026945
  Inner table:  X  Alias: X
    resc: 1.000201  card: 0.275000  bytes:   deg: 1  resp: 1.000201
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016309  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 6.043455  Resp: 6.043455  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.043455  
     resc: 6.043455 resc_io: 6.000000 resc_cpu: 1602126
     resp: 6.043455 resp_io: 6.000000 resp_cpu: 1602126
Best:: JoinMethod: NestedLoop
       Cost: 5.027194  Degree: 1  Resp: 5.027194  Card: 0.274999 Bytes: 
***********************
Best so far:  Table#: 0  cost: 1.000237  card: 8.000000  bytes: 24.000000
              Table#: 1  cost: 5.026945  card: 7.999982  bytes: 104.000000
              Table#: 2  cost: 5.027194  card: 0.274999  bytes: 19.000000
***********************
Join order[2]:  Y[Y]#0  X[X]#2  Z[Z]#1

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 531.093750 (cpu filter eval) (= 53.109375 (per row) * 10.000000 (#rows))
                       =   37838.293750
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 13.008447  Resp: 13.008447  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 311428
      Resp_io: 13.000000  Resp_cpu: 311428
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8853
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 5.002157  Resp: 5.002157  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 79542
      Resp_io: 5.000000  Resp_cpu: 79542
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8396
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002058  Resp: 9.002058  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 75892
      Resp_io: 9.000000  Resp_cpu: 75892
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.005000  ix_sel_with_filters: 0.002750 
    NL Join : Cost: 1.000486  Resp: 1.000486  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 17901
      Resp_io: 1.000000  Resp_cpu: 17901
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8396
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002058  Resp: 9.002058  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 75892
      Resp_io: 9.000000  Resp_cpu: 75892

  Best NL cost: 1.000486 (VALID)
          resc: 1.000486  resc_io: 1.000000  resc_cpu: 17901
          resp: 1.000486  resp_io: 1.000000  resc_cpu: 17901
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.275000 = outer (8.000000) * inner (0.275000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.275000
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000201  card: 0.275000  bytes:   deg: 1  resp: 1.000201
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 3.000438  Resp: 3.000438  [multiMatchCost=0.000000]
SM Join
  SM cost: 3.000438 
     resc: 3.000438 resc_io: 2.000000 resc_cpu: 36884709
     resp: 3.000438 resp_io: 2.000000 resp_cpu: 36884709
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000201  card: 0.275000  bytes:   deg: 1  resp: 1.000201
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016309  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016747  Resp: 2.016747  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016747  
     resc: 2.016747 resc_io: 2.000000 resc_cpu: 617440
     resp: 2.016747 resp_io: 2.000000 resp_cpu: 617440
Best:: JoinMethod: NestedLoop
       Cost: 1.000486  Degree: 1  Resp: 1.000486  Card: 0.275000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000486  Resp: 1.000486  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500555.000250 (cpu filter eval) (= 50.055500 (per row) * 10000.000000 (#rows))
                       =   2599955.320250
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.071005  Resp: 10.071005  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2617857
      Resp_io: 10.000000  Resp_cpu: 2617857
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1914198
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.052405  Resp: 11.052405  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1932100
      Resp_io: 11.000000  Resp_cpu: 1932100
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000737  Resp: 2.000737  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 27168
      Resp_io: 2.000000  Resp_cpu: 27168
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."B"=1

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 1.0000e-06 
    NL Join : Cost: 4.007870  Resp: 4.007870  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 290171
      Resp_io: 4.000000  Resp_cpu: 290171
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000737  Resp: 2.000737  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 27168
      Resp_io: 2.000000  Resp_cpu: 27168

  Best NL cost: 2.000737 (VALID)
          resc: 2.000737  resc_io: 2.000000  resc_cpu: 27168
          resp: 2.000737  resp_io: 2.000000  resc_cpu: 27168
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.274999 = outer (0.275000) * inner (999.997778) * sel (0.001000)
Join Card - Rounded: 1 Computed: 0.274999
  Outer table:  X  Alias: X
    resc: 1.000486  card 0.275000  bytes:   deg: 1  resp: 1.000486
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 6.020353  Resp: 6.020353  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.020353 
     resc: 6.020353 resc_io: 5.000000 resc_cpu: 37618960
     resp: 6.020353 resp_io: 5.000000 resp_cpu: 37618960
  Outer table:  X  Alias: X
    resc: 1.000486  card 0.275000  bytes:   deg: 1  resp: 1.000486
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.018990  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.027165  Resp: 5.027165  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.027165  
     resc: 5.027165 resc_io: 5.000000 resc_cpu: 1001537
     resp: 5.027165 resp_io: 5.000000 resp_cpu: 1001537
Best:: JoinMethod: NestedLoop
       Cost: 2.000737  Degree: 1  Resp: 2.000737  Card: 0.274999 Bytes: 
***********************
Best so far:  Table#: 0  cost: 1.000237  card: 8.000000  bytes: 24.000000
              Table#: 2  cost: 1.000486  card: 0.275000  bytes: 9.000000
              Table#: 1  cost: 2.000737  card: 0.274999  bytes: 19.000000
***********************
Join order[3]:  Z[Z]#1  Y[Y]#0  X[X]#2
Join order aborted1: cost > best plan cost
***********************
Join order[4]:  Z[Z]#1  X[X]#2  Y[Y]#0
Join order aborted1: cost > best plan cost
***********************
Join order[5]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 4.001210  Resp: 4.001210  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 44626
      Resp_io: 4.000000  Resp_cpu: 44626
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 3.000431  Resp: 3.000431  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 15900
      Resp_io: 3.000000  Resp_cpu: 15900
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469

  Best NL cost: 1.000230 (VALID)
          resc: 1.000230  resc_io: 1.000000  resc_cpu: 8469
          resp: 1.000230  resp_io: 1.000000  resc_cpu: 8469
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.275000 = outer (0.275000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.275000
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000467  Resp: 4.000467  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000467 
     resc: 4.000467 resc_io: 2.000000 resc_cpu: 73754360
     resp: 4.000467 resp_io: 2.000000 resp_cpu: 73754360
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016738  Resp: 2.016738  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016738  
     resc: 2.016738 resc_io: 2.000000 resc_cpu: 617090
     resp: 2.016738 resp_io: 2.000000 resp_cpu: 617090
Best:: JoinMethod: NestedLoop
       Cost: 1.000230  Degree: 1  Resp: 1.000230  Card: 0.275000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000230  Resp: 1.000230  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500555.000250 (cpu filter eval) (= 50.055500 (per row) * 10000.000000 (#rows))
                       =   2599955.320250
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.070749  Resp: 10.070749  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2608424
      Resp_io: 10.000000  Resp_cpu: 2608424
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1914198
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.052149  Resp: 11.052149  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1922667
      Resp_io: 11.000000  Resp_cpu: 1922667
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17736
      Resp_io: 2.000000  Resp_cpu: 17736
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."B"=1

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 1.0000e-06 
    NL Join : Cost: 4.007615  Resp: 4.007615  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 280738
      Resp_io: 4.000000  Resp_cpu: 280738
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17736
      Resp_io: 2.000000  Resp_cpu: 17736

  Best NL cost: 2.000481 (VALID)
          resc: 2.000481  resc_io: 2.000000  resc_cpu: 17736
          resp: 2.000481  resp_io: 2.000000  resc_cpu: 17736
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.274999 = outer (0.275000) * inner (999.997778) * sel (0.001000)
Join Card - Rounded: 1 Computed: 0.274999
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.275000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 7.020097  Resp: 7.020097  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.020097 
     resc: 7.020097 resc_io: 5.000000 resc_cpu: 74478097
     resp: 7.020097 resp_io: 5.000000 resp_cpu: 74478097
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.275000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.018990  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.026909  Resp: 5.026909  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.026909  
     resc: 5.026909 resc_io: 5.000000 resc_cpu: 992105
     resp: 5.026909 resp_io: 5.000000 resp_cpu: 992105
Best:: JoinMethod: NestedLoop
       Cost: 2.000481  Degree: 1  Resp: 2.000481  Card: 0.274999 Bytes: 
***********************
Best so far:  Table#: 2  cost: 1.000201  card: 0.275000  bytes: 6.000000
              Table#: 0  cost: 1.000230  card: 0.275000  bytes: 9.000000
              Table#: 1  cost: 2.000481  card: 0.274999  bytes: 19.000000
***********************
Join order[6]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 555000.250000 (cpu filter eval) (= 55.500025 (per row) * 10000.000000 (#rows))
                       =   2654400.570000
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.072198  Resp: 10.072198  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2661820
      Resp_io: 10.000000  Resp_cpu: 2661820
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1968643
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.053597  Resp: 11.053597  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1976062
      Resp_io: 11.000000  Resp_cpu: 1976062
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."B"=1

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 4.007720  Resp: 4.007720  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 284634
      Resp_io: 4.000000  Resp_cpu: 284634

  Best NL cost: 4.007720 (VALID)
          resc: 4.007720  resc_io: 4.000000  resc_cpu: 284634
          resp: 4.007720  resp_io: 4.000000  resc_cpu: 284634
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  274.999389 = outer (0.275000) * inner (999.997778) * sel (1.000000)
Join Card - Rounded: 275 Computed: 274.999389
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :1
Join order[7]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 4.001210  Resp: 4.001210  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 44626
      Resp_io: 4.000000  Resp_cpu: 44626
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 3.000431  Resp: 3.000431  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 15900
      Resp_io: 3.000000  Resp_cpu: 15900
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469

  Best NL cost: 1.000230 (VALID)
          resc: 1.000230  resc_io: 1.000000  resc_cpu: 8469
          resp: 1.000230  resp_io: 1.000000  resc_cpu: 8469
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.275000 = outer (0.275000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.275000
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000467  Resp: 4.000467  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000467 
     resc: 4.000467 resc_io: 2.000000 resc_cpu: 73754360
     resp: 4.000467 resp_io: 2.000000 resp_cpu: 73754360
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016738  Resp: 2.016738  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016738  
     resc: 2.016738 resc_io: 2.000000 resc_cpu: 617090
     resp: 2.016738 resp_io: 2.000000 resp_cpu: 617090
Best:: JoinMethod: NestedLoop
       Cost: 1.000230  Degree: 1  Resp: 1.000230  Card: 0.275000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000230  Resp: 1.000230  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2081  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500555.000250 (cpu filter eval) (= 50.055500 (per row) * 10000.000000 (#rows))
                       =   2599955.320250
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.070749  Resp: 10.070749  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2608424
      Resp_io: 10.000000  Resp_cpu: 2608424
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1914198
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.052149  Resp: 11.052149  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1922667
      Resp_io: 11.000000  Resp_cpu: 1922667
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17736
      Resp_io: 2.000000  Resp_cpu: 17736
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."B"=1

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 1.0000e-06 
    NL Join : Cost: 4.007615  Resp: 4.007615  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 280738
      Resp_io: 4.000000  Resp_cpu: 280738
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17736
      Resp_io: 2.000000  Resp_cpu: 17736

  Best NL cost: 2.000481 (VALID)
          resc: 2.000481  resc_io: 2.000000  resc_cpu: 17736
          resp: 2.000481  resp_io: 2.000000  resc_cpu: 17736
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.274999 = outer (0.275000) * inner (999.997778) * sel (0.001000)
Join Card - Rounded: 1 Computed: 0.274999
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.275000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 7.020097  Resp: 7.020097  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.020097 
     resc: 7.020097 resc_io: 5.000000 resc_cpu: 74478097
     resp: 7.020097 resp_io: 5.000000 resp_cpu: 74478097
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.275000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.018990  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.026909  Resp: 5.026909  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.026909  
     resc: 5.026909 resc_io: 5.000000 resc_cpu: 992105
     resp: 5.026909 resp_io: 5.000000 resp_cpu: 992105
Join order aborted2: cost > best plan cost
***********************
Join order[8]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 555000.250000 (cpu filter eval) (= 55.500025 (per row) * 10000.000000 (#rows))
                       =   2654400.570000
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.072198  Resp: 10.072198  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2661820
      Resp_io: 10.000000  Resp_cpu: 2661820
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1968643
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.053597  Resp: 11.053597  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1976062
      Resp_io: 11.000000  Resp_cpu: 1976062
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."B"=1

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 4.007720  Resp: 4.007720  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 284634
      Resp_io: 4.000000  Resp_cpu: 284634

  Best NL cost: 4.007720 (VALID)
          resc: 4.007720  resc_io: 4.000000  resc_cpu: 284634
          resp: 4.007720  resp_io: 4.000000  resc_cpu: 284634
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  274.999389 = outer (0.275000) * inner (999.997778) * sel (1.000000)
Join Card - Rounded: 275 Computed: 274.999389
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[9]:  Z[Z]#1  Y[Y]#0  X[X]#2
Join order aborted1: cost > best plan cost
***********************
Join order[10]:  Z[Z]#1  X[X]#2  Y[Y]#0
Join order aborted1: cost > best plan cost
***********************
Join order[11]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 4.001210  Resp: 4.001210  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 44626
      Resp_io: 4.000000  Resp_cpu: 44626
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 3.000431  Resp: 3.000431  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 15900
      Resp_io: 3.000000  Resp_cpu: 15900
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469

  Best NL cost: 1.000230 (VALID)
          resc: 1.000230  resc_io: 1.000000  resc_cpu: 8469
          resp: 1.000230  resp_io: 1.000000  resc_cpu: 8469
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.275000 = outer (0.275000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.275000
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000467  Resp: 4.000467  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000467 
     resc: 4.000467 resc_io: 2.000000 resc_cpu: 73754360
     resp: 4.000467 resp_io: 2.000000 resp_cpu: 73754360
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016738  Resp: 2.016738  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016738  
     resc: 2.016738 resc_io: 2.000000 resc_cpu: 617090
     resp: 2.016738 resp_io: 2.000000 resp_cpu: 617090
Best:: JoinMethod: NestedLoop
       Cost: 1.000230  Degree: 1  Resp: 1.000230  Card: 0.275000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000230  Resp: 1.000230  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2081  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500555.000250 (cpu filter eval) (= 50.055500 (per row) * 10000.000000 (#rows))
                       =   2599955.320250
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.070749  Resp: 10.070749  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2608424
      Resp_io: 10.000000  Resp_cpu: 2608424
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1914198
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.052149  Resp: 11.052149  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1922667
      Resp_io: 11.000000  Resp_cpu: 1922667
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17736
      Resp_io: 2.000000  Resp_cpu: 17736
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."B"=1

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 1.0000e-06 
    NL Join : Cost: 4.007615  Resp: 4.007615  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 280738
      Resp_io: 4.000000  Resp_cpu: 280738
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17736
      Resp_io: 2.000000  Resp_cpu: 17736

  Best NL cost: 2.000481 (VALID)
          resc: 2.000481  resc_io: 2.000000  resc_cpu: 17736
          resp: 2.000481  resp_io: 2.000000  resc_cpu: 17736
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.274999 = outer (0.275000) * inner (999.997778) * sel (0.001000)
Join Card - Rounded: 1 Computed: 0.274999
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.275000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 7.020097  Resp: 7.020097  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.020097 
     resc: 7.020097 resc_io: 5.000000 resc_cpu: 74478097
     resp: 7.020097 resp_io: 5.000000 resp_cpu: 74478097
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.275000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.018990  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.026909  Resp: 5.026909  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.026909  
     resc: 5.026909 resc_io: 5.000000 resc_cpu: 992105
     resp: 5.026909 resp_io: 5.000000 resp_cpu: 992105
Join order aborted2: cost > best plan cost
***********************
Join order[12]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 555000.250000 (cpu filter eval) (= 55.500025 (per row) * 10000.000000 (#rows))
                       =   2654400.570000
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.072198  Resp: 10.072198  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2661820
      Resp_io: 10.000000  Resp_cpu: 2661820
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1968643
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.053597  Resp: 11.053597  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1976062
      Resp_io: 11.000000  Resp_cpu: 1976062
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."B"=1

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 4.007720  Resp: 4.007720  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 284634
      Resp_io: 4.000000  Resp_cpu: 284634

  Best NL cost: 4.007720 (VALID)
          resc: 4.007720  resc_io: 4.000000  resc_cpu: 284634
          resp: 4.007720  resp_io: 4.000000  resc_cpu: 284634
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  274.999389 = outer (0.275000) * inner (999.997778) * sel (1.000000)
Join Card - Rounded: 275 Computed: 274.999389
Join order aborted2: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
LORE: or-expansion-subheap (delete addr=0x7fd92079bf20, in-use=56480, alloc=59296)

LORE: ******** OR-branching ********

LORE: or-expansion-subheap (create addr=0x7fd92079bf20)
****************
QUERY BLOCK TEXT
****************
select /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null
  from x join y  on y.id = x.id join z on z.id = y.id
  where  ( ( x.a = 0 AND z.b = 1               ) OR 
           ( x.a = 1 AND z.b = 0 AND z.c = 0  )   )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$9E43CB6E nbfros=3 flg=0
  fro(0): flg=4 objn=80828 hint_alias="X"@"SEL$9E43CB6E"
  fro(1): flg=4 objn=80831 hint_alias="Y"@"SEL$9E43CB6E"
  fro(2): flg=4 objn=80833 hint_alias="Z"@"SEL$9E43CB6E"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3072 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table:  Z  Alias:  Z
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  28  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): B(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.050000 Min: 1.000000 Max: 10.000000
    Histogram: Freq  #Bkts: 10  UncompBkts: 10000  EndPtVals: 10  ActualVal: yes
  Column (#3): C(NUMBER)
    AvgLen: 3 NDV: 1 Nulls: 0 Density: 0.000050 Min: 1.000000 Max: 1.000000
    Histogram: Freq  #Bkts: 1  UncompBkts: 10000  EndPtVals: 1  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: Z_B_C  Col#: 2 3 1
  LVLS: 1  #LB: 30  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 210.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: Z_ID  Col#: 1
  LVLS: 1  #LB: 18  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  Y  Alias:  Y
  #Rows: 8  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  3.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 1.000000 Max: 8.000000
Index Stats::
  Index: Y_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 8  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 8.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  X  Alias:  X
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): A(NUMBER)
    AvgLen: 3 NDV: 2 Nulls: 0 Density: 0.250000 Min: 1.000000 Max: 2.000000
    Histogram: Freq  #Bkts: 2  UncompBkts: 10  EndPtVals: 2  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: X_A_ID  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: X_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$9E43CB6E (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for X
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for X[X] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE


 kkecdn: Single Table Predicate:"X"."A"=0 OR "X"."A"=1
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

 kkecdn: Single Table Predicate:"X"."A"=1
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Table: X  Alias: X
    Card: Original: 10.000000  Rounded: 3  Computed: 2.750000  Non Adjusted: 2.750000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 987.500000 (cpu filter eval) (= 98.750000 (per row) * 10.000000 (#rows))
                       =   38294.700000
  Access Path: TableScan
    Cost:  3.001039  Resp: 3.001039  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 38295
      Resp_io: 3.000000  Resp_cpu: 38295
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9309
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000252  Resp: 2.000252  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9309
      Resp_io: 2.000000  Resp_cpu: 9309
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 8121
    ix_sel: 0.500000  ix_sel_with_filters: 0.275000 
    Cost: 1.000234  Resp: 1.000234  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: X_A_ID
         Cost: 1.000234  Degree: 1  Resp: 1.000234  Card: 2.750000  Bytes: 0.000000

Access path analysis for Y
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Y[Y] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: Y  Alias: Y
    Card: Original: 8.000000  Rounded: 8  Computed: 8.000000  Non Adjusted: 8.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                       =   36807.200000
  Access Path: TableScan
    Cost:  3.000998  Resp: 3.000998  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 36807
      Resp_io: 3.000000  Resp_cpu: 36807
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8081
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000219  Resp: 2.000219  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 8081
      Resp_io: 2.000000  Resp_cpu: 8081
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 1
  ****** trying bitmap/domain indexes ******
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Y_ID
         Cost: 1.000237  Degree: 1  Resp: 1.000237  Card: 8.000000  Bytes: 0.000000

Access path analysis for Z
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Z[Z] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 


 kkecdn: Single Table Predicate: ?? 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"Z"."B"=1
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

 kkecdn: Single Table Predicate:"Z"."B"=0
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"Z"."C"=0
  Estimated selectivity: 5.0000e-05 , col: #3 
  Table: Z  Alias: Z
    Card: Original: 10000.000000  Rounded: 1  Computed: 0.000000  Non Adjusted: 0.000000
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2081  ("Z"."B"=1)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500026.222228 (cpu filter eval) (= 50.002622 (per row) * 10000.000000 (#rows))
                       =   2599426.542228
  Access Path: TableScan
    Cost:  9.070505  Resp: 9.070505  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2599427
      Resp_io: 9.000000  Resp_cpu: 2599427
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1913669
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.051905  Resp: 10.051905  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1913669
      Resp_io: 10.000000  Resp_cpu: 1913669
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."B"=1

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 2.2222e-06  ix_sel_with_filters: 2.2222e-07 
    Cost: 2.000393  Resp: 2.000393  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Z_B_C
         Cost: 2.000393  Degree: 1  Resp: 2.000393  Card: 0.000000  Bytes: 0.000000

(newjo-restore) [1 0 2 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is OR expanded SEL$9E43CB6E (#0)
kkogast: Selectivities tab=Y[Y] tnum=0 astat=N 
  card=8.00 nrow=8.00 1.000000
kkogast: Selectivities tab=Z[Z] tnum=1 astat=N 
  card=0.00 nrow=10000.00 1.0000e-13
kkogast: Selectivities tab=X[X] tnum=2 astat=N 
  card=2.75 nrow=10.00 0.275000
kkogast: Best single table selectivities cnt=2
  Tab = 1 2
kkogast: Final Alternative Starting Tables cnt=2
  Tab = 1 2
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  Y[Y]#0  Z[Z]#1  X[X]#2

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.750000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2081  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.750000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.750000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.026222 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.346222
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 63.564278  Resp: 63.564278  Degree: 1
      Cost_io: 63.000000  Cost_cpu: 20804124
      Resp_io: 63.000000  Resp_cpu: 20804124
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.250000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 67.415478  Resp: 67.415478  Degree: 1
      Cost_io: 67.000000  Cost_cpu: 15318067
      Resp_io: 67.000000  Resp_cpu: 15318067
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002246  Resp: 9.002246  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82813
      Resp_io: 9.000000  Resp_cpu: 82813
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."B"=1

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 2.2222e-11 
    NL Join : Cost: 9.002022  Resp: 9.002022  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 74533
      Resp_io: 9.000000  Resp_cpu: 74533
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002246  Resp: 9.002246  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82813
      Resp_io: 9.000000  Resp_cpu: 82813

  Best NL cost: 9.002022 (VALID)
          resc: 9.002022  resc_io: 9.000000  resc_cpu: 74533
          resp: 9.002022  resp_io: 9.000000  resc_cpu: 74533
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (8.000000) * inner (0.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 4.000630  Resp: 4.000630  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000630 
     resc: 4.000630 resc_io: 3.000000 resc_cpu: 36891788
     resp: 4.000630 resp_io: 3.000000 resp_cpu: 36891788
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016309  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016939  Resp: 3.016939  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016939  
     resc: 3.016939 resc_io: 3.000000 resc_cpu: 624519
     resp: 3.016939 resp_io: 3.000000 resp_cpu: 624519
Best:: JoinMethod: Hash
       Cost: 3.016939  Degree: 1  Resp: 3.016939  Card: 0.000000 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.000000  Cost: 3.016939  Resp: 3.016939  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2064  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 623.437500 (cpu filter eval) (= 62.343750 (per row) * 10.000000 (#rows))
                       =   37930.637500
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 6.017968  Resp: 6.017968  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 662450
      Resp_io: 6.000000  Resp_cpu: 662450
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8945
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 5.017182  Resp: 5.017182  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 633464
      Resp_io: 5.000000  Resp_cpu: 633464
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.017168  Resp: 4.017168  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 632960
      Resp_io: 4.000000  Resp_cpu: 632960
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.050000  ix_sel_with_filters: 0.027500 
    NL Join : Cost: 3.016970  Resp: 3.016970  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 625667
      Resp_io: 3.000000  Resp_cpu: 625667
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.017168  Resp: 4.017168  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 632960
      Resp_io: 4.000000  Resp_cpu: 632960

  Best NL cost: 3.016970 (VALID)
          resc: 3.016970  resc_io: 3.000000  resc_cpu: 625667
          resp: 3.016970  resp_io: 3.000000  resc_cpu: 625667
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (2.750000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Z  Alias: Z
    resc: 3.016939  card 0.000000  bytes:   deg: 1  resp: 3.016939
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
  SM join: Resc: 6.017178  Resp: 6.017178  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.017178 
     resc: 6.017178 resc_io: 4.000000 resc_cpu: 74370480
     resp: 6.017178 resp_io: 4.000000 resp_cpu: 74370480
  Outer table:  Z  Alias: Z
    resc: 3.016939  card 0.000000  bytes:   deg: 1  resp: 3.016939
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016286  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 4.033459  Resp: 4.033459  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.033459  
     resc: 4.033459 resc_io: 4.000000 resc_cpu: 1233578
     resp: 4.033459 resp_io: 4.000000 resp_cpu: 1233578
Best:: JoinMethod: NestedLoop
       Cost: 3.016970  Degree: 1  Resp: 3.016970  Card: 0.000000 Bytes: 
***********************
Best so far:  Table#: 0  cost: 1.000237  card: 8.000000  bytes: 24.000000
              Table#: 1  cost: 3.016939  card: 0.000000  bytes: 13.000000
              Table#: 2  cost: 3.016970  card: 0.000000  bytes: 19.000000
***********************
Join order[2]:  Y[Y]#0  X[X]#2  Z[Z]#1

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 623.437500 (cpu filter eval) (= 62.343750 (per row) * 10.000000 (#rows))
                       =   37930.637500
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 13.008467  Resp: 13.008467  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 312167
      Resp_io: 13.000000  Resp_cpu: 312167
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8945
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 5.002177  Resp: 5.002177  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 80280
      Resp_io: 5.000000  Resp_cpu: 80280
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002068  Resp: 9.002068  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 76243
      Resp_io: 9.000000  Resp_cpu: 76243
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.050000  ix_sel_with_filters: 0.027500 
    NL Join : Cost: 1.000486  Resp: 1.000486  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 17901
      Resp_io: 1.000000  Resp_cpu: 17901
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002068  Resp: 9.002068  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 76243
      Resp_io: 9.000000  Resp_cpu: 76243

  Best NL cost: 1.000486 (VALID)
          resc: 1.000486  resc_io: 1.000000  resc_cpu: 17901
          resp: 1.000486  resp_io: 1.000000  resc_cpu: 17901
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  2.750000 = outer (8.000000) * inner (2.750000) * sel (0.125000)
Join Card - Rounded: 3 Computed: 2.750000
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
  SM join: Resc: 3.000476  Resp: 3.000476  [multiMatchCost=0.000000]
SM Join
  SM cost: 3.000476 
     resc: 3.000476 resc_io: 2.000000 resc_cpu: 36886114
     resp: 3.000476 resp_io: 2.000000 resp_cpu: 36886114
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016315  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016785  Resp: 2.016785  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016785  
     resc: 2.016785 resc_io: 2.000000 resc_cpu: 618830
     resp: 2.016785 resp_io: 2.000000 resp_cpu: 618830
Best:: JoinMethod: NestedLoop
       Cost: 1.000486  Degree: 1  Resp: 1.000486  Card: 2.750000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000486  Resp: 1.000486  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.026222 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.346222
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.212001  Resp: 26.212001  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7816177
      Resp_io: 26.000000  Resp_cpu: 7816177
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.156201  Resp: 27.156201  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5758906
      Resp_io: 27.000000  Resp_cpu: 5758906
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001239  Resp: 4.001239  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 45686
      Resp_io: 4.000000  Resp_cpu: 45686
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."B"=1

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 2.2222e-11 
    NL Join : Cost: 4.001155  Resp: 4.001155  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 42581
      Resp_io: 4.000000  Resp_cpu: 42581
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001239  Resp: 4.001239  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 45686
      Resp_io: 4.000000  Resp_cpu: 45686

  Best NL cost: 4.001155 (VALID)
          resc: 4.001155  resc_io: 4.000000  resc_cpu: 42581
          resp: 4.001155  resp_io: 4.000000  resc_cpu: 42581
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.750000) * inner (0.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  X  Alias: X
    resc: 1.000486  card 2.750000  bytes:   deg: 1  resp: 1.000486
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 4.000879  Resp: 4.000879  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000879 
     resc: 4.000879 resc_io: 3.000000 resc_cpu: 36900968
     resp: 4.000879 resp_io: 3.000000 resp_cpu: 36900968
  Outer table:  X  Alias: X
    resc: 1.000486  card 2.750000  bytes:   deg: 1  resp: 1.000486
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016289  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017168  Resp: 3.017168  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017168  
     resc: 3.017168 resc_io: 3.000000 resc_cpu: 632949
     resp: 3.017168 resp_io: 3.000000 resp_cpu: 632949
Join order aborted2: cost > best plan cost
***********************
Join order[3]:  Z[Z]#1  Y[Y]#0  X[X]#2

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000393  Resp: 2.000393  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 5.001402  Resp: 5.001402  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 51705
      Resp_io: 5.000000  Resp_cpu: 51705
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000623  Resp: 4.000623  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 22979
      Resp_io: 4.000000  Resp_cpu: 22979
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000422  Resp: 2.000422  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15548
      Resp_io: 2.000000  Resp_cpu: 15548
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000422  Resp: 2.000422  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15548
      Resp_io: 2.000000  Resp_cpu: 15548

  Best NL cost: 2.000422 (VALID)
          resc: 2.000422  resc_io: 2.000000  resc_cpu: 15548
          resp: 2.000422  resp_io: 2.000000  resc_cpu: 15548
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Z  Alias: Z
    resc: 2.000393  card 0.000000  bytes:   deg: 1  resp: 2.000393
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 5.000659  Resp: 5.000659  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000659 
     resc: 5.000659 resc_io: 3.000000 resc_cpu: 73761438
     resp: 5.000659 resp_io: 3.000000 resp_cpu: 73761438
  Outer table:  Z  Alias: Z
    resc: 2.000393  card 0.000000  bytes:   deg: 1  resp: 2.000393
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016930  Resp: 3.016930  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016930  
     resc: 3.016930 resc_io: 3.000000 resc_cpu: 624169
     resp: 3.016930 resp_io: 3.000000 resp_cpu: 624169
Best:: JoinMethod: NestedLoop
       Cost: 2.000422  Degree: 1  Resp: 2.000422  Card: 0.000000 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000422  Resp: 2.000422  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 623.437500 (cpu filter eval) (= 62.343750 (per row) * 10.000000 (#rows))
                       =   37930.637500
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001451  Resp: 5.001451  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 53479
      Resp_io: 5.000000  Resp_cpu: 53479
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8945
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000664  Resp: 4.000664  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24493
      Resp_io: 4.000000  Resp_cpu: 24493
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000651  Resp: 3.000651  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23988
      Resp_io: 3.000000  Resp_cpu: 23988
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.050000  ix_sel_with_filters: 0.027500 
    NL Join : Cost: 2.000453  Resp: 2.000453  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16695
      Resp_io: 2.000000  Resp_cpu: 16695
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000651  Resp: 3.000651  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23988
      Resp_io: 3.000000  Resp_cpu: 23988

  Best NL cost: 2.000453 (VALID)
          resc: 2.000453  resc_io: 2.000000  resc_cpu: 16695
          resp: 2.000453  resp_io: 2.000000  resc_cpu: 16695
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (2.750000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 2.000422  card 0.000000  bytes:   deg: 1  resp: 2.000422
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
  SM join: Resc: 5.000661  Resp: 5.000661  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000661 
     resc: 5.000661 resc_io: 3.000000 resc_cpu: 73761509
     resp: 5.000661 resp_io: 3.000000 resp_cpu: 73761509
  Outer table:  Y  Alias: Y
    resc: 2.000422  card 0.000000  bytes:   deg: 1  resp: 2.000422
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016286  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016941  Resp: 3.016941  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016941  
     resc: 3.016941 resc_io: 3.000000 resc_cpu: 624607
     resp: 3.016941 resp_io: 3.000000 resp_cpu: 624607
Best:: JoinMethod: NestedLoop
       Cost: 2.000453  Degree: 1  Resp: 2.000453  Card: 0.000000 Bytes: 
***********************
Best so far:  Table#: 1  cost: 2.000393  card: 0.000000  bytes: 10.000000
              Table#: 0  cost: 2.000422  card: 0.000000  bytes: 13.000000
              Table#: 2  cost: 2.000453  card: 0.000000  bytes: 19.000000
***********************
Join order[4]:  Z[Z]#1  X[X]#2  Y[Y]#0

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000393  Resp: 2.000393  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 987.500000 (cpu filter eval) (= 98.750000 (per row) * 10.000000 (#rows))
                       =   38294.700000
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001432  Resp: 5.001432  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 52793
      Resp_io: 5.000000  Resp_cpu: 52793
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9309
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000646  Resp: 4.000646  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23807
      Resp_io: 4.000000  Resp_cpu: 23807
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 8121
    ix_sel: 0.500000  ix_sel_with_filters: 0.275000 
    NL Join : Cost: 3.000627  Resp: 3.000627  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23107
      Resp_io: 3.000000  Resp_cpu: 23107

  Best NL cost: 3.000627 (VALID)
          resc: 3.000627  resc_io: 3.000000  resc_cpu: 23107
          resp: 3.000627  resp_io: 3.000000  resc_cpu: 23107
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (2.750000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Join order aborted2: cost > best plan cost
***********************
Join order[5]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   2.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   2.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   2.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 7.003261  Resp: 7.003261  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 120231
      Resp_io: 7.000000  Resp_cpu: 120231
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000924  Resp: 4.000924  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 34053
      Resp_io: 4.000000  Resp_cpu: 34053
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759

  Best NL cost: 1.000319 (VALID)
          resc: 1.000319  resc_io: 1.000000  resc_cpu: 11759
          resp: 1.000319  resp_io: 1.000000  resc_cpu: 11759
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  2.750000 = outer (2.750000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 3 Computed: 2.750000
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000505  Resp: 4.000505  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000505 
     resc: 4.000505 resc_io: 2.000000 resc_cpu: 73755764
     resp: 4.000505 resp_io: 2.000000 resp_cpu: 73755764
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016308  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016778  Resp: 2.016778  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016778  
     resc: 2.016778 resc_io: 2.000000 resc_cpu: 618580
     resp: 2.016778 resp_io: 2.000000 resp_cpu: 618580
Best:: JoinMethod: NestedLoop
       Cost: 1.000319  Degree: 1  Resp: 1.000319  Card: 2.750000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000319  Resp: 1.000319  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.026222 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.346222
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.211835  Resp: 26.211835  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7810035
      Resp_io: 26.000000  Resp_cpu: 7810035
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.156034  Resp: 27.156034  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5752764
      Resp_io: 27.000000  Resp_cpu: 5752764
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001073  Resp: 4.001073  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 39543
      Resp_io: 4.000000  Resp_cpu: 39543
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."B"=1

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 2.2222e-11 
    NL Join : Cost: 4.000988  Resp: 4.000988  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 36438
      Resp_io: 4.000000  Resp_cpu: 36438
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001073  Resp: 4.001073  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 39543
      Resp_io: 4.000000  Resp_cpu: 39543

  Best NL cost: 4.000988 (VALID)
          resc: 4.000988  resc_io: 4.000000  resc_cpu: 36438
          resp: 4.000988  resp_io: 4.000000  resc_cpu: 36438
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.750000) * inner (0.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 2.750000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.000718  Resp: 5.000718  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000718 
     resc: 5.000718 resc_io: 3.000000 resc_cpu: 73763609
     resp: 5.000718 resp_io: 3.000000 resp_cpu: 73763609
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 2.750000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016289  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017001  Resp: 3.017001  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017001  
     resc: 3.017001 resc_io: 3.000000 resc_cpu: 626807
     resp: 3.017001 resp_io: 3.000000 resp_cpu: 626807
Join order aborted2: cost > best plan cost
***********************
Join order[6]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500026.222228 (cpu filter eval) (= 50.002622 (per row) * 10000.000000 (#rows))
                       =   2599426.542228
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.211749  Resp: 26.211749  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7806889
      Resp_io: 26.000000  Resp_cpu: 7806889
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913669
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.155949  Resp: 27.155949  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5749617
      Resp_io: 27.000000  Resp_cpu: 5749617
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."B"=1

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-06  ix_sel_with_filters: 2.2222e-07 
    NL Join : Cost: 4.000903  Resp: 4.000903  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 33288
      Resp_io: 4.000000  Resp_cpu: 33288

  Best NL cost: 4.000903 (VALID)
          resc: 4.000903  resc_io: 4.000000  resc_cpu: 33288
          resp: 4.000903  resp_io: 4.000000  resc_cpu: 33288
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.750000) * inner (0.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :1
Join order[7]:  Z[Z]#1  Y[Y]#0  X[X]#2

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000393  Resp: 2.000393  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 5.001402  Resp: 5.001402  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 51705
      Resp_io: 5.000000  Resp_cpu: 51705
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000623  Resp: 4.000623  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 22979
      Resp_io: 4.000000  Resp_cpu: 22979
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000422  Resp: 2.000422  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15548
      Resp_io: 2.000000  Resp_cpu: 15548
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000422  Resp: 2.000422  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15548
      Resp_io: 2.000000  Resp_cpu: 15548

  Best NL cost: 2.000422 (VALID)
          resc: 2.000422  resc_io: 2.000000  resc_cpu: 15548
          resp: 2.000422  resp_io: 2.000000  resc_cpu: 15548
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Z  Alias: Z
    resc: 2.000393  card 0.000000  bytes:   deg: 1  resp: 2.000393
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 5.000659  Resp: 5.000659  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000659 
     resc: 5.000659 resc_io: 3.000000 resc_cpu: 73761438
     resp: 5.000659 resp_io: 3.000000 resp_cpu: 73761438
  Outer table:  Z  Alias: Z
    resc: 2.000393  card 0.000000  bytes:   deg: 1  resp: 2.000393
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016930  Resp: 3.016930  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016930  
     resc: 3.016930 resc_io: 3.000000 resc_cpu: 624169
     resp: 3.016930 resp_io: 3.000000 resp_cpu: 624169
Best:: JoinMethod: NestedLoop
       Cost: 2.000422  Degree: 1  Resp: 2.000422  Card: 0.000000 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000422  Resp: 2.000422  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2064  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 623.437500 (cpu filter eval) (= 62.343750 (per row) * 10.000000 (#rows))
                       =   37930.637500
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001451  Resp: 5.001451  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 53479
      Resp_io: 5.000000  Resp_cpu: 53479
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8945
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000664  Resp: 4.000664  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24493
      Resp_io: 4.000000  Resp_cpu: 24493
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000651  Resp: 3.000651  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23988
      Resp_io: 3.000000  Resp_cpu: 23988
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.050000  ix_sel_with_filters: 0.027500 
    NL Join : Cost: 2.000453  Resp: 2.000453  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16695
      Resp_io: 2.000000  Resp_cpu: 16695
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000651  Resp: 3.000651  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23988
      Resp_io: 3.000000  Resp_cpu: 23988

  Best NL cost: 2.000453 (VALID)
          resc: 2.000453  resc_io: 2.000000  resc_cpu: 16695
          resp: 2.000453  resp_io: 2.000000  resc_cpu: 16695
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (2.750000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 2.000422  card 0.000000  bytes:   deg: 1  resp: 2.000422
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
  SM join: Resc: 5.000661  Resp: 5.000661  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000661 
     resc: 5.000661 resc_io: 3.000000 resc_cpu: 73761509
     resp: 5.000661 resp_io: 3.000000 resp_cpu: 73761509
  Outer table:  Y  Alias: Y
    resc: 2.000422  card 0.000000  bytes:   deg: 1  resp: 2.000422
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016286  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016941  Resp: 3.016941  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016941  
     resc: 3.016941 resc_io: 3.000000 resc_cpu: 624607
     resp: 3.016941 resp_io: 3.000000 resp_cpu: 624607
Join order aborted2: cost > best plan cost
***********************
Join order[8]:  Z[Z]#1  X[X]#2  Y[Y]#0

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000393  Resp: 2.000393  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 987.500000 (cpu filter eval) (= 98.750000 (per row) * 10.000000 (#rows))
                       =   38294.700000
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001432  Resp: 5.001432  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 52793
      Resp_io: 5.000000  Resp_cpu: 52793
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9309
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000646  Resp: 4.000646  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23807
      Resp_io: 4.000000  Resp_cpu: 23807
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 8121
    ix_sel: 0.500000  ix_sel_with_filters: 0.275000 
    NL Join : Cost: 3.000627  Resp: 3.000627  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23107
      Resp_io: 3.000000  Resp_cpu: 23107

  Best NL cost: 3.000627 (VALID)
          resc: 3.000627  resc_io: 3.000000  resc_cpu: 23107
          resp: 3.000627  resp_io: 3.000000  resc_cpu: 23107
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (2.750000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Join order aborted2: cost > best plan cost
***********************
Join order[9]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   2.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   2.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   2.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 7.003261  Resp: 7.003261  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 120231
      Resp_io: 7.000000  Resp_cpu: 120231
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000924  Resp: 4.000924  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 34053
      Resp_io: 4.000000  Resp_cpu: 34053
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759

  Best NL cost: 1.000319 (VALID)
          resc: 1.000319  resc_io: 1.000000  resc_cpu: 11759
          resp: 1.000319  resp_io: 1.000000  resc_cpu: 11759
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  2.750000 = outer (2.750000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 3 Computed: 2.750000
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000505  Resp: 4.000505  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000505 
     resc: 4.000505 resc_io: 2.000000 resc_cpu: 73755764
     resp: 4.000505 resp_io: 2.000000 resp_cpu: 73755764
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016308  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016778  Resp: 2.016778  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016778  
     resc: 2.016778 resc_io: 2.000000 resc_cpu: 618580
     resp: 2.016778 resp_io: 2.000000 resp_cpu: 618580
Best:: JoinMethod: NestedLoop
       Cost: 1.000319  Degree: 1  Resp: 1.000319  Card: 2.750000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000319  Resp: 1.000319  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2081  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.026222 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.346222
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.211835  Resp: 26.211835  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7810035
      Resp_io: 26.000000  Resp_cpu: 7810035
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.156034  Resp: 27.156034  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5752764
      Resp_io: 27.000000  Resp_cpu: 5752764
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001073  Resp: 4.001073  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 39543
      Resp_io: 4.000000  Resp_cpu: 39543
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."B"=1

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 2.2222e-11 
    NL Join : Cost: 4.000988  Resp: 4.000988  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 36438
      Resp_io: 4.000000  Resp_cpu: 36438
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001073  Resp: 4.001073  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 39543
      Resp_io: 4.000000  Resp_cpu: 39543

  Best NL cost: 4.000988 (VALID)
          resc: 4.000988  resc_io: 4.000000  resc_cpu: 36438
          resp: 4.000988  resp_io: 4.000000  resc_cpu: 36438
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.750000) * inner (0.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 2.750000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.000718  Resp: 5.000718  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000718 
     resc: 5.000718 resc_io: 3.000000 resc_cpu: 73763609
     resp: 5.000718 resp_io: 3.000000 resp_cpu: 73763609
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 2.750000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016289  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017001  Resp: 3.017001  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017001  
     resc: 3.017001 resc_io: 3.000000 resc_cpu: 626807
     resp: 3.017001 resp_io: 3.000000 resp_cpu: 626807
Join order aborted2: cost > best plan cost
***********************
Join order[10]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500026.222228 (cpu filter eval) (= 50.002622 (per row) * 10000.000000 (#rows))
                       =   2599426.542228
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.211749  Resp: 26.211749  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7806889
      Resp_io: 26.000000  Resp_cpu: 7806889
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913669
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.155949  Resp: 27.155949  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5749617
      Resp_io: 27.000000  Resp_cpu: 5749617
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."B"=1

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-06  ix_sel_with_filters: 2.2222e-07 
    NL Join : Cost: 4.000903  Resp: 4.000903  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 33288
      Resp_io: 4.000000  Resp_cpu: 33288

  Best NL cost: 4.000903 (VALID)
          resc: 4.000903  resc_io: 4.000000  resc_cpu: 33288
          resp: 4.000903  resp_io: 4.000000  resc_cpu: 33288
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.750000) * inner (0.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[11]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   2.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   2.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   2.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 7.003261  Resp: 7.003261  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 120231
      Resp_io: 7.000000  Resp_cpu: 120231
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000924  Resp: 4.000924  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 34053
      Resp_io: 4.000000  Resp_cpu: 34053
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759

  Best NL cost: 1.000319 (VALID)
          resc: 1.000319  resc_io: 1.000000  resc_cpu: 11759
          resp: 1.000319  resp_io: 1.000000  resc_cpu: 11759
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  2.750000 = outer (2.750000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 3 Computed: 2.750000
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000505  Resp: 4.000505  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000505 
     resc: 4.000505 resc_io: 2.000000 resc_cpu: 73755764
     resp: 4.000505 resp_io: 2.000000 resp_cpu: 73755764
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016308  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016778  Resp: 2.016778  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016778  
     resc: 2.016778 resc_io: 2.000000 resc_cpu: 618580
     resp: 2.016778 resp_io: 2.000000 resp_cpu: 618580
Best:: JoinMethod: NestedLoop
       Cost: 1.000319  Degree: 1  Resp: 1.000319  Card: 2.750000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000319  Resp: 1.000319  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2081  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.026222 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.346222
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.211835  Resp: 26.211835  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7810035
      Resp_io: 26.000000  Resp_cpu: 7810035
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.156034  Resp: 27.156034  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5752764
      Resp_io: 27.000000  Resp_cpu: 5752764
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001073  Resp: 4.001073  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 39543
      Resp_io: 4.000000  Resp_cpu: 39543
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."B"=1

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 2.2222e-11 
    NL Join : Cost: 4.000988  Resp: 4.000988  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 36438
      Resp_io: 4.000000  Resp_cpu: 36438
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001073  Resp: 4.001073  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 39543
      Resp_io: 4.000000  Resp_cpu: 39543

  Best NL cost: 4.000988 (VALID)
          resc: 4.000988  resc_io: 4.000000  resc_cpu: 36438
          resp: 4.000988  resp_io: 4.000000  resc_cpu: 36438
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.750000) * inner (0.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 2.750000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.000718  Resp: 5.000718  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000718 
     resc: 5.000718 resc_io: 3.000000 resc_cpu: 73763609
     resp: 5.000718 resp_io: 3.000000 resp_cpu: 73763609
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 2.750000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016289  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017001  Resp: 3.017001  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017001  
     resc: 3.017001 resc_io: 3.000000 resc_cpu: 626807
     resp: 3.017001 resp_io: 3.000000 resp_cpu: 626807
Join order aborted2: cost > best plan cost
***********************
Join order[12]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500026.222228 (cpu filter eval) (= 50.002622 (per row) * 10000.000000 (#rows))
                       =   2599426.542228
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.211749  Resp: 26.211749  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7806889
      Resp_io: 26.000000  Resp_cpu: 7806889
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913669
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.155949  Resp: 27.155949  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5749617
      Resp_io: 27.000000  Resp_cpu: 5749617
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."B"=1

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-06  ix_sel_with_filters: 2.2222e-07 
    NL Join : Cost: 4.000903  Resp: 4.000903  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 33288
      Resp_io: 4.000000  Resp_cpu: 33288

  Best NL cost: 4.000903 (VALID)
          resc: 4.000903  resc_io: 4.000000  resc_cpu: 33288
          resp: 4.000903  resp_io: 4.000000  resc_cpu: 33288
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.750000) * inner (0.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Join order aborted2: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
LORE: or-expansion-subheap (delete addr=0x7fd92079bf20, in-use=57496, alloc=59296)
LORE: or-expansion is better cost:4.000934

LORE: ******** Same chain after expansion ********
****************
QUERY BLOCK TEXT
****************
select /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null
  from x join y  on y.id = x.id join z on z.id = y.id
  where  ( ( x.a = 0 AND z.b = 1               ) OR 
           ( x.a = 1 AND z.b = 0 AND z.c = 0  )   )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$9E43CB6E nbfros=3 flg=0
  fro(0): flg=4 objn=80828 hint_alias="X"@"SEL$9E43CB6E"
  fro(1): flg=4 objn=80831 hint_alias="Y"@"SEL$9E43CB6E"
  fro(2): flg=4 objn=80833 hint_alias="Z"@"SEL$9E43CB6E"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3072 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table:  Z  Alias:  Z
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  28  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): B(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.050000 Min: 1.000000 Max: 10.000000
    Histogram: Freq  #Bkts: 10  UncompBkts: 10000  EndPtVals: 10  ActualVal: yes
  Column (#3): C(NUMBER)
    AvgLen: 3 NDV: 1 Nulls: 0 Density: 0.000050 Min: 1.000000 Max: 1.000000
    Histogram: Freq  #Bkts: 1  UncompBkts: 10000  EndPtVals: 1  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: Z_B_C  Col#: 2 3 1
  LVLS: 1  #LB: 30  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 210.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: Z_ID  Col#: 1
  LVLS: 1  #LB: 18  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  Y  Alias:  Y
  #Rows: 8  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  3.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 1.000000 Max: 8.000000
Index Stats::
  Index: Y_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 8  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 8.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  X  Alias:  X
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): A(NUMBER)
    AvgLen: 3 NDV: 2 Nulls: 0 Density: 0.250000 Min: 1.000000 Max: 2.000000
    Histogram: Freq  #Bkts: 2  UncompBkts: 10  EndPtVals: 2  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: X_A_ID  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: X_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$9E43CB6E (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for X
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for X[X] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 


 kkecdn: Single Table Predicate:"X"."A"=1
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

 kkecdn: Single Table Predicate:"X"."A"=0 OR "X"."A"=1
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Table: X  Alias: X
    Card: Original: 10.000000  Rounded: 3  Computed: 2.750000  Non Adjusted: 2.750000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2064  ("X"."A"=1)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 987.500000 (cpu filter eval) (= 98.750000 (per row) * 10.000000 (#rows))
                       =   38294.700000
  Access Path: TableScan
    Cost:  3.001039  Resp: 3.001039  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 38295
      Resp_io: 3.000000  Resp_cpu: 38295
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9309
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000252  Resp: 2.000252  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9309
      Resp_io: 2.000000  Resp_cpu: 9309
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 8121
    ix_sel: 0.500000  ix_sel_with_filters: 0.275000 
    Cost: 1.000234  Resp: 1.000234  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: X_A_ID
         Cost: 1.000234  Degree: 1  Resp: 1.000234  Card: 2.750000  Bytes: 0.000000

Access path analysis for Y
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Y[Y] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: Y  Alias: Y
    Card: Original: 8.000000  Rounded: 8  Computed: 8.000000  Non Adjusted: 8.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                       =   36807.200000
  Access Path: TableScan
    Cost:  3.000998  Resp: 3.000998  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 36807
      Resp_io: 3.000000  Resp_cpu: 36807
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8081
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000219  Resp: 2.000219  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 8081
      Resp_io: 2.000000  Resp_cpu: 8081
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 1
  ****** trying bitmap/domain indexes ******
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Y_ID
         Cost: 1.000237  Degree: 1  Resp: 1.000237  Card: 8.000000  Bytes: 0.000000

Access path analysis for Z
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Z[Z] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 


 kkecdn: Single Table Predicate:"Z"."B"=0
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"Z"."C"=0
  Estimated selectivity: 5.0000e-05 , col: #3 

 kkecdn: Single Table Predicate: ?? 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"Z"."B"=1
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Table: Z  Alias: Z
    Card: Original: 10000.000000  Rounded: 1  Computed: 0.000000  Non Adjusted: 0.000000
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2081  ("Z"."B"=1)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500026.222228 (cpu filter eval) (= 50.002622 (per row) * 10000.000000 (#rows))
                       =   2599426.542228
  Access Path: TableScan
    Cost:  9.070505  Resp: 9.070505  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2599427
      Resp_io: 9.000000  Resp_cpu: 2599427
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1913669
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.051905  Resp: 10.051905  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1913669
      Resp_io: 10.000000  Resp_cpu: 1913669
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 5.0000e-06  ix_sel_with_filters: 2.2222e-07 
    Cost: 2.000393  Resp: 2.000393  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Z_B_C
         Cost: 2.000393  Degree: 1  Resp: 2.000393  Card: 0.000000  Bytes: 0.000000

(newjo-restore) [1 0 2 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is OR expanded SEL$9E43CB6E (#0)
kkogast: Selectivities tab=Y[Y] tnum=0 astat=N 
  card=8.00 nrow=8.00 1.000000
kkogast: Selectivities tab=Z[Z] tnum=1 astat=N 
  card=0.00 nrow=10000.00 1.0000e-13
kkogast: Selectivities tab=X[X] tnum=2 astat=N 
  card=2.75 nrow=10.00 0.275000
kkogast: Best single table selectivities cnt=2
  Tab = 1 2
kkogast: Final Alternative Starting Tables cnt=2
  Tab = 1 2
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  Y[Y]#0  Z[Z]#1  X[X]#2

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.750000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2080  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2065  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.750000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.750000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.026222 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.346222
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 63.564278  Resp: 63.564278  Degree: 1
      Cost_io: 63.000000  Cost_cpu: 20804124
      Resp_io: 63.000000  Resp_cpu: 20804124
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.250000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 67.415478  Resp: 67.415478  Degree: 1
      Cost_io: 67.000000  Cost_cpu: 15318067
      Resp_io: 67.000000  Resp_cpu: 15318067
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002246  Resp: 9.002246  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82813
      Resp_io: 9.000000  Resp_cpu: 82813
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-10  ix_sel_with_filters: 2.2222e-11 
    NL Join : Cost: 9.002021  Resp: 9.002021  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 74511
      Resp_io: 9.000000  Resp_cpu: 74511
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002246  Resp: 9.002246  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82813
      Resp_io: 9.000000  Resp_cpu: 82813

  Best NL cost: 9.002021 (VALID)
          resc: 9.002021  resc_io: 9.000000  resc_cpu: 74511
          resp: 9.002021  resp_io: 9.000000  resc_cpu: 74511
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (8.000000) * inner (0.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 4.000630  Resp: 4.000630  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000630 
     resc: 4.000630 resc_io: 3.000000 resc_cpu: 36891785
     resp: 4.000630 resp_io: 3.000000 resp_cpu: 36891785
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016309  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016939  Resp: 3.016939  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016939  
     resc: 3.016939 resc_io: 3.000000 resc_cpu: 624517
     resp: 3.016939 resp_io: 3.000000 resp_cpu: 624517
Best:: JoinMethod: Hash
       Cost: 3.016939  Degree: 1  Resp: 3.016939  Card: 0.000000 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.000000  Cost: 3.016939  Resp: 3.016939  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2064  ("X"."A"=1)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 623.437500 (cpu filter eval) (= 62.343750 (per row) * 10.000000 (#rows))
                       =   37930.637500
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 6.017968  Resp: 6.017968  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 662447
      Resp_io: 6.000000  Resp_cpu: 662447
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8945
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 5.017182  Resp: 5.017182  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 633461
      Resp_io: 5.000000  Resp_cpu: 633461
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.017168  Resp: 4.017168  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 632957
      Resp_io: 4.000000  Resp_cpu: 632957
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.050000  ix_sel_with_filters: 0.027500 
    NL Join : Cost: 3.016970  Resp: 3.016970  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 625664
      Resp_io: 3.000000  Resp_cpu: 625664
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.017168  Resp: 4.017168  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 632957
      Resp_io: 4.000000  Resp_cpu: 632957

  Best NL cost: 3.016970 (VALID)
          resc: 3.016970  resc_io: 3.000000  resc_cpu: 625664
          resp: 3.016970  resp_io: 3.000000  resc_cpu: 625664
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (2.750000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Z  Alias: Z
    resc: 3.016939  card 0.000000  bytes:   deg: 1  resp: 3.016939
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
  SM join: Resc: 6.017178  Resp: 6.017178  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.017178 
     resc: 6.017178 resc_io: 4.000000 resc_cpu: 74370478
     resp: 6.017178 resp_io: 4.000000 resp_cpu: 74370478
  Outer table:  Z  Alias: Z
    resc: 3.016939  card 0.000000  bytes:   deg: 1  resp: 3.016939
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016286  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 4.033459  Resp: 4.033459  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.033459  
     resc: 4.033459 resc_io: 4.000000 resc_cpu: 1233575
     resp: 4.033459 resp_io: 4.000000 resp_cpu: 1233575
Best:: JoinMethod: NestedLoop
       Cost: 3.016970  Degree: 1  Resp: 3.016970  Card: 0.000000 Bytes: 
***********************
Best so far:  Table#: 0  cost: 1.000237  card: 8.000000  bytes: 24.000000
              Table#: 1  cost: 3.016939  card: 0.000000  bytes: 13.000000
              Table#: 2  cost: 3.016970  card: 0.000000  bytes: 19.000000
***********************
Join order[2]:  Y[Y]#0  X[X]#2  Z[Z]#1

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 623.437500 (cpu filter eval) (= 62.343750 (per row) * 10.000000 (#rows))
                       =   37930.637500
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 13.008467  Resp: 13.008467  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 312167
      Resp_io: 13.000000  Resp_cpu: 312167
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8945
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 5.002177  Resp: 5.002177  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 80280
      Resp_io: 5.000000  Resp_cpu: 80280
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002068  Resp: 9.002068  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 76243
      Resp_io: 9.000000  Resp_cpu: 76243
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.050000  ix_sel_with_filters: 0.027500 
    NL Join : Cost: 1.000486  Resp: 1.000486  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 17901
      Resp_io: 1.000000  Resp_cpu: 17901
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002068  Resp: 9.002068  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 76243
      Resp_io: 9.000000  Resp_cpu: 76243

  Best NL cost: 1.000486 (VALID)
          resc: 1.000486  resc_io: 1.000000  resc_cpu: 17901
          resp: 1.000486  resp_io: 1.000000  resc_cpu: 17901
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  2.750000 = outer (8.000000) * inner (2.750000) * sel (0.125000)
Join Card - Rounded: 3 Computed: 2.750000
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
  SM join: Resc: 3.000476  Resp: 3.000476  [multiMatchCost=0.000000]
SM Join
  SM cost: 3.000476 
     resc: 3.000476 resc_io: 2.000000 resc_cpu: 36886114
     resp: 3.000476 resp_io: 2.000000 resp_cpu: 36886114
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016315  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016785  Resp: 2.016785  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016785  
     resc: 2.016785 resc_io: 2.000000 resc_cpu: 618830
     resp: 2.016785 resp_io: 2.000000 resp_cpu: 618830
Best:: JoinMethod: NestedLoop
       Cost: 1.000486  Degree: 1  Resp: 1.000486  Card: 2.750000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000486  Resp: 1.000486  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.026222 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.346222
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.212001  Resp: 26.212001  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7816177
      Resp_io: 26.000000  Resp_cpu: 7816177
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.156201  Resp: 27.156201  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5758906
      Resp_io: 27.000000  Resp_cpu: 5758906
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001239  Resp: 4.001239  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 45686
      Resp_io: 4.000000  Resp_cpu: 45686
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-10  ix_sel_with_filters: 2.2222e-11 
    NL Join : Cost: 4.001155  Resp: 4.001155  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 42572
      Resp_io: 4.000000  Resp_cpu: 42572
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001239  Resp: 4.001239  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 45686
      Resp_io: 4.000000  Resp_cpu: 45686

  Best NL cost: 4.001155 (VALID)
          resc: 4.001155  resc_io: 4.000000  resc_cpu: 42572
          resp: 4.001155  resp_io: 4.000000  resc_cpu: 42572
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.750000) * inner (0.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  X  Alias: X
    resc: 1.000486  card 2.750000  bytes:   deg: 1  resp: 1.000486
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 4.000879  Resp: 4.000879  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000879 
     resc: 4.000879 resc_io: 3.000000 resc_cpu: 36900965
     resp: 4.000879 resp_io: 3.000000 resp_cpu: 36900965
  Outer table:  X  Alias: X
    resc: 1.000486  card 2.750000  bytes:   deg: 1  resp: 1.000486
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016289  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017168  Resp: 3.017168  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017168  
     resc: 3.017168 resc_io: 3.000000 resc_cpu: 632947
     resp: 3.017168 resp_io: 3.000000 resp_cpu: 632947
Join order aborted2: cost > best plan cost
***********************
Join order[3]:  Z[Z]#1  Y[Y]#0  X[X]#2

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000393  Resp: 2.000393  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 5.001402  Resp: 5.001402  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 51702
      Resp_io: 5.000000  Resp_cpu: 51702
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000623  Resp: 4.000623  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 22977
      Resp_io: 4.000000  Resp_cpu: 22977
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000422  Resp: 2.000422  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15545
      Resp_io: 2.000000  Resp_cpu: 15545
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000422  Resp: 2.000422  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15545
      Resp_io: 2.000000  Resp_cpu: 15545

  Best NL cost: 2.000422 (VALID)
          resc: 2.000422  resc_io: 2.000000  resc_cpu: 15545
          resp: 2.000422  resp_io: 2.000000  resc_cpu: 15545
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Z  Alias: Z
    resc: 2.000393  card 0.000000  bytes:   deg: 1  resp: 2.000393
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 5.000659  Resp: 5.000659  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000659 
     resc: 5.000659 resc_io: 3.000000 resc_cpu: 73761436
     resp: 5.000659 resp_io: 3.000000 resp_cpu: 73761436
  Outer table:  Z  Alias: Z
    resc: 2.000393  card 0.000000  bytes:   deg: 1  resp: 2.000393
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016930  Resp: 3.016930  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016930  
     resc: 3.016930 resc_io: 3.000000 resc_cpu: 624167
     resp: 3.016930 resp_io: 3.000000 resp_cpu: 624167
Best:: JoinMethod: NestedLoop
       Cost: 2.000422  Degree: 1  Resp: 2.000422  Card: 0.000000 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000422  Resp: 2.000422  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 623.437500 (cpu filter eval) (= 62.343750 (per row) * 10.000000 (#rows))
                       =   37930.637500
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001450  Resp: 5.001450  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 53476
      Resp_io: 5.000000  Resp_cpu: 53476
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8945
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000664  Resp: 4.000664  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24490
      Resp_io: 4.000000  Resp_cpu: 24490
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000651  Resp: 3.000651  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23985
      Resp_io: 3.000000  Resp_cpu: 23985
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.050000  ix_sel_with_filters: 0.027500 
    NL Join : Cost: 2.000453  Resp: 2.000453  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16693
      Resp_io: 2.000000  Resp_cpu: 16693
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000651  Resp: 3.000651  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23985
      Resp_io: 3.000000  Resp_cpu: 23985

  Best NL cost: 2.000453 (VALID)
          resc: 2.000453  resc_io: 2.000000  resc_cpu: 16693
          resp: 2.000453  resp_io: 2.000000  resc_cpu: 16693
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (2.750000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 2.000422  card 0.000000  bytes:   deg: 1  resp: 2.000422
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
  SM join: Resc: 5.000661  Resp: 5.000661  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000661 
     resc: 5.000661 resc_io: 3.000000 resc_cpu: 73761506
     resp: 5.000661 resp_io: 3.000000 resp_cpu: 73761506
  Outer table:  Y  Alias: Y
    resc: 2.000422  card 0.000000  bytes:   deg: 1  resp: 2.000422
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016286  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016941  Resp: 3.016941  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016941  
     resc: 3.016941 resc_io: 3.000000 resc_cpu: 624604
     resp: 3.016941 resp_io: 3.000000 resp_cpu: 624604
Best:: JoinMethod: NestedLoop
       Cost: 2.000453  Degree: 1  Resp: 2.000453  Card: 0.000000 Bytes: 
***********************
Best so far:  Table#: 1  cost: 2.000393  card: 0.000000  bytes: 10.000000
              Table#: 0  cost: 2.000422  card: 0.000000  bytes: 13.000000
              Table#: 2  cost: 2.000453  card: 0.000000  bytes: 19.000000
***********************
Join order[4]:  Z[Z]#1  X[X]#2  Y[Y]#0

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000393  Resp: 2.000393  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 987.500000 (cpu filter eval) (= 98.750000 (per row) * 10.000000 (#rows))
                       =   38294.700000
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001432  Resp: 5.001432  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 52790
      Resp_io: 5.000000  Resp_cpu: 52790
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9309
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000646  Resp: 4.000646  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23804
      Resp_io: 4.000000  Resp_cpu: 23804
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 8121
    ix_sel: 0.500000  ix_sel_with_filters: 0.275000 
    NL Join : Cost: 3.000627  Resp: 3.000627  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23104
      Resp_io: 3.000000  Resp_cpu: 23104

  Best NL cost: 3.000627 (VALID)
          resc: 3.000627  resc_io: 3.000000  resc_cpu: 23104
          resp: 3.000627  resp_io: 3.000000  resc_cpu: 23104
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (2.750000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Join order aborted2: cost > best plan cost
***********************
Join order[5]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   2.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   2.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   2.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 7.003261  Resp: 7.003261  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 120231
      Resp_io: 7.000000  Resp_cpu: 120231
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000924  Resp: 4.000924  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 34053
      Resp_io: 4.000000  Resp_cpu: 34053
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759

  Best NL cost: 1.000319 (VALID)
          resc: 1.000319  resc_io: 1.000000  resc_cpu: 11759
          resp: 1.000319  resp_io: 1.000000  resc_cpu: 11759
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  2.750000 = outer (2.750000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 3 Computed: 2.750000
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000505  Resp: 4.000505  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000505 
     resc: 4.000505 resc_io: 2.000000 resc_cpu: 73755764
     resp: 4.000505 resp_io: 2.000000 resp_cpu: 73755764
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016308  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016778  Resp: 2.016778  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016778  
     resc: 2.016778 resc_io: 2.000000 resc_cpu: 618580
     resp: 2.016778 resp_io: 2.000000 resp_cpu: 618580
Best:: JoinMethod: NestedLoop
       Cost: 1.000319  Degree: 1  Resp: 1.000319  Card: 2.750000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000319  Resp: 1.000319  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.026222 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.346222
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.211835  Resp: 26.211835  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7810035
      Resp_io: 26.000000  Resp_cpu: 7810035
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.156034  Resp: 27.156034  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5752764
      Resp_io: 27.000000  Resp_cpu: 5752764
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001073  Resp: 4.001073  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 39543
      Resp_io: 4.000000  Resp_cpu: 39543
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-10  ix_sel_with_filters: 2.2222e-11 
    NL Join : Cost: 4.000988  Resp: 4.000988  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 36430
      Resp_io: 4.000000  Resp_cpu: 36430
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001073  Resp: 4.001073  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 39543
      Resp_io: 4.000000  Resp_cpu: 39543

  Best NL cost: 4.000988 (VALID)
          resc: 4.000988  resc_io: 4.000000  resc_cpu: 36430
          resp: 4.000988  resp_io: 4.000000  resc_cpu: 36430
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.750000) * inner (0.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 2.750000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.000718  Resp: 5.000718  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000718 
     resc: 5.000718 resc_io: 3.000000 resc_cpu: 73763606
     resp: 5.000718 resp_io: 3.000000 resp_cpu: 73763606
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 2.750000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016289  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017001  Resp: 3.017001  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017001  
     resc: 3.017001 resc_io: 3.000000 resc_cpu: 626804
     resp: 3.017001 resp_io: 3.000000 resp_cpu: 626804
Join order aborted2: cost > best plan cost
***********************
Join order[6]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500026.222228 (cpu filter eval) (= 50.002622 (per row) * 10000.000000 (#rows))
                       =   2599426.542228
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.211749  Resp: 26.211749  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7806889
      Resp_io: 26.000000  Resp_cpu: 7806889
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913669
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.155949  Resp: 27.155949  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5749617
      Resp_io: 27.000000  Resp_cpu: 5749617
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-06  ix_sel_with_filters: 2.2222e-07 
    NL Join : Cost: 4.000903  Resp: 4.000903  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 33280
      Resp_io: 4.000000  Resp_cpu: 33280

  Best NL cost: 4.000903 (VALID)
          resc: 4.000903  resc_io: 4.000000  resc_cpu: 33280
          resp: 4.000903  resp_io: 4.000000  resc_cpu: 33280
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.750000) * inner (0.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :1
Join order[7]:  Z[Z]#1  Y[Y]#0  X[X]#2

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000393  Resp: 2.000393  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 5.001402  Resp: 5.001402  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 51702
      Resp_io: 5.000000  Resp_cpu: 51702
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000623  Resp: 4.000623  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 22977
      Resp_io: 4.000000  Resp_cpu: 22977
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000422  Resp: 2.000422  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15545
      Resp_io: 2.000000  Resp_cpu: 15545
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000422  Resp: 2.000422  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15545
      Resp_io: 2.000000  Resp_cpu: 15545

  Best NL cost: 2.000422 (VALID)
          resc: 2.000422  resc_io: 2.000000  resc_cpu: 15545
          resp: 2.000422  resp_io: 2.000000  resc_cpu: 15545
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Z  Alias: Z
    resc: 2.000393  card 0.000000  bytes:   deg: 1  resp: 2.000393
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 5.000659  Resp: 5.000659  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000659 
     resc: 5.000659 resc_io: 3.000000 resc_cpu: 73761436
     resp: 5.000659 resp_io: 3.000000 resp_cpu: 73761436
  Outer table:  Z  Alias: Z
    resc: 2.000393  card 0.000000  bytes:   deg: 1  resp: 2.000393
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016930  Resp: 3.016930  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016930  
     resc: 3.016930 resc_io: 3.000000 resc_cpu: 624167
     resp: 3.016930 resp_io: 3.000000 resp_cpu: 624167
Best:: JoinMethod: NestedLoop
       Cost: 2.000422  Degree: 1  Resp: 2.000422  Card: 0.000000 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000422  Resp: 2.000422  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2064  ("X"."A"=1)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 623.437500 (cpu filter eval) (= 62.343750 (per row) * 10.000000 (#rows))
                       =   37930.637500
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001450  Resp: 5.001450  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 53476
      Resp_io: 5.000000  Resp_cpu: 53476
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8945
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000664  Resp: 4.000664  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24490
      Resp_io: 4.000000  Resp_cpu: 24490
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000651  Resp: 3.000651  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23985
      Resp_io: 3.000000  Resp_cpu: 23985
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.050000  ix_sel_with_filters: 0.027500 
    NL Join : Cost: 2.000453  Resp: 2.000453  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16693
      Resp_io: 2.000000  Resp_cpu: 16693
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000651  Resp: 3.000651  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23985
      Resp_io: 3.000000  Resp_cpu: 23985

  Best NL cost: 2.000453 (VALID)
          resc: 2.000453  resc_io: 2.000000  resc_cpu: 16693
          resp: 2.000453  resp_io: 2.000000  resc_cpu: 16693
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (2.750000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 2.000422  card 0.000000  bytes:   deg: 1  resp: 2.000422
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
  SM join: Resc: 5.000661  Resp: 5.000661  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000661 
     resc: 5.000661 resc_io: 3.000000 resc_cpu: 73761506
     resp: 5.000661 resp_io: 3.000000 resp_cpu: 73761506
  Outer table:  Y  Alias: Y
    resc: 2.000422  card 0.000000  bytes:   deg: 1  resp: 2.000422
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016286  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016941  Resp: 3.016941  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016941  
     resc: 3.016941 resc_io: 3.000000 resc_cpu: 624604
     resp: 3.016941 resp_io: 3.000000 resp_cpu: 624604
Join order aborted2: cost > best plan cost
***********************
Join order[8]:  Z[Z]#1  X[X]#2  Y[Y]#0

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000393  Resp: 2.000393  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 987.500000 (cpu filter eval) (= 98.750000 (per row) * 10.000000 (#rows))
                       =   38294.700000
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001432  Resp: 5.001432  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 52790
      Resp_io: 5.000000  Resp_cpu: 52790
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9309
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000646  Resp: 4.000646  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23804
      Resp_io: 4.000000  Resp_cpu: 23804
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 8121
    ix_sel: 0.500000  ix_sel_with_filters: 0.275000 
    NL Join : Cost: 3.000627  Resp: 3.000627  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23104
      Resp_io: 3.000000  Resp_cpu: 23104

  Best NL cost: 3.000627 (VALID)
          resc: 3.000627  resc_io: 3.000000  resc_cpu: 23104
          resp: 3.000627  resp_io: 3.000000  resc_cpu: 23104
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (2.750000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Join order aborted2: cost > best plan cost
***********************
Join order[9]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   2.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   2.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   2.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 7.003261  Resp: 7.003261  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 120231
      Resp_io: 7.000000  Resp_cpu: 120231
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000924  Resp: 4.000924  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 34053
      Resp_io: 4.000000  Resp_cpu: 34053
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759

  Best NL cost: 1.000319 (VALID)
          resc: 1.000319  resc_io: 1.000000  resc_cpu: 11759
          resp: 1.000319  resp_io: 1.000000  resc_cpu: 11759
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  2.750000 = outer (2.750000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 3 Computed: 2.750000
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000505  Resp: 4.000505  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000505 
     resc: 4.000505 resc_io: 2.000000 resc_cpu: 73755764
     resp: 4.000505 resp_io: 2.000000 resp_cpu: 73755764
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016308  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016778  Resp: 2.016778  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016778  
     resc: 2.016778 resc_io: 2.000000 resc_cpu: 618580
     resp: 2.016778 resp_io: 2.000000 resp_cpu: 618580
Best:: JoinMethod: NestedLoop
       Cost: 1.000319  Degree: 1  Resp: 1.000319  Card: 2.750000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000319  Resp: 1.000319  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2080  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2065  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.026222 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.346222
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.211835  Resp: 26.211835  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7810035
      Resp_io: 26.000000  Resp_cpu: 7810035
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.156034  Resp: 27.156034  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5752764
      Resp_io: 27.000000  Resp_cpu: 5752764
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001073  Resp: 4.001073  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 39543
      Resp_io: 4.000000  Resp_cpu: 39543
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-10  ix_sel_with_filters: 2.2222e-11 
    NL Join : Cost: 4.000988  Resp: 4.000988  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 36430
      Resp_io: 4.000000  Resp_cpu: 36430
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001073  Resp: 4.001073  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 39543
      Resp_io: 4.000000  Resp_cpu: 39543

  Best NL cost: 4.000988 (VALID)
          resc: 4.000988  resc_io: 4.000000  resc_cpu: 36430
          resp: 4.000988  resp_io: 4.000000  resc_cpu: 36430
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.750000) * inner (0.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 2.750000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.000718  Resp: 5.000718  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000718 
     resc: 5.000718 resc_io: 3.000000 resc_cpu: 73763606
     resp: 5.000718 resp_io: 3.000000 resp_cpu: 73763606
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 2.750000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016289  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017001  Resp: 3.017001  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017001  
     resc: 3.017001 resc_io: 3.000000 resc_cpu: 626804
     resp: 3.017001 resp_io: 3.000000 resp_cpu: 626804
Join order aborted2: cost > best plan cost
***********************
Join order[10]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500026.222228 (cpu filter eval) (= 50.002622 (per row) * 10000.000000 (#rows))
                       =   2599426.542228
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.211749  Resp: 26.211749  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7806889
      Resp_io: 26.000000  Resp_cpu: 7806889
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913669
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.155949  Resp: 27.155949  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5749617
      Resp_io: 27.000000  Resp_cpu: 5749617
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-06  ix_sel_with_filters: 2.2222e-07 
    NL Join : Cost: 4.000903  Resp: 4.000903  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 33280
      Resp_io: 4.000000  Resp_cpu: 33280

  Best NL cost: 4.000903 (VALID)
          resc: 4.000903  resc_io: 4.000000  resc_cpu: 33280
          resp: 4.000903  resp_io: 4.000000  resc_cpu: 33280
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.750000) * inner (0.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[11]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   2.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   2.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   2.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 7.003261  Resp: 7.003261  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 120231
      Resp_io: 7.000000  Resp_cpu: 120231
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000924  Resp: 4.000924  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 34053
      Resp_io: 4.000000  Resp_cpu: 34053
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759

  Best NL cost: 1.000319 (VALID)
          resc: 1.000319  resc_io: 1.000000  resc_cpu: 11759
          resp: 1.000319  resp_io: 1.000000  resc_cpu: 11759
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  2.750000 = outer (2.750000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 3 Computed: 2.750000
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000505  Resp: 4.000505  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000505 
     resc: 4.000505 resc_io: 2.000000 resc_cpu: 73755764
     resp: 4.000505 resp_io: 2.000000 resp_cpu: 73755764
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016308  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016778  Resp: 2.016778  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016778  
     resc: 2.016778 resc_io: 2.000000 resc_cpu: 618580
     resp: 2.016778 resp_io: 2.000000 resp_cpu: 618580
Best:: JoinMethod: NestedLoop
       Cost: 1.000319  Degree: 1  Resp: 1.000319  Card: 2.750000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000319  Resp: 1.000319  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2080  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2065  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.026222 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.346222
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.211835  Resp: 26.211835  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7810035
      Resp_io: 26.000000  Resp_cpu: 7810035
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.156034  Resp: 27.156034  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5752764
      Resp_io: 27.000000  Resp_cpu: 5752764
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001073  Resp: 4.001073  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 39543
      Resp_io: 4.000000  Resp_cpu: 39543
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-10  ix_sel_with_filters: 2.2222e-11 
    NL Join : Cost: 4.000988  Resp: 4.000988  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 36430
      Resp_io: 4.000000  Resp_cpu: 36430
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001073  Resp: 4.001073  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 39543
      Resp_io: 4.000000  Resp_cpu: 39543

  Best NL cost: 4.000988 (VALID)
          resc: 4.000988  resc_io: 4.000000  resc_cpu: 36430
          resp: 4.000988  resp_io: 4.000000  resc_cpu: 36430
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.750000) * inner (0.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 2.750000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.000718  Resp: 5.000718  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000718 
     resc: 5.000718 resc_io: 3.000000 resc_cpu: 73763606
     resp: 5.000718 resp_io: 3.000000 resp_cpu: 73763606
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 2.750000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016289  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017001  Resp: 3.017001  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017001  
     resc: 3.017001 resc_io: 3.000000 resc_cpu: 626804
     resp: 3.017001 resp_io: 3.000000 resp_cpu: 626804
Join order aborted2: cost > best plan cost
***********************
Join order[12]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500026.222228 (cpu filter eval) (= 50.002622 (per row) * 10000.000000 (#rows))
                       =   2599426.542228
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.211749  Resp: 26.211749  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7806889
      Resp_io: 26.000000  Resp_cpu: 7806889
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913669
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.155949  Resp: 27.155949  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5749617
      Resp_io: 27.000000  Resp_cpu: 5749617
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-06  ix_sel_with_filters: 2.2222e-07 
    NL Join : Cost: 4.000903  Resp: 4.000903  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 33280
      Resp_io: 4.000000  Resp_cpu: 33280

  Best NL cost: 4.000903 (VALID)
          resc: 4.000903  resc_io: 4.000000  resc_cpu: 33280
          resp: 4.000903  resp_io: 4.000000  resc_cpu: 33280
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.750000) * inner (0.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Join order aborted2: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
LORE: Trying or-Expansion on query block SEL$9E43CB6E (#0)
LORE: Or-expansion bypassed: No index driver found in OR chain: 
id=0  predicate=(LNNVL("Z"."C"=0) OR LNNVL("Z"."B"=0)) AND "Z"."B"=1 AND ("X"."A"=0 OR "X"."A"=1) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"
****************
QUERY BLOCK TEXT
****************
select /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null
  from x join y  on y.id = x.id join z on z.id = y.id
  where  ( ( x.a = 0 AND z.b = 1               ) OR 
           ( x.a = 1 AND z.b = 0 AND z.c = 0  )   )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$9E43CB6E nbfros=3 flg=0
  fro(0): flg=4 objn=80828 hint_alias="X"@"SEL$9E43CB6E"
  fro(1): flg=4 objn=80831 hint_alias="Y"@"SEL$9E43CB6E"
  fro(2): flg=4 objn=80833 hint_alias="Z"@"SEL$9E43CB6E"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3072 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table:  Z  Alias:  Z
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  28  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): B(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.050000 Min: 1.000000 Max: 10.000000
    Histogram: Freq  #Bkts: 10  UncompBkts: 10000  EndPtVals: 10  ActualVal: yes
  Column (#3): C(NUMBER)
    AvgLen: 3 NDV: 1 Nulls: 0 Density: 0.000050 Min: 1.000000 Max: 1.000000
    Histogram: Freq  #Bkts: 1  UncompBkts: 10000  EndPtVals: 1  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: Z_B_C  Col#: 2 3 1
  LVLS: 1  #LB: 30  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 210.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: Z_ID  Col#: 1
  LVLS: 1  #LB: 18  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  Y  Alias:  Y
  #Rows: 8  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  3.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 1.000000 Max: 8.000000
Index Stats::
  Index: Y_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 8  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 8.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  X  Alias:  X
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): A(NUMBER)
    AvgLen: 3 NDV: 2 Nulls: 0 Density: 0.250000 Min: 1.000000 Max: 2.000000
    Histogram: Freq  #Bkts: 2  UncompBkts: 10  EndPtVals: 2  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: X_A_ID  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: X_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$9E43CB6E (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for X
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for X[X] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred


 kkecdn: Single Table Predicate:"X"."A"=0
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"X"."A"=0 OR "X"."A"=1
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Table: X  Alias: X
    Card: Original: 10.000000  Rounded: 1  Computed: 0.275000  Non Adjusted: 0.275000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 548.750000 (cpu filter eval) (= 54.875000 (per row) * 10.000000 (#rows))
                       =   37855.950000
  Access Path: TableScan
    Cost:  3.001027  Resp: 3.001027  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 37856
      Resp_io: 3.000000  Resp_cpu: 37856
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8870
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000241  Resp: 2.000241  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 8870
      Resp_io: 2.000000  Resp_cpu: 8870
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 7321
    ix_sel: 0.050000  ix_sel_with_filters: 0.027500 
    Cost: 1.000201  Resp: 1.000201  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: X_A_ID
         Cost: 1.000201  Degree: 1  Resp: 1.000201  Card: 0.275000  Bytes: 0.000000

Access path analysis for Y
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Y[Y] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: Y  Alias: Y
    Card: Original: 8.000000  Rounded: 8  Computed: 8.000000  Non Adjusted: 8.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                       =   36807.200000
  Access Path: TableScan
    Cost:  3.000998  Resp: 3.000998  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 36807
      Resp_io: 3.000000  Resp_cpu: 36807
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8081
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000219  Resp: 2.000219  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 8081
      Resp_io: 2.000000  Resp_cpu: 8081
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 1
  ****** trying bitmap/domain indexes ******
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Y_ID
         Cost: 1.000237  Degree: 1  Resp: 1.000237  Card: 8.000000  Bytes: 0.000000

Access path analysis for Z
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Z[Z] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 


 kkecdn: Single Table Predicate:"Z"."B"=1
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

 kkecdn: Single Table Predicate: ?? 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"Z"."B"=1
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Table: Z  Alias: Z
    Card: Original: 10000.000000  Rounded: 1000  Computed: 999.997778  Non Adjusted: 999.997778
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 555000.250000 (cpu filter eval) (= 55.500025 (per row) * 10000.000000 (#rows))
                       =   2654400.570000
  Access Path: TableScan
    Cost:  9.071996  Resp: 9.071996  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2654401
      Resp_io: 9.000000  Resp_cpu: 2654401
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1968643
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.053396  Resp: 10.053396  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1968643
      Resp_io: 10.000000  Resp_cpu: 1968643
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=1

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 4.000000  resc_cpu: 228486
    ix_sel: 0.100000  ix_sel_with_filters: 0.010000 
    Cost: 4.007689  Resp: 4.007689  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Z_B_C
         Cost: 4.007689  Degree: 1  Resp: 4.007689  Card: 999.997778  Bytes: 0.000000

(newjo-restore) [1 0 2 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is OR expanded SEL$9E43CB6E (#0)
kkogast: Selectivities tab=Y[Y] tnum=0 astat=N 
  card=8.00 nrow=8.00 1.000000
kkogast: Selectivities tab=Z[Z] tnum=1 astat=N 
  card=1000.00 nrow=10000.00 0.100000
kkogast: Selectivities tab=X[X] tnum=2 astat=N 
  card=0.28 nrow=10.00 0.027500
kkogast: Best single table selectivities cnt=2
  Tab = 2 1
kkogast: Final Alternative Starting Tables cnt=2
  Tab = 2 1
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  Y[Y]#0  Z[Z]#1  X[X]#2

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.750000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2080  ("Z"."B"=1)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2048  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.750000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.750000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500555.000250 (cpu filter eval) (= 50.055500 (per row) * 10000.000000 (#rows))
                       =   2599955.320250
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 63.564393  Resp: 63.564393  Degree: 1
      Cost_io: 63.000000  Cost_cpu: 20808364
      Resp_io: 63.000000  Resp_cpu: 20808364
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.250000  resc_cpu: 1914198
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 67.415593  Resp: 67.415593  Degree: 1
      Cost_io: 67.000000  Cost_cpu: 15322307
      Resp_io: 67.000000  Resp_cpu: 15322307
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002247  Resp: 9.002247  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82857
      Resp_io: 9.000000  Resp_cpu: 82857
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=1

kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 1.0000e-06 
    NL Join : Cost: 25.059315  Resp: 25.059315  Degree: 1
      Cost_io: 25.000000  Cost_cpu: 2186876
      Resp_io: 25.000000  Resp_cpu: 2186876
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002247  Resp: 9.002247  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82857
      Resp_io: 9.000000  Resp_cpu: 82857

  Best NL cost: 9.002247 (VALID)
          resc: 9.002247  resc_io: 9.000000  resc_cpu: 82857
          resp: 9.002247  resp_io: 9.000000  resc_cpu: 82857
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  7.999982 = outer (8.000000) * inner (999.997778) * sel (0.001000)
Join Card - Rounded: 8 Computed: 7.999982
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 6.020104  Resp: 6.020104  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.020104 
     resc: 6.020104 resc_io: 5.000000 resc_cpu: 37609780
     resp: 6.020104 resp_io: 5.000000 resp_cpu: 37609780
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.019019  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.026945  Resp: 5.026945  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.026945  
     resc: 5.026945 resc_io: 5.000000 resc_cpu: 993407
     resp: 5.026945 resp_io: 5.000000 resp_cpu: 993407
Best:: JoinMethod: Hash
       Cost: 5.026945  Degree: 1  Resp: 5.026945  Card: 7.999982 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 7.999982  Cost: 5.026945  Resp: 5.026945  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Cost of predicates:
    io = 0.000000, cpu = 76.111111, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  (LNNVL("X"."A"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2048  (LNNVL("Z"."B"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("Z"."C"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2064  ("X"."A"=0)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2048  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 533.710069 (cpu filter eval) (= 53.371007 (per row) * 10.000000 (#rows))
                       =   37840.910069
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 17.035156  Resp: 17.035156  Degree: 1
      Cost_io: 17.000000  Cost_cpu: 1296135
      Resp_io: 17.000000  Resp_cpu: 1296135
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8855
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 9.028866  Resp: 9.028866  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 1064249
      Resp_io: 9.000000  Resp_cpu: 1064249
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8398
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 13.028767  Resp: 13.028767  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 1060595
      Resp_io: 13.000000  Resp_cpu: 1060595
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.005000  ix_sel_with_filters: 0.002750 
    NL Join : Cost: 5.027203  Resp: 5.027203  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 1002922
      Resp_io: 5.000000  Resp_cpu: 1002922
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8398
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 13.028767  Resp: 13.028767  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 1060595
      Resp_io: 13.000000  Resp_cpu: 1060595

  Best NL cost: 5.027203 (VALID)
          resc: 5.027203  resc_io: 5.000000  resc_cpu: 1002922
          resp: 5.027203  resp_io: 5.000000  resc_cpu: 1002922
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.274999 = outer (7.999982) * inner (0.275000) * sel (0.125000)
Join cardinality for HJ/SMJ (no post filters):  0.274999, outer: 7.999982, inner: 0.275000, sel: 0.125000
Join Card - Rounded: 1 Computed: 0.274999
  Outer table:  Z  Alias: Z
    resc: 5.026945  card 7.999982  bytes:   deg: 1  resp: 5.026945
  Inner table:  X  Alias: X
    resc: 1.000201  card: 0.275000  bytes:   deg: 1  resp: 1.000201
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 8.027175  Resp: 8.027175  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.027175 
     resc: 8.027175 resc_io: 6.000000 resc_cpu: 74739046
     resp: 8.027175 resp_io: 6.000000 resp_cpu: 74739046
  Outer table:  Z  Alias: Z
    resc: 5.026945  card 7.999982  bytes:   deg: 1  resp: 5.026945
  Inner table:  X  Alias: X
    resc: 1.000201  card: 0.275000  bytes:   deg: 1  resp: 1.000201
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016309  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 6.043455  Resp: 6.043455  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.043455  
     resc: 6.043455 resc_io: 6.000000 resc_cpu: 1602126
     resp: 6.043455 resp_io: 6.000000 resp_cpu: 1602126
Best:: JoinMethod: NestedLoop
       Cost: 5.027203  Degree: 1  Resp: 5.027203  Card: 0.274999 Bytes: 
***********************
Best so far:  Table#: 0  cost: 1.000237  card: 8.000000  bytes: 24.000000
              Table#: 1  cost: 5.026945  card: 7.999982  bytes: 104.000000
              Table#: 2  cost: 5.027203  card: 0.274999  bytes: 19.000000
***********************
Join order[2]:  Y[Y]#0  X[X]#2  Z[Z]#1

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 531.093750 (cpu filter eval) (= 53.109375 (per row) * 10.000000 (#rows))
                       =   37838.293750
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 13.008447  Resp: 13.008447  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 311428
      Resp_io: 13.000000  Resp_cpu: 311428
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8853
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 5.002157  Resp: 5.002157  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 79542
      Resp_io: 5.000000  Resp_cpu: 79542
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8396
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002058  Resp: 9.002058  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 75892
      Resp_io: 9.000000  Resp_cpu: 75892
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.005000  ix_sel_with_filters: 0.002750 
    NL Join : Cost: 1.000486  Resp: 1.000486  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 17901
      Resp_io: 1.000000  Resp_cpu: 17901
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8396
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002058  Resp: 9.002058  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 75892
      Resp_io: 9.000000  Resp_cpu: 75892

  Best NL cost: 1.000486 (VALID)
          resc: 1.000486  resc_io: 1.000000  resc_cpu: 17901
          resp: 1.000486  resp_io: 1.000000  resc_cpu: 17901
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.275000 = outer (8.000000) * inner (0.275000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.275000
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000201  card: 0.275000  bytes:   deg: 1  resp: 1.000201
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 3.000438  Resp: 3.000438  [multiMatchCost=0.000000]
SM Join
  SM cost: 3.000438 
     resc: 3.000438 resc_io: 2.000000 resc_cpu: 36884709
     resp: 3.000438 resp_io: 2.000000 resp_cpu: 36884709
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000201  card: 0.275000  bytes:   deg: 1  resp: 1.000201
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016309  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016747  Resp: 2.016747  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016747  
     resc: 2.016747 resc_io: 2.000000 resc_cpu: 617440
     resp: 2.016747 resp_io: 2.000000 resp_cpu: 617440
Best:: JoinMethod: NestedLoop
       Cost: 1.000486  Degree: 1  Resp: 1.000486  Card: 0.275000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000486  Resp: 1.000486  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 76.111111, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  (LNNVL("X"."A"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2048  (LNNVL("Z"."B"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("Z"."C"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500562.611344 (cpu filter eval) (= 50.056261 (per row) * 10000.000000 (#rows))
                       =   2599962.931344
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.071005  Resp: 10.071005  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2617864
      Resp_io: 10.000000  Resp_cpu: 2617864
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1914206
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.052405  Resp: 11.052405  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1932107
      Resp_io: 11.000000  Resp_cpu: 1932107
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000737  Resp: 2.000737  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 27169
      Resp_io: 2.000000  Resp_cpu: 27169
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=1

kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 1.0000e-06 
    NL Join : Cost: 4.007871  Resp: 4.007871  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 290178
      Resp_io: 4.000000  Resp_cpu: 290178
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000737  Resp: 2.000737  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 27169
      Resp_io: 2.000000  Resp_cpu: 27169

  Best NL cost: 2.000737 (VALID)
          resc: 2.000737  resc_io: 2.000000  resc_cpu: 27169
          resp: 2.000737  resp_io: 2.000000  resc_cpu: 27169
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.274999 = outer (0.275000) * inner (999.997778) * sel (1.0000e-03)
Join cardinality for HJ/SMJ (no post filters):  0.274999, outer: 0.275000, inner: 999.997778, sel: 1.0000e-03
Join Card - Rounded: 1 Computed: 0.274999
  Outer table:  X  Alias: X
    resc: 1.000486  card 0.275000  bytes:   deg: 1  resp: 1.000486
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 6.020353  Resp: 6.020353  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.020353 
     resc: 6.020353 resc_io: 5.000000 resc_cpu: 37618960
     resp: 6.020353 resp_io: 5.000000 resp_cpu: 37618960
  Outer table:  X  Alias: X
    resc: 1.000486  card 0.275000  bytes:   deg: 1  resp: 1.000486
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.018990  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.027165  Resp: 5.027165  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.027165  
     resc: 5.027165 resc_io: 5.000000 resc_cpu: 1001537
     resp: 5.027165 resp_io: 5.000000 resp_cpu: 1001537
Best:: JoinMethod: NestedLoop
       Cost: 2.000737  Degree: 1  Resp: 2.000737  Card: 0.274999 Bytes: 
***********************
Best so far:  Table#: 0  cost: 1.000237  card: 8.000000  bytes: 24.000000
              Table#: 2  cost: 1.000486  card: 0.275000  bytes: 9.000000
              Table#: 1  cost: 2.000737  card: 0.274999  bytes: 19.000000
***********************
Join order[3]:  Z[Z]#1  Y[Y]#0  X[X]#2
Join order aborted1: cost > best plan cost
***********************
Join order[4]:  Z[Z]#1  X[X]#2  Y[Y]#0
Join order aborted1: cost > best plan cost
***********************
Join order[5]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 4.001210  Resp: 4.001210  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 44626
      Resp_io: 4.000000  Resp_cpu: 44626
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 3.000431  Resp: 3.000431  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 15900
      Resp_io: 3.000000  Resp_cpu: 15900
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469

  Best NL cost: 1.000230 (VALID)
          resc: 1.000230  resc_io: 1.000000  resc_cpu: 8469
          resp: 1.000230  resp_io: 1.000000  resc_cpu: 8469
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.275000 = outer (0.275000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.275000
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000467  Resp: 4.000467  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000467 
     resc: 4.000467 resc_io: 2.000000 resc_cpu: 73754360
     resp: 4.000467 resp_io: 2.000000 resp_cpu: 73754360
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016738  Resp: 2.016738  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016738  
     resc: 2.016738 resc_io: 2.000000 resc_cpu: 617090
     resp: 2.016738 resp_io: 2.000000 resp_cpu: 617090
Best:: JoinMethod: NestedLoop
       Cost: 1.000230  Degree: 1  Resp: 1.000230  Card: 0.275000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000230  Resp: 1.000230  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 76.111111, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  (LNNVL("X"."A"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2048  (LNNVL("Z"."B"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("Z"."C"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500562.611344 (cpu filter eval) (= 50.056261 (per row) * 10000.000000 (#rows))
                       =   2599962.931344
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.070749  Resp: 10.070749  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2608432
      Resp_io: 10.000000  Resp_cpu: 2608432
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1914206
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.052149  Resp: 11.052149  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1922675
      Resp_io: 11.000000  Resp_cpu: 1922675
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17737
      Resp_io: 2.000000  Resp_cpu: 17737
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=1

kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 1.0000e-06 
    NL Join : Cost: 4.007615  Resp: 4.007615  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 280746
      Resp_io: 4.000000  Resp_cpu: 280746
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17737
      Resp_io: 2.000000  Resp_cpu: 17737

  Best NL cost: 2.000481 (VALID)
          resc: 2.000481  resc_io: 2.000000  resc_cpu: 17737
          resp: 2.000481  resp_io: 2.000000  resc_cpu: 17737
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.274999 = outer (0.275000) * inner (999.997778) * sel (1.0000e-03)
Join cardinality for HJ/SMJ (no post filters):  0.274999, outer: 0.275000, inner: 999.997778, sel: 1.0000e-03
Join Card - Rounded: 1 Computed: 0.274999
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.275000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 7.020097  Resp: 7.020097  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.020097 
     resc: 7.020097 resc_io: 5.000000 resc_cpu: 74478097
     resp: 7.020097 resp_io: 5.000000 resp_cpu: 74478097
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.275000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.018990  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.026909  Resp: 5.026909  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.026909  
     resc: 5.026909 resc_io: 5.000000 resc_cpu: 992105
     resp: 5.026909 resp_io: 5.000000 resp_cpu: 992105
Best:: JoinMethod: NestedLoop
       Cost: 2.000481  Degree: 1  Resp: 2.000481  Card: 0.274999 Bytes: 
***********************
Best so far:  Table#: 2  cost: 1.000201  card: 0.275000  bytes: 6.000000
              Table#: 0  cost: 1.000230  card: 0.275000  bytes: 9.000000
              Table#: 1  cost: 2.000481  card: 0.274999  bytes: 19.000000
***********************
Join order[6]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 76.111111, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  (LNNVL("X"."A"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2048  (LNNVL("Z"."B"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("Z"."C"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 562611.344198 (cpu filter eval) (= 56.261134 (per row) * 10000.000000 (#rows))
                       =   2662011.664198
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.072404  Resp: 10.072404  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2669431
      Resp_io: 10.000000  Resp_cpu: 2669431
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1976255
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.053804  Resp: 11.053804  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1983673
      Resp_io: 11.000000  Resp_cpu: 1983673
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=1

kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 4.007927  Resp: 4.007927  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 292245
      Resp_io: 4.000000  Resp_cpu: 292245

  Best NL cost: 4.007927 (VALID)
          resc: 4.007927  resc_io: 4.000000  resc_cpu: 292245
          resp: 4.007927  resp_io: 4.000000  resc_cpu: 292245
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  274.999083 = outer (0.275000) * inner (999.997778) * sel (0.999999)
Join cardinality for HJ/SMJ (no post filters):  274.999389, outer: 0.275000, inner: 999.997778, sel: 0.999999
Join Card - Rounded: 275 Computed: 274.999083
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :1
Join order[7]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 4.001210  Resp: 4.001210  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 44626
      Resp_io: 4.000000  Resp_cpu: 44626
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 3.000431  Resp: 3.000431  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 15900
      Resp_io: 3.000000  Resp_cpu: 15900
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469

  Best NL cost: 1.000230 (VALID)
          resc: 1.000230  resc_io: 1.000000  resc_cpu: 8469
          resp: 1.000230  resp_io: 1.000000  resc_cpu: 8469
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.275000 = outer (0.275000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.275000
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000467  Resp: 4.000467  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000467 
     resc: 4.000467 resc_io: 2.000000 resc_cpu: 73754360
     resp: 4.000467 resp_io: 2.000000 resp_cpu: 73754360
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016738  Resp: 2.016738  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016738  
     resc: 2.016738 resc_io: 2.000000 resc_cpu: 617090
     resp: 2.016738 resp_io: 2.000000 resp_cpu: 617090
Best:: JoinMethod: NestedLoop
       Cost: 1.000230  Degree: 1  Resp: 1.000230  Card: 0.275000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000230  Resp: 1.000230  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 76.111111, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  (LNNVL("X"."A"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2048  (LNNVL("Z"."B"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("Z"."C"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2080  ("Z"."B"=1)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500562.611344 (cpu filter eval) (= 50.056261 (per row) * 10000.000000 (#rows))
                       =   2599962.931344
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.070749  Resp: 10.070749  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2608432
      Resp_io: 10.000000  Resp_cpu: 2608432
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1914206
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.052149  Resp: 11.052149  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1922675
      Resp_io: 11.000000  Resp_cpu: 1922675
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17737
      Resp_io: 2.000000  Resp_cpu: 17737
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=1

kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 1.0000e-06 
    NL Join : Cost: 4.007615  Resp: 4.007615  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 280746
      Resp_io: 4.000000  Resp_cpu: 280746
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17737
      Resp_io: 2.000000  Resp_cpu: 17737

  Best NL cost: 2.000481 (VALID)
          resc: 2.000481  resc_io: 2.000000  resc_cpu: 17737
          resp: 2.000481  resp_io: 2.000000  resc_cpu: 17737
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.274999 = outer (0.275000) * inner (999.997778) * sel (1.0000e-03)
Join cardinality for HJ/SMJ (no post filters):  0.274999, outer: 0.275000, inner: 999.997778, sel: 1.0000e-03
Join Card - Rounded: 1 Computed: 0.274999
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.275000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 7.020097  Resp: 7.020097  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.020097 
     resc: 7.020097 resc_io: 5.000000 resc_cpu: 74478097
     resp: 7.020097 resp_io: 5.000000 resp_cpu: 74478097
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.275000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.018990  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.026909  Resp: 5.026909  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.026909  
     resc: 5.026909 resc_io: 5.000000 resc_cpu: 992105
     resp: 5.026909 resp_io: 5.000000 resp_cpu: 992105
Join order aborted2: cost > best plan cost
***********************
Join order[8]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 76.111111, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  (LNNVL("X"."A"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2048  (LNNVL("Z"."B"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("Z"."C"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 562611.344198 (cpu filter eval) (= 56.261134 (per row) * 10000.000000 (#rows))
                       =   2662011.664198
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.072404  Resp: 10.072404  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2669431
      Resp_io: 10.000000  Resp_cpu: 2669431
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1976255
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.053804  Resp: 11.053804  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1983673
      Resp_io: 11.000000  Resp_cpu: 1983673
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=1

kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 4.007927  Resp: 4.007927  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 292245
      Resp_io: 4.000000  Resp_cpu: 292245

  Best NL cost: 4.007927 (VALID)
          resc: 4.007927  resc_io: 4.000000  resc_cpu: 292245
          resp: 4.007927  resp_io: 4.000000  resc_cpu: 292245
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  274.999083 = outer (0.275000) * inner (999.997778) * sel (0.999999)
Join cardinality for HJ/SMJ (no post filters):  274.999389, outer: 0.275000, inner: 999.997778, sel: 0.999999
Join Card - Rounded: 275 Computed: 274.999083
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[9]:  Z[Z]#1  Y[Y]#0  X[X]#2
Join order aborted1: cost > best plan cost
***********************
Join order[10]:  Z[Z]#1  X[X]#2  Y[Y]#0
Join order aborted1: cost > best plan cost
***********************
Join order[11]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 4.001210  Resp: 4.001210  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 44626
      Resp_io: 4.000000  Resp_cpu: 44626
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 3.000431  Resp: 3.000431  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 15900
      Resp_io: 3.000000  Resp_cpu: 15900
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469

  Best NL cost: 1.000230 (VALID)
          resc: 1.000230  resc_io: 1.000000  resc_cpu: 8469
          resp: 1.000230  resp_io: 1.000000  resc_cpu: 8469
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.275000 = outer (0.275000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.275000
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000467  Resp: 4.000467  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000467 
     resc: 4.000467 resc_io: 2.000000 resc_cpu: 73754360
     resp: 4.000467 resp_io: 2.000000 resp_cpu: 73754360
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016738  Resp: 2.016738  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016738  
     resc: 2.016738 resc_io: 2.000000 resc_cpu: 617090
     resp: 2.016738 resp_io: 2.000000 resp_cpu: 617090
Best:: JoinMethod: NestedLoop
       Cost: 1.000230  Degree: 1  Resp: 1.000230  Card: 0.275000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000230  Resp: 1.000230  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 76.111111, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  (LNNVL("X"."A"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2048  (LNNVL("Z"."B"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("Z"."C"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2080  ("Z"."B"=1)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500562.611344 (cpu filter eval) (= 50.056261 (per row) * 10000.000000 (#rows))
                       =   2599962.931344
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.070749  Resp: 10.070749  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2608432
      Resp_io: 10.000000  Resp_cpu: 2608432
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1914206
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.052149  Resp: 11.052149  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1922675
      Resp_io: 11.000000  Resp_cpu: 1922675
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17737
      Resp_io: 2.000000  Resp_cpu: 17737
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=1

kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 1.0000e-06 
    NL Join : Cost: 4.007615  Resp: 4.007615  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 280746
      Resp_io: 4.000000  Resp_cpu: 280746
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17737
      Resp_io: 2.000000  Resp_cpu: 17737

  Best NL cost: 2.000481 (VALID)
          resc: 2.000481  resc_io: 2.000000  resc_cpu: 17737
          resp: 2.000481  resp_io: 2.000000  resc_cpu: 17737
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.274999 = outer (0.275000) * inner (999.997778) * sel (1.0000e-03)
Join cardinality for HJ/SMJ (no post filters):  0.274999, outer: 0.275000, inner: 999.997778, sel: 1.0000e-03
Join Card - Rounded: 1 Computed: 0.274999
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.275000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 7.020097  Resp: 7.020097  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.020097 
     resc: 7.020097 resc_io: 5.000000 resc_cpu: 74478097
     resp: 7.020097 resp_io: 5.000000 resp_cpu: 74478097
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.275000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.018990  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.026909  Resp: 5.026909  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.026909  
     resc: 5.026909 resc_io: 5.000000 resc_cpu: 992105
     resp: 5.026909 resp_io: 5.000000 resp_cpu: 992105
Join order aborted2: cost > best plan cost
***********************
Join order[12]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 76.111111, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  (LNNVL("X"."A"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2048  (LNNVL("Z"."B"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("Z"."C"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 562611.344198 (cpu filter eval) (= 56.261134 (per row) * 10000.000000 (#rows))
                       =   2662011.664198
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.072404  Resp: 10.072404  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2669431
      Resp_io: 10.000000  Resp_cpu: 2669431
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1976255
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.053804  Resp: 11.053804  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1983673
      Resp_io: 11.000000  Resp_cpu: 1983673
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=1

kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 4.007927  Resp: 4.007927  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 292245
      Resp_io: 4.000000  Resp_cpu: 292245

  Best NL cost: 4.007927 (VALID)
          resc: 4.007927  resc_io: 4.000000  resc_cpu: 292245
          resp: 4.007927  resp_io: 4.000000  resc_cpu: 292245
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  274.999083 = outer (0.275000) * inner (999.997778) * sel (0.999999)
Join cardinality for HJ/SMJ (no post filters):  274.999389, outer: 0.275000, inner: 999.997778, sel: 0.999999
Join Card - Rounded: 275 Computed: 274.999083
Join order aborted2: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
LORE: Trying or-Expansion on query block SEL$9E43CB6E (#0)
LORE: Or-expansion bypassed: No index driver found in OR chain: 
id=0  predicate=(LNNVL("X"."A"=1) OR LNNVL("Z"."B"=0) OR LNNVL("Z"."C"=0)) AND "X"."A"=0 AND "Z"."B"=1 AND (LNNVL("Z"."C"=0) OR LNNVL("Z"."B"=0)) AND "Z"."B"=1 AND ("X"."A"=0 OR "X"."A"=1) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"
LORE: Or-expansion bypassed: No index driver found in OR chain: 
id=0  predicate=(LNNVL("Z"."C"=0) OR LNNVL("Z"."B"=0)) AND "Z"."B"=1 AND ("X"."A"=0 OR "X"."A"=1) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"

LORE: ******** Final costing  ********
Registered qb: SEL$9E43CB6E_1 0x79197138 (OR EXPANSION SEL$9E43CB6E; SEL$9E43CB6E; 8 LIST)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$9E43CB6E_1 nbfros=3 flg=0
    fro(0): flg=0 objn=80828 hint_alias="X"@"SEL$1"
    fro(1): flg=0 objn=80831 hint_alias="Y"@"SEL$1"
    fro(2): flg=0 objn=80833 hint_alias="Z"@"SEL$2"

LORE: Predicate chain for or-expanded branch SEL$9E43CB6E_1 is:
id=0  predicate="Z"."C"=0 AND "Z"."B"=0 AND ("X"."A"=0 OR "X"."A"=1) AND ("X"."A"=0 AND "Z"."B"=1 OR "X"."A"=1 AND "Z"."B"=0 AND "Z"."C"=0) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"
****************
QUERY BLOCK TEXT
****************
select /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null
  from x join y  on y.id = x.id join z on z.id = y.id
  where  ( ( x.a = 0 AND z.b = 1               ) OR 
           ( x.a = 1 AND z.b = 0 AND z.c = 0  )   )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$9E43CB6E_1 nbfros=3 flg=0
  fro(0): flg=0 objn=80828 hint_alias="X"@"SEL$1"
  fro(1): flg=0 objn=80831 hint_alias="Y"@"SEL$1"
  fro(2): flg=0 objn=80833 hint_alias="Z"@"SEL$2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3072 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table:  Z  Alias:  Z
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  28  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): B(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.050000 Min: 1.000000 Max: 10.000000
    Histogram: Freq  #Bkts: 10  UncompBkts: 10000  EndPtVals: 10  ActualVal: yes
  Column (#3): C(NUMBER)
    AvgLen: 3 NDV: 1 Nulls: 0 Density: 0.000050 Min: 1.000000 Max: 1.000000
    Histogram: Freq  #Bkts: 1  UncompBkts: 10000  EndPtVals: 1  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: Z_B_C  Col#: 2 3 1
  LVLS: 1  #LB: 30  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 210.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: Z_ID  Col#: 1
  LVLS: 1  #LB: 18  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  Y  Alias:  Y
  #Rows: 8  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  3.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 1.000000 Max: 8.000000
Index Stats::
  Index: Y_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 8  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 8.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  X  Alias:  X
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): A(NUMBER)
    AvgLen: 3 NDV: 2 Nulls: 0 Density: 0.250000 Min: 1.000000 Max: 2.000000
    Histogram: Freq  #Bkts: 2  UncompBkts: 10  EndPtVals: 2  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: X_A_ID  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: X_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$9E43CB6E_1 (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for X
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for X[X] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE

 kkecdn: Single Table Predicate:"X"."A"=0 OR "X"."A"=1
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Table: X  Alias: X
    Card: Original: 10.000000  Rounded: 6  Computed: 5.500000  Non Adjusted: 5.500000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 975.000000 (cpu filter eval) (= 97.500000 (per row) * 10.000000 (#rows))
                       =   38282.200000
  Access Path: TableScan
    Cost:  3.001038  Resp: 3.001038  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 38282
      Resp_io: 3.000000  Resp_cpu: 38282
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9296
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000252  Resp: 2.000252  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9296
      Resp_io: 2.000000  Resp_cpu: 9296
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 15443
    ix_sel: 0.550000  ix_sel_with_filters: 0.550000 
    Cost: 1.000419  Resp: 1.000419  Degree: 1
  ****** trying bitmap/domain indexes ******
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 7321
    ix_sel: 0.050000  ix_sel_with_filters: 0.050000 
    Cost: 1.000199  Resp: 1.000199  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 7321
    ix_sel: 0.050000  ix_sel_with_filters: 0.050000 
    Cost: 1.000199  Resp: 1.000199  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  Bitmap nodes:
    Not used X_A_ID
      Cost = 2.000201, sel = 0.050000
    Used X_A_ID
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: X_A_ID
         Cost: 1.000419  Degree: 1  Resp: 1.000419  Card: 5.500000  Bytes: 0.000000

Access path analysis for Y
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Y[Y] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: Y  Alias: Y
    Card: Original: 8.000000  Rounded: 8  Computed: 8.000000  Non Adjusted: 8.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                       =   36807.200000
  Access Path: TableScan
    Cost:  3.000998  Resp: 3.000998  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 36807
      Resp_io: 3.000000  Resp_cpu: 36807
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8081
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000219  Resp: 2.000219  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 8081
      Resp_io: 2.000000  Resp_cpu: 8081
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 1
  ****** trying bitmap/domain indexes ******
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Y_ID
         Cost: 1.000237  Degree: 1  Resp: 1.000237  Card: 8.000000  Bytes: 0.000000

Access path analysis for Z
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Z[Z] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred


 kkecdn: Single Table Predicate:"Z"."C"=0
  Estimated selectivity: 5.0000e-05 , col: #3 

 kkecdn: Single Table Predicate:"Z"."B"=0
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Table: Z  Alias: Z
    Card: Original: 10000.000000  Rounded: 1  Computed: 0.022222  Non Adjusted: 0.022222
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2081  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2080  ("Z"."B"=0)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.000000 (cpu filter eval) (= 50.002500 (per row) * 10000.000000 (#rows))
                       =   2599425.320000
  Access Path: TableScan
    Cost:  9.070505  Resp: 9.070505  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2599425
      Resp_io: 9.000000  Resp_cpu: 2599425
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.051905  Resp: 10.051905  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1913668
      Resp_io: 10.000000  Resp_cpu: 1913668
 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 2.2222e-06  ix_sel_with_filters: 2.2222e-06 
    Cost: 2.000392  Resp: 2.000392  Degree: 1
  ****** trying bitmap/domain indexes ******

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 2.2222e-06  ix_sel_with_filters: 2.2222e-06 
    Cost: 2.000392  Resp: 2.000392  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 4.000000  resc_cpu: 228486
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    Cost: 4.006197  Resp: 4.006197  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  Bitmap nodes:
    Used Z_B_C
      Cost = 3.000392, sel = 2.2222e-06
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Z_B_C
         Cost: 2.000392  Degree: 1  Resp: 2.000392  Card: 0.022222  Bytes: 0.000000

(newjo-restore) [1 0 2 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is OR expanded SEL$9E43CB6E_1 (#0)
kkogast: Selectivities tab=Y[Y] tnum=0 astat=N 
  card=8.00 nrow=8.00 1.000000
kkogast: Selectivities tab=Z[Z] tnum=1 astat=N 
  card=0.02 nrow=10000.00 2.2222e-06
kkogast: Selectivities tab=X[X] tnum=2 astat=N 
  card=5.50 nrow=10.00 0.550000
kkogast: Best single table selectivities cnt=2
  Tab = 1 2
kkogast: Final Alternative Starting Tables cnt=2
  Tab = 1 2
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  Y[Y]#0  Z[Z]#1  X[X]#2

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.750000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.750000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.750000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.024975 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2599425.344975
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 63.564278  Resp: 63.564278  Degree: 1
      Cost_io: 63.000000  Cost_cpu: 20804124
      Resp_io: 63.000000  Resp_cpu: 20804124
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.250000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 67.415478  Resp: 67.415478  Degree: 1
      Cost_io: 67.000000  Cost_cpu: 15318067
      Resp_io: 67.000000  Resp_cpu: 15318067
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002246  Resp: 9.002246  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82813
      Resp_io: 9.000000  Resp_cpu: 82813
 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 2.2222e-10 
    NL Join : Cost: 9.002010  Resp: 9.002010  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 74093
      Resp_io: 9.000000  Resp_cpu: 74093
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002246  Resp: 9.002246  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82813
      Resp_io: 9.000000  Resp_cpu: 82813

  Best NL cost: 9.002010 (VALID)
          resc: 9.002010  resc_io: 9.000000  resc_cpu: 74093
          resp: 9.002010  resp_io: 9.000000  resc_cpu: 74093
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.022222 = outer (8.000000) * inner (0.022222) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.022222
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 4.000628  Resp: 4.000628  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000628 
     resc: 4.000628 resc_io: 3.000000 resc_cpu: 36891733
     resp: 4.000628 resp_io: 3.000000 resp_cpu: 36891733
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016309  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016938  Resp: 3.016938  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016938  
     resc: 3.016938 resc_io: 3.000000 resc_cpu: 624464
     resp: 3.016938 resp_io: 3.000000 resp_cpu: 624464
Best:: JoinMethod: Hash
       Cost: 3.016938  Degree: 1  Resp: 3.016938  Card: 0.022222 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.022222  Cost: 3.016938  Resp: 3.016938  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2064  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2064  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 660.897704 (cpu filter eval) (= 66.089770 (per row) * 10.000000 (#rows))
                       =   37968.097704
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 6.017967  Resp: 6.017967  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 662432
      Resp_io: 6.000000  Resp_cpu: 662432
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8982
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 5.017181  Resp: 5.017181  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 633447
      Resp_io: 5.000000  Resp_cpu: 633447
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.017167  Resp: 4.017167  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 632934
      Resp_io: 4.000000  Resp_cpu: 632934
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 14443
    ix_sel: 0.055000  ix_sel_with_filters: 2.7506e-04 
    NL Join : Cost: 4.017333  Resp: 4.017333  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 639035
      Resp_io: 4.000000  Resp_cpu: 639035
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.017167  Resp: 4.017167  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 632934
      Resp_io: 4.000000  Resp_cpu: 632934

  Best NL cost: 4.017167 (VALID)
          resc: 4.017167  resc_io: 4.000000  resc_cpu: 632934
          resp: 4.017167  resp_io: 4.000000  resc_cpu: 632934
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.000139 = outer (0.022222) * inner (10.000000) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  0.027778, outer: 0.022222, inner: 10.000000, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.000139
  Outer table:  Z  Alias: Z
    resc: 3.016938  card 0.022222  bytes:   deg: 1  resp: 3.016938
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
  SM join: Resc: 6.017375  Resp: 6.017375  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.017375 
     resc: 6.017375 resc_io: 4.000000 resc_cpu: 74377744
     resp: 6.017375 resp_io: 4.000000 resp_cpu: 74377744
  Outer table:  Z  Alias: Z
    resc: 3.016938  card 0.022222  bytes:   deg: 1  resp: 3.016938
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016294  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 4.033651  Resp: 4.033651  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.033651  
     resc: 4.033651 resc_io: 4.000000 resc_cpu: 1240657
     resp: 4.033651 resp_io: 4.000000 resp_cpu: 1240657
Best:: JoinMethod: NestedLoop
       Cost: 4.017167  Degree: 1  Resp: 4.017167  Card: 0.000139 Bytes: 
***********************
Best so far:  Table#: 0  cost: 1.000237  card: 8.000000  bytes: 24.000000
              Table#: 1  cost: 3.016938  card: 0.022222  bytes: 13.000000
              Table#: 2  cost: 4.017167  card: 0.000139  bytes: 19.000000
***********************
Join order[2]:  Y[Y]#0  X[X]#2  Z[Z]#1

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 621.875000 (cpu filter eval) (= 62.187500 (per row) * 10.000000 (#rows))
                       =   37929.075000
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 13.008467  Resp: 13.008467  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 312154
      Resp_io: 13.000000  Resp_cpu: 312154
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8943
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 5.002177  Resp: 5.002177  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 80268
      Resp_io: 5.000000  Resp_cpu: 80268
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8439
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002068  Resp: 9.002068  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 76233
      Resp_io: 9.000000  Resp_cpu: 76233
 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 14443
    ix_sel: 0.055000  ix_sel_with_filters: 0.055000 
    NL Join : Cost: 9.003370  Resp: 9.003370  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 124264
      Resp_io: 9.000000  Resp_cpu: 124264
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8439
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002068  Resp: 9.002068  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 76233
      Resp_io: 9.000000  Resp_cpu: 76233

  Best NL cost: 9.002068 (VALID)
          resc: 9.002068  resc_io: 9.000000  resc_cpu: 76233
          resp: 9.002068  resp_io: 9.000000  resc_cpu: 76233
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (8.000000) * inner (10.000000) * sel (0.100000)
Join cardinality for NL:  8.000000, outer: 8.000000, inner: 10.000000, sel: 0.100000
Join cardinality without POSQ:  8.000000, outer: 8.000000, inner: 10.000000, sel: 0.100000
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
  SM join: Resc: 3.000680  Resp: 3.000680  [multiMatchCost=0.000005]
SM Join
  SM cost: 3.000680 
     resc: 3.000680 resc_io: 2.000000 resc_cpu: 36893632
     resp: 3.000680 resp_io: 2.000000 resp_cpu: 36893632
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016323  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016989  Resp: 2.016989  [multiMatchCost=0.000011]
HA Join
  HA cost: 2.016989  
     resc: 2.016989 resc_io: 2.000000 resc_cpu: 626364
     resp: 2.016989 resp_io: 2.000000 resp_cpu: 626364
Best:: JoinMethod: Hash
       Cost: 2.016989  Degree: 1  Resp: 2.016989  Card: 10.000000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 2.016989  Resp: 2.016989  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.700000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2064  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2064  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.700000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.700000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.027822 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.347822
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 79.722041  Resp: 79.722041  Degree: 1
      Cost_io: 79.000000  Cost_cpu: 26620618
      Resp_io: 79.000000  Resp_cpu: 26620618
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.300000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 85.536041  Resp: 85.536041  Degree: 1
      Cost_io: 85.000000  Cost_cpu: 19763047
      Resp_io: 85.000000  Resp_cpu: 19763047
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 12.019501  Resp: 12.019501  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 718979
      Resp_io: 12.000000  Resp_cpu: 718979
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 1.1114e-12 
    NL Join : Cost: 12.019240  Resp: 12.019240  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 709361
      Resp_io: 12.000000  Resp_cpu: 709361
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 12.019501  Resp: 12.019501  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 718979
      Resp_io: 12.000000  Resp_cpu: 718979

  Best NL cost: 12.019240 (VALID)
          resc: 12.019240  resc_io: 12.000000  resc_cpu: 709361
          resp: 12.019240  resp_io: 12.000000  resc_cpu: 709361
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.000139 = outer (10.000000) * inner (0.022222) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  0.027778, outer: 10.000000, inner: 0.022222, sel: 6.2514e-04
Join cardinality without POSQ:  0.000111, outer: 8.000000, inner: 0.022222, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.000139
  Outer table:  X  Alias: X
    resc: 2.016989  card 10.000000  bytes:   deg: 1  resp: 2.016989
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36870066
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 6.017421  Resp: 6.017421  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.017421 
     resc: 6.017421 resc_io: 4.000000 resc_cpu: 74379442
     resp: 6.017421 resp_io: 4.000000 resp_cpu: 74379442
  Outer table:  X  Alias: X
    resc: 2.016989  card 10.000000  bytes:   deg: 1  resp: 2.016989
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016317  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 4.033698  Resp: 4.033698  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.033698  
     resc: 4.033698 resc_io: 4.000000 resc_cpu: 1242407
     resp: 4.033698 resp_io: 4.000000 resp_cpu: 1242407
Plan cardinality mismatch: best card= 0.00013891960   curr card= 0.00011113568
Join order aborted2: cost > best plan cost
***********************
Join order[3]:  Z[Z]#1  Y[Y]#0  X[X]#2

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000392  Resp: 2.000392  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 5.001401  Resp: 5.001401  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 51650
      Resp_io: 5.000000  Resp_cpu: 51650
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000622  Resp: 4.000622  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 22924
      Resp_io: 4.000000  Resp_cpu: 22924
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000420  Resp: 2.000420  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15493
      Resp_io: 2.000000  Resp_cpu: 15493
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000420  Resp: 2.000420  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15493
      Resp_io: 2.000000  Resp_cpu: 15493

  Best NL cost: 2.000420 (VALID)
          resc: 2.000420  resc_io: 2.000000  resc_cpu: 15493
          resp: 2.000420  resp_io: 2.000000  resc_cpu: 15493
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.022222 = outer (0.022222) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.022222
  Outer table:  Z  Alias: Z
    resc: 2.000392  card 0.022222  bytes:   deg: 1  resp: 2.000392
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 5.000658  Resp: 5.000658  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000658 
     resc: 5.000658 resc_io: 3.000000 resc_cpu: 73761383
     resp: 5.000658 resp_io: 3.000000 resp_cpu: 73761383
  Outer table:  Z  Alias: Z
    resc: 2.000392  card 0.022222  bytes:   deg: 1  resp: 2.000392
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016928  Resp: 3.016928  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016928  
     resc: 3.016928 resc_io: 3.000000 resc_cpu: 624114
     resp: 3.016928 resp_io: 3.000000 resp_cpu: 624114
Best:: JoinMethod: NestedLoop
       Cost: 2.000420  Degree: 1  Resp: 2.000420  Card: 0.022222 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000420  Resp: 2.000420  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2064  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2064  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 660.897704 (cpu filter eval) (= 66.089770 (per row) * 10.000000 (#rows))
                       =   37968.097704
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001450  Resp: 5.001450  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 53461
      Resp_io: 5.000000  Resp_cpu: 53461
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8982
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000664  Resp: 4.000664  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24475
      Resp_io: 4.000000  Resp_cpu: 24475
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000650  Resp: 3.000650  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23963
      Resp_io: 3.000000  Resp_cpu: 23963
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 14443
    ix_sel: 0.055000  ix_sel_with_filters: 2.7506e-04 
    NL Join : Cost: 3.000815  Resp: 3.000815  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 30064
      Resp_io: 3.000000  Resp_cpu: 30064
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000650  Resp: 3.000650  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23963
      Resp_io: 3.000000  Resp_cpu: 23963

  Best NL cost: 3.000650 (VALID)
          resc: 3.000650  resc_io: 3.000000  resc_cpu: 23963
          resp: 3.000650  resp_io: 3.000000  resc_cpu: 23963
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.000139 = outer (0.022222) * inner (10.000000) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  0.027778, outer: 0.022222, inner: 10.000000, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.000139
  Outer table:  Y  Alias: Y
    resc: 2.000420  card 0.022222  bytes:   deg: 1  resp: 2.000420
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
  SM join: Resc: 5.000858  Resp: 5.000858  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000858 
     resc: 5.000858 resc_io: 3.000000 resc_cpu: 73768772
     resp: 5.000858 resp_io: 3.000000 resp_cpu: 73768772
  Outer table:  Y  Alias: Y
    resc: 2.000420  card 0.022222  bytes:   deg: 1  resp: 2.000420
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016294  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017133  Resp: 3.017133  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017133  
     resc: 3.017133 resc_io: 3.000000 resc_cpu: 631686
     resp: 3.017133 resp_io: 3.000000 resp_cpu: 631686
Best:: JoinMethod: NestedLoop
       Cost: 3.000650  Degree: 1  Resp: 3.000650  Card: 0.000139 Bytes: 
***********************
Best so far:  Table#: 1  cost: 2.000392  card: 0.022222  bytes: 10.000000
              Table#: 0  cost: 2.000420  card: 0.022222  bytes: 13.000000
              Table#: 2  cost: 3.000650  card: 0.000139  bytes: 19.000000
***********************
Join order[4]:  Z[Z]#1  X[X]#2  Y[Y]#0

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000392  Resp: 2.000392  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2064  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2064  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 1287.181633 (cpu filter eval) (= 128.718163 (per row) * 10.000000 (#rows))
                       =   38594.381633
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001439  Resp: 5.001439  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 53037
      Resp_io: 5.000000  Resp_cpu: 53037
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9609
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000652  Resp: 4.000652  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24052
      Resp_io: 4.000000  Resp_cpu: 24052
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 15443
    ix_sel: 0.550000  ix_sel_with_filters: 0.002751 
    NL Join : Cost: 3.000831  Resp: 3.000831  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 30655
      Resp_io: 3.000000  Resp_cpu: 30655

  Best NL cost: 3.000831 (VALID)
          resc: 3.000831  resc_io: 3.000000  resc_cpu: 30655
          resp: 3.000831  resp_io: 3.000000  resc_cpu: 30655
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.001111 = outer (0.022222) * inner (10.000000) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  0.222222, outer: 0.022222, inner: 10.000000, sel: 0.005001
Join Card - Rounded: 1 Computed: 0.001111
Join order aborted2: cost > best plan cost
***********************
Join order[5]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   1.666667
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.666667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   1.666667
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 11.006474  Resp: 11.006474  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 238686
      Resp_io: 11.000000  Resp_cpu: 238686
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 0.500000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.001799  Resp: 4.001799  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 66332
      Resp_io: 4.000000  Resp_cpu: 66332
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743

  Best NL cost: 1.000590 (VALID)
          resc: 1.000590  resc_io: 1.000000  resc_cpu: 21743
          resp: 1.000590  resp_io: 1.000000  resc_cpu: 21743
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000709  Resp: 4.000709  [multiMatchCost=0.000005]
SM Join
  SM cost: 4.000709 
     resc: 4.000709 resc_io: 2.000000 resc_cpu: 73763282
     resp: 4.000709 resp_io: 2.000000 resp_cpu: 73763282
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016320  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016981  Resp: 2.016981  [multiMatchCost=0.000005]
HA Join
  HA cost: 2.016981  
     resc: 2.016981 resc_io: 2.000000 resc_cpu: 626064
     resp: 2.016981 resp_io: 2.000000 resp_cpu: 626064
Best:: JoinMethod: NestedLoop
       Cost: 1.000590  Degree: 1  Resp: 1.000590  Card: 10.000000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 1.000590  Resp: 1.000590  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.700000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2064  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2064  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.700000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.700000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.027822 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.347822
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 78.705642  Resp: 78.705642  Degree: 1
      Cost_io: 78.000000  Cost_cpu: 26015996
      Resp_io: 78.000000  Resp_cpu: 26015996
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.300000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 84.519641  Resp: 84.519641  Degree: 1
      Cost_io: 84.000000  Cost_cpu: 19158425
      Resp_io: 84.000000  Resp_cpu: 19158425
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003102  Resp: 11.003102  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114357
      Resp_io: 11.000000  Resp_cpu: 114357
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 1.1114e-12 
    NL Join : Cost: 11.002841  Resp: 11.002841  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 104740
      Resp_io: 11.000000  Resp_cpu: 104740
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003102  Resp: 11.003102  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114357
      Resp_io: 11.000000  Resp_cpu: 114357

  Best NL cost: 11.002841 (VALID)
          resc: 11.002841  resc_io: 11.000000  resc_cpu: 104740
          resp: 11.002841  resp_io: 11.000000  resc_cpu: 104740
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.000139 = outer (10.000000) * inner (0.022222) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  0.027778, outer: 10.000000, inner: 0.022222, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.000139
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36870066
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.001022  Resp: 5.001022  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.001022 
     resc: 5.001022 resc_io: 3.000000 resc_cpu: 73774820
     resp: 5.001022 resp_io: 3.000000 resp_cpu: 73774820
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016317  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017299  Resp: 3.017299  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017299  
     resc: 3.017299 resc_io: 3.000000 resc_cpu: 637786
     resp: 3.017299 resp_io: 3.000000 resp_cpu: 637786
Join order aborted2: cost > best plan cost
***********************
Join order[6]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.833333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2064  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2064  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
  Total Scan IO  Cost  =   7.833333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.833333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500027.849568 (cpu filter eval) (= 50.002785 (per row) * 10000.000000 (#rows))
                       =   2599428.169568
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 48.423450  Resp: 48.423450  Degree: 1
      Cost_io: 48.000000  Cost_cpu: 15612012
      Resp_io: 48.000000  Resp_cpu: 15612012
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.500000  resc_cpu: 1913671
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 52.311850  Resp: 52.311850  Degree: 1
      Cost_io: 52.000000  Cost_cpu: 11497469
      Resp_io: 52.000000  Resp_cpu: 11497469
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-06  ix_sel_with_filters: 1.1114e-08 
    NL Join : Cost: 7.001770  Resp: 7.001770  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 65241
      Resp_io: 7.000000  Resp_cpu: 65241

  Best NL cost: 7.001770 (VALID)
          resc: 7.001770  resc_io: 7.000000  resc_cpu: 65241
          resp: 7.001770  resp_io: 7.000000  resc_cpu: 65241
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.001111 = outer (10.000000) * inner (0.022222) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  0.222222, outer: 10.000000, inner: 0.022222, sel: 0.005001
Join Card - Rounded: 1 Computed: 0.001111
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :1
Join order[7]:  Z[Z]#1  Y[Y]#0  X[X]#2

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000392  Resp: 2.000392  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 5.001401  Resp: 5.001401  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 51650
      Resp_io: 5.000000  Resp_cpu: 51650
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000622  Resp: 4.000622  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 22924
      Resp_io: 4.000000  Resp_cpu: 22924
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000420  Resp: 2.000420  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15493
      Resp_io: 2.000000  Resp_cpu: 15493
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000420  Resp: 2.000420  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15493
      Resp_io: 2.000000  Resp_cpu: 15493

  Best NL cost: 2.000420 (VALID)
          resc: 2.000420  resc_io: 2.000000  resc_cpu: 15493
          resp: 2.000420  resp_io: 2.000000  resc_cpu: 15493
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.022222 = outer (0.022222) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.022222
  Outer table:  Z  Alias: Z
    resc: 2.000392  card 0.022222  bytes:   deg: 1  resp: 2.000392
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 5.000658  Resp: 5.000658  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000658 
     resc: 5.000658 resc_io: 3.000000 resc_cpu: 73761383
     resp: 5.000658 resp_io: 3.000000 resp_cpu: 73761383
  Outer table:  Z  Alias: Z
    resc: 2.000392  card 0.022222  bytes:   deg: 1  resp: 2.000392
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016928  Resp: 3.016928  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016928  
     resc: 3.016928 resc_io: 3.000000 resc_cpu: 624114
     resp: 3.016928 resp_io: 3.000000 resp_cpu: 624114
Best:: JoinMethod: NestedLoop
       Cost: 2.000420  Degree: 1  Resp: 2.000420  Card: 0.022222 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000420  Resp: 2.000420  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2064  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2064  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2064  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 660.897704 (cpu filter eval) (= 66.089770 (per row) * 10.000000 (#rows))
                       =   37968.097704
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001450  Resp: 5.001450  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 53461
      Resp_io: 5.000000  Resp_cpu: 53461
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8982
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000664  Resp: 4.000664  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24475
      Resp_io: 4.000000  Resp_cpu: 24475
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000650  Resp: 3.000650  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23963
      Resp_io: 3.000000  Resp_cpu: 23963
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 14443
    ix_sel: 0.055000  ix_sel_with_filters: 2.7506e-04 
    NL Join : Cost: 3.000815  Resp: 3.000815  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 30064
      Resp_io: 3.000000  Resp_cpu: 30064
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8470
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000650  Resp: 3.000650  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23963
      Resp_io: 3.000000  Resp_cpu: 23963

  Best NL cost: 3.000650 (VALID)
          resc: 3.000650  resc_io: 3.000000  resc_cpu: 23963
          resp: 3.000650  resp_io: 3.000000  resc_cpu: 23963
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.000139 = outer (0.022222) * inner (10.000000) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  0.027778, outer: 0.022222, inner: 10.000000, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.000139
  Outer table:  Y  Alias: Y
    resc: 2.000420  card 0.022222  bytes:   deg: 1  resp: 2.000420
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
  SM join: Resc: 5.000858  Resp: 5.000858  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000858 
     resc: 5.000858 resc_io: 3.000000 resc_cpu: 73768772
     resp: 5.000858 resp_io: 3.000000 resp_cpu: 73768772
  Outer table:  Y  Alias: Y
    resc: 2.000420  card 0.022222  bytes:   deg: 1  resp: 2.000420
  Inner table:  X  Alias: X
    resc: 1.000419  card: 5.500000  bytes:   deg: 1  resp: 1.000419
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016294  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017133  Resp: 3.017133  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017133  
     resc: 3.017133 resc_io: 3.000000 resc_cpu: 631686
     resp: 3.017133 resp_io: 3.000000 resp_cpu: 631686
Join order aborted2: cost > best plan cost
***********************
Join order[8]:  Z[Z]#1  X[X]#2  Y[Y]#0

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.022222  Cost: 2.000392  Resp: 2.000392  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2064  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2064  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 1287.181633 (cpu filter eval) (= 128.718163 (per row) * 10.000000 (#rows))
                       =   38594.381633
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001439  Resp: 5.001439  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 53037
      Resp_io: 5.000000  Resp_cpu: 53037
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9609
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000652  Resp: 4.000652  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24052
      Resp_io: 4.000000  Resp_cpu: 24052
kkofmx: filter for index: X_A_ID
kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 15443
    ix_sel: 0.550000  ix_sel_with_filters: 0.002751 
    NL Join : Cost: 3.000831  Resp: 3.000831  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 30655
      Resp_io: 3.000000  Resp_cpu: 30655

  Best NL cost: 3.000831 (VALID)
          resc: 3.000831  resc_io: 3.000000  resc_cpu: 30655
          resp: 3.000831  resp_io: 3.000000  resc_cpu: 30655
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.001111 = outer (0.022222) * inner (10.000000) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  0.222222, outer: 0.022222, inner: 10.000000, sel: 0.005001
Join Card - Rounded: 1 Computed: 0.001111
Join order aborted2: cost > best plan cost
***********************
Join order[9]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   1.666667
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.666667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   1.666667
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 11.006474  Resp: 11.006474  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 238686
      Resp_io: 11.000000  Resp_cpu: 238686
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 0.500000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.001799  Resp: 4.001799  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 66332
      Resp_io: 4.000000  Resp_cpu: 66332
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743

  Best NL cost: 1.000590 (VALID)
          resc: 1.000590  resc_io: 1.000000  resc_cpu: 21743
          resp: 1.000590  resp_io: 1.000000  resc_cpu: 21743
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000709  Resp: 4.000709  [multiMatchCost=0.000005]
SM Join
  SM cost: 4.000709 
     resc: 4.000709 resc_io: 2.000000 resc_cpu: 73763282
     resp: 4.000709 resp_io: 2.000000 resp_cpu: 73763282
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016320  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016981  Resp: 2.016981  [multiMatchCost=0.000005]
HA Join
  HA cost: 2.016981  
     resc: 2.016981 resc_io: 2.000000 resc_cpu: 626064
     resp: 2.016981 resp_io: 2.000000 resp_cpu: 626064
Best:: JoinMethod: NestedLoop
       Cost: 1.000590  Degree: 1  Resp: 1.000590  Card: 10.000000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 1.000590  Resp: 1.000590  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.700000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2064  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2064  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.700000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.700000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.027822 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.347822
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 78.705642  Resp: 78.705642  Degree: 1
      Cost_io: 78.000000  Cost_cpu: 26015996
      Resp_io: 78.000000  Resp_cpu: 26015996
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.300000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 84.519641  Resp: 84.519641  Degree: 1
      Cost_io: 84.000000  Cost_cpu: 19158425
      Resp_io: 84.000000  Resp_cpu: 19158425
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003102  Resp: 11.003102  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114357
      Resp_io: 11.000000  Resp_cpu: 114357
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 1.1114e-12 
    NL Join : Cost: 11.002841  Resp: 11.002841  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 104740
      Resp_io: 11.000000  Resp_cpu: 104740
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003102  Resp: 11.003102  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114357
      Resp_io: 11.000000  Resp_cpu: 114357

  Best NL cost: 11.002841 (VALID)
          resc: 11.002841  resc_io: 11.000000  resc_cpu: 104740
          resp: 11.002841  resp_io: 11.000000  resc_cpu: 104740
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.000139 = outer (10.000000) * inner (0.022222) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  0.027778, outer: 10.000000, inner: 0.022222, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.000139
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36870066
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.001022  Resp: 5.001022  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.001022 
     resc: 5.001022 resc_io: 3.000000 resc_cpu: 73774820
     resp: 5.001022 resp_io: 3.000000 resp_cpu: 73774820
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016317  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017299  Resp: 3.017299  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017299  
     resc: 3.017299 resc_io: 3.000000 resc_cpu: 637786
     resp: 3.017299 resp_io: 3.000000 resp_cpu: 637786
Join order aborted2: cost > best plan cost
***********************
Join order[10]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.833333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2064  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2064  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
  Total Scan IO  Cost  =   7.833333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.833333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500027.849568 (cpu filter eval) (= 50.002785 (per row) * 10000.000000 (#rows))
                       =   2599428.169568
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 48.423450  Resp: 48.423450  Degree: 1
      Cost_io: 48.000000  Cost_cpu: 15612012
      Resp_io: 48.000000  Resp_cpu: 15612012
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.500000  resc_cpu: 1913671
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 52.311850  Resp: 52.311850  Degree: 1
      Cost_io: 52.000000  Cost_cpu: 11497469
      Resp_io: 52.000000  Resp_cpu: 11497469
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-06  ix_sel_with_filters: 1.1114e-08 
    NL Join : Cost: 7.001770  Resp: 7.001770  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 65241
      Resp_io: 7.000000  Resp_cpu: 65241

  Best NL cost: 7.001770 (VALID)
          resc: 7.001770  resc_io: 7.000000  resc_cpu: 65241
          resp: 7.001770  resp_io: 7.000000  resc_cpu: 65241
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.001111 = outer (10.000000) * inner (0.022222) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  0.222222, outer: 10.000000, inner: 0.022222, sel: 0.005001
Join Card - Rounded: 1 Computed: 0.001111
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[11]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   1.666667
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.666667 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   1.666667
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 11.006474  Resp: 11.006474  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 238686
      Resp_io: 11.000000  Resp_cpu: 238686
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 0.500000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.001799  Resp: 4.001799  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 66332
      Resp_io: 4.000000  Resp_cpu: 66332
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000590  Resp: 1.000590  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 21743
      Resp_io: 1.000000  Resp_cpu: 21743

  Best NL cost: 1.000590 (VALID)
          resc: 1.000590  resc_io: 1.000000  resc_cpu: 21743
          resp: 1.000590  resp_io: 1.000000  resc_cpu: 21743
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              6
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869268
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000709  Resp: 4.000709  [multiMatchCost=0.000005]
SM Join
  SM cost: 4.000709 
     resc: 4.000709 resc_io: 2.000000 resc_cpu: 73763282
     resp: 4.000709 resp_io: 2.000000 resp_cpu: 73763282
  Outer table:  X  Alias: X
    resc: 1.000419  card 5.500000  bytes:   deg: 1  resp: 1.000419
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016320  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016981  Resp: 2.016981  [multiMatchCost=0.000005]
HA Join
  HA cost: 2.016981  
     resc: 2.016981 resc_io: 2.000000 resc_cpu: 626064
     resp: 2.016981 resp_io: 2.000000 resp_cpu: 626064
Best:: JoinMethod: NestedLoop
       Cost: 1.000590  Degree: 1  Resp: 1.000590  Card: 10.000000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 1.000590  Resp: 1.000590  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.700000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2080  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2064  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2064  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000999 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.700000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.700000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.027822 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.347822
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 78.705642  Resp: 78.705642  Degree: 1
      Cost_io: 78.000000  Cost_cpu: 26015996
      Resp_io: 78.000000  Resp_cpu: 26015996
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.300000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 84.519641  Resp: 84.519641  Degree: 1
      Cost_io: 84.000000  Cost_cpu: 19158425
      Resp_io: 84.000000  Resp_cpu: 19158425
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003102  Resp: 11.003102  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114357
      Resp_io: 11.000000  Resp_cpu: 114357
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-10  ix_sel_with_filters: 1.1114e-12 
    NL Join : Cost: 11.002841  Resp: 11.002841  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 104740
      Resp_io: 11.000000  Resp_cpu: 104740
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 11.003102  Resp: 11.003102  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 114357
      Resp_io: 11.000000  Resp_cpu: 114357

  Best NL cost: 11.002841 (VALID)
          resc: 11.002841  resc_io: 11.000000  resc_cpu: 104740
          resp: 11.002841  resp_io: 11.000000  resc_cpu: 104740
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.000139 = outer (10.000000) * inner (0.022222) * sel (6.2514e-04)
Join cardinality for HJ/SMJ (no post filters):  0.027778, outer: 10.000000, inner: 0.022222, sel: 6.2514e-04
Join Card - Rounded: 1 Computed: 0.000139
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36870066
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.001022  Resp: 5.001022  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.001022 
     resc: 5.001022 resc_io: 3.000000 resc_cpu: 73774820
     resp: 5.001022 resp_io: 3.000000 resp_cpu: 73774820
  Outer table:  Y  Alias: Y
    resc: 1.000590  card 10.000000  bytes:   deg: 1  resp: 1.000590
  Inner table:  Z  Alias: Z
    resc: 2.000392  card: 0.022222  bytes:   deg: 1  resp: 2.000392
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016317  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017299  Resp: 3.017299  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017299  
     resc: 3.017299 resc_io: 3.000000 resc_cpu: 637786
     resp: 3.017299 resp_io: 3.000000 resp_cpu: 637786
Join order aborted2: cost > best plan cost
***********************
Join order[12]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 5.500000  Cost: 1.000419  Resp: 1.000419  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.833333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = 0.000000, cpu = 128.230556, sel = 0.005001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 52.500000, sel = 0.005000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2064  ("X"."A"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
      io = 0.000000, cpu = 76.111111, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2064  ("X"."A"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2064  ("Z"."B"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
  Total Scan IO  Cost  =   7.833333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.833333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500027.849568 (cpu filter eval) (= 50.002785 (per row) * 10000.000000 (#rows))
                       =   2599428.169568
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 48.423450  Resp: 48.423450  Degree: 1
      Cost_io: 48.000000  Cost_cpu: 15612012
      Resp_io: 48.000000  Resp_cpu: 15612012
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.500000  resc_cpu: 1913671
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 52.311850  Resp: 52.311850  Degree: 1
      Cost_io: 52.000000  Cost_cpu: 11497469
      Resp_io: 52.000000  Resp_cpu: 11497469
kkofmx: filter for index: Z_B_C
kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Estimated selectivity: 5.0000e-05 , col: #3 

  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 2.2222e-06  ix_sel_with_filters: 1.1114e-08 
    NL Join : Cost: 7.001770  Resp: 7.001770  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 65241
      Resp_io: 7.000000  Resp_cpu: 65241

  Best NL cost: 7.001770 (VALID)
          resc: 7.001770  resc_io: 7.000000  resc_cpu: 65241
          resp: 7.001770  resp_io: 7.000000  resc_cpu: 65241
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.001111 = outer (10.000000) * inner (0.022222) * sel (0.005001)
Join cardinality for HJ/SMJ (no post filters):  0.222222, outer: 10.000000, inner: 0.022222, sel: 0.005001
Join Card - Rounded: 1 Computed: 0.001111
Join order aborted2: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
Transfer Optimizer annotations for query block SEL$9E43CB6E_1 (#0)
AP: Checking validity for query block SEL$9E43CB6E_1, sqlid=g2uupqtwcpan6
AP: Adaptive joins bypassed for query block SEL$9E43CB6E_1 due to OR expansion
AutoDOP: Consider caching for Z[Z](obj#-1) 
cost:2.000392 blkSize:8192 objSize:28.00 marObjSize:26.60 bufSize:27412.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible for first input in join order
id=0 frofkks[i] (index start key) predicate="Z"."B"=0
id=0 frofkks[i] (index start key) predicate="Z"."C"=0
id=0 frofkke[i] (index stop key) predicate="Z"."B"=0
id=0 frofkke[i] (index stop key) predicate="Z"."C"=0
Transfer optimizer annotations for Z[Z]
AutoDOP: Consider caching for Y[Y](obj#-1) 
cost:2.000420 blkSize:8192 objSize:5.00 marObjSize:4.75 bufSize:27412.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible based on distribution
id=0 frofkks[i] (index start key) predicate="Z"."ID"="Y"."ID"
id=0 frofkke[i] (index stop key) predicate="Z"."ID"="Y"."ID"
Transfer optimizer annotations for Y[Y]
AutoDOP: Consider caching for X[X](obj#-1) 
cost:3.000650 blkSize:8192 objSize:5.00 marObjSize:4.75 bufSize:27412.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible based on distribution
id=0 frofkks[i] (index start key) predicate="Y"."ID"="X"."ID"
id=0 frofkke[i] (index stop key) predicate="Y"."ID"="X"."ID"
id=0 frofand predicate=("X"."A"=0 AND "Z"."B"=1 OR "X"."A"=1 AND "Z"."B"=0 AND "Z"."C"=0) AND ("X"."A"=0 OR "X"."A"=1)
Transfer optimizer annotations for X[X]
Final cost for query block SEL$9E43CB6E_1 (#0) - All Rows Plan:
  Best join order: 3
  Cost: 3.000650  Degree: 1  Card: 1.000000  Bytes: 19.000000
  Resc: 3.000650  Resc_io: 3.000000  Resc_cpu: 23963
  Resp: 3.000650  Resp_io: 3.000000  Resc_cpu: 23963
Registered qb: SEL$9E43CB6E_2 0x79197138 (OR EXPANSION SEL$9E43CB6E)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$9E43CB6E_2 nbfros=3 flg=0
    fro(0): flg=4 objn=80828 hint_alias="X"@"SEL$9E43CB6E_2"
    fro(1): flg=4 objn=80831 hint_alias="Y"@"SEL$9E43CB6E_2"
    fro(2): flg=4 objn=80833 hint_alias="Z"@"SEL$9E43CB6E_2"

LORE: Predicate chain for or-expanded branch SEL$9E43CB6E_2 is:
id=0  predicate="X"."A"=1 AND "Z"."B"=0 AND "Z"."C"=0 AND (LNNVL("Z"."C"=0) OR LNNVL("Z"."B"=0)) AND "Z"."B"=1 AND ("X"."A"=0 OR "X"."A"=1) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"
****************
QUERY BLOCK TEXT
****************
select /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null
  from x join y  on y.id = x.id join z on z.id = y.id
  where  ( ( x.a = 0 AND z.b = 1               ) OR 
           ( x.a = 1 AND z.b = 0 AND z.c = 0  )   )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$9E43CB6E_2 nbfros=3 flg=0
  fro(0): flg=0 objn=80828 hint_alias="X"@"SEL$9E43CB6E_2"
  fro(1): flg=0 objn=80831 hint_alias="Y"@"SEL$9E43CB6E_2"
  fro(2): flg=0 objn=80833 hint_alias="Z"@"SEL$9E43CB6E_2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3072 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table:  Z  Alias:  Z
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  28  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): B(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.050000 Min: 1.000000 Max: 10.000000
    Histogram: Freq  #Bkts: 10  UncompBkts: 10000  EndPtVals: 10  ActualVal: yes
  Column (#3): C(NUMBER)
    AvgLen: 3 NDV: 1 Nulls: 0 Density: 0.000050 Min: 1.000000 Max: 1.000000
    Histogram: Freq  #Bkts: 1  UncompBkts: 10000  EndPtVals: 1  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: Z_B_C  Col#: 2 3 1
  LVLS: 1  #LB: 30  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 210.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: Z_ID  Col#: 1
  LVLS: 1  #LB: 18  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  Y  Alias:  Y
  #Rows: 8  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  3.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 1.000000 Max: 8.000000
Index Stats::
  Index: Y_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 8  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 8.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  X  Alias:  X
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): A(NUMBER)
    AvgLen: 3 NDV: 2 Nulls: 0 Density: 0.250000 Min: 1.000000 Max: 2.000000
    Histogram: Freq  #Bkts: 2  UncompBkts: 10  EndPtVals: 2  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: X_A_ID  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: X_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$9E43CB6E_2 (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for X
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for X[X] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 


 kkecdn: Single Table Predicate:"X"."A"=1
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

 kkecdn: Single Table Predicate:"X"."A"=0 OR "X"."A"=1
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Table: X  Alias: X
    Card: Original: 10.000000  Rounded: 3  Computed: 2.750000  Non Adjusted: 2.750000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2064  ("X"."A"=1)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 987.500000 (cpu filter eval) (= 98.750000 (per row) * 10.000000 (#rows))
                       =   38294.700000
  Access Path: TableScan
    Cost:  3.001039  Resp: 3.001039  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 38295
      Resp_io: 3.000000  Resp_cpu: 38295
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9309
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000252  Resp: 2.000252  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9309
      Resp_io: 2.000000  Resp_cpu: 9309
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 8121
    ix_sel: 0.500000  ix_sel_with_filters: 0.275000 
    Cost: 1.000234  Resp: 1.000234  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: X_A_ID
         Cost: 1.000234  Degree: 1  Resp: 1.000234  Card: 2.750000  Bytes: 0.000000

Access path analysis for Y
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Y[Y] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: Y  Alias: Y
    Card: Original: 8.000000  Rounded: 8  Computed: 8.000000  Non Adjusted: 8.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                       =   36807.200000
  Access Path: TableScan
    Cost:  3.000998  Resp: 3.000998  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 36807
      Resp_io: 3.000000  Resp_cpu: 36807
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8081
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000219  Resp: 2.000219  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 8081
      Resp_io: 2.000000  Resp_cpu: 8081
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 1
  ****** trying bitmap/domain indexes ******
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Y_ID
         Cost: 1.000237  Degree: 1  Resp: 1.000237  Card: 8.000000  Bytes: 0.000000

Access path analysis for Z
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Z[Z] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 


 kkecdn: Single Table Predicate:"Z"."B"=0
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"Z"."C"=0
  Estimated selectivity: 5.0000e-05 , col: #3 

 kkecdn: Single Table Predicate: ?? 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"Z"."B"=1
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Table: Z  Alias: Z
    Card: Original: 10000.000000  Rounded: 1  Computed: 0.000000  Non Adjusted: 0.000000
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2080  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2065  ("Z"."B"=1)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500026.222228 (cpu filter eval) (= 50.002622 (per row) * 10000.000000 (#rows))
                       =   2599426.542228
  Access Path: TableScan
    Cost:  9.070505  Resp: 9.070505  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2599427
      Resp_io: 9.000000  Resp_cpu: 2599427
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1913669
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.051905  Resp: 10.051905  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1913669
      Resp_io: 10.000000  Resp_cpu: 1913669
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 5.0000e-06  ix_sel_with_filters: 2.2222e-07 
    Cost: 2.000393  Resp: 2.000393  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Z_B_C
         Cost: 2.000393  Degree: 1  Resp: 2.000393  Card: 0.000000  Bytes: 0.000000

(newjo-restore) [1 0 2 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is OR expanded SEL$9E43CB6E_2 (#0)
kkogast: Selectivities tab=Y[Y] tnum=0 astat=N 
  card=8.00 nrow=8.00 1.000000
kkogast: Selectivities tab=Z[Z] tnum=1 astat=N 
  card=0.00 nrow=10000.00 1.0000e-13
kkogast: Selectivities tab=X[X] tnum=2 astat=N 
  card=2.75 nrow=10.00 0.275000
kkogast: Best single table selectivities cnt=2
  Tab = 1 2
kkogast: Final Alternative Starting Tables cnt=2
  Tab = 1 2
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  Y[Y]#0  Z[Z]#1  X[X]#2

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.750000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2080  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2065  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.750000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.750000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.026222 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.346222
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 63.564278  Resp: 63.564278  Degree: 1
      Cost_io: 63.000000  Cost_cpu: 20804124
      Resp_io: 63.000000  Resp_cpu: 20804124
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.250000  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 67.415478  Resp: 67.415478  Degree: 1
      Cost_io: 67.000000  Cost_cpu: 15318067
      Resp_io: 67.000000  Resp_cpu: 15318067
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002246  Resp: 9.002246  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82813
      Resp_io: 9.000000  Resp_cpu: 82813
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-10  ix_sel_with_filters: 2.2222e-11 
    NL Join : Cost: 9.002021  Resp: 9.002021  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 74511
      Resp_io: 9.000000  Resp_cpu: 74511
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002246  Resp: 9.002246  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82813
      Resp_io: 9.000000  Resp_cpu: 82813

  Best NL cost: 9.002021 (VALID)
          resc: 9.002021  resc_io: 9.000000  resc_cpu: 74511
          resp: 9.002021  resp_io: 9.000000  resc_cpu: 74511
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (8.000000) * inner (0.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 4.000630  Resp: 4.000630  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000630 
     resc: 4.000630 resc_io: 3.000000 resc_cpu: 36891785
     resp: 4.000630 resp_io: 3.000000 resp_cpu: 36891785
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016309  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016939  Resp: 3.016939  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016939  
     resc: 3.016939 resc_io: 3.000000 resc_cpu: 624517
     resp: 3.016939 resp_io: 3.000000 resp_cpu: 624517
Best:: JoinMethod: Hash
       Cost: 3.016939  Degree: 1  Resp: 3.016939  Card: 0.000000 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.000000  Cost: 3.016939  Resp: 3.016939  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2064  ("X"."A"=1)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 623.437500 (cpu filter eval) (= 62.343750 (per row) * 10.000000 (#rows))
                       =   37930.637500
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 6.017968  Resp: 6.017968  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 662447
      Resp_io: 6.000000  Resp_cpu: 662447
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8945
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 5.017182  Resp: 5.017182  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 633461
      Resp_io: 5.000000  Resp_cpu: 633461
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.017168  Resp: 4.017168  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 632957
      Resp_io: 4.000000  Resp_cpu: 632957
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.050000  ix_sel_with_filters: 0.027500 
    NL Join : Cost: 3.016970  Resp: 3.016970  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 625664
      Resp_io: 3.000000  Resp_cpu: 625664
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.017168  Resp: 4.017168  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 632957
      Resp_io: 4.000000  Resp_cpu: 632957

  Best NL cost: 3.016970 (VALID)
          resc: 3.016970  resc_io: 3.000000  resc_cpu: 625664
          resp: 3.016970  resp_io: 3.000000  resc_cpu: 625664
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (2.750000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Z  Alias: Z
    resc: 3.016939  card 0.000000  bytes:   deg: 1  resp: 3.016939
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
  SM join: Resc: 6.017178  Resp: 6.017178  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.017178 
     resc: 6.017178 resc_io: 4.000000 resc_cpu: 74370478
     resp: 6.017178 resp_io: 4.000000 resp_cpu: 74370478
  Outer table:  Z  Alias: Z
    resc: 3.016939  card 0.000000  bytes:   deg: 1  resp: 3.016939
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016286  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 4.033459  Resp: 4.033459  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.033459  
     resc: 4.033459 resc_io: 4.000000 resc_cpu: 1233575
     resp: 4.033459 resp_io: 4.000000 resp_cpu: 1233575
Best:: JoinMethod: NestedLoop
       Cost: 3.016970  Degree: 1  Resp: 3.016970  Card: 0.000000 Bytes: 
***********************
Best so far:  Table#: 0  cost: 1.000237  card: 8.000000  bytes: 24.000000
              Table#: 1  cost: 3.016939  card: 0.000000  bytes: 13.000000
              Table#: 2  cost: 3.016970  card: 0.000000  bytes: 19.000000
***********************
Join order[2]:  Y[Y]#0  X[X]#2  Z[Z]#1

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 623.437500 (cpu filter eval) (= 62.343750 (per row) * 10.000000 (#rows))
                       =   37930.637500
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 13.008467  Resp: 13.008467  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 312167
      Resp_io: 13.000000  Resp_cpu: 312167
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8945
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 5.002177  Resp: 5.002177  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 80280
      Resp_io: 5.000000  Resp_cpu: 80280
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002068  Resp: 9.002068  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 76243
      Resp_io: 9.000000  Resp_cpu: 76243
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.050000  ix_sel_with_filters: 0.027500 
    NL Join : Cost: 1.000486  Resp: 1.000486  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 17901
      Resp_io: 1.000000  Resp_cpu: 17901
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002068  Resp: 9.002068  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 76243
      Resp_io: 9.000000  Resp_cpu: 76243

  Best NL cost: 1.000486 (VALID)
          resc: 1.000486  resc_io: 1.000000  resc_cpu: 17901
          resp: 1.000486  resp_io: 1.000000  resc_cpu: 17901
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  2.750000 = outer (8.000000) * inner (2.750000) * sel (0.125000)
Join Card - Rounded: 3 Computed: 2.750000
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
  SM join: Resc: 3.000476  Resp: 3.000476  [multiMatchCost=0.000000]
SM Join
  SM cost: 3.000476 
     resc: 3.000476 resc_io: 2.000000 resc_cpu: 36886114
     resp: 3.000476 resp_io: 2.000000 resp_cpu: 36886114
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016315  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016785  Resp: 2.016785  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016785  
     resc: 2.016785 resc_io: 2.000000 resc_cpu: 618830
     resp: 2.016785 resp_io: 2.000000 resp_cpu: 618830
Best:: JoinMethod: NestedLoop
       Cost: 1.000486  Degree: 1  Resp: 1.000486  Card: 2.750000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000486  Resp: 1.000486  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.026222 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.346222
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.212001  Resp: 26.212001  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7816177
      Resp_io: 26.000000  Resp_cpu: 7816177
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.156201  Resp: 27.156201  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5758906
      Resp_io: 27.000000  Resp_cpu: 5758906
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001239  Resp: 4.001239  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 45686
      Resp_io: 4.000000  Resp_cpu: 45686
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-10  ix_sel_with_filters: 2.2222e-11 
    NL Join : Cost: 4.001155  Resp: 4.001155  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 42572
      Resp_io: 4.000000  Resp_cpu: 42572
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001239  Resp: 4.001239  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 45686
      Resp_io: 4.000000  Resp_cpu: 45686

  Best NL cost: 4.001155 (VALID)
          resc: 4.001155  resc_io: 4.000000  resc_cpu: 42572
          resp: 4.001155  resp_io: 4.000000  resc_cpu: 42572
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.750000) * inner (0.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  X  Alias: X
    resc: 1.000486  card 2.750000  bytes:   deg: 1  resp: 1.000486
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 4.000879  Resp: 4.000879  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000879 
     resc: 4.000879 resc_io: 3.000000 resc_cpu: 36900965
     resp: 4.000879 resp_io: 3.000000 resp_cpu: 36900965
  Outer table:  X  Alias: X
    resc: 1.000486  card 2.750000  bytes:   deg: 1  resp: 1.000486
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016289  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017168  Resp: 3.017168  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017168  
     resc: 3.017168 resc_io: 3.000000 resc_cpu: 632947
     resp: 3.017168 resp_io: 3.000000 resp_cpu: 632947
Join order aborted2: cost > best plan cost
***********************
Join order[3]:  Z[Z]#1  Y[Y]#0  X[X]#2

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000393  Resp: 2.000393  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 5.001402  Resp: 5.001402  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 51702
      Resp_io: 5.000000  Resp_cpu: 51702
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000623  Resp: 4.000623  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 22977
      Resp_io: 4.000000  Resp_cpu: 22977
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000422  Resp: 2.000422  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15545
      Resp_io: 2.000000  Resp_cpu: 15545
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000422  Resp: 2.000422  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15545
      Resp_io: 2.000000  Resp_cpu: 15545

  Best NL cost: 2.000422 (VALID)
          resc: 2.000422  resc_io: 2.000000  resc_cpu: 15545
          resp: 2.000422  resp_io: 2.000000  resc_cpu: 15545
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Z  Alias: Z
    resc: 2.000393  card 0.000000  bytes:   deg: 1  resp: 2.000393
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 5.000659  Resp: 5.000659  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000659 
     resc: 5.000659 resc_io: 3.000000 resc_cpu: 73761436
     resp: 5.000659 resp_io: 3.000000 resp_cpu: 73761436
  Outer table:  Z  Alias: Z
    resc: 2.000393  card 0.000000  bytes:   deg: 1  resp: 2.000393
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016930  Resp: 3.016930  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016930  
     resc: 3.016930 resc_io: 3.000000 resc_cpu: 624167
     resp: 3.016930 resp_io: 3.000000 resp_cpu: 624167
Best:: JoinMethod: NestedLoop
       Cost: 2.000422  Degree: 1  Resp: 2.000422  Card: 0.000000 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000422  Resp: 2.000422  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 623.437500 (cpu filter eval) (= 62.343750 (per row) * 10.000000 (#rows))
                       =   37930.637500
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001450  Resp: 5.001450  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 53476
      Resp_io: 5.000000  Resp_cpu: 53476
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8945
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000664  Resp: 4.000664  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24490
      Resp_io: 4.000000  Resp_cpu: 24490
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000651  Resp: 3.000651  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23985
      Resp_io: 3.000000  Resp_cpu: 23985
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.050000  ix_sel_with_filters: 0.027500 
    NL Join : Cost: 2.000453  Resp: 2.000453  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16693
      Resp_io: 2.000000  Resp_cpu: 16693
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000651  Resp: 3.000651  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23985
      Resp_io: 3.000000  Resp_cpu: 23985

  Best NL cost: 2.000453 (VALID)
          resc: 2.000453  resc_io: 2.000000  resc_cpu: 16693
          resp: 2.000453  resp_io: 2.000000  resc_cpu: 16693
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (2.750000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 2.000422  card 0.000000  bytes:   deg: 1  resp: 2.000422
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
  SM join: Resc: 5.000661  Resp: 5.000661  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000661 
     resc: 5.000661 resc_io: 3.000000 resc_cpu: 73761506
     resp: 5.000661 resp_io: 3.000000 resp_cpu: 73761506
  Outer table:  Y  Alias: Y
    resc: 2.000422  card 0.000000  bytes:   deg: 1  resp: 2.000422
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016286  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016941  Resp: 3.016941  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016941  
     resc: 3.016941 resc_io: 3.000000 resc_cpu: 624604
     resp: 3.016941 resp_io: 3.000000 resp_cpu: 624604
Best:: JoinMethod: NestedLoop
       Cost: 2.000453  Degree: 1  Resp: 2.000453  Card: 0.000000 Bytes: 
***********************
Best so far:  Table#: 1  cost: 2.000393  card: 0.000000  bytes: 10.000000
              Table#: 0  cost: 2.000422  card: 0.000000  bytes: 13.000000
              Table#: 2  cost: 2.000453  card: 0.000000  bytes: 19.000000
***********************
Join order[4]:  Z[Z]#1  X[X]#2  Y[Y]#0

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000393  Resp: 2.000393  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 987.500000 (cpu filter eval) (= 98.750000 (per row) * 10.000000 (#rows))
                       =   38294.700000
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001432  Resp: 5.001432  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 52790
      Resp_io: 5.000000  Resp_cpu: 52790
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9309
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000646  Resp: 4.000646  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23804
      Resp_io: 4.000000  Resp_cpu: 23804
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 8121
    ix_sel: 0.500000  ix_sel_with_filters: 0.275000 
    NL Join : Cost: 3.000627  Resp: 3.000627  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23104
      Resp_io: 3.000000  Resp_cpu: 23104

  Best NL cost: 3.000627 (VALID)
          resc: 3.000627  resc_io: 3.000000  resc_cpu: 23104
          resp: 3.000627  resp_io: 3.000000  resc_cpu: 23104
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (2.750000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Join order aborted2: cost > best plan cost
***********************
Join order[5]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   2.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   2.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   2.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 7.003261  Resp: 7.003261  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 120231
      Resp_io: 7.000000  Resp_cpu: 120231
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000924  Resp: 4.000924  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 34053
      Resp_io: 4.000000  Resp_cpu: 34053
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759

  Best NL cost: 1.000319 (VALID)
          resc: 1.000319  resc_io: 1.000000  resc_cpu: 11759
          resp: 1.000319  resp_io: 1.000000  resc_cpu: 11759
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  2.750000 = outer (2.750000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 3 Computed: 2.750000
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000505  Resp: 4.000505  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000505 
     resc: 4.000505 resc_io: 2.000000 resc_cpu: 73755764
     resp: 4.000505 resp_io: 2.000000 resp_cpu: 73755764
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016308  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016778  Resp: 2.016778  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016778  
     resc: 2.016778 resc_io: 2.000000 resc_cpu: 618580
     resp: 2.016778 resp_io: 2.000000 resp_cpu: 618580
Best:: JoinMethod: NestedLoop
       Cost: 1.000319  Degree: 1  Resp: 1.000319  Card: 2.750000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000319  Resp: 1.000319  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.026222 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.346222
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.211835  Resp: 26.211835  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7810035
      Resp_io: 26.000000  Resp_cpu: 7810035
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.156034  Resp: 27.156034  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5752764
      Resp_io: 27.000000  Resp_cpu: 5752764
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001073  Resp: 4.001073  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 39543
      Resp_io: 4.000000  Resp_cpu: 39543
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-10  ix_sel_with_filters: 2.2222e-11 
    NL Join : Cost: 4.000988  Resp: 4.000988  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 36430
      Resp_io: 4.000000  Resp_cpu: 36430
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001073  Resp: 4.001073  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 39543
      Resp_io: 4.000000  Resp_cpu: 39543

  Best NL cost: 4.000988 (VALID)
          resc: 4.000988  resc_io: 4.000000  resc_cpu: 36430
          resp: 4.000988  resp_io: 4.000000  resc_cpu: 36430
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.750000) * inner (0.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 2.750000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.000718  Resp: 5.000718  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000718 
     resc: 5.000718 resc_io: 3.000000 resc_cpu: 73763606
     resp: 5.000718 resp_io: 3.000000 resp_cpu: 73763606
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 2.750000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016289  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017001  Resp: 3.017001  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017001  
     resc: 3.017001 resc_io: 3.000000 resc_cpu: 626804
     resp: 3.017001 resp_io: 3.000000 resp_cpu: 626804
Join order aborted2: cost > best plan cost
***********************
Join order[6]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500026.222228 (cpu filter eval) (= 50.002622 (per row) * 10000.000000 (#rows))
                       =   2599426.542228
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.211749  Resp: 26.211749  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7806889
      Resp_io: 26.000000  Resp_cpu: 7806889
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913669
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.155949  Resp: 27.155949  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5749617
      Resp_io: 27.000000  Resp_cpu: 5749617
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-06  ix_sel_with_filters: 2.2222e-07 
    NL Join : Cost: 4.000903  Resp: 4.000903  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 33280
      Resp_io: 4.000000  Resp_cpu: 33280

  Best NL cost: 4.000903 (VALID)
          resc: 4.000903  resc_io: 4.000000  resc_cpu: 33280
          resp: 4.000903  resp_io: 4.000000  resc_cpu: 33280
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.750000) * inner (0.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :1
Join order[7]:  Z[Z]#1  Y[Y]#0  X[X]#2

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000393  Resp: 2.000393  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 5.001402  Resp: 5.001402  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 51702
      Resp_io: 5.000000  Resp_cpu: 51702
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000623  Resp: 4.000623  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 22977
      Resp_io: 4.000000  Resp_cpu: 22977
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000422  Resp: 2.000422  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15545
      Resp_io: 2.000000  Resp_cpu: 15545
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 2.000422  Resp: 2.000422  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15545
      Resp_io: 2.000000  Resp_cpu: 15545

  Best NL cost: 2.000422 (VALID)
          resc: 2.000422  resc_io: 2.000000  resc_cpu: 15545
          resp: 2.000422  resp_io: 2.000000  resc_cpu: 15545
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Z  Alias: Z
    resc: 2.000393  card 0.000000  bytes:   deg: 1  resp: 2.000393
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 5.000659  Resp: 5.000659  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000659 
     resc: 5.000659 resc_io: 3.000000 resc_cpu: 73761436
     resp: 5.000659 resp_io: 3.000000 resp_cpu: 73761436
  Outer table:  Z  Alias: Z
    resc: 2.000393  card 0.000000  bytes:   deg: 1  resp: 2.000393
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016930  Resp: 3.016930  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016930  
     resc: 3.016930 resc_io: 3.000000 resc_cpu: 624167
     resp: 3.016930 resp_io: 3.000000 resp_cpu: 624167
Best:: JoinMethod: NestedLoop
       Cost: 2.000422  Degree: 1  Resp: 2.000422  Card: 0.000000 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000422  Resp: 2.000422  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2064  ("X"."A"=1)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 623.437500 (cpu filter eval) (= 62.343750 (per row) * 10.000000 (#rows))
                       =   37930.637500
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001450  Resp: 5.001450  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 53476
      Resp_io: 5.000000  Resp_cpu: 53476
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8945
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000664  Resp: 4.000664  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 24490
      Resp_io: 4.000000  Resp_cpu: 24490
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000651  Resp: 3.000651  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23985
      Resp_io: 3.000000  Resp_cpu: 23985
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.050000  ix_sel_with_filters: 0.027500 
    NL Join : Cost: 2.000453  Resp: 2.000453  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16693
      Resp_io: 2.000000  Resp_cpu: 16693
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8440
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000651  Resp: 3.000651  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23985
      Resp_io: 3.000000  Resp_cpu: 23985

  Best NL cost: 2.000453 (VALID)
          resc: 2.000453  resc_io: 2.000000  resc_cpu: 16693
          resp: 2.000453  resp_io: 2.000000  resc_cpu: 16693
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (2.750000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 2.000422  card 0.000000  bytes:   deg: 1  resp: 2.000422
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
  SM join: Resc: 5.000661  Resp: 5.000661  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000661 
     resc: 5.000661 resc_io: 3.000000 resc_cpu: 73761506
     resp: 5.000661 resp_io: 3.000000 resp_cpu: 73761506
  Outer table:  Y  Alias: Y
    resc: 2.000422  card 0.000000  bytes:   deg: 1  resp: 2.000422
  Inner table:  X  Alias: X
    resc: 1.000234  card: 2.750000  bytes:   deg: 1  resp: 1.000234
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016286  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.016941  Resp: 3.016941  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.016941  
     resc: 3.016941 resc_io: 3.000000 resc_cpu: 624604
     resp: 3.016941 resp_io: 3.000000 resp_cpu: 624604
Join order aborted2: cost > best plan cost
***********************
Join order[8]:  Z[Z]#1  X[X]#2  Y[Y]#0

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000393  Resp: 2.000393  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 987.500000 (cpu filter eval) (= 98.750000 (per row) * 10.000000 (#rows))
                       =   38294.700000
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 5.001432  Resp: 5.001432  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 52790
      Resp_io: 5.000000  Resp_cpu: 52790
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 9309
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 4.000646  Resp: 4.000646  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23804
      Resp_io: 4.000000  Resp_cpu: 23804
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 8121
    ix_sel: 0.500000  ix_sel_with_filters: 0.275000 
    NL Join : Cost: 3.000627  Resp: 3.000627  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 23104
      Resp_io: 3.000000  Resp_cpu: 23104

  Best NL cost: 3.000627 (VALID)
          resc: 3.000627  resc_io: 3.000000  resc_cpu: 23104
          resp: 3.000627  resp_io: 3.000000  resc_cpu: 23104
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (2.750000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Join order aborted2: cost > best plan cost
***********************
Join order[9]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   2.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   2.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   2.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 7.003261  Resp: 7.003261  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 120231
      Resp_io: 7.000000  Resp_cpu: 120231
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000924  Resp: 4.000924  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 34053
      Resp_io: 4.000000  Resp_cpu: 34053
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759

  Best NL cost: 1.000319 (VALID)
          resc: 1.000319  resc_io: 1.000000  resc_cpu: 11759
          resp: 1.000319  resp_io: 1.000000  resc_cpu: 11759
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  2.750000 = outer (2.750000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 3 Computed: 2.750000
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000505  Resp: 4.000505  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000505 
     resc: 4.000505 resc_io: 2.000000 resc_cpu: 73755764
     resp: 4.000505 resp_io: 2.000000 resp_cpu: 73755764
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016308  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016778  Resp: 2.016778  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016778  
     resc: 2.016778 resc_io: 2.000000 resc_cpu: 618580
     resp: 2.016778 resp_io: 2.000000 resp_cpu: 618580
Best:: JoinMethod: NestedLoop
       Cost: 1.000319  Degree: 1  Resp: 1.000319  Card: 2.750000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000319  Resp: 1.000319  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2080  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2065  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.026222 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.346222
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.211835  Resp: 26.211835  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7810035
      Resp_io: 26.000000  Resp_cpu: 7810035
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.156034  Resp: 27.156034  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5752764
      Resp_io: 27.000000  Resp_cpu: 5752764
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001073  Resp: 4.001073  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 39543
      Resp_io: 4.000000  Resp_cpu: 39543
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-10  ix_sel_with_filters: 2.2222e-11 
    NL Join : Cost: 4.000988  Resp: 4.000988  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 36430
      Resp_io: 4.000000  Resp_cpu: 36430
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001073  Resp: 4.001073  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 39543
      Resp_io: 4.000000  Resp_cpu: 39543

  Best NL cost: 4.000988 (VALID)
          resc: 4.000988  resc_io: 4.000000  resc_cpu: 36430
          resp: 4.000988  resp_io: 4.000000  resc_cpu: 36430
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.750000) * inner (0.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 2.750000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.000718  Resp: 5.000718  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000718 
     resc: 5.000718 resc_io: 3.000000 resc_cpu: 73763606
     resp: 5.000718 resp_io: 3.000000 resp_cpu: 73763606
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 2.750000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016289  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017001  Resp: 3.017001  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017001  
     resc: 3.017001 resc_io: 3.000000 resc_cpu: 626804
     resp: 3.017001 resp_io: 3.000000 resp_cpu: 626804
Join order aborted2: cost > best plan cost
***********************
Join order[10]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500026.222228 (cpu filter eval) (= 50.002622 (per row) * 10000.000000 (#rows))
                       =   2599426.542228
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.211749  Resp: 26.211749  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7806889
      Resp_io: 26.000000  Resp_cpu: 7806889
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913669
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.155949  Resp: 27.155949  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5749617
      Resp_io: 27.000000  Resp_cpu: 5749617
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-06  ix_sel_with_filters: 2.2222e-07 
    NL Join : Cost: 4.000903  Resp: 4.000903  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 33280
      Resp_io: 4.000000  Resp_cpu: 33280

  Best NL cost: 4.000903 (VALID)
          resc: 4.000903  resc_io: 4.000000  resc_cpu: 33280
          resp: 4.000903  resp_io: 4.000000  resc_cpu: 33280
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.750000) * inner (0.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[11]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   2.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   2.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   2.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 7.003261  Resp: 7.003261  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 120231
      Resp_io: 7.000000  Resp_cpu: 120231
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 4.000924  Resp: 4.000924  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 34053
      Resp_io: 4.000000  Resp_cpu: 34053
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000319  Resp: 1.000319  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 11759
      Resp_io: 1.000000  Resp_cpu: 11759

  Best NL cost: 1.000319 (VALID)
          resc: 1.000319  resc_io: 1.000000  resc_cpu: 11759
          resp: 1.000319  resp_io: 1.000000  resc_cpu: 11759
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  2.750000 = outer (2.750000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 3 Computed: 2.750000
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000505  Resp: 4.000505  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000505 
     resc: 4.000505 resc_io: 2.000000 resc_cpu: 73755764
     resp: 4.000505 resp_io: 2.000000 resp_cpu: 73755764
  Outer table:  X  Alias: X
    resc: 1.000234  card 2.750000  bytes:   deg: 1  resp: 1.000234
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016308  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016778  Resp: 2.016778  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016778  
     resc: 2.016778 resc_io: 2.000000 resc_cpu: 618580
     resp: 2.016778 resp_io: 2.000000 resp_cpu: 618580
Best:: JoinMethod: NestedLoop
       Cost: 1.000319  Degree: 1  Resp: 1.000319  Card: 2.750000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000319  Resp: 1.000319  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2080  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("Z"."C"=0)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2065  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500025.026222 (cpu filter eval) (= 50.002503 (per row) * 10000.000000 (#rows))
                       =   2599425.346222
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.211835  Resp: 26.211835  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7810035
      Resp_io: 26.000000  Resp_cpu: 7810035
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913668
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.156034  Resp: 27.156034  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5752764
      Resp_io: 27.000000  Resp_cpu: 5752764
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001073  Resp: 4.001073  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 39543
      Resp_io: 4.000000  Resp_cpu: 39543
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-10  ix_sel_with_filters: 2.2222e-11 
    NL Join : Cost: 4.000988  Resp: 4.000988  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 36430
      Resp_io: 4.000000  Resp_cpu: 36430
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001073  Resp: 4.001073  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 39543
      Resp_io: 4.000000  Resp_cpu: 39543

  Best NL cost: 4.000988 (VALID)
          resc: 4.000988  resc_io: 4.000000  resc_cpu: 36430
          resp: 4.000988  resp_io: 4.000000  resc_cpu: 36430
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.750000) * inner (0.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 2.750000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              3
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868783
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 5.000718  Resp: 5.000718  [multiMatchCost=0.000000]
SM Join
  SM cost: 5.000718 
     resc: 5.000718 resc_io: 3.000000 resc_cpu: 73763606
     resp: 5.000718 resp_io: 3.000000 resp_cpu: 73763606
  Outer table:  Y  Alias: Y
    resc: 1.000319  card 2.750000  bytes:   deg: 1  resp: 1.000319
  Inner table:  Z  Alias: Z
    resc: 2.000393  card: 0.000000  bytes:   deg: 1  resp: 2.000393
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016289  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 3.017001  Resp: 3.017001  [multiMatchCost=0.000000]
HA Join
  HA cost: 3.017001  
     resc: 3.017001 resc_io: 3.000000 resc_cpu: 626804
     resp: 3.017001 resp_io: 3.000000 resp_cpu: 626804
Join order aborted2: cost > best plan cost
***********************
Join order[12]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 2.750000  Cost: 1.000234  Resp: 1.000234  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   8.333333
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.044444 flag = 2048  ("Z"."B"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("Z"."C"=0)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2049  ("Z"."B"=1)
  Total Scan IO  Cost  =   8.333333 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   8.333333
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500026.222228 (cpu filter eval) (= 50.002622 (per row) * 10000.000000 (#rows))
                       =   2599426.542228
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 26.211749  Resp: 26.211749  Degree: 1
      Cost_io: 26.000000  Cost_cpu: 7806889
      Resp_io: 26.000000  Resp_cpu: 7806889
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.666667  resc_cpu: 1913669
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 27.155949  Resp: 27.155949  Degree: 1
      Cost_io: 27.000000  Cost_cpu: 5749617
      Resp_io: 27.000000  Resp_cpu: 5749617
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=0

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 5.0000e-06  ix_sel_with_filters: 2.2222e-07 
    NL Join : Cost: 4.000903  Resp: 4.000903  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 33280
      Resp_io: 4.000000  Resp_cpu: 33280

  Best NL cost: 4.000903 (VALID)
          resc: 4.000903  resc_io: 4.000000  resc_cpu: 33280
          resp: 4.000903  resp_io: 4.000000  resc_cpu: 33280
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.750000) * inner (0.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Join order aborted2: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
Transfer Optimizer annotations for query block SEL$9E43CB6E_2 (#0)
AP: Checking validity for query block SEL$9E43CB6E_2, sqlid=g2uupqtwcpan6
AP: Adaptive joins bypassed for query block SEL$9E43CB6E_2 due to OR expansion
AutoDOP: Consider caching for Z[Z](obj#-1) 
cost:2.000393 blkSize:8192 objSize:28.00 marObjSize:26.60 bufSize:27412.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible for first input in join order
id=0 frofkks[i] (index start key) predicate="Z"."B"=1
id=0 frofkks[i] (index start key) predicate="Z"."C"=0
id=0 frofkke[i] (index stop key) predicate="Z"."B"=1
id=0 frofkke[i] (index stop key) predicate="Z"."C"=0
id=0 froiand (index only filter) predicate="Z"."B"=0 AND (LNNVL("Z"."C"=0) OR LNNVL("Z"."B"=0))
Transfer optimizer annotations for Z[Z]
AutoDOP: Consider caching for Y[Y](obj#-1) 
cost:2.000422 blkSize:8192 objSize:5.00 marObjSize:4.75 bufSize:27412.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible based on distribution
id=0 frofkks[i] (index start key) predicate="Z"."ID"="Y"."ID"
id=0 frofkke[i] (index stop key) predicate="Z"."ID"="Y"."ID"
Transfer optimizer annotations for Y[Y]
AutoDOP: Consider caching for X[X](obj#-1) 
cost:2.000453 blkSize:8192 objSize:5.00 marObjSize:4.75 bufSize:27412.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible based on distribution
id=0 frofkks[i] (index start key) predicate="X"."A"=1
id=0 frofkks[i] (index start key) predicate="Y"."ID"="X"."ID"
id=0 frofkke[i] (index stop key) predicate="X"."A"=1
id=0 frofkke[i] (index stop key) predicate="Y"."ID"="X"."ID"
id=0 froiand (index only filter) predicate="X"."A"=0 OR "X"."A"=1
Transfer optimizer annotations for X[X]
Final cost for query block SEL$9E43CB6E_2 (#0) - All Rows Plan:
  Best join order: 3
  Cost: 5.001103  Degree: 1  Card: 2.000000  Bytes: 38.000000
  Resc: 5.001103  Resc_io: 5.000000  Resc_cpu: 40656
  Resp: 5.001103  Resp_io: 5.000000  Resc_cpu: 40656
Registered qb: SEL$9E43CB6E_3 0x79197138 (OR EXPANSION SEL$9E43CB6E)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$9E43CB6E_3 nbfros=3 flg=0
    fro(0): flg=4 objn=80828 hint_alias="X"@"SEL$9E43CB6E_3"
    fro(1): flg=4 objn=80831 hint_alias="Y"@"SEL$9E43CB6E_3"
    fro(2): flg=4 objn=80833 hint_alias="Z"@"SEL$9E43CB6E_3"

LORE: Predicate chain for or-expanded branch SEL$9E43CB6E_3 is:
id=0  predicate=(LNNVL("X"."A"=1) OR LNNVL("Z"."B"=0) OR LNNVL("Z"."C"=0)) AND "X"."A"=0 AND "Z"."B"=1 AND (LNNVL("Z"."C"=0) OR LNNVL("Z"."B"=0)) AND "Z"."B"=1 AND ("X"."A"=0 OR "X"."A"=1) AND "Z"."ID"="Y"."ID" AND "Y"."ID"="X"."ID"
****************
QUERY BLOCK TEXT
****************
select /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null
  from x join y  on y.id = x.id join z on z.id = y.id
  where  ( ( x.a = 0 AND z.b = 1               ) OR 
           ( x.a = 1 AND z.b = 0 AND z.c = 0  )   )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$9E43CB6E_3 nbfros=3 flg=0
  fro(0): flg=0 objn=80828 hint_alias="X"@"SEL$9E43CB6E_3"
  fro(1): flg=0 objn=80831 hint_alias="Y"@"SEL$9E43CB6E_3"
  fro(2): flg=0 objn=80833 hint_alias="Z"@"SEL$9E43CB6E_3"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3072 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table:  Z  Alias:  Z
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  28  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): B(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.050000 Min: 1.000000 Max: 10.000000
    Histogram: Freq  #Bkts: 10  UncompBkts: 10000  EndPtVals: 10  ActualVal: yes
  Column (#3): C(NUMBER)
    AvgLen: 3 NDV: 1 Nulls: 0 Density: 0.000050 Min: 1.000000 Max: 1.000000
    Histogram: Freq  #Bkts: 1  UncompBkts: 10000  EndPtVals: 1  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: Z_B_C  Col#: 2 3 1
  LVLS: 1  #LB: 30  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 210.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: Z_ID  Col#: 1
  LVLS: 1  #LB: 18  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  Y  Alias:  Y
  #Rows: 8  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  3.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 1.000000 Max: 8.000000
Index Stats::
  Index: Y_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 8  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 8.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  X  Alias:  X
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  5  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): A(NUMBER)
    AvgLen: 3 NDV: 2 Nulls: 0 Density: 0.250000 Min: 1.000000 Max: 2.000000
    Histogram: Freq  #Bkts: 2  UncompBkts: 10  EndPtVals: 2  ActualVal: yes
  Column (#1): ID(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: X_A_ID  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: X_ID  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$9E43CB6E_3 (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for X
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for X[X] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred


 kkecdn: Single Table Predicate:"X"."A"=0
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"X"."A"=0 OR "X"."A"=1
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Table: X  Alias: X
    Card: Original: 10.000000  Rounded: 1  Computed: 0.275000  Non Adjusted: 0.275000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 548.750000 (cpu filter eval) (= 54.875000 (per row) * 10.000000 (#rows))
                       =   37855.950000
  Access Path: TableScan
    Cost:  3.001027  Resp: 3.001027  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 37856
      Resp_io: 3.000000  Resp_cpu: 37856
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 2.000000  resc_cpu: 8870
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000241  Resp: 2.000241  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 8870
      Resp_io: 2.000000  Resp_cpu: 8870
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: X_A_ID
    resc_io: 1.000000  resc_cpu: 7321
    ix_sel: 0.050000  ix_sel_with_filters: 0.027500 
    Cost: 1.000201  Resp: 1.000201  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: X_A_ID
         Cost: 1.000201  Degree: 1  Resp: 1.000201  Card: 0.275000  Bytes: 0.000000

Access path analysis for Y
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Y[Y] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: Y  Alias: Y
    Card: Original: 8.000000  Rounded: 8  Computed: 8.000000  Non Adjusted: 8.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                       =   36807.200000
  Access Path: TableScan
    Cost:  3.000998  Resp: 3.000998  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 36807
      Resp_io: 3.000000  Resp_cpu: 36807
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8081
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000219  Resp: 2.000219  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 8081
      Resp_io: 2.000000  Resp_cpu: 8081
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 1
  ****** trying bitmap/domain indexes ******
 ****** Costing Index Y_ID
  Access Path: index (FullScan)
    Index: Y_ID
    resc_io: 1.000000  resc_cpu: 8721
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000237  Resp: 1.000237  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Y_ID
         Cost: 1.000237  Degree: 1  Resp: 1.000237  Card: 8.000000  Bytes: 0.000000

Access path analysis for Z
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for Z[Z] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 


 kkecdn: Single Table Predicate:"Z"."B"=1
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

 kkecdn: Single Table Predicate: ?? 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"Z"."B"=1
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Table: Z  Alias: Z
    Card: Original: 10000.000000  Rounded: 1000  Computed: 999.997778  Non Adjusted: 999.997778
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2080  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 555000.250000 (cpu filter eval) (= 55.500025 (per row) * 10000.000000 (#rows))
                       =   2654400.570000
  Access Path: TableScan
    Cost:  9.071996  Resp: 9.071996  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2654401
      Resp_io: 9.000000  Resp_cpu: 2654401
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1968643
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.053396  Resp: 10.053396  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1968643
      Resp_io: 10.000000  Resp_cpu: 1968643
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=1

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 4.000000  resc_cpu: 228486
    ix_sel: 0.100000  ix_sel_with_filters: 0.010000 
    Cost: 4.007689  Resp: 4.007689  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: Z_B_C
         Cost: 4.007689  Degree: 1  Resp: 4.007689  Card: 999.997778  Bytes: 0.000000

(newjo-restore) [1 0 2 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is OR expanded SEL$9E43CB6E_3 (#0)
kkogast: Selectivities tab=Y[Y] tnum=0 astat=N 
  card=8.00 nrow=8.00 1.000000
kkogast: Selectivities tab=Z[Z] tnum=1 astat=N 
  card=1000.00 nrow=10000.00 0.100000
kkogast: Selectivities tab=X[X] tnum=2 astat=N 
  card=0.28 nrow=10.00 0.027500
kkogast: Best single table selectivities cnt=2
  Tab = 2 1
kkogast: Final Alternative Starting Tables cnt=2
  Tab = 2 1
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  Y[Y]#0  Z[Z]#1  X[X]#2

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   7.750000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2080  ("Z"."B"=1)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   7.750000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.750000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500555.000250 (cpu filter eval) (= 50.055500 (per row) * 10000.000000 (#rows))
                       =   2599955.320250
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 63.564393  Resp: 63.564393  Degree: 1
      Cost_io: 63.000000  Cost_cpu: 20808364
      Resp_io: 63.000000  Resp_cpu: 20808364
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 8.250000  resc_cpu: 1914198
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 67.415593  Resp: 67.415593  Degree: 1
      Cost_io: 67.000000  Cost_cpu: 15322307
      Resp_io: 67.000000  Resp_cpu: 15322307
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002247  Resp: 9.002247  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82857
      Resp_io: 9.000000  Resp_cpu: 82857
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=1

kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 1.0000e-06 
    NL Join : Cost: 25.059315  Resp: 25.059315  Degree: 1
      Cost_io: 25.000000  Cost_cpu: 2186876
      Resp_io: 25.000000  Resp_cpu: 2186876
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join (ordered): Cost: 9.002247  Resp: 9.002247  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 82857
      Resp_io: 9.000000  Resp_cpu: 82857

  Best NL cost: 9.002247 (VALID)
          resc: 9.002247  resc_io: 9.000000  resc_cpu: 82857
          resp: 9.002247  resp_io: 9.000000  resc_cpu: 82857
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  7.999982 = outer (8.000000) * inner (999.997778) * sel (0.001000)
Join Card - Rounded: 8 Computed: 7.999982
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 6.020104  Resp: 6.020104  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.020104 
     resc: 6.020104 resc_io: 5.000000 resc_cpu: 37609780
     resp: 6.020104 resp_io: 5.000000 resp_cpu: 37609780
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.019019  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.026945  Resp: 5.026945  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.026945  
     resc: 5.026945 resc_io: 5.000000 resc_cpu: 993407
     resp: 5.026945 resp_io: 5.000000 resp_cpu: 993407
Best:: JoinMethod: Hash
       Cost: 5.026945  Degree: 1  Resp: 5.026945  Card: 7.999982 Bytes: 

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 7.999982  Cost: 5.026945  Resp: 5.026945  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = 0.000000, cpu = 76.111111, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  (LNNVL("X"."A"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2048  (LNNVL("Z"."B"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("Z"."C"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2064  ("X"."A"=0)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 533.710069 (cpu filter eval) (= 53.371007 (per row) * 10.000000 (#rows))
                       =   37840.910069
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 17.035156  Resp: 17.035156  Degree: 1
      Cost_io: 17.000000  Cost_cpu: 1296135
      Resp_io: 17.000000  Resp_cpu: 1296135
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8855
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 9.028866  Resp: 9.028866  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 1064249
      Resp_io: 9.000000  Resp_cpu: 1064249
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8398
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 13.028767  Resp: 13.028767  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 1060595
      Resp_io: 13.000000  Resp_cpu: 1060595
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

kkofmx: index filter: ?? 

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.005000  ix_sel_with_filters: 0.002750 
    NL Join : Cost: 5.027203  Resp: 5.027203  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 1002922
      Resp_io: 5.000000  Resp_cpu: 1002922
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8398
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 13.028767  Resp: 13.028767  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 1060595
      Resp_io: 13.000000  Resp_cpu: 1060595

  Best NL cost: 5.027203 (VALID)
          resc: 5.027203  resc_io: 5.000000  resc_cpu: 1002922
          resp: 5.027203  resp_io: 5.000000  resc_cpu: 1002922
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.274999 = outer (7.999982) * inner (0.275000) * sel (0.125000)
Join cardinality for HJ/SMJ (no post filters):  0.274999, outer: 7.999982, inner: 0.275000, sel: 0.125000
Join Card - Rounded: 1 Computed: 0.274999
  Outer table:  Z  Alias: Z
    resc: 5.026945  card 7.999982  bytes:   deg: 1  resp: 5.026945
  Inner table:  X  Alias: X
    resc: 1.000201  card: 0.275000  bytes:   deg: 1  resp: 1.000201
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     25 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 8.027175  Resp: 8.027175  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.027175 
     resc: 8.027175 resc_io: 6.000000 resc_cpu: 74739046
     resp: 8.027175 resp_io: 6.000000 resp_cpu: 74739046
  Outer table:  Z  Alias: Z
    resc: 5.026945  card 7.999982  bytes:   deg: 1  resp: 5.026945
  Inner table:  X  Alias: X
    resc: 1.000201  card: 0.275000  bytes:   deg: 1  resp: 1.000201
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016309  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 6.043455  Resp: 6.043455  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.043455  
     resc: 6.043455 resc_io: 6.000000 resc_cpu: 1602126
     resp: 6.043455 resp_io: 6.000000 resp_cpu: 1602126
Best:: JoinMethod: NestedLoop
       Cost: 5.027203  Degree: 1  Resp: 5.027203  Card: 0.274999 Bytes: 
***********************
Best so far:  Table#: 0  cost: 1.000237  card: 8.000000  bytes: 24.000000
              Table#: 1  cost: 5.026945  card: 7.999982  bytes: 104.000000
              Table#: 2  cost: 5.027203  card: 0.274999  bytes: 19.000000
***********************
Join order[2]:  Y[Y]#0  X[X]#2  Z[Z]#1

***************
Now joining: X[X]#2
***************
NL Join
  Outer table: Card: 8.000000  Cost: 1.000237  Resp: 1.000237  Degree: 1  Bytes: 
Access path analysis for X
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   37307.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
    io = 0.000000, cpu = 97.500000, sel = 0.550000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.050000 flag = 2048  ("X"."A"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  ("X"."A"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   37307.200000 (scan (Disk))
                         + 531.093750 (cpu filter eval) (= 53.109375 (per row) * 10.000000 (#rows))
                       =   37838.293750
  Inner table: X  Alias: X
  Access Path: TableScan
    NL Join:  Cost: 13.008447  Resp: 13.008447  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 311428
      Resp_io: 13.000000  Resp_cpu: 311428
  Access Path: index (index (FFS))
    Index: X_A_ID
    resc_io: 0.500000  resc_cpu: 8853
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: X  Alias: X
  Access Path: index (FFS)
    NL Join:  Cost: 5.002157  Resp: 5.002157  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 79542
      Resp_io: 5.000000  Resp_cpu: 79542
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8396
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002058  Resp: 9.002058  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 75892
      Resp_io: 9.000000  Resp_cpu: 75892
kkofmx: filter for index: X_A_ID
kkofmx: index filter:"X"."A"=0 OR "X"."A"=1

 ****** Costing Index X_A_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.050000 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: X_A_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.005000  ix_sel_with_filters: 0.002750 
    NL Join : Cost: 1.000486  Resp: 1.000486  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 17901
      Resp_io: 1.000000  Resp_cpu: 17901
 ****** Costing Index X_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: X_ID
    resc_io: 1.000000  resc_cpu: 8396
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join (ordered): Cost: 9.002058  Resp: 9.002058  Degree: 1
      Cost_io: 9.000000  Cost_cpu: 75892
      Resp_io: 9.000000  Resp_cpu: 75892

  Best NL cost: 1.000486 (VALID)
          resc: 1.000486  resc_io: 1.000000  resc_cpu: 17901
          resp: 1.000486  resp_io: 1.000000  resc_cpu: 17901
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.275000 = outer (8.000000) * inner (0.275000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.275000
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000201  card: 0.275000  bytes:   deg: 1  resp: 1.000201
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
  SM join: Resc: 3.000438  Resp: 3.000438  [multiMatchCost=0.000000]
SM Join
  SM cost: 3.000438 
     resc: 3.000438 resc_io: 2.000000 resc_cpu: 36884709
     resp: 3.000438 resp_io: 2.000000 resp_cpu: 36884709
  Outer table:  Y  Alias: Y
    resc: 1.000237  card 8.000000  bytes:   deg: 1  resp: 1.000237
  Inner table:  X  Alias: X
    resc: 1.000201  card: 0.275000  bytes:   deg: 1  resp: 1.000201
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016309  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016747  Resp: 2.016747  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016747  
     resc: 2.016747 resc_io: 2.000000 resc_cpu: 617440
     resp: 2.016747 resp_io: 2.000000 resp_cpu: 617440
Best:: JoinMethod: NestedLoop
       Cost: 1.000486  Degree: 1  Resp: 1.000486  Card: 0.275000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000486  Resp: 1.000486  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 76.111111, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  (LNNVL("X"."A"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2048  (LNNVL("Z"."B"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("Z"."C"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500562.611344 (cpu filter eval) (= 50.056261 (per row) * 10000.000000 (#rows))
                       =   2599962.931344
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.071005  Resp: 10.071005  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2617864
      Resp_io: 10.000000  Resp_cpu: 2617864
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1914206
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.052405  Resp: 11.052405  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1932107
      Resp_io: 11.000000  Resp_cpu: 1932107
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000737  Resp: 2.000737  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 27169
      Resp_io: 2.000000  Resp_cpu: 27169
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=1

kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 1.0000e-06 
    NL Join : Cost: 4.007871  Resp: 4.007871  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 290178
      Resp_io: 4.000000  Resp_cpu: 290178
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000737  Resp: 2.000737  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 27169
      Resp_io: 2.000000  Resp_cpu: 27169

  Best NL cost: 2.000737 (VALID)
          resc: 2.000737  resc_io: 2.000000  resc_cpu: 27169
          resp: 2.000737  resp_io: 2.000000  resc_cpu: 27169
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.274999 = outer (0.275000) * inner (999.997778) * sel (1.0000e-03)
Join cardinality for HJ/SMJ (no post filters):  0.274999, outer: 0.275000, inner: 999.997778, sel: 1.0000e-03
Join Card - Rounded: 1 Computed: 0.274999
  Outer table:  X  Alias: X
    resc: 1.000486  card 0.275000  bytes:   deg: 1  resp: 1.000486
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 6.020353  Resp: 6.020353  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.020353 
     resc: 6.020353 resc_io: 5.000000 resc_cpu: 37618960
     resp: 6.020353 resp_io: 5.000000 resp_cpu: 37618960
  Outer table:  X  Alias: X
    resc: 1.000486  card 0.275000  bytes:   deg: 1  resp: 1.000486
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.018990  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.027165  Resp: 5.027165  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.027165  
     resc: 5.027165 resc_io: 5.000000 resc_cpu: 1001537
     resp: 5.027165 resp_io: 5.000000 resp_cpu: 1001537
Best:: JoinMethod: NestedLoop
       Cost: 2.000737  Degree: 1  Resp: 2.000737  Card: 0.274999 Bytes: 
***********************
Best so far:  Table#: 0  cost: 1.000237  card: 8.000000  bytes: 24.000000
              Table#: 2  cost: 1.000486  card: 0.275000  bytes: 9.000000
              Table#: 1  cost: 2.000737  card: 0.274999  bytes: 19.000000
***********************
Join order[3]:  Z[Z]#1  Y[Y]#0  X[X]#2
Join order aborted1: cost > best plan cost
***********************
Join order[4]:  Z[Z]#1  X[X]#2  Y[Y]#0
Join order aborted1: cost > best plan cost
***********************
Join order[5]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 4.001210  Resp: 4.001210  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 44626
      Resp_io: 4.000000  Resp_cpu: 44626
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 3.000431  Resp: 3.000431  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 15900
      Resp_io: 3.000000  Resp_cpu: 15900
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469

  Best NL cost: 1.000230 (VALID)
          resc: 1.000230  resc_io: 1.000000  resc_cpu: 8469
          resp: 1.000230  resp_io: 1.000000  resc_cpu: 8469
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.275000 = outer (0.275000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.275000
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000467  Resp: 4.000467  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000467 
     resc: 4.000467 resc_io: 2.000000 resc_cpu: 73754360
     resp: 4.000467 resp_io: 2.000000 resp_cpu: 73754360
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016738  Resp: 2.016738  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016738  
     resc: 2.016738 resc_io: 2.000000 resc_cpu: 617090
     resp: 2.016738 resp_io: 2.000000 resp_cpu: 617090
Best:: JoinMethod: NestedLoop
       Cost: 1.000230  Degree: 1  Resp: 1.000230  Card: 0.275000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000230  Resp: 1.000230  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 76.111111, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  (LNNVL("X"."A"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2048  (LNNVL("Z"."B"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("Z"."C"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500562.611344 (cpu filter eval) (= 50.056261 (per row) * 10000.000000 (#rows))
                       =   2599962.931344
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.070749  Resp: 10.070749  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2608432
      Resp_io: 10.000000  Resp_cpu: 2608432
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1914206
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.052149  Resp: 11.052149  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1922675
      Resp_io: 11.000000  Resp_cpu: 1922675
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17737
      Resp_io: 2.000000  Resp_cpu: 17737
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=1

kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 1.0000e-06 
    NL Join : Cost: 4.007615  Resp: 4.007615  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 280746
      Resp_io: 4.000000  Resp_cpu: 280746
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17737
      Resp_io: 2.000000  Resp_cpu: 17737

  Best NL cost: 2.000481 (VALID)
          resc: 2.000481  resc_io: 2.000000  resc_cpu: 17737
          resp: 2.000481  resp_io: 2.000000  resc_cpu: 17737
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.274999 = outer (0.275000) * inner (999.997778) * sel (1.0000e-03)
Join cardinality for HJ/SMJ (no post filters):  0.274999, outer: 0.275000, inner: 999.997778, sel: 1.0000e-03
Join Card - Rounded: 1 Computed: 0.274999
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.275000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 7.020097  Resp: 7.020097  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.020097 
     resc: 7.020097 resc_io: 5.000000 resc_cpu: 74478097
     resp: 7.020097 resp_io: 5.000000 resp_cpu: 74478097
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.275000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.018990  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.026909  Resp: 5.026909  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.026909  
     resc: 5.026909 resc_io: 5.000000 resc_cpu: 992105
     resp: 5.026909 resp_io: 5.000000 resp_cpu: 992105
Best:: JoinMethod: NestedLoop
       Cost: 2.000481  Degree: 1  Resp: 2.000481  Card: 0.274999 Bytes: 
***********************
Best so far:  Table#: 2  cost: 1.000201  card: 0.275000  bytes: 6.000000
              Table#: 0  cost: 1.000230  card: 0.275000  bytes: 9.000000
              Table#: 1  cost: 2.000481  card: 0.274999  bytes: 19.000000
***********************
Join order[6]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 76.111111, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  (LNNVL("X"."A"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2048  (LNNVL("Z"."B"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("Z"."C"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 562611.344198 (cpu filter eval) (= 56.261134 (per row) * 10000.000000 (#rows))
                       =   2662011.664198
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.072404  Resp: 10.072404  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2669431
      Resp_io: 10.000000  Resp_cpu: 2669431
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1976255
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.053804  Resp: 11.053804  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1983673
      Resp_io: 11.000000  Resp_cpu: 1983673
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=1

kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 4.007927  Resp: 4.007927  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 292245
      Resp_io: 4.000000  Resp_cpu: 292245

  Best NL cost: 4.007927 (VALID)
          resc: 4.007927  resc_io: 4.000000  resc_cpu: 292245
          resp: 4.007927  resp_io: 4.000000  resc_cpu: 292245
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  274.999083 = outer (0.275000) * inner (999.997778) * sel (0.999999)
Join cardinality for HJ/SMJ (no post filters):  274.999389, outer: 0.275000, inner: 999.997778, sel: 0.999999
Join Card - Rounded: 275 Computed: 274.999083
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :1
Join order[7]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 4.001210  Resp: 4.001210  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 44626
      Resp_io: 4.000000  Resp_cpu: 44626
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 3.000431  Resp: 3.000431  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 15900
      Resp_io: 3.000000  Resp_cpu: 15900
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469

  Best NL cost: 1.000230 (VALID)
          resc: 1.000230  resc_io: 1.000000  resc_cpu: 8469
          resp: 1.000230  resp_io: 1.000000  resc_cpu: 8469
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.275000 = outer (0.275000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.275000
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000467  Resp: 4.000467  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000467 
     resc: 4.000467 resc_io: 2.000000 resc_cpu: 73754360
     resp: 4.000467 resp_io: 2.000000 resp_cpu: 73754360
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016738  Resp: 2.016738  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016738  
     resc: 2.016738 resc_io: 2.000000 resc_cpu: 617090
     resp: 2.016738 resp_io: 2.000000 resp_cpu: 617090
Best:: JoinMethod: NestedLoop
       Cost: 1.000230  Degree: 1  Resp: 1.000230  Card: 0.275000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000230  Resp: 1.000230  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 76.111111, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  (LNNVL("X"."A"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2048  (LNNVL("Z"."B"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("Z"."C"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2080  ("Z"."B"=1)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500562.611344 (cpu filter eval) (= 50.056261 (per row) * 10000.000000 (#rows))
                       =   2599962.931344
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.070749  Resp: 10.070749  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2608432
      Resp_io: 10.000000  Resp_cpu: 2608432
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1914206
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.052149  Resp: 11.052149  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1922675
      Resp_io: 11.000000  Resp_cpu: 1922675
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17737
      Resp_io: 2.000000  Resp_cpu: 17737
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=1

kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 1.0000e-06 
    NL Join : Cost: 4.007615  Resp: 4.007615  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 280746
      Resp_io: 4.000000  Resp_cpu: 280746
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17737
      Resp_io: 2.000000  Resp_cpu: 17737

  Best NL cost: 2.000481 (VALID)
          resc: 2.000481  resc_io: 2.000000  resc_cpu: 17737
          resp: 2.000481  resp_io: 2.000000  resc_cpu: 17737
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.274999 = outer (0.275000) * inner (999.997778) * sel (1.0000e-03)
Join cardinality for HJ/SMJ (no post filters):  0.274999, outer: 0.275000, inner: 999.997778, sel: 1.0000e-03
Join Card - Rounded: 1 Computed: 0.274999
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.275000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 7.020097  Resp: 7.020097  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.020097 
     resc: 7.020097 resc_io: 5.000000 resc_cpu: 74478097
     resp: 7.020097 resp_io: 5.000000 resp_cpu: 74478097
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.275000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.018990  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.026909  Resp: 5.026909  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.026909  
     resc: 5.026909 resc_io: 5.000000 resc_cpu: 992105
     resp: 5.026909 resp_io: 5.000000 resp_cpu: 992105
Join order aborted2: cost > best plan cost
***********************
Join order[8]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 76.111111, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  (LNNVL("X"."A"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2048  (LNNVL("Z"."B"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("Z"."C"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 562611.344198 (cpu filter eval) (= 56.261134 (per row) * 10000.000000 (#rows))
                       =   2662011.664198
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.072404  Resp: 10.072404  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2669431
      Resp_io: 10.000000  Resp_cpu: 2669431
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1976255
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.053804  Resp: 11.053804  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1983673
      Resp_io: 11.000000  Resp_cpu: 1983673
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=1

kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 4.007927  Resp: 4.007927  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 292245
      Resp_io: 4.000000  Resp_cpu: 292245

  Best NL cost: 4.007927 (VALID)
          resc: 4.007927  resc_io: 4.000000  resc_cpu: 292245
          resp: 4.007927  resp_io: 4.000000  resc_cpu: 292245
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  274.999083 = outer (0.275000) * inner (999.997778) * sel (0.999999)
Join cardinality for HJ/SMJ (no post filters):  274.999389, outer: 0.275000, inner: 999.997778, sel: 0.999999
Join Card - Rounded: 275 Computed: 274.999083
Join order aborted2: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[9]:  Z[Z]#1  Y[Y]#0  X[X]#2
Join order aborted1: cost > best plan cost
***********************
Join order[10]:  Z[Z]#1  X[X]#2  Y[Y]#0
Join order aborted1: cost > best plan cost
***********************
Join order[11]:  X[X]#2  Y[Y]#0  Z[Z]#1

***************
Now joining: Y[Y]#0
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Y
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   36807.200000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.125000 flag = 2064  ("Y"."ID"="X"."ID")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 8.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   36807.200000 (scan (Disk))
                         + 400.000000 (cpu filter eval) (= 50.000000 (per row) * 8.000000 (#rows))
                       =   37207.200000
  Inner table: Y  Alias: Y
  Access Path: TableScan
    NL Join:  Cost: 4.001210  Resp: 4.001210  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 44626
      Resp_io: 4.000000  Resp_cpu: 44626
  Access Path: index (index (FFS))
    Index: Y_ID
    resc_io: 2.000000  resc_cpu: 8481
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Y  Alias: Y
  Access Path: index (FFS)
    NL Join:  Cost: 3.000431  Resp: 3.000431  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 15900
      Resp_io: 3.000000  Resp_cpu: 15900
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469
 ****** Costing Index Y_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Y_ID
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 1.000230  Resp: 1.000230  Degree: 1
      Cost_io: 1.000000  Cost_cpu: 8469
      Resp_io: 1.000000  Resp_cpu: 8469

  Best NL cost: 1.000230 (VALID)
          resc: 1.000230  resc_io: 1.000000  resc_cpu: 8469
          resp: 1.000230  resp_io: 1.000000  resc_cpu: 8469
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.275000 = outer (0.275000) * inner (8.000000) * sel (0.125000)
Join Card - Rounded: 1 Computed: 0.275000
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     14 Total Rows:              8
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36869650
      Total Temp space used: 0
  SM join: Resc: 4.000467  Resp: 4.000467  [multiMatchCost=0.000000]
SM Join
  SM cost: 4.000467 
     resc: 4.000467 resc_io: 2.000000 resc_cpu: 73754360
     resp: 4.000467 resp_io: 2.000000 resp_cpu: 73754360
  Outer table:  X  Alias: X
    resc: 1.000201  card 0.275000  bytes:   deg: 1  resp: 1.000201
  Inner table:  Y  Alias: Y
    resc: 1.000237  card: 8.000000  bytes:   deg: 1  resp: 1.000237
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.016300  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 1  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 2.016738  Resp: 2.016738  [multiMatchCost=0.000000]
HA Join
  HA cost: 2.016738  
     resc: 2.016738 resc_io: 2.000000 resc_cpu: 617090
     resp: 2.016738 resp_io: 2.000000 resp_cpu: 617090
Best:: JoinMethod: NestedLoop
       Cost: 1.000230  Degree: 1  Resp: 1.000230  Card: 0.275000 Bytes: 

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000230  Resp: 1.000230  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 76.111111, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  (LNNVL("X"."A"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2048  (LNNVL("Z"."B"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("Z"."C"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2080  ("Z"."B"=1)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("Z"."B"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.001000 flag = 2064  ("Z"."ID"="Y"."ID")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 500562.611344 (cpu filter eval) (= 50.056261 (per row) * 10000.000000 (#rows))
                       =   2599962.931344
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.070749  Resp: 10.070749  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2608432
      Resp_io: 10.000000  Resp_cpu: 2608432
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1914206
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.052149  Resp: 11.052149  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1922675
      Resp_io: 11.000000  Resp_cpu: 1922675
kkotap: kkoSkipNL returns TRUE
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17737
      Resp_io: 2.000000  Resp_cpu: 17737
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=1

kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

kkofmx: index filter:"Z"."ID"="Y"."ID"

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full:  Partial: 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 1.0000e-06 
    NL Join : Cost: 4.007615  Resp: 4.007615  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 280746
      Resp_io: 4.000000  Resp_cpu: 280746
 ****** Costing Index Z_ID
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: Z_ID
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000481  Resp: 2.000481  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17737
      Resp_io: 2.000000  Resp_cpu: 17737

  Best NL cost: 2.000481 (VALID)
          resc: 2.000481  resc_io: 2.000000  resc_cpu: 17737
          resp: 2.000481  resp_io: 2.000000  resc_cpu: 17737
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  0.274999 = outer (0.275000) * inner (999.997778) * sel (1.0000e-03)
Join cardinality for HJ/SMJ (no post filters):  0.274999, outer: 0.275000, inner: 999.997778, sel: 1.0000e-03
Join Card - Rounded: 1 Computed: 0.274999
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.275000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 1 Row size:     20 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 36868569
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         468 Area size:      410624 Max Area size:    82207744
      Degree:               1
      Blocks to Sort: 3 Row size:     21 Total Rows:           1000
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 37317573
      Total Temp space used: 0
  SM join: Resc: 7.020097  Resp: 7.020097  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.020097 
     resc: 7.020097 resc_io: 5.000000 resc_cpu: 74478097
     resp: 7.020097 resp_io: 5.000000 resp_cpu: 74478097
  Outer table:  Y  Alias: Y
    resc: 1.000230  card 0.275000  bytes:   deg: 1  resp: 1.000230
  Inner table:  Z  Alias: Z
    resc: 4.007689  card: 999.997778  bytes:   deg: 1  resp: 4.007689
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.018990  #ptns: 1
    hash_area: 124 (max=20071) buildfrag: 1  probefrag: 3  hmbio: 31  fanout: 8  ppasses = 1.0000
  Hash join: Resc: 5.026909  Resp: 5.026909  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.026909  
     resc: 5.026909 resc_io: 5.000000 resc_cpu: 992105
     resp: 5.026909 resp_io: 5.000000 resp_cpu: 992105
Join order aborted2: cost > best plan cost
***********************
Join order[12]:  X[X]#2  Z[Z]#1  Y[Y]#0

***************
Now joining: Z[Z]#1
***************
NL Join
  Outer table: Card: 0.275000  Cost: 1.000201  Resp: 1.000201  Degree: 1  Bytes: 
Access path analysis for Z
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2099400.320000
  Cost of predicates:
    io = 0.000000, cpu = 76.111111, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.500000 flag = 2048  (LNNVL("X"."A"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2048  (LNNVL("Z"."B"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("Z"."C"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
    io = 0.000000, cpu = 50.002500, sel = 0.999998 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("Z"."C"=0))
      io = NOCOST, cpu = 50.000000, sel = 0.955556 flag = 2050  (LNNVL("Z"."B"=0))
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("Z"."B"=1)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2099400.320000 (scan (Disk))
                         + 562611.344198 (cpu filter eval) (= 56.261134 (per row) * 10000.000000 (#rows))
                       =   2662011.664198
  Inner table: Z  Alias: Z
  Access Path: TableScan
    NL Join:  Cost: 10.072404  Resp: 10.072404  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2669431
      Resp_io: 10.000000  Resp_cpu: 2669431
  Access Path: index (index (FFS))
    Index: Z_B_C
    resc_io: 10.000000  resc_cpu: 1976255
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: Z  Alias: Z
  Access Path: index (FFS)
    NL Join:  Cost: 11.053804  Resp: 11.053804  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1983673
      Resp_io: 11.000000  Resp_cpu: 1983673
kkofmx: filter for index: Z_B_C
kkofmx: index filter:"Z"."B"=1

kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

 ****** Costing Index Z_B_C
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 0.100000 , endpoint value predicate, col: #2 
  Estimated selectivity: 5.0000e-05 , col: #3 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
  Access Path: index (IndexOnly)
    Index: Z_B_C
    resc_io: 3.000000  resc_cpu: 222214
    ix_sel: 0.100000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 4.007927  Resp: 4.007927  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 292245
      Resp_io: 4.000000  Resp_cpu: 292245

  Best NL cost: 4.007927 (VALID)
          resc: 4.007927  resc_io: 4.000000  resc_cpu: 292245
          resp: 4.007927  resp_io: 4.000000  resc_cpu: 292245
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.500000 , endpoint value predicate, col: #2 
  Using prorated density: 0.044444 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 5.0000e-05 , col: #3 
Join Card:  274.999083 = outer (0.275000) * inner (999.997778) * sel (0.999999)
Join cardinality for HJ/SMJ (no post filters):  274.999389, outer: 0.275000, inner: 999.997778, sel: 0.999999
Join Card - Rounded: 275 Computed: 274.999083
Join order aborted2: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
Transfer Optimizer annotations for query block SEL$9E43CB6E_3 (#0)
AP: Checking validity for query block SEL$9E43CB6E_3, sqlid=g2uupqtwcpan6
AP: Adaptive joins bypassed for query block SEL$9E43CB6E_3 due to OR expansion
AutoDOP: Consider caching for X[X](obj#-1) 
cost:1.000201 blkSize:8192 objSize:5.00 marObjSize:4.75 bufSize:27412.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible for first input in join order
id=0 frofkks[i] (index start key) predicate="X"."A"=0
id=0 frofkke[i] (index stop key) predicate="X"."A"=0
id=0 froiand (index only filter) predicate="X"."A"=0 OR "X"."A"=1
Transfer optimizer annotations for X[X]
AutoDOP: Consider caching for Y[Y](obj#-1) 
cost:1.000230 blkSize:8192 objSize:5.00 marObjSize:4.75 bufSize:27412.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible based on distribution
id=0 frofkks[i] (index start key) predicate="Y"."ID"="X"."ID"
id=0 frofkke[i] (index stop key) predicate="Y"."ID"="X"."ID"
Transfer optimizer annotations for Y[Y]
AutoDOP: Consider caching for Z[Z](obj#-1) 
cost:2.000481 blkSize:8192 objSize:28.00 marObjSize:26.60 bufSize:27412.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible based on distribution
id=0 frofkks[i] (index start key) predicate="Z"."ID"="Y"."ID"
id=0 frofkke[i] (index stop key) predicate="Z"."ID"="Y"."ID"
id=0 frofand predicate="Z"."B"=1 AND "Z"."B"=1 AND (LNNVL("X"."A"=1) OR LNNVL("Z"."B"=0) OR LNNVL("Z"."C"=0)) AND (LNNVL("Z"."C"=0) OR LNNVL("Z"."B"=0))
Transfer optimizer annotations for Z[Z]
Final cost for query block SEL$9E43CB6E_3 (#0) - All Rows Plan:
  Best join order: 5
  Cost: 7.001584  Degree: 1  Card: 3.000000  Bytes: 57.000000
  Resc: 7.001584  Resc_io: 7.000000  Resc_cpu: 58392
  Resp: 7.001584  Resp_io: 7.000000  Resc_cpu: 58392
kkoqbc-subheap (delete addr=0x7fd925bbb780, in-use=514320, alloc=524216)
kkoqbc-end:
        :
    call(in-use=391648, alloc=943648), compile(in-use=199232, alloc=200880), execution(in-use=254464, alloc=255936)

kkoqbc: finish optimizing query block SEL$9E43CB6E (#0)
CBRID: Z @ SEL$9E43CB6E - no blocking operation found
CBRID: Y @ SEL$9E43CB6E - no blocking operation found
CBRID: X @ SEL$9E43CB6E - no blocking operation found
CBRID: Z @ SEL$9E43CB6E - no blocking operation found
CBRID: Y @ SEL$9E43CB6E - no blocking operation found
CBRID: X @ SEL$9E43CB6E - no blocking operation found
CBRID: X @ SEL$9E43CB6E - no blocking operation found
CBRID: Y @ SEL$9E43CB6E - no blocking operation found
CBRID: Z @ SEL$9E43CB6E - no blocking operation found
apadrv-end
          :
    call(in-use=391648, alloc=943648), compile(in-use=201280, alloc=204880), execution(in-use=258512, alloc=259984)


CBRID: X @ SEL$9E43CB6E NLJBatching allocation - Failure - not a columnar organized table
CBRID: X @ SEL$9E43CB6E TableLookup allocation - Failure - bug-fix control
CBRID: Z @ SEL$9E43CB6E NLJBatching allocation - Failure - not a columnar organized table
CBRID: Z @ SEL$9E43CB6E TableLookup allocation - Failure - bug-fix control
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
AP: qesdpResolveSlaveSameAsQC(enter): SQL_ID=
AP: qesdpResolveSlaveSameAsQC - NOT AQP
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
Starting SQL statement dump

user_id=108 user_name=PDBADMIN module=SQLcl action=
sql_id=g2uupqtwcpan6 plan_hash_value=-551043928(df27bca8) problem_type=3 command_type=3
----- Current SQL Statement for this session (sql_id=g2uupqtwcpan6) -----
explain plan for
select /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null
  from x join y  on y.id = x.id join z on z.id = y.id
  where  ( ( x.a = 0 AND z.b = 1               ) OR 
           ( x.a = 1 AND z.b = 0 AND z.c = 0  )   )
sql_text_length=243
sql=explain plan for
select /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null
  from x join y  on y.id = x.id join z on z.id = y.id
  where  ( ( x.a = 0 AND z.b = 1               ) OR 
           ( x.a = 1 AND z.b = 0 AND z.c = 0  )   )
----- Explain Plan Dump -----
----- Plan Table -----
 
============
Plan Table
============
-------------------------------------------------+-----------------------------------+
| Id  | Operation                      | Name    | Rows  | Bytes | Cost  | Time      |
-------------------------------------------------+-----------------------------------+
| 0   | SELECT STATEMENT               |         |       |       |     7 |           |
| 1   |  CONCATENATION                 |         |       |       |       |           |
| 2   |   NESTED LOOPS                 |         |     1 |    19 |     3 |  00:00:01 |
| 3   |    NESTED LOOPS                |         |     1 |    19 |     3 |  00:00:01 |
| 4   |     NESTED LOOPS               |         |     1 |    13 |     2 |  00:00:01 |
| 5   |      INDEX RANGE SCAN          | Z_B_C   |     1 |    10 |     2 |  00:00:01 |
| 6   |      INDEX UNIQUE SCAN         | Y_ID    |     1 |     3 |     0 |           |
| 7   |     INDEX UNIQUE SCAN          | X_ID    |     1 |       |     0 |           |
| 8   |    TABLE ACCESS BY INDEX ROWID | X       |     1 |     6 |     1 |  00:00:01 |
| 9   |   NESTED LOOPS                 |         |     1 |    19 |     2 |  00:00:01 |
| 10  |    NESTED LOOPS                |         |     1 |    13 |     2 |  00:00:01 |
| 11  |     INDEX RANGE SCAN           | Z_B_C   |     1 |    10 |     2 |  00:00:01 |
| 12  |     INDEX UNIQUE SCAN          | Y_ID    |     1 |     3 |     0 |           |
| 13  |    INDEX RANGE SCAN            | X_A_ID  |     1 |     6 |     0 |           |
| 14  |   NESTED LOOPS                 |         |     1 |    19 |     2 |  00:00:01 |
| 15  |    NESTED LOOPS                |         |     1 |    19 |     2 |  00:00:01 |
| 16  |     NESTED LOOPS               |         |     1 |     9 |     1 |  00:00:01 |
| 17  |      INDEX RANGE SCAN          | X_A_ID  |     1 |     6 |     1 |  00:00:01 |
| 18  |      INDEX UNIQUE SCAN         | Y_ID    |     1 |     3 |     0 |           |
| 19  |     INDEX UNIQUE SCAN          | Z_ID    |     1 |       |     0 |           |
| 20  |    TABLE ACCESS BY INDEX ROWID | Z       |     1 |    10 |     1 |  00:00:01 |
-------------------------------------------------+-----------------------------------+
Query Block Name / Object Alias (identified by operation id):
-------------------------------------------------------------
 1 - SEL$9E43CB6E         
 5 - SEL$9E43CB6E_1       / "Z"@"SEL$2"
 6 - SEL$9E43CB6E_1       / "Y"@"SEL$1"
 7 - SEL$9E43CB6E_1       / "X"@"SEL$1"
 8 - SEL$9E43CB6E_1       / "X"@"SEL$1"
11 - SEL$9E43CB6E_2       / "Z"@"SEL$9E43CB6E_2"
12 - SEL$9E43CB6E_2       / "Y"@"SEL$9E43CB6E_2"
13 - SEL$9E43CB6E_2       / "X"@"SEL$9E43CB6E_2"
17 - SEL$9E43CB6E_3       / "X"@"SEL$9E43CB6E_3"
18 - SEL$9E43CB6E_3       / "Y"@"SEL$9E43CB6E_3"
19 - SEL$9E43CB6E_3       / "Z"@"SEL$9E43CB6E_3"
20 - SEL$9E43CB6E_3       / "Z"@"SEL$9E43CB6E_3"
-------------------------------------------------------------
Predicate Information:
----------------------
5 - access("Z"."B"=0 AND "Z"."C"=0)
6 - access("Z"."ID"="Y"."ID")
7 - access("Y"."ID"="X"."ID")
8 - filter(((("X"."A"=0 AND "Z"."B"=1) OR ("X"."A"=1 AND "Z"."B"=0 AND "Z"."C"=0)) AND INTERNAL_FUNCTION("X"."A")))
11 - access("Z"."B"=1 AND "Z"."C"=0)
11 - filter(("Z"."B"=0 AND (LNNVL("Z"."C"=0) OR LNNVL("Z"."B"=0))))
12 - access("Z"."ID"="Y"."ID")
13 - access("X"."A"=1 AND "Y"."ID"="X"."ID")
13 - filter(("X"."A"=0 OR "X"."A"=1))
17 - access("X"."A"=0)
17 - filter(("X"."A"=0 OR "X"."A"=1))
18 - access("Y"."ID"="X"."ID")
19 - access("Z"."ID"="Y"."ID")
20 - filter(("Z"."B"=1 AND "Z"."B"=1 AND (LNNVL("X"."A"=1) OR LNNVL("Z"."B"=0) OR LNNVL("Z"."C"=0)) AND (LNNVL("Z"."C"=0) OR LNNVL("Z"."B"=0))))
 
Content of other_xml column
===========================
  has_user_tab   : yes
  db_version     : 21.0.0.0
  parse_schema   : PDBADMIN
  plan_hash_full : 3179582838
  plan_hash      : 3743923368
  plan_hash_2    : 3179582838
-----------------
Optimizer Metrics
-----------------
<stats type="compilation"><stat name="bg">2965</stat></stats>
---------------------
QUERY BLOCK REGISTRY
---------------------
<qb_registry><q o="11" f="y"><n><![CDATA[SEL$9E43CB6E_3]]></n><p><![CDATA[SEL$9E43CB6E]]></p><i><o><t>BN</t><v><![CDATA[3]]></v></o></i><f><h><t><![CDATA[X]]></t><s><![CDATA[SEL$9E43CB6E_3]]></s></h><h><t><![CDATA[Y]]></t><s><![CDATA[SEL$9E43CB6E_3]]></s></h><h><t><![CDATA[Z]]></t><s><![CDATA[SEL$9E43CB6E_3]]></s></h></f></q><q o="18" f="y" h="y"><n><![CDATA[SEL$9E43CB6E]]></n><p><![CDATA[SEL$3]]></p><i><o><t>VW</t><v><![CDATA[SEL$58A6D7F6]]></v></o></i><f><h><t><![CDATA[X]]></t><s><![CDATA[SEL$1]]></s></h><h><t><![CDATA[Y]]></t><s><![CDATA[SEL$1]]></s></h><h><t><![CDATA[Z]]></t><s><![CDATA[SEL$2]]></s></h></f></q><q o="11" f="y"><n><![CDATA[SEL$9E43CB6E_2]]></n><p><![CDATA[SEL$9E43CB6E]]></p><i><o><t>BN</t><v><![CDATA[2]]></v></o></i><f><h><t><![CDATA[X]]></t><s><![CDATA[SEL$9E43CB6E_2]]></s></h><h><t><![CDATA[Y]]></t><s><![CDATA[SEL$9E43CB6E_2]]></s></h><h><t><![CDATA[Z]]></t><s><![CDATA[SEL$9E43CB6E_2]]></s></h></f></q><q o="2"><n><![CDATA[SEL$1]]></n><f><h><t><![CDATA[X]]></t><s><![CDATA[SEL$1]]></s></h><h><t><![CDATA[Y]]></t><s><![CDATA[SEL$1]]></s></h></f></q><q o="11" f="y" h="y"><n><![CDATA[SEL$9E43CB6E_1]]></n><p><![CDATA[SEL$9E43CB6E]]></p><i><o><t>BN</t><v><![CDATA[1]]></v></o></i><f><h><t><![CDATA[X]]></t><s><![CDATA[SEL$1]]></s></h><h><t><![CDATA[Y]]></t><s><![CDATA[SEL$1]]></s></h><h><t><![CDATA[Z]]></t><s><![CDATA[SEL$2]]></s></h></f></q><q o="18" h="y"><n><![CDATA[SEL$58A6D7F6]]></n><p><![CDATA[SEL$2]]></p><i><o><t>VW</t><v><![CDATA[SEL$1]]></v></o></i><f><h><t><![CDATA[X]]></t><s><![CDATA[SEL$1]]></s></h><h><t><![CDATA[Y]]></t><s><![CDATA[SEL$1]]></s></h><h><t><![CDATA[Z]]></t><s><![CDATA[SEL$2]]></s></h></f></q><q o="2"><n><![CDATA[SEL$2]]></n><f><h><t><![CDATA[Z]]></t><s><![CDATA[SEL$2]]></s></h><h><t><![CDATA[from$_subquery$_003]]></t><s><![CDATA[SEL$2]]></s></h></f></q><q o="2"><n><![CDATA[SEL$3]]></n><f><h><t><![CDATA[from$_subquery$_005]]></t><s><![CDATA[SEL$3]]></s></h></f></q></qb_registry>
  Outline Data:
  /*+
    BEGIN_OUTLINE_DATA
      IGNORE_OPTIM_EMBEDDED_HINTS
      OPTIMIZER_FEATURES_ENABLE('21.1.0')
      DB_VERSION('21.1.0')
      OPT_PARAM('_optimizer_cbqt_or_expansion' 'off')
      ALL_ROWS
      OUTLINE_LEAF(@"SEL$9E43CB6E")
      MERGE(@"SEL$58A6D7F6" >"SEL$3")
      OUTLINE_LEAF(@"SEL$9E43CB6E_1")
      USE_CONCAT(@"SEL$9E43CB6E" 8 OR_PREDICATES(0 33))
      OUTLINE_LEAF(@"SEL$9E43CB6E_2")
      OUTLINE_LEAF(@"SEL$9E43CB6E_3")
      OUTLINE(@"SEL$3")
      OUTLINE(@"SEL$58A6D7F6")
      MERGE(@"SEL$1" >"SEL$2")
      OUTLINE(@"SEL$2")
      OUTLINE(@"SEL$1")
      INDEX(@"SEL$9E43CB6E_1" "Z"@"SEL$2" ("Z"."B" "Z"."C" "Z"."ID"))
      INDEX(@"SEL$9E43CB6E_1" "Y"@"SEL$1" ("Y"."ID"))
      INDEX(@"SEL$9E43CB6E_1" "X"@"SEL$1" ("X"."ID"))
      INDEX(@"SEL$9E43CB6E_2" "Z"@"SEL$9E43CB6E_2" ("Z"."B" "Z"."C" "Z"."ID"))
      INDEX(@"SEL$9E43CB6E_2" "Y"@"SEL$9E43CB6E_2" ("Y"."ID"))
      INDEX(@"SEL$9E43CB6E_2" "X"@"SEL$9E43CB6E_2" ("X"."A" "X"."ID"))
      INDEX(@"SEL$9E43CB6E_3" "X"@"SEL$9E43CB6E_3" ("X"."A" "X"."ID"))
      INDEX(@"SEL$9E43CB6E_3" "Y"@"SEL$9E43CB6E_3" ("Y"."ID"))
      INDEX(@"SEL$9E43CB6E_3" "Z"@"SEL$9E43CB6E_3" ("Z"."ID"))
      LEADING(@"SEL$9E43CB6E_1" "Z"@"SEL$2" "Y"@"SEL$1" "X"@"SEL$1")
      LEADING(@"SEL$9E43CB6E_2" "Z"@"SEL$9E43CB6E_2" "Y"@"SEL$9E43CB6E_2" "X"@"SEL$9E43CB6E_2")
      LEADING(@"SEL$9E43CB6E_3" "X"@"SEL$9E43CB6E_3" "Y"@"SEL$9E43CB6E_3" "Z"@"SEL$9E43CB6E_3")
      USE_NL(@"SEL$9E43CB6E_1" "Y"@"SEL$1")
      USE_NL(@"SEL$9E43CB6E_1" "X"@"SEL$1")
      NLJ_BATCHING(@"SEL$9E43CB6E_1" "X"@"SEL$1")
      USE_NL(@"SEL$9E43CB6E_2" "Y"@"SEL$9E43CB6E_2")
      USE_NL(@"SEL$9E43CB6E_2" "X"@"SEL$9E43CB6E_2")
      USE_NL(@"SEL$9E43CB6E_3" "Y"@"SEL$9E43CB6E_3")
      USE_NL(@"SEL$9E43CB6E_3" "Z"@"SEL$9E43CB6E_3")
      NLJ_BATCHING(@"SEL$9E43CB6E_3" "Z"@"SEL$9E43CB6E_3")
    END_OUTLINE_DATA
  */
  Hint Report:
    Statement:
      OPT_PARAM('_optimizer_cbqt_or_expansion' 'off')
  End Hint Report
 
Optimizer state dump:
Compilation Environment Dump
optimizer_mode_hinted               = false
optimizer_features_hinted           = 0.0.0
parallel_execution_enabled          = false
parallel_query_forced_dop           = 0
parallel_dml_forced_dop             = 0
parallel_ddl_forced_degree          = 0
parallel_ddl_forced_instances       = 0
_query_rewrite_fudge                = 90
optimizer_features_enable           = 21.1.0
_optimizer_search_limit             = 5
cpu_count                           = 4
active_instance_count               = 1
parallel_threads_per_cpu            = 1
hash_area_size                      = 131072
bitmap_merge_area_size              = 1048576
sort_area_size                      = 65536
sort_area_retained_size             = 0
_sort_elimination_cost_ratio        = 0
_optimizer_block_size               = 8192
_sort_multiblock_read_count         = 2
_hash_multiblock_io_count           = 0
_db_file_optimizer_read_count       = 8
_optimizer_max_permutations         = 2000
pga_aggregate_target                = 401408 KB
_pga_max_size                       = 204800 KB
_query_rewrite_maxdisjunct          = 257
_smm_auto_min_io_size               = 56 KB
_smm_auto_max_io_size               = 248 KB
_smm_min_size                       = 401 KB
_smm_max_size_static                = 80281 KB
_smm_px_max_size_static             = 200704 KB
_cpu_to_io                          = 0
_optimizer_undo_cost_change         = 21.1.0
parallel_query_mode                 = enabled
_enable_parallel_dml                = disabled
parallel_ddl_mode                   = enabled
optimizer_mode                      = all_rows
sqlstat_enabled                     = false
_optimizer_percent_parallel         = 101
_always_anti_join                   = choose
_always_semi_join                   = choose
_optimizer_mode_force               = true
_partition_view_enabled             = true
_always_star_transformation         = false
_query_rewrite_or_error             = false
_hash_join_enabled                  = true
cursor_sharing                      = exact
_b_tree_bitmap_plans                = true
star_transformation_enabled         = false
_optimizer_cost_model               = choose
_new_sort_cost_estimate             = true
_complex_view_merging               = true
_unnest_subquery                    = true
_eliminate_common_subexpr           = true
_pred_move_around                   = true
_convert_set_to_join                = false
_push_join_predicate                = true
_push_join_union_view               = true
_fast_full_scan_enabled             = true
_optim_enhance_nnull_detection      = true
_parallel_broadcast_enabled         = true
_px_broadcast_fudge_factor          = 100
_ordered_nested_loop                = true
_no_or_expansion                    = false
optimizer_index_cost_adj            = 100
optimizer_index_caching             = 0
_system_index_caching               = 0
_disable_datalayer_sampling         = false
query_rewrite_enabled               = true
query_rewrite_integrity             = enforced
_query_cost_rewrite                 = true
_query_rewrite_2                    = true
_query_rewrite_1                    = true
_query_rewrite_expression           = true
_query_rewrite_jgmigrate            = true
_query_rewrite_fpc                  = true
_query_rewrite_drj                  = false
_full_pwise_join_enabled            = true
_partial_pwise_join_enabled         = true
_left_nested_loops_random           = true
_improved_row_length_enabled        = true
_index_join_enabled                 = true
_enable_type_dep_selectivity        = true
_improved_outerjoin_card            = true
_optimizer_adjust_for_nulls         = true
_optimizer_degree                   = 0
_use_column_stats_for_function      = true
_subquery_pruning_enabled           = true
_subquery_pruning_mv_enabled        = false
_or_expand_nvl_predicate            = true
_like_with_bind_as_equality         = false
_table_scan_cost_plus_one           = true
_cost_equality_semi_join            = true
_default_non_equality_sel_check     = true
_new_initial_join_orders            = true
_oneside_colstat_for_equijoins      = true
_optim_peek_user_binds              = true
_minimal_stats_aggregation          = true
_force_temptables_for_gsets         = false
workarea_size_policy                = auto
_smm_auto_cost_enabled              = true
_gs_anti_semi_join_allowed          = true
_optim_new_default_join_sel         = true
optimizer_dynamic_sampling          = 2
_pre_rewrite_push_pred              = true
_optimizer_new_join_card_computation = true
_union_rewrite_for_gs               = yes_gset_mvs
_generalized_pruning_enabled        = true
_optim_adjust_for_part_skews        = true
_force_datefold_trunc               = false
statistics_level                    = typical
_optimizer_system_stats_usage       = true
skip_unusable_indexes               = true
_remove_aggr_subquery               = true
_optimizer_push_down_distinct       = 0
_dml_monitoring_enabled             = true
_optimizer_undo_changes             = false
_predicate_elimination_enabled      = true
_nested_loop_fudge                  = 100
_project_view_columns               = true
_local_communication_costing_enabled = true
_local_communication_ratio          = 50
_query_rewrite_vop_cleanup          = true
_slave_mapping_enabled              = true
_optimizer_cost_based_transformation = linear
_optimizer_mjc_enabled              = true
_right_outer_hash_enable            = true
_spr_push_pred_refspr               = true
_optimizer_cache_stats              = false
_optimizer_cbqt_factor              = 50
_optimizer_squ_bottomup             = true
_fic_area_size                      = 131072
_optimizer_skip_scan_enabled        = true
_optimizer_cost_filter_pred         = false
_optimizer_sortmerge_join_enabled   = true
_optimizer_join_sel_sanity_check    = true
_mmv_query_rewrite_enabled          = true
_bt_mmv_query_rewrite_enabled       = true
_add_stale_mv_to_dependency_list    = true
_distinct_view_unnesting            = false
_optimizer_dim_subq_join_sel        = true
_optimizer_disable_strans_sanity_checks = 0
_optimizer_compute_index_stats      = true
_push_join_union_view2              = true
optimizer_ignore_hints              = false
_optimizer_random_plan              = 0
_query_rewrite_setopgrw_enable      = true
_optimizer_correct_sq_selectivity   = true
_disable_function_based_index       = false
_optimizer_join_order_control       = 3
_optimizer_cartesian_enabled        = true
_optimizer_starplan_enabled         = true
_extended_pruning_enabled           = true
_optimizer_push_pred_cost_based     = true
_optimizer_null_aware_antijoin      = true
_optimizer_extend_jppd_view_types   = true
_sql_model_unfold_forloops          = run_time
_enable_dml_lock_escalation         = false
_bloom_filter_enabled               = true
_update_bji_ipdml_enabled           = 0
_optimizer_extended_cursor_sharing  = udo
_dm_max_shared_pool_pct             = 5
_optimizer_cost_hjsmj_multimatch    = true
_optimizer_transitivity_retain      = true
_px_pwg_enabled                     = true
optimizer_secure_view_merging       = true
_optimizer_join_elimination_enabled = true
flashback_table_rpi                 = non_fbt
_optimizer_cbqt_no_size_restriction = true
_optimizer_enhanced_filter_push     = true
_optimizer_filter_pred_pullup       = true
_rowsrc_trace_level                 = 0
_simple_view_merging                = true
_optimizer_rownum_pred_based_fkr    = true
_optimizer_better_inlist_costing    = all
_optimizer_self_induced_cache_cost  = false
_optimizer_min_cache_blocks         = 10
_optimizer_or_expansion             = depth
_optimizer_order_by_elimination_enabled = true
_optimizer_outer_to_anti_enabled    = true
_selfjoin_mv_duplicates             = true
_dimension_skip_null                = true
_force_rewrite_enable               = false
_optimizer_star_tran_in_with_clause = true
_optimizer_complex_pred_selectivity = true
_optimizer_connect_by_cost_based    = true
_gby_hash_aggregation_enabled       = true
_globalindex_pnum_filter_enabled    = true
_px_minus_intersect                 = true
_fix_control_key                    = 0
_force_slave_mapping_intra_part_loads = false
_force_tmp_segment_loads            = false
_query_mmvrewrite_maxpreds          = 10
_query_mmvrewrite_maxintervals      = 5
_query_mmvrewrite_maxinlists        = 5
_query_mmvrewrite_maxdmaps          = 10
_query_mmvrewrite_maxcmaps          = 20
_query_mmvrewrite_maxregperm        = 512
_query_mmvrewrite_maxqryinlistvals  = 500
_disable_parallel_conventional_load = false
_trace_virtual_columns              = false
_replace_virtual_columns            = true
_virtual_column_overload_allowed    = true
_kdt_buffering                      = true
_first_k_rows_dynamic_proration     = true
_optimizer_sortmerge_join_inequality = true
_optimizer_aw_stats_enabled         = true
_bloom_pruning_enabled              = true
_obsolete_result_cache_mode         = MANUAL
_px_ual_serial_input                = true
_optimizer_skip_scan_guess          = false
_enable_row_shipping                = true
_row_shipping_threshold             = 100
_row_shipping_explain               = false
transaction_isolation_level         = read_commited
_optimizer_distinct_elimination     = true
_optimizer_multi_level_push_pred    = true
_optimizer_group_by_placement       = true
_optimizer_rownum_bind_default      = 10
_enable_query_rewrite_on_remote_objs = true
_optimizer_extended_cursor_sharing_rel = simple
_optimizer_adaptive_cursor_sharing  = true
_direct_path_insert_features        = 0
_optimizer_improve_selectivity      = true
optimizer_use_pending_statistics    = false
_optimizer_enable_density_improvements = true
_optimizer_aw_join_push_enabled     = true
_optimizer_connect_by_combine_sw    = true
_enable_pmo_ctas                    = 0
_optimizer_native_full_outer_join   = force
_bloom_predicate_enabled            = true
_optimizer_enable_extended_stats    = true
_is_lock_table_for_ddl_wait_lock    = 0
_pivot_implementation_method        = choose
optimizer_capture_sql_plan_baselines = false
optimizer_use_sql_plan_baselines    = true
_optimizer_star_trans_min_cost      = 0
_optimizer_star_trans_min_ratio     = 0
_with_subquery                      = OPTIMIZER
_optimizer_fkr_index_cost_bias      = 10
_optimizer_use_subheap              = true
parallel_degree_policy              = manual
parallel_degree                     = 0
parallel_min_time_threshold         = 10
_parallel_time_unit                 = 10
_optimizer_or_expansion_subheap     = true
_optimizer_free_transformation_heap = true
_optimizer_reuse_cost_annotations   = true
_result_cache_auto_size_threshold   = 100
_result_cache_auto_time_threshold   = 1000
_optimizer_nested_rollup_for_gset   = 100
_nlj_batching_enabled               = 1
parallel_query_default_dop          = 0
is_recur_flags                      = 0
optimizer_use_invisible_indexes     = false
flashback_data_archive_internal_cursor = 0
_optimizer_extended_stats_usage_control = 192
_parallel_syspls_obey_force         = true
cell_offload_processing             = true
_rdbms_internal_fplib_enabled       = false
db_file_multiblock_read_count       = 58
_bloom_folding_enabled              = true
_mv_generalized_oj_refresh_opt      = true
cell_offload_compaction             = ADAPTIVE
cell_offload_plan_display           = AUTO
_bloom_predicate_offload            = true
_bloom_filter_size                  = 0
_bloom_pushing_max                  = 512
parallel_degree_limit               = 65535
parallel_force_local                = false
parallel_max_degree                 = 4
total_cpu_count                     = 4
_optimizer_coalesce_subqueries      = true
_optimizer_fast_pred_transitivity   = true
_optimizer_fast_access_pred_analysis = true
_optimizer_unnest_disjunctive_subq  = true
_optimizer_unnest_corr_set_subq     = true
_optimizer_distinct_agg_transform   = true
_aggregation_optimization_settings  = 0
_optimizer_connect_by_elim_dups     = true
_optimizer_eliminate_filtering_join = true
_connect_by_use_union_all           = true
dst_upgrade_insert_conv             = true
advanced_queuing_internal_cursor    = 0
_optimizer_unnest_all_subqueries    = true
parallel_autodop                    = 0
parallel_ddldml                     = 0
_parallel_cluster_cache_policy      = adaptive
_parallel_scalability               = 50
iot_internal_cursor                 = 0
_optimizer_instance_count           = 0
_optimizer_connect_by_cb_whr_only   = false
_suppress_scn_chk_for_cqn           = nosuppress_1466
_optimizer_join_factorization       = true
_optimizer_use_cbqt_star_transformation = true
_optimizer_table_expansion          = true
_and_pruning_enabled                = true
_deferred_constant_folding_mode     = DEFAULT
_optimizer_distinct_placement       = true
partition_pruning_internal_cursor   = 0
parallel_hinted                     = none
_sql_compatibility                  = 0
_optimizer_use_feedback             = true
_optimizer_try_st_before_jppd       = true
_dml_frequency_tracking             = false
_optimizer_interleave_jppd          = true
kkb_drop_empty_segments             = 0
_px_partition_scan_enabled          = true
_px_partition_scan_threshold        = 64
_optimizer_false_filter_pred_pullup = true
_bloom_minmax_enabled               = true
only_move_row                       = 0
_optimizer_enable_table_lookup_by_nl = true
parallel_execution_message_size     = 16384
_px_loc_msg_cost                    = 1000
_px_net_msg_cost                    = 10000
_optimizer_generate_transitive_pred = true
_optimizer_cube_join_enabled        = true
_optimizer_filter_pushdown          = true
deferred_segment_creation           = true
_optimizer_outer_join_to_inner      = true
_allow_level_without_connect_by     = false
_max_rwgs_groupings                 = 8192
_optimizer_hybrid_fpwj_enabled      = true
_px_replication_enabled             = true
ilm_filter                          = 0
_optimizer_partial_join_eval        = true
_px_concurrent                      = true
_px_object_sampling_enabled         = true
_px_back_to_parallel                = OFF
_optimizer_unnest_scalar_sq         = true
_optimizer_full_outer_join_to_outer = true
_px_filter_parallelized             = true
_px_filter_skew_handling            = true
_zonemap_use_enabled                = true
_zonemap_control                    = 0
_optimizer_multi_table_outerjoin    = true
_px_groupby_pushdown                = force
_partition_advisor_srs_active       = true
_optimizer_ansi_join_lateral_enhance = true
_px_parallelize_expression          = true
_fast_index_maintenance             = true
_optimizer_ansi_rearchitecture      = true
_optimizer_gather_stats_on_load     = true
ilm_access_tracking                 = 0
ilm_dml_timestamp                   = 0
_px_adaptive_dist_method            = choose
_px_adaptive_dist_method_threshold  = 0
_optimizer_batch_table_access_by_rowid = true
optimizer_adaptive_reporting_only   = false
_optimizer_ads_max_table_count      = 0
_optimizer_ads_time_limit           = 0
_optimizer_ads_use_result_cache     = true
_px_wif_dfo_declumping              = choose
_px_wif_extend_distribution_keys    = true
_px_join_skew_handling              = true
_px_join_skew_ratio                 = 10
_px_join_skew_minfreq               = 30
CLI_internal_cursor                 = 0
_parallel_fault_tolerance_enabled   = false
_parallel_fault_tolerance_threshold = 3
_px_partial_rollup_pushdown         = adaptive
_px_single_server_enabled           = true
_optimizer_dsdir_usage_control      = 0
_px_cpu_autodop_enabled             = true
_px_cpu_process_bandwidth           = 200
_sql_hvshare_threshold              = 0
_px_tq_rowhvs                       = true
_optimizer_use_gtt_session_stats    = true
_optimizer_proc_rate_level          = basic
_px_hybrid_TSM_HWMB_load            = true
_optimizer_use_histograms           = true
PMO_altidx_rebuild                  = 0
_cell_offload_expressions           = true
_cell_materialize_virtual_columns   = true
_cell_materialize_all_expressions   = false
_rowsets_enabled                    = true
_rowsets_target_maxsize             = 524288
_rowsets_max_rows                   = 256
_use_hidden_partitions              = 0
_px_load_monitor_threshold          = 10000
_px_numa_support_enabled            = false
total_processor_group_count         = 1
_adaptive_window_consolidator_enabled = true
_optimizer_strans_adaptive_pruning  = true
_bloom_rm_filter                    = false
_optimizer_null_accepting_semijoin  = true
_long_varchar_allow_IOT             = 0
_parallel_ctas_enabled              = true
_cell_offload_complex_processing    = true
_optimizer_performance_feedback     = off
_optimizer_proc_rate_source         = DEFAULT
_hashops_prefetch_size              = 4
_cell_offload_sys_context           = true
_multi_commit_global_index_maint    = 0
_stat_aggs_one_pass_algorithm       = false
_dbg_scan                           = 0
_oltp_comp_dbg_scan                 = 0
_arch_comp_dbg_scan                 = 0
_optimizer_gather_feedback          = true
_upddel_dba_hash_mask_bits          = 0
_px_pwmr_enabled                    = true
_px_cdb_view_enabled                = true
_bloom_sm_enabled                   = true
_optimizer_cluster_by_rowid         = true
_optimizer_cluster_by_rowid_control = 129
_partition_cdb_view_enabled         = true
_common_data_view_enabled           = true
_pred_push_cdb_view_enabled         = true
_rowsets_cdb_view_enabled           = true
_distinct_agg_optimization_gsets    = choose
_array_cdb_view_enabled             = true
_optimizer_adaptive_plan_control    = 0
_optimizer_adaptive_random_seed     = 0
_optimizer_cbqt_or_expansion        = on
_inmemory_dbg_scan                  = 0
_gby_vector_aggregation_enabled     = true
_optimizer_vector_transformation    = true
_optimizer_vector_fact_dim_ratio    = 10
_key_vector_max_size                = 0
_key_vector_predicate_enabled       = true
_key_vector_predicate_threshold     = 0
_vector_operations_control          = 0
_optimizer_vector_min_fact_rows     = 10000000
parallel_dblink                     = 0
_px_scalable_invdist                = true
_key_vector_offload                 = predicate
_optimizer_aggr_groupby_elim        = true
_optimizer_reduce_groupby_key       = true
_vector_serialize_temp_threshold    = 1000
_always_vector_transformation       = false
_optimizer_cluster_by_rowid_batched = true
_object_link_fixed_enabled          = true
optimizer_inmemory_aware            = true
_optimizer_inmemory_table_expansion = true
_optimizer_inmemory_gen_pushable_preds = true
_optimizer_inmemory_autodop         = true
_optimizer_inmemory_access_path     = true
_optimizer_inmemory_bloom_filter    = true
_parallel_inmemory_min_time_threshold = 1
_parallel_inmemory_time_unit        = 1
_rc_sys_obj_enabled                 = true
_optimizer_nlj_hj_adaptive_join     = true
_indexable_con_id                   = true
_bloom_serial_filter                = on
inmemory_force                      = default
inmemory_query                      = enable
_inmemory_query_scan                = true
_inmemory_query_fetch_by_rowid      = false
_inmemory_pruning                   = on
_px_autodop_pq_overhead             = true
_px_external_table_default_stats    = true
_optimizer_key_vector_aggr_factor   = 75
_optimizer_vector_cost_adj          = 100
_cdb_cross_container                = 65535
_cdb_view_parallel_degree           = 65535
_optimizer_hll_entry                = 4096
_px_cdb_view_join_enabled           = true
inmemory_size                       = 0
_external_table_smart_scan          = hadoop_only
_optimizer_inmemory_minmax_pruning  = true
_approx_cnt_distinct_gby_pushdown   = choose
_approx_cnt_distinct_optimization   = 0
_optimizer_ads_use_partial_results  = true
_query_execution_time_limit         = 0
_optimizer_inmemory_cluster_aware_dop = true
_optimizer_db_blocks_buffers        = 0 KB
_query_rewrite_use_on_query_computation = true
_px_scalable_invdist_mcol           = true
_optimizer_bushy_join               = off
_optimizer_bushy_fact_dim_ratio     = 20
_optimizer_bushy_fact_min_size      = 100000
_optimizer_bushy_cost_factor        = 100
_rmt_for_table_redef_enabled        = true
_optimizer_eliminate_subquery       = true
_sqlexec_cache_aware_hash_join_enabled = true
_zonemap_usage_tracking             = true
_sqlexec_hash_based_distagg_enabled = true
_sqlexec_disable_hash_based_distagg_tiv = false
_sqlexec_hash_based_distagg_ssf_enabled = true
_sqlexec_distagg_optimization_settings = 0
approx_for_aggregation              = false
approx_for_count_distinct           = false
_optimizer_union_all_gsets          = true
_rowsets_use_encoding               = true
_rowsets_max_enc_rows               = 64
_optimizer_enhanced_join_elimination = true
_optimizer_multicol_join_elimination = true
_key_vector_create_pushdown_threshold = 20000
_optimizer_enable_plsql_stats       = true
_recursive_with_parallel            = true
_recursive_with_branch_iterations   = 7
_px_dist_agg_partial_rollup_pushdown = adaptive
_px_adaptive_dist_bypass_enabled    = true
_enable_view_pdb                    = true
_optimizer_key_vector_pruning_enabled = true
_pwise_distinct_enabled             = true
_recursive_with_using_temp_table    = false
_partition_read_only                = true
_sql_alias_scope                    = true
_cdb_view_no_skip_migrate           = false
_approx_perc_sampling_err_rate      = 2
_sqlexec_encoding_aware_hj_enabled  = true
rim_node_exist                      = 0
_enable_containers_subquery         = true
_force_containers_subquery          = false
_cell_offload_vector_groupby        = true
_vector_encoding_mode               = manual
_ds_xt_split_count                  = 1
_ds_sampling_method                 = PROGRESSIVE
_optimizer_ads_use_spd_cache        = true
_optimizer_use_table_scanrate       = HADOOP_ONLY
_optimizer_use_xt_rowid             = true
_xt_sampling_scan_granules          = on
_recursive_with_control             = 0
_sqlexec_use_rwo_aware_expr_analysis = true
_optimizer_band_join_aware          = true
_optimizer_vector_base_dim_fact_factor = 200
approx_for_percentile               = none
_approx_percentile_optimization     = 0
_projection_pushdown                = true
_px_object_sampling                 = 200
_optimizer_adaptive_plans_continuous = false
_optimizer_adaptive_plans_iterative = false
_ds_enable_view_sampling            = true
_optimizer_generate_ptf_implied_preds = true
_optimizer_inmemory_use_stored_stats = AUTO
_cdb_special_old_xplan              = true
uniaud_internal_cursor              = 0
_kd_dbg_control                     = 0
_mv_access_compute_fresh_data       = on
_bloom_filter_ratio                 = 35
_optimizer_control_shard_qry_processing = 65472
containers_parallel_degree          = 65535
sql_from_coordinator                = 0
_xt_sampling_scan_granules_min_granules = 1
_in_memory_cdt                      = LIMITED
_in_memory_cdt_maxpx                = 4
_px_partition_load_dist_threshold   = 64
_px_adaptive_dist_bypass_optimization = 1
_optimizer_interleave_or_expansion  = true
optimizer_adaptive_plans            = true
optimizer_adaptive_statistics       = false
_optimizer_use_feedback_for_join    = false
_optimizer_ads_for_pq               = false
_px_join_skewed_values_count        = 0
optimizer_ignore_parallel_hints     = false
parallel_min_degree                 = 1
_px_nlj_bcast_rr_threshold          = 10
_optimizer_gather_stats_on_load_all = false
_optimizer_gather_stats_on_load_hist = false
_optimizer_allow_all_access_paths   = true
_key_vector_double_enabled          = true
_key_vector_timestamp_enabled       = true
_optimizer_answering_query_using_stats = false
_disable_dblink_optim               = true
_cell_offload_hybrid_processing     = true
_read_optimized_table_lookup        = true
_optimizer_key_vector_payload       = true
_optimizer_vector_fact_payload_ratio = 20
_bloom_pruning_setops_enabled       = true
_bloom_filter_setops_enabled        = true
_key_vector_shared_dgk_ht           = true
_px_pwise_wif_enabled               = true
_sqlexec_reorder_wif_enabled        = true
_px_partition_skew_threshold        = 80
_sqlexec_pwiseops_with_sqlfuncs_enabled = true
_sqlexec_pwiseops_with_binds_enabled = true
_px_shared_hash_join                = false
_px_reuse_server_groups             = multi
_px_join_skew_null_handling         = true
_px_join_skew_use_histogram         = true
_px_join_skew_sampling_time_limit   = 50
_px_join_skew_sampling_percent      = 0
_cdb_view_no_skip_restricted        = false
_inmemory_external_table            = true
_sqlexec_use_kgghash3               = true
_cell_offload_vector_groupby_force  = false
_hcs_enable_pred_push               = true
parallel_dop_doubled                = 0
_optimizer_gather_stats_on_load_index = true
_con_map_sql_enforcement            = true
_uniq_cons_sql_enforcement          = true
_ref_cons_sql_enforcement           = true
_is_lock_table_for_split_merge      = 0
_cell_offload_vector_groupby_fact_key = true
_px_scalable_gby_invdist            = true
_px_dynamic_granules                = true
_px_dynamic_granules_adjust         = 10
_px_hybrid_partition_execution_enabled = true
_px_hybrid_partition_skew_threshold = 10
_optimizer_key_vector_use_max_size  = 1048576
_cell_offload_vector_groupby_withnojoin = true
_key_vector_join_pushdown_enabled   = true
_cell_offload_grand_total           = true
_optimizer_key_vector_payload_dim_aggs = true
_optimizer_use_auto_indexes         = AUTO
_optimizer_use_stats_on_conventional_dml = false
_optimizer_gather_stats_on_conventional_dml = false
_optimizer_use_stats_on_conventional_config = 0
_skip_pset_col_chk                  = 0
_nls_binary                         = true
optimizer_use_sql_quarantine        = true
_optimizer_gather_stats_on_conventional_config = 0
_nls_forced_binary                  = 0
_utl32k_mv_query                    = false
optimizer_session_type              = NORMAL
_cell_offload_vector_groupby_external = true
_optimizer_wc_filter_pushdown       = true
BlockChain_ledger_infrastructure    = 0
_cell_metadata_compression          = AUTO
_sqlexec_use_delayed_unpacking      = true
_swat_ver_mv_knob                   = 0
_zonemap_refresh_within_load        = true
_px_parallelize_non_native_datatype = true
_inmemory_hpk4sql_flags             = 0
_sqlexec_hash_based_distagg_ser_civ_enabled = true
_optimizer_use_stats_models         = false
_cross_con_remove_pushed_preds      = false
_optimizer_exists_to_any_rewrite    = true
_update_global_index_from_part_exchange = 0
optimizer_cross_shard_resiliency    = false
shard_queries_restricted_by_key     = false
valid_shard_session_key             = 0
result_cache_mode                   = MANUAL
_bigdata_offload_flag               = false
_optimizer_nested_loop_join         = on
_groupby_orderby_combine            = 5000
_px_extended_join_skew_handling     = true
_autoptn_costing                    = false
translate_table_name_hash           = 0
_enable_columnar_cache              = 1
_px_adaptive_dist_nij_enabled       = on
_sqlexec_hash_rollup_enabled        = true
_sqlexec_hash_based_set_operation_enabled = true
container_data                      = ALL
_mv_logical_partition_rewrite_enabled = false
Bug Fix Control Environment
    fix  3834770 = 1       
    fix  3746511 = enabled
    fix  4519016 = enabled
    fix  3118776 = enabled
    fix  4488689 = enabled
    fix  2194204 = disabled
    fix  2660592 = enabled
    fix  2320291 = enabled
    fix  2324795 = enabled
    fix  4308414 = enabled
    fix  3499674 = disabled
    fix  4569940 = enabled
    fix  4631959 = enabled
    fix  4519340 = enabled
    fix  4550003 = enabled
    fix  1403283 = enabled
    fix  4554846 = enabled
    fix  4602374 = enabled
    fix  4584065 = enabled
    fix  4545833 = enabled
    fix  4611850 = enabled
    fix  4663698 = enabled
    fix  4663804 = enabled
    fix  4666174 = enabled
    fix  4567767 = enabled
    fix  4556762 = 15      
    fix  4728348 = enabled
    fix  4708389 = enabled
    fix  4175830 = enabled
    fix  4752814 = enabled
    fix  4583239 = enabled
    fix  4386734 = enabled
    fix  4887636 = enabled
    fix  4483240 = enabled
    fix  4872602 = disabled
    fix  4711525 = enabled
    fix  4545802 = enabled
    fix  4605810 = enabled
    fix  4704779 = enabled
    fix  4900129 = enabled
    fix  4924149 = enabled
    fix  4663702 = enabled
    fix  4878299 = enabled
    fix  4658342 = enabled
    fix  4881533 = enabled
    fix  4676955 = enabled
    fix  4273361 = enabled
    fix  4967068 = enabled
    fix  4969880 = disabled
    fix  5005866 = enabled
    fix  5015557 = enabled
    fix  4705343 = enabled
    fix  4904838 = enabled
    fix  4716096 = enabled
    fix  4483286 = disabled
    fix  4722900 = enabled
    fix  4615392 = enabled
    fix  5096560 = enabled
    fix  5029464 = enabled
    fix  4134994 = enabled
    fix  4904890 = enabled
    fix  5104624 = enabled
    fix  5014836 = enabled
    fix  4768040 = enabled
    fix  4600710 = enabled
    fix  5129233 = enabled
    fix  4595987 = enabled
    fix  4908162 = enabled
    fix  5139520 = enabled
    fix  5084239 = enabled
    fix  5143477 = disabled
    fix  2663857 = enabled
    fix  4717546 = enabled
    fix  5240264 = disabled
    fix  5099909 = enabled
    fix  5240607 = enabled
    fix  5195882 = enabled
    fix  5220356 = enabled
    fix  5263572 = enabled
    fix  5385629 = enabled
    fix  5302124 = enabled
    fix  5391942 = enabled
    fix  5384335 = enabled
    fix  5482831 = enabled
    fix  4158812 = enabled
    fix  5387148 = enabled
    fix  5383891 = enabled
    fix  5466973 = enabled
    fix  5396162 = enabled
    fix  5394888 = enabled
    fix  5395291 = enabled
    fix  5236908 = enabled
    fix  5509293 = enabled
    fix  5449488 = enabled
    fix  5567933 = enabled
    fix  5570494 = enabled
    fix  5288623 = enabled
    fix  5505995 = enabled
    fix  5505157 = enabled
    fix  5112460 = enabled
    fix  5554865 = enabled
    fix  5112260 = enabled
    fix  5112352 = enabled
    fix  5547058 = enabled
    fix  5618040 = enabled
    fix  5585313 = enabled
    fix  5547895 = enabled
    fix  5634346 = enabled
    fix  5620485 = enabled
    fix  5483301 = enabled
    fix  5657044 = enabled
    fix  5694984 = enabled
    fix  5868490 = enabled
    fix  5650477 = enabled
    fix  5611962 = enabled
    fix  4279274 = enabled
    fix  5741121 = enabled
    fix  5714944 = enabled
    fix  5391505 = enabled
    fix  5762598 = enabled
    fix  5578791 = enabled
    fix  5259048 = enabled
    fix  5882954 = enabled
    fix  2492766 = enabled
    fix  5707608 = enabled
    fix  5891471 = enabled
    fix  5884780 = enabled
    fix  5680702 = enabled
    fix  5371452 = enabled
    fix  5838613 = enabled
    fix  5949981 = enabled
    fix  5624216 = enabled
    fix  5741044 = enabled
    fix  5976822 = enabled
    fix  6006457 = enabled
    fix  5872956 = enabled
    fix  5923644 = enabled
    fix  5943234 = enabled
    fix  5844495 = enabled
    fix  4168080 = enabled
    fix  6020579 = enabled
    fix  5842686 = disabled
    fix  5996801 = enabled
    fix  5593639 = enabled
    fix  6133948 = enabled
    fix  3151991 = enabled
    fix  6146906 = enabled
    fix  6239909 = enabled
    fix  6267621 = enabled
    fix  5909305 = enabled
    fix  6279918 = enabled
    fix  6141818 = enabled
    fix  6151963 = enabled
    fix  6251917 = enabled
    fix  6282093 = enabled
    fix  6119510 = enabled
    fix  6119382 = enabled
    fix  3801750 = enabled
    fix  5705630 = disabled
    fix  5944076 = enabled
    fix  5406763 = enabled
    fix  6070954 = enabled
    fix  6282944 = enabled
    fix  6138746 = enabled
    fix  6082745 = enabled
    fix  3426050 = enabled
    fix   599680 = enabled
    fix  6062266 = enabled
    fix  6087237 = enabled
    fix  6122894 = enabled
    fix  6377505 = enabled
    fix  5893768 = enabled
    fix  6163564 = enabled
    fix  6073325 = enabled
    fix  6188881 = enabled
    fix  6007259 = enabled
    fix  6239971 = enabled
    fix  5284200 = disabled
    fix  6042205 = enabled
    fix  6051211 = enabled
    fix  6434668 = enabled
    fix  6438752 = enabled
    fix  5936366 = enabled
    fix  6439032 = enabled
    fix  6438892 = enabled
    fix  6006300 = enabled
    fix  5947231 = enabled
    fix  5416118 = 1       
    fix  6365442 = 1       
    fix  6239039 = enabled
    fix  6502845 = enabled
    fix  6913094 = enabled
    fix  6029469 = enabled
    fix  5919513 = enabled
    fix  6057611 = enabled
    fix  6469667 = enabled
    fix  6608941 = disabled
    fix  6368066 = enabled
    fix  6329318 = enabled
    fix  6656356 = enabled
    fix  4507997 = enabled
    fix  6671155 = enabled
    fix  6694548 = enabled
    fix  6688200 = enabled
    fix  6612471 = enabled
    fix  6708183 = disabled
    fix  6326934 = enabled
    fix  6520717 = disabled
    fix  6714199 = enabled
    fix  6681545 = enabled
    fix  6748058 = enabled
    fix  6167716 = enabled
    fix  6674254 = enabled
    fix  6468287 = enabled
    fix  6503543 = enabled
    fix  6808773 = disabled
    fix  6766962 = enabled
    fix  6120483 = enabled
    fix  6670551 = enabled
    fix  6771838 = enabled
    fix  6626018 = disabled
    fix  6530596 = enabled
    fix  6778642 = enabled
    fix  6699059 = enabled
    fix  6376551 = enabled
    fix  6429113 = enabled
    fix  6782437 = enabled
    fix  6776808 = enabled
    fix  6765823 = enabled
    fix  6768660 = enabled
    fix  6782665 = enabled
    fix  6610822 = enabled
    fix  6514189 = enabled
    fix  6818410 = enabled
    fix  6827696 = enabled
    fix  6773613 = enabled
    fix  5902962 = enabled
    fix  6956212 = enabled
    fix  3056297 = enabled
    fix  6440977 = disabled
    fix  6972291 = disabled
    fix  6904146 = enabled
    fix  6221403 = enabled
    fix  5475051 = enabled
    fix  6845871 = enabled
    fix  5468809 = enabled
    fix  6917633 = enabled
    fix  4444536 = disabled
    fix  6955210 = enabled
    fix  6994194 = enabled
    fix  6399597 = disabled
    fix  6951776 = enabled
    fix  5648287 = 3       
    fix  6987082 = disabled
    fix  7132036 = enabled
    fix  6980350 = enabled
    fix  5199213 = enabled
    fix  7138405 = enabled
    fix  7148689 = enabled
    fix  6820988 = enabled
    fix  7032684 = enabled
    fix  6617866 = enabled
    fix  7155968 = enabled
    fix  7127980 = enabled
    fix  6982954 = enabled
    fix  7241819 = enabled
    fix  6897034 = enabled
    fix  7236148 = enabled
    fix  7298570 = enabled
    fix  7249095 = enabled
    fix  7314499 = enabled
    fix  7324224 = enabled
    fix  7289023 = enabled
    fix  7237571 = enabled
    fix  7116357 = enabled
    fix  7345484 = enabled
    fix  7375179 = enabled
    fix  6430500 = disabled
    fix  5897486 = enabled
    fix  6774209 = enabled
    fix  7306637 = enabled
    fix  6451322 = enabled
    fix  7208131 = enabled
    fix  7388652 = enabled
    fix  7127530 = enabled
    fix  6751206 = enabled
    fix  6669103 = enabled
    fix  7430474 = enabled
    fix  6990305 = enabled
    fix  7043307 = enabled
    fix  3120429 = enabled
    fix  7452823 = disabled
    fix  6838105 = enabled
    fix  6769711 = enabled
    fix  7170213 = enabled
    fix  6528872 = enabled
    fix  7295298 = enabled
    fix  5922070 = enabled
    fix  7259468 = enabled
    fix  6418552 = enabled
    fix  4619997 = enabled
    fix  7524366 = enabled
    fix  6942476 = enabled
    fix  6418771 = enabled
    fix  7375077 = enabled
    fix  5400639 = enabled
    fix  4570921 = enabled
    fix  7426911 = enabled
    fix  5099019 = disabled
    fix  7528216 = enabled
    fix  7521266 = enabled
    fix  7385140 = enabled
    fix  7576516 = enabled
    fix  7573526 = enabled
    fix  7576476 = enabled
    fix  7165898 = enabled
    fix  7263214 = enabled
    fix  3320140 = enabled
    fix  7555510 = enabled
    fix  7613118 = enabled
    fix  7597059 = enabled
    fix  7558911 = enabled
    fix  5520732 = enabled
    fix  7679490 = disabled
    fix  7449971 = enabled
    fix  3628118 = enabled
    fix  4370840 = enabled
    fix  7281191 = enabled
    fix  7519687 = enabled
    fix  5029592 = 3       
    fix  6012093 = 1       
    fix  6053861 = disabled
    fix  6941515 = disabled
    fix  7696414 = enabled
    fix  7272039 = enabled
    fix  7834811 = enabled
    fix  7640597 = enabled
    fix  7341616 = enabled
    fix  7168184 = enabled
    fix   399198 = enabled
    fix  7831070 = enabled
    fix  7676897 = disabled
    fix  7414637 = enabled
    fix  7585456 = enabled
    fix  8202421 = enabled
    fix  7658097 = disabled
    fix  8251486 = enabled
    fix  7132684 = enabled
    fix  7512227 = enabled
    fix  6972987 = enabled
    fix  7199035 = enabled
    fix  8243446 = enabled
    fix  7650462 = enabled
    fix  6720701 = enabled
    fix  7592673 = enabled
    fix  7718694 = enabled
    fix  7534027 = enabled
    fix  7708267 = enabled
    fix  5716785 = enabled
    fix  7356191 = enabled
    fix  7679161 = enabled
    fix  7597159 = enabled
    fix  7499258 = enabled
    fix  8328363 = enabled
    fix  7452863 = enabled
    fix  8284930 = enabled
    fix  7298626 = enabled
    fix  7657126 = enabled
    fix  8371884 = enabled
    fix  8318020 = enabled
    fix  8255423 = enabled
    fix  7135745 = enabled
    fix  8356253 = enabled
    fix  7534257 = enabled
    fix  8323407 = enabled
    fix  7539815 = enabled
    fix  8289316 = enabled
    fix  8447850 = enabled
    fix  7675944 = enabled
    fix  8355120 = enabled
    fix  7176746 = enabled
    fix  8442891 = enabled
    fix  8373261 = enabled
    fix  7679164 = enabled
    fix  7670533 = enabled
    fix  8408665 = enabled
    fix  8491399 = enabled
    fix  8348392 = enabled
    fix  8348585 = enabled
    fix  8335178 = enabled
    fix  8247017 = enabled
    fix  7325597 = enabled
    fix  8531490 = enabled
    fix  6163600 = enabled
    fix  8589278 = disabled
    fix  8557992 = enabled
    fix  7556098 = enabled
    fix  8580883 = enabled
    fix  5892599 = disabled
    fix  8609714 = enabled
    fix  8619631 = disabled
    fix  8672915 = enabled
    fix  8514561 = enabled
    fix  8213977 = enabled
    fix  8560951 = disabled
    fix  8578587 = enabled
    fix  8287870 = enabled
    fix  8467123 = enabled
    fix  8602185 = enabled
    fix  8519457 = enabled
    fix  3335182 = enabled
    fix  8602840 = enabled
    fix  8725296 = enabled
    fix  8628970 = enabled
    fix  6754080 = enabled
    fix  8767442 = enabled
    fix  8760135 = enabled
    fix  8644935 = enabled
    fix  8352378 = enabled
    fix  8685327 = enabled
    fix  8763472 = enabled
    fix  8773324 = enabled
    fix  8813674 = enabled
    fix  8532236 = enabled
    fix  8629716 = enabled
    fix  7277732 = enabled
    fix  8692170 = enabled
    fix  8900973 = enabled
    fix  8919133 = enabled
    fix  8927050 = enabled
    fix  8551880 = enabled
    fix  8901237 = enabled
    fix  8812372 = enabled
    fix  6236862 = enabled
    fix  8528517 = enabled
    fix  7215982 = enabled
    fix  8214022 = enabled
    fix  8595392 = enabled
    fix  8890233 = enabled
    fix  8999317 = enabled
    fix  9004800 = enabled
    fix  8986163 = enabled
    fix  8855396 = enabled
    fix  8800514 = 20      
    fix  9007859 = enabled
    fix  8198783 = disabled
    fix  9053879 = enabled
    fix  6086930 = enabled
    fix  7641601 = enabled
    fix  9052506 = enabled
    fix  9103775 = enabled
    fix  9047975 = enabled
    fix  8893626 = enabled
    fix  9111170 = enabled
    fix  8971829 = enabled
    fix  7628358 = enabled
    fix  9125151 = enabled
    fix  9039715 = enabled
    fix  9106224 = enabled
    fix  9185228 = enabled
    fix  9206747 = enabled
    fix  9088510 = enabled
    fix  9143856 = enabled
    fix  8833381 = enabled
    fix  8949971 = enabled
    fix  8951812 = enabled
    fix  9148171 = enabled
    fix  8706652 = enabled
    fix  9245114 = enabled
    fix  8802198 = enabled
    fix  9011016 = enabled
    fix  9265681 = enabled
    fix  7284269 = enabled
    fix  9272549 = enabled
    fix  8917507 = 7       
    fix  8531463 = enabled
    fix  9263333 = enabled
    fix  8675087 = enabled
    fix  8896955 = enabled
    fix  9041934 = enabled
    fix  9344709 = enabled
    fix  9024933 = enabled
    fix  9033718 = enabled
    fix  9240455 = enabled
    fix  9081848 = enabled
    fix  5982893 = enabled
    fix  9287401 = enabled
    fix  8590021 = enabled
    fix  9340120 = enabled
    fix  9355794 = enabled
    fix  9356656 = enabled
    fix  9385634 = enabled
    fix  9069046 = enabled
    fix  9239337 = enabled
    fix  9300228 = enabled
    fix  9298010 = enabled
    fix  9384170 = enabled
    fix  9407929 = enabled
    fix  8836806 = enabled
    fix  9344055 = enabled
    fix  9274675 = enabled
    fix  9203723 = enabled
    fix  9443476 = enabled
    fix  9195582 = enabled
    fix  8226666 = enabled
    fix  9433490 = enabled
    fix  9065494 = enabled
    fix  9303766 = enabled
    fix  9437283 = enabled
    fix  9116214 = enabled
    fix  9456688 = enabled
    fix  9456746 = disabled
    fix  9342979 = enabled
    fix  9465425 = enabled
    fix  9092442 = enabled
    fix  4926618 = enabled
    fix  8792846 = enabled
    fix  9474259 = enabled
    fix  9495669 = disabled
    fix  6472966 = enabled
    fix  6408301 = enabled
    fix  9380298 = disabled
    fix  8500130 = enabled
    fix  9584723 = enabled
    fix  9270951 = enabled
    fix  9508254 = enabled
    fix  9593680 = enabled
    fix  9196440 = disabled
    fix  9309281 = enabled
    fix  8693158 = enabled
    fix  9381638 = enabled
    fix  9383967 = enabled
    fix  7711900 = enabled
    fix  9218587 = enabled
    fix  9728438 = enabled
    fix  9038395 = enabled
    fix  9577300 = enabled
    fix  9171113 = enabled
    fix  8973745 = enabled
    fix  9732434 = enabled
    fix  8937971 = disabled
    fix  9102474 = enabled
    fix  9243499 = enabled
    fix  9791810 = enabled
    fix  9785632 = enabled
    fix  9898249 = enabled
    fix  9153459 = enabled
    fix  9680430 = enabled
    fix  9841679 = enabled
    fix  9912503 = enabled
    fix  9850461 = enabled
    fix  9762592 = 3       
    fix  9716877 = enabled
    fix  9814067 = enabled
    fix  9776736 = enabled
    fix  8349119 = enabled
    fix  9958518 = enabled
    fix 10041074 = enabled
    fix 10004943 = enabled
    fix  9980661 = enabled
    fix  9554026 = enabled
    fix  9593547 = enabled
    fix  9833381 = enabled
    fix 10043801 = enabled
    fix  9940732 = enabled
    fix  9702850 = enabled
    fix  9659125 = 0       
    fix  9668086 = enabled
    fix  9476520 = enabled
    fix 10158107 = enabled
    fix 10148457 = enabled
    fix 10106423 = enabled
    fix  9721439 = disabled
    fix 10162430 = enabled
    fix 10134677 = enabled
    fix 10182051 = 3       
    fix 10175079 = enabled
    fix 10026972 = enabled
    fix 10192889 = enabled
    fix  3566843 = enabled
    fix  9550277 = disabled
    fix 10236566 = enabled
    fix 10227392 = enabled
    fix  8961143 = enabled
    fix  9721228 = enabled
    fix 10080014 = enabled
    fix 10101489 = enabled
    fix  9929609 = enabled
    fix 10015652 = enabled
    fix  9918661 = enabled
    fix 10333395 = enabled
    fix 10336499 = disabled
    fix 10182672 = enabled
    fix  9578670 = enabled
    fix 10232225 = enabled
    fix 10330090 = enabled
    fix 10232623 = enabled
    fix  9630092 = disabled
    fix 10271790 = enabled
    fix  9227576 = enabled
    fix 10197666 = enabled
    fix 10376744 = enabled
    fix  8274946 = enabled
    fix 10046368 = enabled
    fix  9569678 = enabled
    fix  9002661 = enabled
    fix 10038373 = enabled
    fix  9477688 = enabled
    fix 10013899 = enabled
    fix  9832338 = enabled
    fix 10623119 = enabled
    fix  9898066 = enabled
    fix 11699884 = enabled
    fix 10640430 = enabled
    fix 10428450 = enabled
    fix 10117760 = enabled
    fix 11720178 = enabled
    fix  9881812 = enabled
    fix 10428278 = enabled
    fix 11741436 = enabled
    fix 11668189 = enabled
    fix 10359631 = enabled
    fix  9829887 = enabled
    fix  8275054 = enabled
    fix 11814428 = enabled
    fix 11676888 = disabled
    fix 10348427 = enabled
    fix 11843512 = enabled
    fix 11657468 = enabled
    fix 11877160 = enabled
    fix 11738631 = enabled
    fix 11744086 = enabled
    fix 11830663 = enabled
    fix 11853331 = enabled
    fix  9748015 = enabled
    fix 11834739 = enabled
    fix  6055658 = enabled
    fix 11740670 = enabled
    fix 11940126 = enabled
    fix 12315002 = enabled
    fix  8275023 = enabled
    fix 12352373 = enabled
    fix 12390139 = enabled
    fix 11935589 = enabled
    fix 10226906 = enabled
    fix 12327548 = enabled
    fix 12388221 = enabled
    fix 11892888 = enabled
    fix 11814265 = enabled
    fix 10230017 = enabled
    fix 12341619 = enabled
    fix 11744016 = enabled
    fix 10216738 = enabled
    fix 10298302 = enabled
    fix 12563419 = enabled
    fix 12399886 = enabled
    fix 12584007 = enabled
    fix 11881047 = enabled
    fix 12534597 = enabled
    fix  8683604 = enabled
    fix 12410972 = enabled
    fix  7147087 = enabled
    fix 11846314 = enabled
    fix 12535474 = enabled
    fix 12561635 = enabled
    fix 12432426 = enabled
    fix  9913117 = enabled
    fix 12432089 = enabled
    fix 12587690 = enabled
    fix 11858963 = enabled
    fix 12569245 = enabled
    fix 12569300 = enabled
    fix  7308975 = disabled
    fix 12569316 = enabled
    fix 12569321 = enabled
    fix 12335617 = enabled
    fix  9002958 = enabled
    fix 12591120 = enabled
    fix 11876260 = enabled
    fix 12313574 = enabled
    fix 12569713 = enabled
    fix 12348584 = enabled
    fix 10420220 = enabled
    fix 12559453 = enabled
    fix 12727549 = enabled
    fix 12728203 = enabled
    fix 12828479 = enabled
    fix 10181153 = enabled
    fix  9971371 = disabled
    fix 12864791 = enabled
    fix 12810427 = enabled
    fix 12605402 = enabled
    fix 12861609 = enabled
    fix 12915337 = enabled
    fix 12942119 = enabled
    fix 12622441 = enabled
    fix 11072246 = enabled
    fix 12739252 = enabled
    fix 12953765 = enabled
    fix 12905116 = enabled
    fix 12978495 = enabled
    fix  9633142 = disabled
    fix  3639130 = enabled
    fix 12827166 = enabled
    fix 12944193 = enabled
    fix 13020272 = enabled
    fix 12673320 = enabled
    fix 12975771 = enabled
    fix 12882092 = enabled
    fix 12379334 = enabled
    fix 12723414 = enabled
    fix  9488694 = disabled
    fix 13255388 = 10      
    fix 11727871 = enabled
    fix 13110511 = enabled
    fix 13075297 = enabled
    fix 13345888 = enabled
    fix 11657903 = disabled
    fix 13396096 = enabled
    fix 12591379 = enabled
    fix 13398214 = enabled
    fix 13382280 = enabled
    fix 12869367 = enabled
    fix 12999577 = enabled
    fix 12433153 = enabled
    fix  9094254 = enabled
    fix 13104618 = enabled
    fix 13524237 = enabled
    fix 11813257 = enabled
    fix 13489017 = enabled
    fix 12954320 = enabled
    fix 13555551 = enabled
    fix 13499154 = enabled
    fix 13036910 = enabled
    fix 13545925 = enabled
    fix 13545956 = enabled
    fix 13545989 = enabled
    fix 12839247 = enabled
    fix  9858777 = enabled
    fix 13568366 = enabled
    fix 13393357 = enabled
    fix 13040171 = enabled
    fix 13406619 = enabled
    fix 13594757 = enabled
    fix 13543207 = enabled
    fix 13594712 = enabled
    fix 12648629 = enabled
    fix 13549808 = enabled
    fix 13634700 = enabled
    fix  8792821 = enabled
    fix 13454409 = enabled
    fix 13146487 = enabled
    fix 13592248 = enabled
    fix 11689541 = enabled
    fix 13527374 = enabled
    fix 13430622 = enabled
    fix 13704562 = enabled
    fix  9547706 = enabled
    fix 13497184 = enabled
    fix 13704977 = enabled
    fix 13734456 = enabled
    fix 13070532 = enabled
    fix  6520878 = enabled
    fix  2273284 = enabled
    fix 13786127 = enabled
    fix 13065064 = enabled
    fix 13972896 = enabled
    fix 11843466 = enabled
    fix 13777823 = enabled
    fix 13616573 = enabled
    fix 13831671 = enabled
    fix 13652216 = enabled
    fix 13912192 = enabled
    fix 13909909 = enabled
    fix 13849486 = enabled
    fix 13321547 = enabled
    fix 13886606 = disabled
    fix 14013502 = enabled
    fix 13850256 = enabled
    fix 13929275 = enabled
    fix 11732303 = enabled
    fix 13906168 = enabled
    fix 14055128 = enabled
    fix 12856200 = enabled
    fix 14008590 = enabled
    fix 13627489 = disabled
    fix 13961105 = enabled
    fix 13583722 = enabled
    fix 13076238 = enabled
    fix 13936229 = enabled
    fix  9852856 = enabled
    fix  3904125 = enabled
    fix  5910187 = enabled
    fix 10068316 = enabled
    fix 14029891 = enabled
    fix  4215125 = enabled
    fix 13711083 = enabled
    fix 13973691 = enabled
    fix 13486825 = enabled
    fix 13682550 = enabled
    fix 13826669 = enabled
    fix 14033181 = enabled
    fix 13836796 = enabled
    fix 12555499 = enabled
    fix 13568506 = enabled
    fix  9891396 = enabled
    fix 13835788 = enabled
    fix  7271518 = enabled
    fix 14127824 = enabled
    fix 12557401 = enabled
    fix 13350470 = enabled
    fix 14095362 = enabled
    fix 13000118 = enabled
    fix 14254795 = enabled
    fix 14012261 = enabled
    fix 14241953 = enabled
    fix 14221012 = enabled
    fix 13329748 = enabled
    fix 13843964 = enabled
    fix 14254052 = enabled
    fix 13814866 = enabled
    fix 14255600 = disabled
    fix 13735304 = enabled
    fix 14142884 = disabled
    fix 12909121 = enabled
    fix 14464068 = enabled
    fix 14295250 = 45000   
    fix  6873091 = enabled
    fix 13448445 = enabled
    fix 14155722 = enabled
    fix 14098180 = enabled
    fix 11905801 = enabled
    fix 14467202 = enabled
    fix 14541122 = enabled
    fix 13905599 = disabled
    fix 14320077 = enabled
    fix 14243782 = enabled
    fix  9114915 = enabled
    fix 14516175 = enabled
    fix 12812697 = enabled
    fix 13109345 = enabled
    fix 14456124 = enabled
    fix 14605040 = enabled
    fix 14595273 = disabled
    fix 14176247 = enabled
    fix 11894476 = enabled
    fix 14256885 = enabled
    fix 14545269 = disabled
    fix 14668404 = disabled
    fix 14144611 = enabled
    fix 14346182 = enabled
    fix 13083139 = enabled
    fix 14726188 = enabled
    fix 14707009 = enabled
    fix 14703133 = enabled
    fix 14618560 = enabled
    fix 14170552 = enabled
    fix 13263174 = enabled
    fix 14669785 = enabled
    fix 14633570 = enabled
    fix 14755138 = enabled
    fix 14682092 = enabled
    fix 14712222 = enabled
    fix 14570575 = enabled
    fix 14707748 = disabled
    fix 14684079 = enabled
    fix 13245379 = enabled
    fix 13853916 = enabled
    fix 13699007 = enabled
    fix 14843189 = enabled
    fix 14147762 = enabled
    fix 14795969 = enabled
    fix 14746036 = 1       
    fix 14750501 = enabled
    fix 13891981 = enabled
    fix 15996520 = enabled
    fix 16026776 = enabled
    fix 13573073 = enabled
    fix 13263455 = enabled
    fix 16053273 = enabled
    fix 16029607 = enabled
    fix 14242833 = enabled
    fix 13362020 = enabled
    fix 13799389 = enabled
    fix 12693573 = enabled
    fix 15998585 = enabled
    fix 16166364 = enabled
    fix 14723910 = enabled
    fix 15873008 = enabled
    fix 14133928 = enabled
    fix 16085999 = enabled
    fix 14176203 = enabled
    fix 16226575 = enabled
    fix 16015637 = enabled
    fix 15968693 = disabled
    fix 16220895 = enabled
    fix 16178821 = enabled
    fix 11865196 = enabled
    fix 16237969 = enabled
    fix 16058481 = enabled
    fix 13361493 = enabled
    fix 16264537 = enabled
    fix 14401107 = enabled
    fix 13943459 = enabled
    fix 13994546 = enabled
    fix  7174435 = enabled
    fix 14750443 = enabled
    fix 14469756 = enabled
    fix 14552075 = enabled
    fix 16324844 = enabled
    fix 13583529 = enabled
    fix 14565911 = enabled
    fix 13526551 = enabled
    fix 16368002 = enabled
    fix 16077770 = enabled
    fix 16419357 = enabled
    fix 15889476 = disabled
    fix 16273483 = enabled
    fix 16496848 = disabled
    fix 14107333 = enabled
    fix 11814337 = enabled
    fix 15882436 = enabled
    fix 14764840 = enabled
    fix 16226660 = enabled
    fix 16555865 = enabled
    fix 16625151 = enabled
    fix 16092378 = enabled
    fix 16487030 = enabled
    fix  9552303 = enabled
    fix 16609749 = enabled
    fix 16751246 = enabled
    fix 13253977 = enabled
    fix 14058291 = disabled
    fix 16749025 = enabled
    fix 16750067 = enabled
    fix 16726844 = enabled
    fix 15899648 = enabled
    fix 16690013 = enabled
    fix 15996156 = enabled
    fix 16544878 = enabled
    fix  9413591 = disabled
    fix 16792882 = 0       
    fix 16725982 = enabled
    fix 14648222 = enabled
    fix 16799181 = enabled
    fix 16516883 = enabled
    fix 16507317 = enabled
    fix 16837274 = enabled
    fix 14085520 = enabled
    fix 16713081 = enabled
    fix 14703295 = enabled
    fix 16908409 = enabled
    fix 16212250 = enabled
    fix 13692395 = disabled
    fix 17087729 = enabled
    fix 17088819 = enabled
    fix 13848786 = enabled
    fix 13522189 = enabled
    fix 16400122 = enabled
    fix 16796185 = enabled
    fix 15950252 = enabled
    fix 17070464 = enabled
    fix 16976121 = enabled
    fix 14580303 = enabled
    fix 16554552 = enabled
    fix 16582322 = enabled
    fix 16712213 = enabled
    fix 17382690 = enabled
    fix 14846352 = enabled
    fix 16516751 = enabled
    fix  3174223 = enabled
    fix  8611462 = enabled
    fix 14851437 = 3       
    fix 17348895 = enabled
    fix 16515789 = enabled
    fix  5451645 = disabled
    fix 14062749 = enabled
    fix 16346018 = enabled
    fix 12977599 = enabled
    fix 14191778 = enabled
    fix 15939321 = enabled
    fix 16874299 = enabled
    fix 16470836 = enabled
    fix 16805362 = disabled
    fix 17442009 = disabled
    fix 16825679 = enabled
    fix 17543180 = enabled
    fix 17301564 = enabled
    fix 12373708 = enabled
    fix 17397506 = enabled
    fix 14558315 = enabled
    fix 16615686 = enabled
    fix 16622801 = enabled
    fix 10038517 = enabled
    fix 16954950 = enabled
    fix 17728161 = enabled
    fix 17760375 = enabled
    fix 14311185 = enabled
    fix 13077335 = disabled
    fix 13458979 = disabled
    fix 17485514 = enabled
    fix 17599514 = enabled
    fix 17640863 = enabled
    fix 17716301 = enabled
    fix 17368047 = disabled
    fix 17597748 = enabled
    fix 17303359 = enabled
    fix 17376322 = disabled
    fix 16391176 = disabled
    fix 16673868 = enabled
    fix 17800514 = enabled
    fix 14826303 = enabled
    fix 17663076 = enabled
    fix 17760755 = enabled
    fix 17793460 = enabled
    fix 17997159 = enabled
    fix 17938754 = enabled
    fix 14733442 = enabled
    fix 17727676 = enabled
    fix 17781659 = enabled
    fix 17526569 = enabled
    fix 17950612 = enabled
    fix 17760686 = enabled
    fix 17696414 = enabled
    fix 17799716 = enabled
    fix 18116777 = enabled
    fix 18159664 = disabled
    fix 16052625 = enabled
    fix 18091750 = enabled
    fix 17572606 = enabled
    fix 17971955 = enabled
    fix 17946915 = enabled
    fix 18196576 = enabled
    fix 10145667 = enabled
    fix 17736165 = enabled
    fix 16434021 = enabled
    fix 18035463 = enabled
    fix 18011820 = enabled
    fix 16405740 = enabled
    fix 14612201 = enabled
    fix 17491018 = enabled
    fix 18365267 = enabled
    fix 17986549 = enabled
    fix 18115594 = enabled
    fix 18182018 = enabled
    fix 18302923 = enabled
    fix 18377553 = enabled
    fix  5677419 = enabled
    fix 17896018 = disabled
    fix 13097308 = enabled
    fix 17863980 = enabled
    fix 17567154 = enabled
    fix 18398980 = enabled
    fix 17023040 = enabled
    fix 17991403 = 1       
    fix 16033838 = enabled
    fix 17908541 = enabled
    fix 18134680 = enabled
    fix 18405517 = 0       
    fix 18304693 = enabled
    fix 18456944 = enabled
    fix 18467455 = enabled
    fix 18425876 = enabled
    fix 18508675 = enabled
    fix 17473046 = disabled
    fix 18636079 = enabled
    fix 18388128 = enabled
    fix 18415557 = enabled
    fix 18385778 = enabled
    fix 18308329 = enabled
    fix 18461984 = enabled
    fix 17973658 = enabled
    fix 18558952 = enabled
    fix  9912950 = enabled
    fix 18751128 = enabled
    fix 16809786 = enabled
    fix 18795224 = enabled
    fix 14776289 = enabled
    fix 18823135 = enabled
    fix 18874242 = enabled
    fix 18770199 = disabled
    fix  4185270 = disabled
    fix 18765574 = enabled
    fix 18754357 = disabled
    fix 18959892 = enabled
    fix 17324379 = disabled
    fix 18952882 = enabled
    fix 18924221 = enabled
    fix 18422714 = enabled
    fix 18798414 = enabled
    fix 18969167 = enabled
    fix 16191689 = enabled
    fix 18907562 = enabled
    fix 19055664 = enabled
    fix 18898582 = enabled
    fix 18960760 = enabled
    fix 19070454 = enabled
    fix 19230097 = enabled
    fix 19063497 = enabled
    fix 19046459 = enabled
    fix 19269482 = enabled
    fix 18876528 = enabled
    fix 19227996 = enabled
    fix 18864613 = enabled
    fix 19239478 = enabled
    fix 19451895 = enabled
    fix 19450139 = enabled
    fix 18907390 = enabled
    fix 19025959 = enabled
    fix 19309574 = enabled
    fix 16774698 = enabled
    fix 16923858 = 6       
    fix 19546825 = enabled
    fix 19475484 = enabled
    fix 19498595 = enabled
    fix 16934526 = enabled
    fix 19287919 = enabled
    fix 19386746 = enabled
    fix 19774486 = enabled
    fix 19803410 = enabled
    fix 18671960 = enabled
    fix 19484911 = enabled
    fix 19731940 = enabled
    fix 19604408 = enabled
    fix 14402409 = enabled
    fix 16486095 = enabled
    fix 19563657 = enabled
    fix 19632232 = enabled
    fix 19889960 = enabled
    fix 17208933 = enabled
    fix 19710102 = enabled
    fix 18697515 = enabled
    fix 18318631 = enabled
    fix 19377983 = enabled
    fix 20078639 = enabled
    fix 19503668 = enabled
    fix 20124288 = enabled
    fix 19847091 = enabled
    fix 12989345 = enabled
    fix 12618642 = enabled
    fix 19779920 = enabled
    fix 20186282 = enabled
    fix 20186295 = enabled
    fix 19563433 = enabled
    fix 19848804 = enabled
    fix 20046257 = enabled
    fix 20265690 = enabled
    fix 16047938 = enabled
    fix 19507904 = enabled
    fix 18915345 = enabled
    fix 20173686 = disabled
    fix 20329321 = enabled
    fix 20225191 = enabled
    fix 18776755 = enabled
    fix 19882842 = enabled
    fix 20010996 = enabled
    fix 20445764 = disabled
    fix 19728543 = disabled
    fix 20379571 = enabled
    fix 20129763 = enabled
    fix 19899588 = enabled
    fix 10098852 = enabled
    fix 19663421 = disabled
    fix 20355502 = 0       
    fix 20526705 = enabled
    fix 20465582 = enabled
    fix 20581886 = disabled
    fix 16732417 = enabled
    fix 20732410 = enabled
    fix 20289688 = enabled
    fix 20543684 = enabled
    fix 20636003 = enabled
    fix 20506136 = enabled
    fix 20458598 = disabled
    fix 20830312 = enabled
    fix 19768896 = enabled
    fix 20321661 = enabled
    fix 19814541 = enabled
    fix 20933264 = enabled
    fix 17443547 = enabled
    fix 20602794 = enabled
    fix 19123152 = enabled
    fix 19899833 = enabled
    fix 20754928 = enabled
    fix 20808265 = enabled
    fix 20808192 = enabled
    fix 20340595 = enabled
    fix 14474264 = disabled
    fix 20508819 = enabled
    fix 21098866 = disabled
    fix 18949550 = enabled
    fix 14775297 = enabled
    fix 19568958 = disabled
    fix 20923950 = enabled
    fix 21283159 = enabled
    fix 17497847 = enabled
    fix 21211629 = enabled
    fix 20819668 = enabled
    fix 20232513 = enabled
    fix 20906782 = enabled
    fix 20587527 = enabled
    fix 20914534 = disabled
    fix 20830544 = enabled
    fix 16851194 = enabled
    fix 19186783 = enabled
    fix 19653920 = enabled
    fix 21211786 = enabled
    fix 21057343 = enabled
    fix 21503478 = enabled
    fix 19808939 = disabled
    fix 21476032 = enabled
    fix 20859246 = enabled
    fix 20838633 = 2       
    fix 21639419 = enabled
    fix 20951803 = enabled
    fix 21683982 = enabled
    fix 20216500 = enabled
    fix 21614112 = enabled
    fix 20906162 = enabled
    fix 20854798 = enabled
    fix 21509656 = enabled
    fix 21833220 = enabled
    fix 21802552 = enabled
    fix 21452843 = enabled
    fix 21553593 = enabled
    fix 21093805 = enabled
    fix 16220085 = disabled
    fix 21800590 = enabled
    fix 21273039 = enabled
    fix 16750133 = enabled
    fix 22013607 = enabled
    fix 22152372 = enabled
    fix 22077191 = enabled
    fix 22123025 = enabled
    fix 16913734 = enabled
    fix  8357294 = enabled
    fix 12670904 = enabled
    fix 21979983 = enabled
    fix 22158526 = enabled
    fix 21971099 = enabled
    fix 22090662 = enabled
    fix 22149010 = disabled
    fix 21300129 = enabled
    fix 21339278 = enabled
    fix 20270511 = enabled
    fix 21424812 = enabled
    fix 22114090 = enabled
    fix 22310074 = disabled
    fix 22159570 = enabled
    fix 22272439 = enabled
    fix 22372694 = enabled
    fix 22514195 = enabled
    fix 20413540 = enabled
    fix 22520315 = enabled
    fix 22649054 = enabled
    fix  8617254 = enabled
    fix 22020067 = enabled
    fix 22864730 = enabled
    fix 21099502 = enabled
    fix 22904304 = enabled
    fix 22967807 = enabled
    fix 22879002 = enabled
    fix 23019286 = enabled
    fix 22760704 = enabled
    fix 20853506 = enabled
    fix 22540411 = disabled
    fix 22513493 = enabled
    fix 22518491 = enabled
    fix 23103096 = enabled
    fix 22143411 = enabled
    fix 23180670 = enabled
    fix 23002609 = enabled
    fix 22928015 = 1       
    fix 23210039 = enabled
    fix 23102649 = enabled
    fix 23071621 = enabled
    fix 22822245 = enabled
    fix 23136865 = enabled
    fix 23176721 = enabled
    fix 23308385 = enabled
    fix 23223113 = enabled
    fix 22301868 = disabled
    fix 22258300 = enabled
    fix 22205301 = enabled
    fix 23514473 = 1       
    fix 23556483 = enabled
    fix 21305617 = enabled
    fix 22533539 = enabled
    fix 23596611 = enabled
    fix 20347374 = disabled
    fix 22937293 = enabled
    fix 20107874 = enabled
    fix 19582337 = enabled
    fix 22746853 = enabled
    fix 23537232 = enabled
    fix 23565188 = enabled
    fix 20228468 = enabled
    fix 22393169 = enabled
    fix 24426912 = enabled
    fix 24690046 = enabled
    fix 23732552 = enabled
    fix 20648883 = enabled
    fix 24654471 = enabled
    fix 23738304 = enabled
    fix 24010030 = enabled
    fix 22766607 = enabled
    fix 24600280 = enabled
    fix 24845754 = enabled
    fix 24533235 = enabled
    fix 22128803 = enabled
    fix 24926999 = enabled
    fix 24434608 = enabled
    fix 25094218 = enabled
    fix 24819957 = enabled
    fix 23478835 = enabled
    fix 24745366 = enabled
    fix 24920138 = disabled
    fix 24570810 = enabled
    fix 25058954 = enabled
    fix 24518392 = enabled
    fix 23738186 = enabled
    fix 25234139 = enabled
    fix 25108065 = enabled
    fix 22212124 = enabled
    fix 25123105 = enabled
    fix 25078728 = enabled
    fix 23719498 = 0       
    fix 25090203 = enabled
    fix 23197730 = enabled
    fix 23738553 = enabled
    fix 22070473 = enabled
    fix 19956351 = enabled
    fix 25393617 = enabled
    fix 21130817 = enabled
    fix 25342352 = enabled
    fix 25167306 = disabled
    fix 23473108 = enabled
    fix 25501716 = enabled
    fix 22973474 = enabled
    fix 22153026 = enabled
    fix 25367727 = enabled
    fix 25477783 = enabled
    fix 25493582 = enabled
    fix 22205362 = enabled
    fix 23249829 = enabled
    fix 25120742 = enabled
    fix 23853877 = disabled
    fix 25796244 = enabled
    fix 25575369 = enabled
    fix 25643889 = disabled
    fix 25436615 = enabled
    fix 25478095 = enabled
    fix 25405100 = enabled
    fix 24952618 = enabled
    fix 25809211 = enabled
    fix 26094674 = enabled
    fix 21183079 = enabled
    fix 25948370 = enabled
    fix 24545933 = enabled
    fix 25926263 = enabled
    fix 26019148 = enabled
    fix 25995431 = enabled
    fix 21870589 = enabled
    fix 24584046 = enabled
    fix 26374214 = enabled
    fix 25476149 = enabled
    fix 25345279 = enabled
    fix 24478915 = enabled
    fix 26541991 = enabled
    fix 26338880 = enabled
    fix 26270685 = disabled
    fix 26560136 = enabled
    fix 26671842 = enabled
    fix 26712343 = enabled
    fix 26585420 = enabled
    fix 26677151 = enabled
    fix 26367868 = enabled
    fix 26552730 = disabled
    fix 26177646 = enabled
    fix 23643560 = enabled
    fix 25792706 = enabled
    fix 27057772 = disabled
    fix 26986173 = enabled
    fix 26423085 = enabled
    fix 27077069 = enabled
    fix 26536320 = enabled
    fix 25138211 = enabled
    fix 27321179 = enabled
    fix 27343844 = enabled
    fix 26790514 = enabled
    fix 27282295 = enabled
    fix 27432718 = enabled
    fix 27268249 = enabled
    fix 25507796 = enabled
    fix 25507810 = enabled
    fix 25507823 = disabled
    fix 25507828 = enabled
    fix 25660695 = enabled
    fix 27311177 = enabled
    fix 24841671 = enabled
    fix 26842212 = enabled
    fix 27559630 = enabled
    fix 27436816 = enabled
    fix 23098284 = enabled
    fix 26660568 = enabled
    fix 27693205 = enabled
    fix 27096140 = disabled
    fix 27174324 = enabled
    fix 27000158 = enabled
    fix 27208525 = enabled
    fix 27745220 = enabled
    fix 26527656 = enabled
    fix 27675947 = disabled
    fix 26566785 = enabled
    fix 27175987 = enabled
    fix  8932139 = enabled
    fix 18816560 = enabled
    fix 27466597 = enabled
    fix 27210659 = enabled
    fix 27643128 = enabled
    fix 27782339 = enabled
    fix 24761824 = enabled
    fix 27634227 = enabled
    fix 26733841 = enabled
    fix 27971253 = enabled
    fix 22174392 = enabled
    fix 27730925 = enabled
    fix 22559379 = enabled
    fix 27622097 = enabled
    fix 20424684 = enabled
    fix 27593424 = enabled
    fix 28096482 = enabled
    fix 24573561 = enabled
    fix 22582700 = enabled
    fix 28201419 = enabled
    fix 26836964 = disabled
    fix 27991474 = enabled
    fix 28210382 = enabled
    fix 27500916 = enabled
    fix 28012754 = 7       
    fix 28071742 = enabled
    fix 27836278 = enabled
    fix 28256899 = enabled
    fix 28345522 = 0       
    fix 20922160 = enabled
    fix 28135957 = enabled
    fix 23058521 = enabled
    fix 28567417 = disabled
    fix 27680422 = 1       
    fix 28084251 = enabled
    fix 28660798 = enabled
    fix 27541468 = enabled
    fix 28378804 = enabled
    fix 28242450 = enabled
    fix 22569303 = enabled
    fix 28558645 = enabled
    fix 28173995 = enabled
    fix 26758837 = enabled
    fix 28725660 = enabled
    fix 28813044 = enabled
    fix 27642227 = enabled
    fix 28816113 = enabled
    fix 28072567 = enabled
    fix 24561942 = enabled
    fix 28135381 = enabled
    fix 28835937 = enabled
    fix 28606162 = disabled
    fix 28708585 = enabled
    fix 27551065 = enabled
    fix 28144569 = enabled
    fix 28985067 = enabled
    fix 27776359 = enabled
    fix 27825962 = disabled
    fix 20228093 = enabled
    fix 30751143 = disabled
    fix 28781681 = enabled
    fix 26577716 = enabled
    fix 28498976 = enabled
    fix 28965084 = enabled
    fix 28776811 = enabled
    fix 29331066 = enabled
    fix 29499077 = enabled
    fix 28522248 = 3       
    fix 29358049 = enabled
    fix 29450812 = enabled
    fix 29657973 = enabled
    fix 29665260 = enabled
    fix 29725425 = enabled
    fix 29487407 = enabled
    fix 29794416 = enabled
    fix 28414968 = 3       
    fix 29132869 = enabled
    fix 29435966 = enabled
    fix 27317825 = enabled
    fix 29302565 = enabled
    fix 27572786 = enabled
    fix 29463553 = enabled
    fix 29651517 = enabled
    fix 29937655 = enabled
    fix 29939400 = enabled
    fix 29933934 = 3       
    fix 29972495 = enabled
    fix 28602253 = enabled
    fix 29867728 = enabled
    fix 29304314 = enabled
    fix 30063629 = enabled
    fix 30207519 = enabled
    fix 28776431 = enabled
    fix 29687220 = enabled
    fix 30001331 = enabled
    fix 30228422 = enabled
    fix 30235754 = 0       
    fix 30232638 = enabled
    fix 30006705 = enabled
    fix 28242130 = enabled
    fix 30374470 = enabled
    fix 30008456 = 1       
    fix 10123661 = enabled
    fix 30028663 = 1       
    fix 30142527 = enabled
    fix 30358390 = enabled
    fix 29712727 = enabled
    fix 29385774 = enabled
    fix 29590666 = disabled
    fix 30235878 = enabled
    fix 30467743 = enabled
    fix 30486896 = enabled
    fix 30539126 = enabled
    fix 30483217 = enabled
    fix 30235691 = enabled
    fix 30652595 = enabled
    fix 30570982 = enabled
    fix 30483184 = enabled
    fix 30483151 = enabled
    fix 30347410 = enabled
    fix 29930457 = enabled
    fix 29893198 = enabled
    fix 22387320 = enabled
    fix 30751171 = enabled
    fix 30609737 = enabled
    fix 30723767 = enabled
    fix  9876287 = enabled
    fix 30564898 = enabled
    fix 30311403 = enabled
    fix 30646077 = enabled
    fix 30602828 = enabled
    fix 29653132 = disabled
    fix 30776676 = enabled
    fix 19138896 = enabled
    fix 30822446 = enabled
    fix 30470947 = enabled
    fix 30786641 = enabled
    fix 30896685 = disabled
    fix 30018126 = enabled
    fix 30902655 = enabled
    fix 30927440 = enabled
    fix 30681521 = 1       
    fix 31009032 = enabled
    fix 31014660 = enabled
    fix 30231086 = enabled
    fix 30617002 = enabled
    fix 30905358 = enabled
    fix 30222669 = enabled
    fix 31072746 = enabled
    fix 27261477 = enabled
    fix 31069997 = enabled
    fix 31077481 = enabled
    fix 30998035 = enabled
    fix 30980115 = enabled
    fix 30972817 = enabled
    fix 31001490 = enabled
    fix 30267129 = enabled
    fix 30618230 = enabled
    fix 30479981 = 1       
    fix 30717947 = enabled
    fix 30675651 = disabled
    fix 28999046 = enabled
    fix 27262721 = enabled
    fix 30249927 = enabled
    fix 26491973 = enabled
    fix 18101156 = disabled
    fix 30630477 = enabled
    fix 30568514 = enabled
    fix 30697843 = 3       
    fix 30195773 = enabled
    fix 29636078 = enabled
    fix 31191224 = enabled
    fix 31091402 = enabled
    fix 30942641 = enabled
    fix 31459242 = disabled
    fix 31134487 = enabled
    fix 31001295 = enabled
    fix 30781970 = disabled
    fix 29222233 = enabled
    fix 31475299 = enabled
    fix 31448053 = enabled
    fix 31045304 = enabled
    fix 31162457 = enabled
    fix 31360214 = enabled
    fix 31512115 = enabled
    fix 31454352 = enabled
    fix 31626438 = enabled
    fix 31444353 = 0       
    fix 28234255 = 3       
    fix 30537403 = enabled
    fix 31386820 = enabled
    fix 31579233 = enabled
    fix 30198239 = 7       
    fix 31580352 = enabled
    fix 30616738 = disabled
    fix 29773708 = disabled
    fix 27060221 = disabled
    fix 19861179 = disabled
    fix 31517502 = enabled
    fix 31266779 = enabled
    fix 31487332 = enabled
    fix 31821701 = enabled
    fix 31895670 = disabled
    fix 31670824 = disabled
    fix 29696242 = enabled
    fix 32005394 = enabled
    fix 32037237 = enabled
    fix 32075777 = disabled
    fix 31625959 = enabled
    fix 31580374 = enabled
    fix 17295505 = disabled
    fix 31668694 = enabled
    fix 32014520 = enabled
    fix 31974424 = enabled
    fix 25979242 = enabled
    fix 31945701 = disabled
    fix 30979701 = enabled
    fix 31961578 = disabled
    fix 31496840 = enabled
    fix 31143146 = enabled
    fix 31558194 = enabled
    fix 32107621 = enabled
    fix 32205825 = enabled


Query Block Registry:
SEL$3 0x79197138 (PARSER)
  SEL$9E43CB6E 0x79197138 (VIEW MERGE SEL$3; SEL$58A6D7F6; SEL$3) [FINAL]
    SEL$9E43CB6E_3 0x79197138 (OR EXPANSION SEL$9E43CB6E) [FINAL]
    SEL$9E43CB6E_2 0x79197138 (OR EXPANSION SEL$9E43CB6E) [FINAL]
    SEL$9E43CB6E_1 0x79197138 (OR EXPANSION SEL$9E43CB6E; SEL$9E43CB6E; 8 LIST) [FINAL]
    SEL$9E43CB6E_1 0x79197138 (OR EXPANSION SEL$9E43CB6E; SEL$9E43CB6E; 8 LIST) [FINAL]
SEL$2 0x758ae4e8 (PARSER)
  SEL$58A6D7F6 0x758ae4e8 (VIEW MERGE SEL$2; SEL$1; SEL$2)
    SEL$9E43CB6E 0x79197138 (VIEW MERGE SEL$3; SEL$58A6D7F6; SEL$3) [FINAL]
      ...
SEL$1 0x75bbf3b0 (PARSER)
  SEL$58A6D7F6 0x758ae4e8 (VIEW MERGE SEL$2; SEL$1; SEL$2)
    ...
digraph g{
    rankdir = TB
    "SEL$9E43CB6E_3" [peripheries=2]
    "SEL$9E43CB6E" -> "SEL$9E43CB6E_3" [label="OR EXPANSION"]
    "SEL$9E43CB6E" [peripheries=2]
    "SEL$3" -> "SEL$9E43CB6E" [label="VIEW MERGE"]
    "SEL$58A6D7F6" -> "SEL$9E43CB6E" [style=dotted]
    "SEL$9E43CB6E_2" [peripheries=2]
    "SEL$9E43CB6E" -> "SEL$9E43CB6E_2" [label="OR EXPANSION"]
    "SEL$1"
    "SEL$9E43CB6E_1" [peripheries=2]
    "SEL$9E43CB6E" -> "SEL$9E43CB6E_1" [label="OR EXPANSION"]
    "SEL$58A6D7F6"
    "SEL$2" -> "SEL$58A6D7F6" [label="VIEW MERGE"]
    "SEL$1" -> "SEL$58A6D7F6" [style=dotted]
    "SEL$2"
    "SEL$3"
    { rank = same }
    {
      rank="sink";
      rankdir = LR;
      item1 [style=invis];
      item2 [shape="plaintext" label="Participating query blocks"];
      item3 [label="&nbsp;" peripheries=2];
      item4 [shape="plaintext" label="Final query blocks"];
      item1 -> item2 [style=dotted];
      { rank=same item3 item4; }
    }
}

:
    call(in-use=436504, alloc=943648), compile(in-use=351072, alloc=455552), execution(in-use=548168, alloc=550064)

End of Optimizer State Dump
Dumping Hints
=============
  atom_hint=(@=0x756bb9d8 err=0 resol=0 used=1 token=1087 org=1 lvl=1 txt=OPT_PARAM ())
====================== END SQL Statement Dump ======================
AP: qesdpDPCSetupNextExec(enter): SQL_ID=g2uupqtwcpan6
AP: qesdpDPCSetupNextExec: Not an adaptive plan
AP: qesdpInitExecMutable(enter): SQL_ID=g2uupqtwcpan6
AP: qesdpInitExecMut (exit)
AP: qesdpSetupMutable(enter): SQL_ID=g2uupqtwcpan6
Registered qb: SEL$1 0x25bb6780 (PARSER)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$1 nbfros=1 flg=0
    fro(0): flg=5 objn=0 hint_alias="from$_subquery$_001"@"SEL$1"

Registered qb: SEL$2 0x25bb5580 (PARSER)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$2 nbfros=1 flg=0
    fro(0): flg=4 objn=0 hint_alias="KOKBF$0"@"SEL$2"

SPM: statement not found in SMB
SPM: capture of plan baseline is OFF
kkoctx(): choosing CBO since optimizer mode set to all/first_rows

**************************
Automatic degree of parallelism (AUTODOP)
**************************
Automatic degree of parallelism is disabled: instance state restriction (parallelism not supported).

PM: Considering predicate move-around in query block SEL$1 (#0)
**************************
Predicate Move-Around (PM)
**************************
OPTIMIZER INFORMATION

******************************************
----- Current SQL Statement for this session (sql_id=a1ytbhgb1a8kp) -----
select * from dbms_xplan.display()
*******************************************
Legend
The following abbreviations are used by optimizer trace.
CBQT - cost-based query transformation
JPPD - join predicate push-down
OJPPD - old-style (non-cost-based) JPPD
FPD - filter push-down
PM - predicate move-around
CVM - complex view merging
SPJ - select-project-join
SJC - set join conversion
SU - subquery unnesting
OBYE - order by elimination
OST - old style star transformation
ST - new (cbqt) star transformation
CNT - count(col) to count(*) transformation
JE - Join Elimination
JF - join factorization
CBY - connect by
SLP - select list pruning
DP - distinct placement
VT - vector transformation
AAT - Approximate Aggregate Transformation
ORE - CBQT OR-Expansion
LORE - Legacy OR-Expansion
qb - query block
LB - leaf blocks
DK - distinct keys
LB/K - average number of leaf blocks per key
DB/K - average number of data blocks per key
CLUF - clustering factor
NDV - number of distinct values
Resp - response cost
Card - cardinality
Resc - resource cost
NL - nested loops (join)
SM - sort merge (join)
HA - hash (join)
CPUSPEED - CPU Speed 
IOTFRSPEED - I/O transfer speed
IOSEEKTIM - I/O seek time
SREADTIM - average single block read time
MREADTIM - average multiblock read time
MBRC - average multiblock read count
MAXTHR - maximum I/O system throughput
SLAVETHR - average slave I/O throughput
dmeth - distribution method
  1: no partitioning required
  2: value partitioned
  4: right is random (round-robin)
  128: left is random (round-robin)
  8: broadcast right and partition left
  16: broadcast left and partition right
  32: partition left using partitioning of right
  64: partition right using partitioning of left
  256: run the join in serial
  0: invalid distribution method
sel - selectivity
ptn - partition
AP - adaptive plans
***************************************
PARAMETERS USED BY THE OPTIMIZER
********************************
  *************************************
  PARAMETERS WITH ALTERED VALUES
  ******************************
Compilation Environment Dump
_swat_ver_mv_knob                   = 0
Bug Fix Control Environment


  *************************************
  PARAMETERS WITH DEFAULT VALUES
  ******************************
Compilation Environment Dump
optimizer_mode_hinted               = false
optimizer_features_hinted           = 0.0.0
parallel_execution_enabled          = false
parallel_query_forced_dop           = 0
parallel_dml_forced_dop             = 0
parallel_ddl_forced_degree          = 0
parallel_ddl_forced_instances       = 0
_query_rewrite_fudge                = 90
optimizer_features_enable           = 21.1.0
_optimizer_search_limit             = 5
cpu_count                           = 4
active_instance_count               = 1
parallel_threads_per_cpu            = 1
hash_area_size                      = 131072
bitmap_merge_area_size              = 1048576
sort_area_size                      = 65536
sort_area_retained_size             = 0
_sort_elimination_cost_ratio        = 0
_optimizer_block_size               = 8192
_sort_multiblock_read_count         = 2
_hash_multiblock_io_count           = 0
_db_file_optimizer_read_count       = 8
_optimizer_max_permutations         = 2000
pga_aggregate_target                = 401408 KB
_pga_max_size                       = 204800 KB
_query_rewrite_maxdisjunct          = 257
_smm_auto_min_io_size               = 56 KB
_smm_auto_max_io_size               = 248 KB
_smm_min_size                       = 401 KB
_smm_max_size_static                = 80281 KB
_smm_px_max_size_static             = 200704 KB
_cpu_to_io                          = 0
_optimizer_undo_cost_change         = 21.1.0
parallel_query_mode                 = enabled
_enable_parallel_dml                = disabled
parallel_ddl_mode                   = enabled
optimizer_mode                      = all_rows
sqlstat_enabled                     = false
_optimizer_percent_parallel         = 101
_always_anti_join                   = choose
_always_semi_join                   = choose
_optimizer_mode_force               = true
_partition_view_enabled             = true
_always_star_transformation         = false
_query_rewrite_or_error             = false
_hash_join_enabled                  = true
cursor_sharing                      = exact
_b_tree_bitmap_plans                = true
star_transformation_enabled         = false
_optimizer_cost_model               = choose
_new_sort_cost_estimate             = true
_complex_view_merging               = true
_unnest_subquery                    = true
_eliminate_common_subexpr           = true
_pred_move_around                   = true
_convert_set_to_join                = false
_push_join_predicate                = true
_push_join_union_view               = true
_fast_full_scan_enabled             = true
_optim_enhance_nnull_detection      = true
_parallel_broadcast_enabled         = true
_px_broadcast_fudge_factor          = 100
_ordered_nested_loop                = true
_no_or_expansion                    = false
optimizer_index_cost_adj            = 100
optimizer_index_caching             = 0
_system_index_caching               = 0
_disable_datalayer_sampling         = false
query_rewrite_enabled               = true
query_rewrite_integrity             = enforced
_query_cost_rewrite                 = true
_query_rewrite_2                    = true
_query_rewrite_1                    = true
_query_rewrite_expression           = true
_query_rewrite_jgmigrate            = true
_query_rewrite_fpc                  = true
_query_rewrite_drj                  = false
_full_pwise_join_enabled            = true
_partial_pwise_join_enabled         = true
_left_nested_loops_random           = true
_improved_row_length_enabled        = true
_index_join_enabled                 = true
_enable_type_dep_selectivity        = true
_improved_outerjoin_card            = true
_optimizer_adjust_for_nulls         = true
_optimizer_degree                   = 0
_use_column_stats_for_function      = true
_subquery_pruning_enabled           = true
_subquery_pruning_mv_enabled        = false
_or_expand_nvl_predicate            = true
_like_with_bind_as_equality         = false
_table_scan_cost_plus_one           = true
_cost_equality_semi_join            = true
_default_non_equality_sel_check     = true
_new_initial_join_orders            = true
_oneside_colstat_for_equijoins      = true
_optim_peek_user_binds              = true
_minimal_stats_aggregation          = true
_force_temptables_for_gsets         = false
workarea_size_policy                = auto
_smm_auto_cost_enabled              = true
_gs_anti_semi_join_allowed          = true
_optim_new_default_join_sel         = true
optimizer_dynamic_sampling          = 2
_pre_rewrite_push_pred              = true
_optimizer_new_join_card_computation = true
_union_rewrite_for_gs               = yes_gset_mvs
_generalized_pruning_enabled        = true
_optim_adjust_for_part_skews        = true
_force_datefold_trunc               = false
statistics_level                    = typical
_optimizer_system_stats_usage       = true
skip_unusable_indexes               = true
_remove_aggr_subquery               = true
_optimizer_push_down_distinct       = 0
_dml_monitoring_enabled             = true
_optimizer_undo_changes             = false
_predicate_elimination_enabled      = true
_nested_loop_fudge                  = 100
_project_view_columns               = true
_local_communication_costing_enabled = true
_local_communication_ratio          = 50
_query_rewrite_vop_cleanup          = true
_slave_mapping_enabled              = true
_optimizer_cost_based_transformation = linear
_optimizer_mjc_enabled              = true
_right_outer_hash_enable            = true
_spr_push_pred_refspr               = true
_optimizer_cache_stats              = false
_optimizer_cbqt_factor              = 50
_optimizer_squ_bottomup             = true
_fic_area_size                      = 131072
_optimizer_skip_scan_enabled        = true
_optimizer_cost_filter_pred         = false
_optimizer_sortmerge_join_enabled   = true
_optimizer_join_sel_sanity_check    = true
_mmv_query_rewrite_enabled          = true
_bt_mmv_query_rewrite_enabled       = true
_add_stale_mv_to_dependency_list    = true
_distinct_view_unnesting            = false
_optimizer_dim_subq_join_sel        = true
_optimizer_disable_strans_sanity_checks = 0
_optimizer_compute_index_stats      = true
_push_join_union_view2              = true
optimizer_ignore_hints              = false
_optimizer_random_plan              = 0
_query_rewrite_setopgrw_enable      = true
_optimizer_correct_sq_selectivity   = true
_disable_function_based_index       = false
_optimizer_join_order_control       = 3
_optimizer_cartesian_enabled        = true
_optimizer_starplan_enabled         = true
_extended_pruning_enabled           = true
_optimizer_push_pred_cost_based     = true
_optimizer_null_aware_antijoin      = true
_optimizer_extend_jppd_view_types   = true
_sql_model_unfold_forloops          = run_time
_enable_dml_lock_escalation         = false
_bloom_filter_enabled               = true
_update_bji_ipdml_enabled           = 0
_optimizer_extended_cursor_sharing  = udo
_dm_max_shared_pool_pct             = 5
_optimizer_cost_hjsmj_multimatch    = true
_optimizer_transitivity_retain      = true
_px_pwg_enabled                     = true
optimizer_secure_view_merging       = true
_optimizer_join_elimination_enabled = true
flashback_table_rpi                 = non_fbt
_optimizer_cbqt_no_size_restriction = true
_optimizer_enhanced_filter_push     = true
_optimizer_filter_pred_pullup       = true
_rowsrc_trace_level                 = 0
_simple_view_merging                = true
_optimizer_rownum_pred_based_fkr    = true
_optimizer_better_inlist_costing    = all
_optimizer_self_induced_cache_cost  = false
_optimizer_min_cache_blocks         = 10
_optimizer_or_expansion             = depth
_optimizer_order_by_elimination_enabled = true
_optimizer_outer_to_anti_enabled    = true
_selfjoin_mv_duplicates             = true
_dimension_skip_null                = true
_force_rewrite_enable               = false
_optimizer_star_tran_in_with_clause = true
_optimizer_complex_pred_selectivity = true
_optimizer_connect_by_cost_based    = true
_gby_hash_aggregation_enabled       = true
_globalindex_pnum_filter_enabled    = true
_px_minus_intersect                 = true
_fix_control_key                    = 0
_force_slave_mapping_intra_part_loads = false
_force_tmp_segment_loads            = false
_query_mmvrewrite_maxpreds          = 10
_query_mmvrewrite_maxintervals      = 5
_query_mmvrewrite_maxinlists        = 5
_query_mmvrewrite_maxdmaps          = 10
_query_mmvrewrite_maxcmaps          = 20
_query_mmvrewrite_maxregperm        = 512
_query_mmvrewrite_maxqryinlistvals  = 500
_disable_parallel_conventional_load = false
_trace_virtual_columns              = false
_replace_virtual_columns            = true
_virtual_column_overload_allowed    = true
_kdt_buffering                      = true
_first_k_rows_dynamic_proration     = true
_optimizer_sortmerge_join_inequality = true
_optimizer_aw_stats_enabled         = true
_bloom_pruning_enabled              = true
_obsolete_result_cache_mode         = MANUAL
_px_ual_serial_input                = true
_optimizer_skip_scan_guess          = false
_enable_row_shipping                = true
_row_shipping_threshold             = 100
_row_shipping_explain               = false
transaction_isolation_level         = read_commited
_optimizer_distinct_elimination     = true
_optimizer_multi_level_push_pred    = true
_optimizer_group_by_placement       = true
_optimizer_rownum_bind_default      = 10
_enable_query_rewrite_on_remote_objs = true
_optimizer_extended_cursor_sharing_rel = simple
_optimizer_adaptive_cursor_sharing  = true
_direct_path_insert_features        = 0
_optimizer_improve_selectivity      = true
optimizer_use_pending_statistics    = false
_optimizer_enable_density_improvements = true
_optimizer_aw_join_push_enabled     = true
_optimizer_connect_by_combine_sw    = true
_enable_pmo_ctas                    = 0
_optimizer_native_full_outer_join   = force
_bloom_predicate_enabled            = true
_optimizer_enable_extended_stats    = true
_is_lock_table_for_ddl_wait_lock    = 0
_pivot_implementation_method        = choose
optimizer_capture_sql_plan_baselines = false
optimizer_use_sql_plan_baselines    = true
_optimizer_star_trans_min_cost      = 0
_optimizer_star_trans_min_ratio     = 0
_with_subquery                      = OPTIMIZER
_optimizer_fkr_index_cost_bias      = 10
_optimizer_use_subheap              = true
parallel_degree_policy              = manual
parallel_degree                     = 0
parallel_min_time_threshold         = 10
_parallel_time_unit                 = 10
_optimizer_or_expansion_subheap     = true
_optimizer_free_transformation_heap = true
_optimizer_reuse_cost_annotations   = true
_result_cache_auto_size_threshold   = 100
_result_cache_auto_time_threshold   = 1000
_optimizer_nested_rollup_for_gset   = 100
_nlj_batching_enabled               = 1
parallel_query_default_dop          = 0
is_recur_flags                      = 0
optimizer_use_invisible_indexes     = false
flashback_data_archive_internal_cursor = 0
_optimizer_extended_stats_usage_control = 192
_parallel_syspls_obey_force         = true
cell_offload_processing             = true
_rdbms_internal_fplib_enabled       = false
db_file_multiblock_read_count       = 58
_bloom_folding_enabled              = true
_mv_generalized_oj_refresh_opt      = true
cell_offload_compaction             = ADAPTIVE
cell_offload_plan_display           = AUTO
_bloom_predicate_offload            = true
_bloom_filter_size                  = 0
_bloom_pushing_max                  = 512
parallel_degree_limit               = 65535
parallel_force_local                = false
parallel_max_degree                 = 4
total_cpu_count                     = 4
_optimizer_coalesce_subqueries      = true
_optimizer_fast_pred_transitivity   = true
_optimizer_fast_access_pred_analysis = true
_optimizer_unnest_disjunctive_subq  = true
_optimizer_unnest_corr_set_subq     = true
_optimizer_distinct_agg_transform   = true
_aggregation_optimization_settings  = 0
_optimizer_connect_by_elim_dups     = true
_optimizer_eliminate_filtering_join = true
_connect_by_use_union_all           = true
dst_upgrade_insert_conv             = true
advanced_queuing_internal_cursor    = 0
_optimizer_unnest_all_subqueries    = true
parallel_autodop                    = 0
parallel_ddldml                     = 0
_parallel_cluster_cache_policy      = adaptive
_parallel_scalability               = 50
iot_internal_cursor                 = 0
_optimizer_instance_count           = 0
_optimizer_connect_by_cb_whr_only   = false
_suppress_scn_chk_for_cqn           = nosuppress_1466
_optimizer_join_factorization       = true
_optimizer_use_cbqt_star_transformation = true
_optimizer_table_expansion          = true
_and_pruning_enabled                = true
_deferred_constant_folding_mode     = DEFAULT
_optimizer_distinct_placement       = true
partition_pruning_internal_cursor   = 0
parallel_hinted                     = none
_sql_compatibility                  = 0
_optimizer_use_feedback             = true
_optimizer_try_st_before_jppd       = true
_dml_frequency_tracking             = false
_optimizer_interleave_jppd          = true
kkb_drop_empty_segments             = 0
_px_partition_scan_enabled          = true
_px_partition_scan_threshold        = 64
_optimizer_false_filter_pred_pullup = true
_bloom_minmax_enabled               = true
only_move_row                       = 0
_optimizer_enable_table_lookup_by_nl = true
parallel_execution_message_size     = 16384
_px_loc_msg_cost                    = 1000
_px_net_msg_cost                    = 10000
_optimizer_generate_transitive_pred = true
_optimizer_cube_join_enabled        = true
_optimizer_filter_pushdown          = true
deferred_segment_creation           = true
_optimizer_outer_join_to_inner      = true
_allow_level_without_connect_by     = false
_max_rwgs_groupings                 = 8192
_optimizer_hybrid_fpwj_enabled      = true
_px_replication_enabled             = true
ilm_filter                          = 0
_optimizer_partial_join_eval        = true
_px_concurrent                      = true
_px_object_sampling_enabled         = true
_px_back_to_parallel                = OFF
_optimizer_unnest_scalar_sq         = true
_optimizer_full_outer_join_to_outer = true
_px_filter_parallelized             = true
_px_filter_skew_handling            = true
_zonemap_use_enabled                = true
_zonemap_control                    = 0
_optimizer_multi_table_outerjoin    = true
_px_groupby_pushdown                = force
_partition_advisor_srs_active       = true
_optimizer_ansi_join_lateral_enhance = true
_px_parallelize_expression          = true
_fast_index_maintenance             = true
_optimizer_ansi_rearchitecture      = true
_optimizer_gather_stats_on_load     = true
ilm_access_tracking                 = 0
ilm_dml_timestamp                   = 0
_px_adaptive_dist_method            = choose
_px_adaptive_dist_method_threshold  = 0
_optimizer_batch_table_access_by_rowid = true
optimizer_adaptive_reporting_only   = false
_optimizer_ads_max_table_count      = 0
_optimizer_ads_time_limit           = 0
_optimizer_ads_use_result_cache     = true
_px_wif_dfo_declumping              = choose
_px_wif_extend_distribution_keys    = true
_px_join_skew_handling              = true
_px_join_skew_ratio                 = 10
_px_join_skew_minfreq               = 30
CLI_internal_cursor                 = 0
_parallel_fault_tolerance_enabled   = false
_parallel_fault_tolerance_threshold = 3
_px_partial_rollup_pushdown         = adaptive
_px_single_server_enabled           = true
_optimizer_dsdir_usage_control      = 0
_px_cpu_autodop_enabled             = true
_px_cpu_process_bandwidth           = 200
_sql_hvshare_threshold              = 0
_px_tq_rowhvs                       = true
_optimizer_use_gtt_session_stats    = true
_optimizer_proc_rate_level          = basic
_px_hybrid_TSM_HWMB_load            = true
_optimizer_use_histograms           = true
PMO_altidx_rebuild                  = 0
_cell_offload_expressions           = true
_cell_materialize_virtual_columns   = true
_cell_materialize_all_expressions   = false
_rowsets_enabled                    = true
_rowsets_target_maxsize             = 524288
_rowsets_max_rows                   = 256
_use_hidden_partitions              = 0
_px_load_monitor_threshold          = 10000
_px_numa_support_enabled            = false
total_processor_group_count         = 1
_adaptive_window_consolidator_enabled = true
_optimizer_strans_adaptive_pruning  = true
_bloom_rm_filter                    = false
_optimizer_null_accepting_semijoin  = true
_long_varchar_allow_IOT             = 0
_parallel_ctas_enabled              = true
_cell_offload_complex_processing    = true
_optimizer_performance_feedback     = off
_optimizer_proc_rate_source         = DEFAULT
_hashops_prefetch_size              = 4
_cell_offload_sys_context           = true
_multi_commit_global_index_maint    = 0
_stat_aggs_one_pass_algorithm       = false
_dbg_scan                           = 0
_oltp_comp_dbg_scan                 = 0
_arch_comp_dbg_scan                 = 0
_optimizer_gather_feedback          = true
_upddel_dba_hash_mask_bits          = 0
_px_pwmr_enabled                    = true
_px_cdb_view_enabled                = true
_bloom_sm_enabled                   = true
_optimizer_cluster_by_rowid         = true
_optimizer_cluster_by_rowid_control = 129
_partition_cdb_view_enabled         = true
_common_data_view_enabled           = true
_pred_push_cdb_view_enabled         = true
_rowsets_cdb_view_enabled           = true
_distinct_agg_optimization_gsets    = choose
_array_cdb_view_enabled             = true
_optimizer_adaptive_plan_control    = 0
_optimizer_adaptive_random_seed     = 0
_optimizer_cbqt_or_expansion        = on
_inmemory_dbg_scan                  = 0
_gby_vector_aggregation_enabled     = true
_optimizer_vector_transformation    = true
_optimizer_vector_fact_dim_ratio    = 10
_key_vector_max_size                = 0
_key_vector_predicate_enabled       = true
_key_vector_predicate_threshold     = 0
_vector_operations_control          = 0
_optimizer_vector_min_fact_rows     = 10000000
parallel_dblink                     = 0
_px_scalable_invdist                = true
_key_vector_offload                 = predicate
_optimizer_aggr_groupby_elim        = true
_optimizer_reduce_groupby_key       = true
_vector_serialize_temp_threshold    = 1000
_always_vector_transformation       = false
_optimizer_cluster_by_rowid_batched = true
_object_link_fixed_enabled          = true
optimizer_inmemory_aware            = true
_optimizer_inmemory_table_expansion = true
_optimizer_inmemory_gen_pushable_preds = true
_optimizer_inmemory_autodop         = true
_optimizer_inmemory_access_path     = true
_optimizer_inmemory_bloom_filter    = true
_parallel_inmemory_min_time_threshold = 1
_parallel_inmemory_time_unit        = 1
_rc_sys_obj_enabled                 = true
_optimizer_nlj_hj_adaptive_join     = true
_indexable_con_id                   = true
_bloom_serial_filter                = on
inmemory_force                      = default
inmemory_query                      = enable
_inmemory_query_scan                = true
_inmemory_query_fetch_by_rowid      = false
_inmemory_pruning                   = on
_px_autodop_pq_overhead             = true
_px_external_table_default_stats    = true
_optimizer_key_vector_aggr_factor   = 75
_optimizer_vector_cost_adj          = 100
_cdb_cross_container                = 65535
_cdb_view_parallel_degree           = 65535
_optimizer_hll_entry                = 4096
_px_cdb_view_join_enabled           = true
inmemory_size                       = 0
_external_table_smart_scan          = hadoop_only
_optimizer_inmemory_minmax_pruning  = true
_approx_cnt_distinct_gby_pushdown   = choose
_approx_cnt_distinct_optimization   = 0
_optimizer_ads_use_partial_results  = true
_query_execution_time_limit         = 0
_optimizer_inmemory_cluster_aware_dop = true
_optimizer_db_blocks_buffers        = 0 KB
_query_rewrite_use_on_query_computation = true
_px_scalable_invdist_mcol           = true
_optimizer_bushy_join               = off
_optimizer_bushy_fact_dim_ratio     = 20
_optimizer_bushy_fact_min_size      = 100000
_optimizer_bushy_cost_factor        = 100
_rmt_for_table_redef_enabled        = true
_optimizer_eliminate_subquery       = true
_sqlexec_cache_aware_hash_join_enabled = true
_zonemap_usage_tracking             = true
_sqlexec_hash_based_distagg_enabled = true
_sqlexec_disable_hash_based_distagg_tiv = false
_sqlexec_hash_based_distagg_ssf_enabled = true
_sqlexec_distagg_optimization_settings = 0
approx_for_aggregation              = false
approx_for_count_distinct           = false
_optimizer_union_all_gsets          = true
_rowsets_use_encoding               = true
_rowsets_max_enc_rows               = 64
_optimizer_enhanced_join_elimination = true
_optimizer_multicol_join_elimination = true
_key_vector_create_pushdown_threshold = 20000
_optimizer_enable_plsql_stats       = true
_recursive_with_parallel            = true
_recursive_with_branch_iterations   = 7
_px_dist_agg_partial_rollup_pushdown = adaptive
_px_adaptive_dist_bypass_enabled    = true
_enable_view_pdb                    = true
_optimizer_key_vector_pruning_enabled = true
_pwise_distinct_enabled             = true
_recursive_with_using_temp_table    = false
_partition_read_only                = true
_sql_alias_scope                    = true
_cdb_view_no_skip_migrate           = false
_approx_perc_sampling_err_rate      = 2
_sqlexec_encoding_aware_hj_enabled  = true
rim_node_exist                      = 0
_enable_containers_subquery         = true
_force_containers_subquery          = false
_cell_offload_vector_groupby        = true
_vector_encoding_mode               = manual
_ds_xt_split_count                  = 1
_ds_sampling_method                 = PROGRESSIVE
_optimizer_ads_use_spd_cache        = true
_optimizer_use_table_scanrate       = HADOOP_ONLY
_optimizer_use_xt_rowid             = true
_xt_sampling_scan_granules          = on
_recursive_with_control             = 0
_sqlexec_use_rwo_aware_expr_analysis = true
_optimizer_band_join_aware          = true
_optimizer_vector_base_dim_fact_factor = 200
approx_for_percentile               = none
_approx_percentile_optimization     = 0
_projection_pushdown                = true
_px_object_sampling                 = 200
_optimizer_adaptive_plans_continuous = false
_optimizer_adaptive_plans_iterative = false
_ds_enable_view_sampling            = true
_optimizer_generate_ptf_implied_preds = true
_optimizer_inmemory_use_stored_stats = AUTO
_cdb_special_old_xplan              = true
uniaud_internal_cursor              = 0
_kd_dbg_control                     = 0
_mv_access_compute_fresh_data       = on
_bloom_filter_ratio                 = 35
_optimizer_control_shard_qry_processing = 65472
containers_parallel_degree          = 65535
sql_from_coordinator                = 0
_xt_sampling_scan_granules_min_granules = 1
_in_memory_cdt                      = LIMITED
_in_memory_cdt_maxpx                = 4
_px_partition_load_dist_threshold   = 64
_px_adaptive_dist_bypass_optimization = 1
_optimizer_interleave_or_expansion  = true
optimizer_adaptive_plans            = true
optimizer_adaptive_statistics       = false
_optimizer_use_feedback_for_join    = false
_optimizer_ads_for_pq               = false
_px_join_skewed_values_count        = 0
optimizer_ignore_parallel_hints     = false
parallel_min_degree                 = 1
_px_nlj_bcast_rr_threshold          = 10
_optimizer_gather_stats_on_load_all = false
_optimizer_gather_stats_on_load_hist = false
_optimizer_allow_all_access_paths   = true
_key_vector_double_enabled          = true
_key_vector_timestamp_enabled       = true
_optimizer_answering_query_using_stats = false
_disable_dblink_optim               = true
_cell_offload_hybrid_processing     = true
_read_optimized_table_lookup        = true
_optimizer_key_vector_payload       = true
_optimizer_vector_fact_payload_ratio = 20
_bloom_pruning_setops_enabled       = true
_bloom_filter_setops_enabled        = true
_key_vector_shared_dgk_ht           = true
_px_pwise_wif_enabled               = true
_sqlexec_reorder_wif_enabled        = true
_px_partition_skew_threshold        = 80
_sqlexec_pwiseops_with_sqlfuncs_enabled = true
_sqlexec_pwiseops_with_binds_enabled = true
_px_shared_hash_join                = false
_px_reuse_server_groups             = multi
_px_join_skew_null_handling         = true
_px_join_skew_use_histogram         = true
_px_join_skew_sampling_time_limit   = 50
_px_join_skew_sampling_percent      = 0
_cdb_view_no_skip_restricted        = false
_inmemory_external_table            = true
_sqlexec_use_kgghash3               = true
_cell_offload_vector_groupby_force  = false
_hcs_enable_pred_push               = true
parallel_dop_doubled                = 0
_optimizer_gather_stats_on_load_index = true
_con_map_sql_enforcement            = true
_uniq_cons_sql_enforcement          = true
_ref_cons_sql_enforcement           = true
_is_lock_table_for_split_merge      = 0
_cell_offload_vector_groupby_fact_key = true
_px_scalable_gby_invdist            = true
_px_dynamic_granules                = true
_px_dynamic_granules_adjust         = 10
_px_hybrid_partition_execution_enabled = true
_px_hybrid_partition_skew_threshold = 10
_optimizer_key_vector_use_max_size  = 1048576
_cell_offload_vector_groupby_withnojoin = true
_key_vector_join_pushdown_enabled   = true
_cell_offload_grand_total           = true
_optimizer_key_vector_payload_dim_aggs = true
_optimizer_use_auto_indexes         = AUTO
_optimizer_use_stats_on_conventional_dml = false
_optimizer_gather_stats_on_conventional_dml = false
_optimizer_use_stats_on_conventional_config = 0
_skip_pset_col_chk                  = 0
_nls_binary                         = true
optimizer_use_sql_quarantine        = true
_optimizer_gather_stats_on_conventional_config = 0
_nls_forced_binary                  = 0
_utl32k_mv_query                    = false
optimizer_session_type              = NORMAL
_cell_offload_vector_groupby_external = true
_optimizer_wc_filter_pushdown       = true
BlockChain_ledger_infrastructure    = 0
_cell_metadata_compression          = AUTO
_sqlexec_use_delayed_unpacking      = true
_zonemap_refresh_within_load        = true
_px_parallelize_non_native_datatype = true
_inmemory_hpk4sql_flags             = 0
_sqlexec_hash_based_distagg_ser_civ_enabled = true
_optimizer_use_stats_models         = false
_cross_con_remove_pushed_preds      = false
_optimizer_exists_to_any_rewrite    = true
_update_global_index_from_part_exchange = 0
optimizer_cross_shard_resiliency    = false
shard_queries_restricted_by_key     = false
valid_shard_session_key             = 0
result_cache_mode                   = MANUAL
_bigdata_offload_flag               = false
_optimizer_nested_loop_join         = on
_groupby_orderby_combine            = 5000
_px_extended_join_skew_handling     = true
_autoptn_costing                    = false
translate_table_name_hash           = 0
_enable_columnar_cache              = 1
_px_adaptive_dist_nij_enabled       = on
_sqlexec_hash_rollup_enabled        = true
_sqlexec_hash_based_set_operation_enabled = true
container_data                      = ALL
_mv_logical_partition_rewrite_enabled = false

  ***************************************
  PARAMETERS IN OPT_PARAM HINT
  ****************************
***************************************
Column Usage Monitoring is ON: tracking level = 53
***************************************

Considering Query Transformations on query block SEL$1 (#0)
**************************
Query transformations (QT)
**************************
CBQT: copy not possible on query block SEL$1 (#0) because TABLE expression
CBQT bypassed for query block SEL$1 (#0): Cannot copy query block.
CBQT: Validity checks failed for a1ytbhgb1a8kp.
CSE: Considering common sub-expression elimination in query block SEL$1 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE: Considering common sub-expression elimination in query block SEL$2 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$2 (#0).
CSE:     CSE not performed on query block SEL$1 (#0).
OBYE:   Considering Order-by Elimination from view SEL$1 (#0)
***************************
Order-by elimination (OBYE)
***************************
OBYE:     OBYE bypassed: no order by to eliminate.
CVM: Considering view merge in query block SEL$1 (#0)
OJE: Begin: find best directive for query block SEL$1 (#0)
OJE: End: finding best directive for query block SEL$1 (#0)
CVM:   Checking validity of merging in query block SEL$2 (#0)
CVM: Considering view merge in query block SEL$2 (#0)
OJE: Begin: find best directive for query block SEL$2 (#0)
OJE: End: finding best directive for query block SEL$2 (#0)
CVM:   Merging SPJ view SEL$2 (#0) into SEL$1 (#0)
Registered qb: SEL$F5BB74E1 0x25bb6780 (VIEW MERGE SEL$1; SEL$2; SEL$1)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$F5BB74E1 nbfros=1 flg=0
    fro(0): flg=0 objn=0 hint_alias="KOKBF$0"@"SEL$2"

OJE: Begin: find best directive for query block SEL$F5BB74E1 (#0)
OJE: End: finding best directive for query block SEL$F5BB74E1 (#0)
query block SEL$1 transformed to SEL$F5BB74E1 (#0)
Considering Query Transformations on query block SEL$F5BB74E1 (#0)
**************************
Query transformations (QT)
**************************
CBQT: copy not possible on query block SEL$F5BB74E1 (#0) because nested table
CBQT bypassed for query block SEL$F5BB74E1 (#0): Cannot copy query block.
CBQT: Validity checks failed for a1ytbhgb1a8kp.
CSE: Considering common sub-expression elimination in query block SEL$F5BB74E1 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$F5BB74E1 (#0).
AAT:   Considering Approximate Aggregate Transformation on query block SEL$F5BB74E1 (#0) 
*******************************************
Approximate Aggregate Transformation (AAT) 
*******************************************
AAT: no exact aggregates transformed
SQE: Trying SQ elimination.
SU: Considering subquery unnesting in query block SEL$F5BB74E1 (#0)
********************
Subquery Unnest (SU)
********************
SU: Considering bottom-up subquery unnesting
SJC: Considering set-join conversion in query block SEL$F5BB74E1 (#0)
*************************
Set-Join Conversion (SJC)
*************************
SJC: not performed
DCL: Checking validity of group-by elimination SEL$F5BB74E1 (#0)
DCL: Result of group-by elimination: Invalid
PM: Considering predicate move-around in query block SEL$F5BB74E1 (#0)
**************************
Predicate Move-Around (PM)
**************************
PM:     PM bypassed: Outer query contains no views.
PM:     PM bypassed: Outer query contains no views.
isReduceGrByValid:   Group By Validation (Failed).
isReduceGrByValid:   Group By Validation (Failed).
WCFPD: Considering simple filter push (pre rewrite) in query block SEL$F5BB74E1 (#0)
WCFPD:  Current where clause predicates  ?? 

SQT:   Considering Statistic-based Query Transformation from query block SEL$F5BB74E1 (#0)
***************************
Statistic-based Query Transformation (SQT)
***************************
SQT:     SQT bypassed: Disabled by parameter.
query block SEL$F5BB74E1 (#0) unchanged
FPD: Considering simple filter push in query block SEL$F5BB74E1 (#0)
 ?? 
apadrv-start sqlid=11599913110455263829
CSE: Considering common sub-expression elimination in query block SEL$F5BB74E1 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$F5BB74E1 (#0).
  :
    call(in-use=10664, alloc=390936), compile(in-use=78976, alloc=80584), execution(in-use=13464, alloc=16176)

*******************************************
Peeked values of the binds in SQL statement
*******************************************


=====================================
SPD: BEGIN context at statement level
=====================================
Stmt: ******* UNPARSED QUERY IS *******
SELECT VALUE(KOKBF$0) "PLAN_TABLE_OUTPUT" FROM TABLE("SYS"."DBMS_XPLAN"."DISPLAY"()) "KOKBF$0"
Objects referenced in the statement
Objects in the hash table
Return code in qosdInitDirCtx: ENBLD
===================================
SPD: END context at statement level
===================================
Final query after transformations:******* UNPARSED QUERY IS *******
SELECT VALUE(KOKBF$0) "PLAN_TABLE_OUTPUT" FROM TABLE("SYS"."DBMS_XPLAN"."DISPLAY"()) "KOKBF$0"
kkoqbc: optimizing query block SEL$F5BB74E1 (#0)
        
        :
    call(in-use=10664, alloc=390936), compile(in-use=88760, alloc=88936), execution(in-use=13464, alloc=16176)

kkoqbc-subheap (create addr=0x7fd925bb4390)
****************
QUERY BLOCK TEXT
****************
select * from dbms_xplan.display()
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$F5BB74E1 nbfros=1 flg=0
  fro(0): flg=0 objn=0 hint_alias="KOKBF$0"@"SEL$2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 3072 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: KOKBF$0  Alias: KOKBF$0  (NOT ANALYZED)
  #Rows: 8168  SSZ: 0  LGR: 0  #Blks:  100  AvgRowLen:  100.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 0
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
try to generate single-table filter predicates from ORs for query block SEL$F5BB74E1 (#0)
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$F5BB74E1 (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for KOKBF$0
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for KOKBF$0[KOKBF$0] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  No statistics type defined for function DBMS_XPLAN
  Table: KOKBF$0  Alias: KOKBF$0
    Card: Original: 8168.000000  Rounded: 8168  Computed: 8168.000000  Non Adjusted: 8168.000000
  Scan IO  Cost (Disk) =   29.000000
  Scan CPU Cost (Disk) =   1937344.000000
  Total Scan IO  Cost  =   29.000000 (scan (Disk))
                       =   29.000000
  Total Scan CPU  Cost =   1937344.000000 (scan (Disk))
                       =   1937344.000000
  Access Path: TableScan
    Cost:  29.052547  Resp: 29.052547  Degree: 0
      Cost_io: 29.000000  Cost_cpu: 1937344
      Resp_io: 29.000000  Resp_cpu: 1937344
  Best:: AccessPath: TableScan
         Cost: 29.052547  Degree: 1  Resp: 29.052547  Card: 8168.000000  Bytes: 0.000000

  No statistics type defined for function DBMS_XPLAN
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB has object SEL$F5BB74E1 (#0)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  KOKBF$0[KOKBF$0]#0
***********************
Best so far:  Table#: 0  cost: 29.052547  card: 8168.000000  bytes: 16336.000000
***********************
(newjo-stop-1) k:0, spcnt:0, perm:1, maxperm:2000

*********************************
Number of join permutations tried: 1
*********************************
LORE: Trying or-Expansion on query block SEL$F5BB74E1 (#0)
Transfer Optimizer annotations for query block SEL$F5BB74E1 (#0)
AP: Checking validity for query block SEL$F5BB74E1, sqlid=a1ytbhgb1a8kp
AP: Adaptive joins bypassed for query block SEL$F5BB74E1 due to object or XML query
AutoDOP: Consider caching for KOKBF$0[KOKBF$0](obj#0) 
cost:29.052547 blkSize:8192 objSize:100.00 marObjSize:95.00 bufSize:27412.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible for first input in join order
Transfer optimizer annotations for KOKBF$0[KOKBF$0]
Final cost for query block SEL$F5BB74E1 (#0) - All Rows Plan:
  Best join order: 1
  Cost: 29.052547  Degree: 1  Card: 8168.000000  Bytes: 16336.000000
  Resc: 29.052547  Resc_io: 29.000000  Resc_cpu: 1937344
  Resp: 29.052547  Resp_io: 29.000000  Resc_cpu: 1937344
kkoqbc-subheap (delete addr=0x7fd925bb4390, in-use=24752, alloc=32848)
kkoqbc-end:
        :
    call(in-use=16112, alloc=390936), compile(in-use=90688, alloc=93080), execution(in-use=13464, alloc=16176)

kkoqbc: finish optimizing query block SEL$F5BB74E1 (#0)
CBRID: KOKBF$0 @ SEL$F5BB74E1 - no blocking operation found
apadrv-end
          :
    call(in-use=16112, alloc=390936), compile(in-use=92096, alloc=93080), execution(in-use=13464, alloc=16176)


kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=1(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=1(ms)
AP: qesdpResolveSlaveSameAsQC(enter): SQL_ID=
AP: qesdpResolveSlaveSameAsQC - NOT AQP
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=1(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=1(ms)
Starting SQL statement dump

user_id=108 user_name=PDBADMIN module=SQLcl action=
sql_id=a1ytbhgb1a8kp plan_hash_value=2137789089(7f6c12a1) problem_type=3 command_type=3
----- Current SQL Statement for this session (sql_id=a1ytbhgb1a8kp) -----
select * from dbms_xplan.display()
sql_text_length=35
sql=select * from dbms_xplan.display()
----- Explain Plan Dump -----
----- Plan Table -----
 
============
Plan Table
============
-----------------------------------------------------+-----------------------------------+
| Id  | Operation                          | Name    | Rows  | Bytes | Cost  | Time      |
-----------------------------------------------------+-----------------------------------+
| 0   | SELECT STATEMENT                   |         |       |       |    29 |           |
| 1   |  COLLECTION ITERATOR PICKLER FETCH | DISPLAY |  8168 |   16K |    29 |  00:00:01 |
-----------------------------------------------------+-----------------------------------+
Query Block Name / Object Alias (identified by operation id):
-------------------------------------------------------------
 1 - SEL$F5BB74E1         / "KOKBF$0"@"SEL$2"
-------------------------------------------------------------
Predicate Information:
----------------------
 
Content of other_xml column
===========================
  has_plsql      : yes
  db_version     : 21.0.0.0
  parse_schema   : PDBADMIN
  plan_hash_full : 3745920544
  plan_hash      : 2137789089
  plan_hash_2    : 3745920544
-----------------
Optimizer Metrics
-----------------
<stats type="compilation"><stat name="bg">2</stat></stats>
---------------------
QUERY BLOCK REGISTRY
---------------------
<qb_registry><q o="18" f="y" h="y"><n><![CDATA[SEL$F5BB74E1]]></n><p><![CDATA[SEL$1]]></p><i><o><t>VW</t><v><![CDATA[SEL$2]]></v></o></i><f><h><t><![CDATA[KOKBF$0]]></t><s><![CDATA[SEL$2]]></s></h></f></q><q o="2"><n><![CDATA[SEL$1]]></n><f><h><t><![CDATA[from$_subquery$_001]]></t><s><![CDATA[SEL$1]]></s></h></f></q><q o="2"><n><![CDATA[SEL$2]]></n><f><h><t><![CDATA[KOKBF$0]]></t><s><![CDATA[SEL$2]]></s></h></f></q></qb_registry>
  Outline Data:
  /*+
    BEGIN_OUTLINE_DATA
      IGNORE_OPTIM_EMBEDDED_HINTS
      OPTIMIZER_FEATURES_ENABLE('21.1.0')
      DB_VERSION('21.1.0')
      ALL_ROWS
      OUTLINE_LEAF(@"SEL$F5BB74E1")
      MERGE(@"SEL$2" >"SEL$1")
      OUTLINE(@"SEL$1")
      OUTLINE(@"SEL$2")
      FULL(@"SEL$F5BB74E1" "KOKBF$0"@"SEL$2")
    END_OUTLINE_DATA
  */
 
Optimizer state dump:
Compilation Environment Dump
optimizer_mode_hinted               = false
optimizer_features_hinted           = 0.0.0
parallel_execution_enabled          = false
parallel_query_forced_dop           = 0
parallel_dml_forced_dop             = 0
parallel_ddl_forced_degree          = 0
parallel_ddl_forced_instances       = 0
_query_rewrite_fudge                = 90
optimizer_features_enable           = 21.1.0
_optimizer_search_limit             = 5
cpu_count                           = 4
active_instance_count               = 1
parallel_threads_per_cpu            = 1
hash_area_size                      = 131072
bitmap_merge_area_size              = 1048576
sort_area_size                      = 65536
sort_area_retained_size             = 0
_sort_elimination_cost_ratio        = 0
_optimizer_block_size               = 8192
_sort_multiblock_read_count         = 2
_hash_multiblock_io_count           = 0
_db_file_optimizer_read_count       = 8
_optimizer_max_permutations         = 2000
pga_aggregate_target                = 401408 KB
_pga_max_size                       = 204800 KB
_query_rewrite_maxdisjunct          = 257
_smm_auto_min_io_size               = 56 KB
_smm_auto_max_io_size               = 248 KB
_smm_min_size                       = 401 KB
_smm_max_size_static                = 80281 KB
_smm_px_max_size_static             = 200704 KB
_cpu_to_io                          = 0
_optimizer_undo_cost_change         = 21.1.0
parallel_query_mode                 = enabled
_enable_parallel_dml                = disabled
parallel_ddl_mode                   = enabled
optimizer_mode                      = all_rows
sqlstat_enabled                     = false
_optimizer_percent_parallel         = 101
_always_anti_join                   = choose
_always_semi_join                   = choose
_optimizer_mode_force               = true
_partition_view_enabled             = true
_always_star_transformation         = false
_query_rewrite_or_error             = false
_hash_join_enabled                  = true
cursor_sharing                      = exact
_b_tree_bitmap_plans                = true
star_transformation_enabled         = false
_optimizer_cost_model               = choose
_new_sort_cost_estimate             = true
_complex_view_merging               = true
_unnest_subquery                    = true
_eliminate_common_subexpr           = true
_pred_move_around                   = true
_convert_set_to_join                = false
_push_join_predicate                = true
_push_join_union_view               = true
_fast_full_scan_enabled             = true
_optim_enhance_nnull_detection      = true
_parallel_broadcast_enabled         = true
_px_broadcast_fudge_factor          = 100
_ordered_nested_loop                = true
_no_or_expansion                    = false
optimizer_index_cost_adj            = 100
optimizer_index_caching             = 0
_system_index_caching               = 0
_disable_datalayer_sampling         = false
query_rewrite_enabled               = true
query_rewrite_integrity             = enforced
_query_cost_rewrite                 = true
_query_rewrite_2                    = true
_query_rewrite_1                    = true
_query_rewrite_expression           = true
_query_rewrite_jgmigrate            = true
_query_rewrite_fpc                  = true
_query_rewrite_drj                  = false
_full_pwise_join_enabled            = true
_partial_pwise_join_enabled         = true
_left_nested_loops_random           = true
_improved_row_length_enabled        = true
_index_join_enabled                 = true
_enable_type_dep_selectivity        = true
_improved_outerjoin_card            = true
_optimizer_adjust_for_nulls         = true
_optimizer_degree                   = 0
_use_column_stats_for_function      = true
_subquery_pruning_enabled           = true
_subquery_pruning_mv_enabled        = false
_or_expand_nvl_predicate            = true
_like_with_bind_as_equality         = false
_table_scan_cost_plus_one           = true
_cost_equality_semi_join            = true
_default_non_equality_sel_check     = true
_new_initial_join_orders            = true
_oneside_colstat_for_equijoins      = true
_optim_peek_user_binds              = true
_minimal_stats_aggregation          = true
_force_temptables_for_gsets         = false
workarea_size_policy                = auto
_smm_auto_cost_enabled              = true
_gs_anti_semi_join_allowed          = true
_optim_new_default_join_sel         = true
optimizer_dynamic_sampling          = 2
_pre_rewrite_push_pred              = true
_optimizer_new_join_card_computation = true
_union_rewrite_for_gs               = yes_gset_mvs
_generalized_pruning_enabled        = true
_optim_adjust_for_part_skews        = true
_force_datefold_trunc               = false
statistics_level                    = typical
_optimizer_system_stats_usage       = true
skip_unusable_indexes               = true
_remove_aggr_subquery               = true
_optimizer_push_down_distinct       = 0
_dml_monitoring_enabled             = true
_optimizer_undo_changes             = false
_predicate_elimination_enabled      = true
_nested_loop_fudge                  = 100
_project_view_columns               = true
_local_communication_costing_enabled = true
_local_communication_ratio          = 50
_query_rewrite_vop_cleanup          = true
_slave_mapping_enabled              = true
_optimizer_cost_based_transformation = linear
_optimizer_mjc_enabled              = true
_right_outer_hash_enable            = true
_spr_push_pred_refspr               = true
_optimizer_cache_stats              = false
_optimizer_cbqt_factor              = 50
_optimizer_squ_bottomup             = true
_fic_area_size                      = 131072
_optimizer_skip_scan_enabled        = true
_optimizer_cost_filter_pred         = false
_optimizer_sortmerge_join_enabled   = true
_optimizer_join_sel_sanity_check    = true
_mmv_query_rewrite_enabled          = true
_bt_mmv_query_rewrite_enabled       = true
_add_stale_mv_to_dependency_list    = true
_distinct_view_unnesting            = false
_optimizer_dim_subq_join_sel        = true
_optimizer_disable_strans_sanity_checks = 0
_optimizer_compute_index_stats      = true
_push_join_union_view2              = true
optimizer_ignore_hints              = false
_optimizer_random_plan              = 0
_query_rewrite_setopgrw_enable      = true
_optimizer_correct_sq_selectivity   = true
_disable_function_based_index       = false
_optimizer_join_order_control       = 3
_optimizer_cartesian_enabled        = true
_optimizer_starplan_enabled         = true
_extended_pruning_enabled           = true
_optimizer_push_pred_cost_based     = true
_optimizer_null_aware_antijoin      = true
_optimizer_extend_jppd_view_types   = true
_sql_model_unfold_forloops          = run_time
_enable_dml_lock_escalation         = false
_bloom_filter_enabled               = true
_update_bji_ipdml_enabled           = 0
_optimizer_extended_cursor_sharing  = udo
_dm_max_shared_pool_pct             = 5
_optimizer_cost_hjsmj_multimatch    = true
_optimizer_transitivity_retain      = true
_px_pwg_enabled                     = true
optimizer_secure_view_merging       = true
_optimizer_join_elimination_enabled = true
flashback_table_rpi                 = non_fbt
_optimizer_cbqt_no_size_restriction = true
_optimizer_enhanced_filter_push     = true
_optimizer_filter_pred_pullup       = true
_rowsrc_trace_level                 = 0
_simple_view_merging                = true
_optimizer_rownum_pred_based_fkr    = true
_optimizer_better_inlist_costing    = all
_optimizer_self_induced_cache_cost  = false
_optimizer_min_cache_blocks         = 10
_optimizer_or_expansion             = depth
_optimizer_order_by_elimination_enabled = true
_optimizer_outer_to_anti_enabled    = true
_selfjoin_mv_duplicates             = true
_dimension_skip_null                = true
_force_rewrite_enable               = false
_optimizer_star_tran_in_with_clause = true
_optimizer_complex_pred_selectivity = true
_optimizer_connect_by_cost_based    = true
_gby_hash_aggregation_enabled       = true
_globalindex_pnum_filter_enabled    = true
_px_minus_intersect                 = true
_fix_control_key                    = 0
_force_slave_mapping_intra_part_loads = false
_force_tmp_segment_loads            = false
_query_mmvrewrite_maxpreds          = 10
_query_mmvrewrite_maxintervals      = 5
_query_mmvrewrite_maxinlists        = 5
_query_mmvrewrite_maxdmaps          = 10
_query_mmvrewrite_maxcmaps          = 20
_query_mmvrewrite_maxregperm        = 512
_query_mmvrewrite_maxqryinlistvals  = 500
_disable_parallel_conventional_load = false
_trace_virtual_columns              = false
_replace_virtual_columns            = true
_virtual_column_overload_allowed    = true
_kdt_buffering                      = true
_first_k_rows_dynamic_proration     = true
_optimizer_sortmerge_join_inequality = true
_optimizer_aw_stats_enabled         = true
_bloom_pruning_enabled              = true
_obsolete_result_cache_mode         = MANUAL
_px_ual_serial_input                = true
_optimizer_skip_scan_guess          = false
_enable_row_shipping                = true
_row_shipping_threshold             = 100
_row_shipping_explain               = false
transaction_isolation_level         = read_commited
_optimizer_distinct_elimination     = true
_optimizer_multi_level_push_pred    = true
_optimizer_group_by_placement       = true
_optimizer_rownum_bind_default      = 10
_enable_query_rewrite_on_remote_objs = true
_optimizer_extended_cursor_sharing_rel = simple
_optimizer_adaptive_cursor_sharing  = true
_direct_path_insert_features        = 0
_optimizer_improve_selectivity      = true
optimizer_use_pending_statistics    = false
_optimizer_enable_density_improvements = true
_optimizer_aw_join_push_enabled     = true
_optimizer_connect_by_combine_sw    = true
_enable_pmo_ctas                    = 0
_optimizer_native_full_outer_join   = force
_bloom_predicate_enabled            = true
_optimizer_enable_extended_stats    = true
_is_lock_table_for_ddl_wait_lock    = 0
_pivot_implementation_method        = choose
optimizer_capture_sql_plan_baselines = false
optimizer_use_sql_plan_baselines    = true
_optimizer_star_trans_min_cost      = 0
_optimizer_star_trans_min_ratio     = 0
_with_subquery                      = OPTIMIZER
_optimizer_fkr_index_cost_bias      = 10
_optimizer_use_subheap              = true
parallel_degree_policy              = manual
parallel_degree                     = 0
parallel_min_time_threshold         = 10
_parallel_time_unit                 = 10
_optimizer_or_expansion_subheap     = true
_optimizer_free_transformation_heap = true
_optimizer_reuse_cost_annotations   = true
_result_cache_auto_size_threshold   = 100
_result_cache_auto_time_threshold   = 1000
_optimizer_nested_rollup_for_gset   = 100
_nlj_batching_enabled               = 1
parallel_query_default_dop          = 0
is_recur_flags                      = 0
optimizer_use_invisible_indexes     = false
flashback_data_archive_internal_cursor = 0
_optimizer_extended_stats_usage_control = 192
_parallel_syspls_obey_force         = true
cell_offload_processing             = true
_rdbms_internal_fplib_enabled       = false
db_file_multiblock_read_count       = 58
_bloom_folding_enabled              = true
_mv_generalized_oj_refresh_opt      = true
cell_offload_compaction             = ADAPTIVE
cell_offload_plan_display           = AUTO
_bloom_predicate_offload            = true
_bloom_filter_size                  = 0
_bloom_pushing_max                  = 512
parallel_degree_limit               = 65535
parallel_force_local                = false
parallel_max_degree                 = 4
total_cpu_count                     = 4
_optimizer_coalesce_subqueries      = true
_optimizer_fast_pred_transitivity   = true
_optimizer_fast_access_pred_analysis = true
_optimizer_unnest_disjunctive_subq  = true
_optimizer_unnest_corr_set_subq     = true
_optimizer_distinct_agg_transform   = true
_aggregation_optimization_settings  = 0
_optimizer_connect_by_elim_dups     = true
_optimizer_eliminate_filtering_join = true
_connect_by_use_union_all           = true
dst_upgrade_insert_conv             = true
advanced_queuing_internal_cursor    = 0
_optimizer_unnest_all_subqueries    = true
parallel_autodop                    = 0
parallel_ddldml                     = 0
_parallel_cluster_cache_policy      = adaptive
_parallel_scalability               = 50
iot_internal_cursor                 = 0
_optimizer_instance_count           = 0
_optimizer_connect_by_cb_whr_only   = false
_suppress_scn_chk_for_cqn           = nosuppress_1466
_optimizer_join_factorization       = true
_optimizer_use_cbqt_star_transformation = true
_optimizer_table_expansion          = true
_and_pruning_enabled                = true
_deferred_constant_folding_mode     = DEFAULT
_optimizer_distinct_placement       = true
partition_pruning_internal_cursor   = 0
parallel_hinted                     = none
_sql_compatibility                  = 0
_optimizer_use_feedback             = true
_optimizer_try_st_before_jppd       = true
_dml_frequency_tracking             = false
_optimizer_interleave_jppd          = true
kkb_drop_empty_segments             = 0
_px_partition_scan_enabled          = true
_px_partition_scan_threshold        = 64
_optimizer_false_filter_pred_pullup = true
_bloom_minmax_enabled               = true
only_move_row                       = 0
_optimizer_enable_table_lookup_by_nl = true
parallel_execution_message_size     = 16384
_px_loc_msg_cost                    = 1000
_px_net_msg_cost                    = 10000
_optimizer_generate_transitive_pred = true
_optimizer_cube_join_enabled        = true
_optimizer_filter_pushdown          = true
deferred_segment_creation           = true
_optimizer_outer_join_to_inner      = true
_allow_level_without_connect_by     = false
_max_rwgs_groupings                 = 8192
_optimizer_hybrid_fpwj_enabled      = true
_px_replication_enabled             = true
ilm_filter                          = 0
_optimizer_partial_join_eval        = true
_px_concurrent                      = true
_px_object_sampling_enabled         = true
_px_back_to_parallel                = OFF
_optimizer_unnest_scalar_sq         = true
_optimizer_full_outer_join_to_outer = true
_px_filter_parallelized             = true
_px_filter_skew_handling            = true
_zonemap_use_enabled                = true
_zonemap_control                    = 0
_optimizer_multi_table_outerjoin    = true
_px_groupby_pushdown                = force
_partition_advisor_srs_active       = true
_optimizer_ansi_join_lateral_enhance = true
_px_parallelize_expression          = true
_fast_index_maintenance             = true
_optimizer_ansi_rearchitecture      = true
_optimizer_gather_stats_on_load     = true
ilm_access_tracking                 = 0
ilm_dml_timestamp                   = 0
_px_adaptive_dist_method            = choose
_px_adaptive_dist_method_threshold  = 0
_optimizer_batch_table_access_by_rowid = true
optimizer_adaptive_reporting_only   = false
_optimizer_ads_max_table_count      = 0
_optimizer_ads_time_limit           = 0
_optimizer_ads_use_result_cache     = true
_px_wif_dfo_declumping              = choose
_px_wif_extend_distribution_keys    = true
_px_join_skew_handling              = true
_px_join_skew_ratio                 = 10
_px_join_skew_minfreq               = 30
CLI_internal_cursor                 = 0
_parallel_fault_tolerance_enabled   = false
_parallel_fault_tolerance_threshold = 3
_px_partial_rollup_pushdown         = adaptive
_px_single_server_enabled           = true
_optimizer_dsdir_usage_control      = 0
_px_cpu_autodop_enabled             = true
_px_cpu_process_bandwidth           = 200
_sql_hvshare_threshold              = 0
_px_tq_rowhvs                       = true
_optimizer_use_gtt_session_stats    = true
_optimizer_proc_rate_level          = basic
_px_hybrid_TSM_HWMB_load            = true
_optimizer_use_histograms           = true
PMO_altidx_rebuild                  = 0
_cell_offload_expressions           = true
_cell_materialize_virtual_columns   = true
_cell_materialize_all_expressions   = false
_rowsets_enabled                    = true
_rowsets_target_maxsize             = 524288
_rowsets_max_rows                   = 256
_use_hidden_partitions              = 0
_px_load_monitor_threshold          = 10000
_px_numa_support_enabled            = false
total_processor_group_count         = 1
_adaptive_window_consolidator_enabled = true
_optimizer_strans_adaptive_pruning  = true
_bloom_rm_filter                    = false
_optimizer_null_accepting_semijoin  = true
_long_varchar_allow_IOT             = 0
_parallel_ctas_enabled              = true
_cell_offload_complex_processing    = true
_optimizer_performance_feedback     = off
_optimizer_proc_rate_source         = DEFAULT
_hashops_prefetch_size              = 4
_cell_offload_sys_context           = true
_multi_commit_global_index_maint    = 0
_stat_aggs_one_pass_algorithm       = false
_dbg_scan                           = 0
_oltp_comp_dbg_scan                 = 0
_arch_comp_dbg_scan                 = 0
_optimizer_gather_feedback          = true
_upddel_dba_hash_mask_bits          = 0
_px_pwmr_enabled                    = true
_px_cdb_view_enabled                = true
_bloom_sm_enabled                   = true
_optimizer_cluster_by_rowid         = true
_optimizer_cluster_by_rowid_control = 129
_partition_cdb_view_enabled         = true
_common_data_view_enabled           = true
_pred_push_cdb_view_enabled         = true
_rowsets_cdb_view_enabled           = true
_distinct_agg_optimization_gsets    = choose
_array_cdb_view_enabled             = true
_optimizer_adaptive_plan_control    = 0
_optimizer_adaptive_random_seed     = 0
_optimizer_cbqt_or_expansion        = on
_inmemory_dbg_scan                  = 0
_gby_vector_aggregation_enabled     = true
_optimizer_vector_transformation    = true
_optimizer_vector_fact_dim_ratio    = 10
_key_vector_max_size                = 0
_key_vector_predicate_enabled       = true
_key_vector_predicate_threshold     = 0
_vector_operations_control          = 0
_optimizer_vector_min_fact_rows     = 10000000
parallel_dblink                     = 0
_px_scalable_invdist                = true
_key_vector_offload                 = predicate
_optimizer_aggr_groupby_elim        = true
_optimizer_reduce_groupby_key       = true
_vector_serialize_temp_threshold    = 1000
_always_vector_transformation       = false
_optimizer_cluster_by_rowid_batched = true
_object_link_fixed_enabled          = true
optimizer_inmemory_aware            = true
_optimizer_inmemory_table_expansion = true
_optimizer_inmemory_gen_pushable_preds = true
_optimizer_inmemory_autodop         = true
_optimizer_inmemory_access_path     = true
_optimizer_inmemory_bloom_filter    = true
_parallel_inmemory_min_time_threshold = 1
_parallel_inmemory_time_unit        = 1
_rc_sys_obj_enabled                 = true
_optimizer_nlj_hj_adaptive_join     = true
_indexable_con_id                   = true
_bloom_serial_filter                = on
inmemory_force                      = default
inmemory_query                      = enable
_inmemory_query_scan                = true
_inmemory_query_fetch_by_rowid      = false
_inmemory_pruning                   = on
_px_autodop_pq_overhead             = true
_px_external_table_default_stats    = true
_optimizer_key_vector_aggr_factor   = 75
_optimizer_vector_cost_adj          = 100
_cdb_cross_container                = 65535
_cdb_view_parallel_degree           = 65535
_optimizer_hll_entry                = 4096
_px_cdb_view_join_enabled           = true
inmemory_size                       = 0
_external_table_smart_scan          = hadoop_only
_optimizer_inmemory_minmax_pruning  = true
_approx_cnt_distinct_gby_pushdown   = choose
_approx_cnt_distinct_optimization   = 0
_optimizer_ads_use_partial_results  = true
_query_execution_time_limit         = 0
_optimizer_inmemory_cluster_aware_dop = true
_optimizer_db_blocks_buffers        = 0 KB
_query_rewrite_use_on_query_computation = true
_px_scalable_invdist_mcol           = true
_optimizer_bushy_join               = off
_optimizer_bushy_fact_dim_ratio     = 20
_optimizer_bushy_fact_min_size      = 100000
_optimizer_bushy_cost_factor        = 100
_rmt_for_table_redef_enabled        = true
_optimizer_eliminate_subquery       = true
_sqlexec_cache_aware_hash_join_enabled = true
_zonemap_usage_tracking             = true
_sqlexec_hash_based_distagg_enabled = true
_sqlexec_disable_hash_based_distagg_tiv = false
_sqlexec_hash_based_distagg_ssf_enabled = true
_sqlexec_distagg_optimization_settings = 0
approx_for_aggregation              = false
approx_for_count_distinct           = false
_optimizer_union_all_gsets          = true
_rowsets_use_encoding               = true
_rowsets_max_enc_rows               = 64
_optimizer_enhanced_join_elimination = true
_optimizer_multicol_join_elimination = true
_key_vector_create_pushdown_threshold = 20000
_optimizer_enable_plsql_stats       = true
_recursive_with_parallel            = true
_recursive_with_branch_iterations   = 7
_px_dist_agg_partial_rollup_pushdown = adaptive
_px_adaptive_dist_bypass_enabled    = true
_enable_view_pdb                    = true
_optimizer_key_vector_pruning_enabled = true
_pwise_distinct_enabled             = true
_recursive_with_using_temp_table    = false
_partition_read_only                = true
_sql_alias_scope                    = true
_cdb_view_no_skip_migrate           = false
_approx_perc_sampling_err_rate      = 2
_sqlexec_encoding_aware_hj_enabled  = true
rim_node_exist                      = 0
_enable_containers_subquery         = true
_force_containers_subquery          = false
_cell_offload_vector_groupby        = true
_vector_encoding_mode               = manual
_ds_xt_split_count                  = 1
_ds_sampling_method                 = PROGRESSIVE
_optimizer_ads_use_spd_cache        = true
_optimizer_use_table_scanrate       = HADOOP_ONLY
_optimizer_use_xt_rowid             = true
_xt_sampling_scan_granules          = on
_recursive_with_control             = 0
_sqlexec_use_rwo_aware_expr_analysis = true
_optimizer_band_join_aware          = true
_optimizer_vector_base_dim_fact_factor = 200
approx_for_percentile               = none
_approx_percentile_optimization     = 0
_projection_pushdown                = true
_px_object_sampling                 = 200
_optimizer_adaptive_plans_continuous = false
_optimizer_adaptive_plans_iterative = false
_ds_enable_view_sampling            = true
_optimizer_generate_ptf_implied_preds = true
_optimizer_inmemory_use_stored_stats = AUTO
_cdb_special_old_xplan              = true
uniaud_internal_cursor              = 0
_kd_dbg_control                     = 0
_mv_access_compute_fresh_data       = on
_bloom_filter_ratio                 = 35
_optimizer_control_shard_qry_processing = 65472
containers_parallel_degree          = 65535
sql_from_coordinator                = 0
_xt_sampling_scan_granules_min_granules = 1
_in_memory_cdt                      = LIMITED
_in_memory_cdt_maxpx                = 4
_px_partition_load_dist_threshold   = 64
_px_adaptive_dist_bypass_optimization = 1
_optimizer_interleave_or_expansion  = true
optimizer_adaptive_plans            = true
optimizer_adaptive_statistics       = false
_optimizer_use_feedback_for_join    = false
_optimizer_ads_for_pq               = false
_px_join_skewed_values_count        = 0
optimizer_ignore_parallel_hints     = false
parallel_min_degree                 = 1
_px_nlj_bcast_rr_threshold          = 10
_optimizer_gather_stats_on_load_all = false
_optimizer_gather_stats_on_load_hist = false
_optimizer_allow_all_access_paths   = true
_key_vector_double_enabled          = true
_key_vector_timestamp_enabled       = true
_optimizer_answering_query_using_stats = false
_disable_dblink_optim               = true
_cell_offload_hybrid_processing     = true
_read_optimized_table_lookup        = true
_optimizer_key_vector_payload       = true
_optimizer_vector_fact_payload_ratio = 20
_bloom_pruning_setops_enabled       = true
_bloom_filter_setops_enabled        = true
_key_vector_shared_dgk_ht           = true
_px_pwise_wif_enabled               = true
_sqlexec_reorder_wif_enabled        = true
_px_partition_skew_threshold        = 80
_sqlexec_pwiseops_with_sqlfuncs_enabled = true
_sqlexec_pwiseops_with_binds_enabled = true
_px_shared_hash_join                = false
_px_reuse_server_groups             = multi
_px_join_skew_null_handling         = true
_px_join_skew_use_histogram         = true
_px_join_skew_sampling_time_limit   = 50
_px_join_skew_sampling_percent      = 0
_cdb_view_no_skip_restricted        = false
_inmemory_external_table            = true
_sqlexec_use_kgghash3               = true
_cell_offload_vector_groupby_force  = false
_hcs_enable_pred_push               = true
parallel_dop_doubled                = 0
_optimizer_gather_stats_on_load_index = true
_con_map_sql_enforcement            = true
_uniq_cons_sql_enforcement          = true
_ref_cons_sql_enforcement           = true
_is_lock_table_for_split_merge      = 0
_cell_offload_vector_groupby_fact_key = true
_px_scalable_gby_invdist            = true
_px_dynamic_granules                = true
_px_dynamic_granules_adjust         = 10
_px_hybrid_partition_execution_enabled = true
_px_hybrid_partition_skew_threshold = 10
_optimizer_key_vector_use_max_size  = 1048576
_cell_offload_vector_groupby_withnojoin = true
_key_vector_join_pushdown_enabled   = true
_cell_offload_grand_total           = true
_optimizer_key_vector_payload_dim_aggs = true
_optimizer_use_auto_indexes         = AUTO
_optimizer_use_stats_on_conventional_dml = false
_optimizer_gather_stats_on_conventional_dml = false
_optimizer_use_stats_on_conventional_config = 0
_skip_pset_col_chk                  = 0
_nls_binary                         = true
optimizer_use_sql_quarantine        = true
_optimizer_gather_stats_on_conventional_config = 0
_nls_forced_binary                  = 0
_utl32k_mv_query                    = false
optimizer_session_type              = NORMAL
_cell_offload_vector_groupby_external = true
_optimizer_wc_filter_pushdown       = true
BlockChain_ledger_infrastructure    = 0
_cell_metadata_compression          = AUTO
_sqlexec_use_delayed_unpacking      = true
_swat_ver_mv_knob                   = 0
_zonemap_refresh_within_load        = true
_px_parallelize_non_native_datatype = true
_inmemory_hpk4sql_flags             = 0
_sqlexec_hash_based_distagg_ser_civ_enabled = true
_optimizer_use_stats_models         = false
_cross_con_remove_pushed_preds      = false
_optimizer_exists_to_any_rewrite    = true
_update_global_index_from_part_exchange = 0
optimizer_cross_shard_resiliency    = false
shard_queries_restricted_by_key     = false
valid_shard_session_key             = 0
result_cache_mode                   = MANUAL
_bigdata_offload_flag               = false
_optimizer_nested_loop_join         = on
_groupby_orderby_combine            = 5000
_px_extended_join_skew_handling     = true
_autoptn_costing                    = false
translate_table_name_hash           = 0
_enable_columnar_cache              = 1
_px_adaptive_dist_nij_enabled       = on
_sqlexec_hash_rollup_enabled        = true
_sqlexec_hash_based_set_operation_enabled = true
container_data                      = ALL
_mv_logical_partition_rewrite_enabled = false
Bug Fix Control Environment
    fix  3834770 = 1       
    fix  3746511 = enabled
    fix  4519016 = enabled
    fix  3118776 = enabled
    fix  4488689 = enabled
    fix  2194204 = disabled
    fix  2660592 = enabled
    fix  2320291 = enabled
    fix  2324795 = enabled
    fix  4308414 = enabled
    fix  3499674 = disabled
    fix  4569940 = enabled
    fix  4631959 = enabled
    fix  4519340 = enabled
    fix  4550003 = enabled
    fix  1403283 = enabled
    fix  4554846 = enabled
    fix  4602374 = enabled
    fix  4584065 = enabled
    fix  4545833 = enabled
    fix  4611850 = enabled
    fix  4663698 = enabled
    fix  4663804 = enabled
    fix  4666174 = enabled
    fix  4567767 = enabled
    fix  4556762 = 15      
    fix  4728348 = enabled
    fix  4708389 = enabled
    fix  4175830 = enabled
    fix  4752814 = enabled
    fix  4583239 = enabled
    fix  4386734 = enabled
    fix  4887636 = enabled
    fix  4483240 = enabled
    fix  4872602 = disabled
    fix  4711525 = enabled
    fix  4545802 = enabled
    fix  4605810 = enabled
    fix  4704779 = enabled
    fix  4900129 = enabled
    fix  4924149 = enabled
    fix  4663702 = enabled
    fix  4878299 = enabled
    fix  4658342 = enabled
    fix  4881533 = enabled
    fix  4676955 = enabled
    fix  4273361 = enabled
    fix  4967068 = enabled
    fix  4969880 = disabled
    fix  5005866 = enabled
    fix  5015557 = enabled
    fix  4705343 = enabled
    fix  4904838 = enabled
    fix  4716096 = enabled
    fix  4483286 = disabled
    fix  4722900 = enabled
    fix  4615392 = enabled
    fix  5096560 = enabled
    fix  5029464 = enabled
    fix  4134994 = enabled
    fix  4904890 = enabled
    fix  5104624 = enabled
    fix  5014836 = enabled
    fix  4768040 = enabled
    fix  4600710 = enabled
    fix  5129233 = enabled
    fix  4595987 = enabled
    fix  4908162 = enabled
    fix  5139520 = enabled
    fix  5084239 = enabled
    fix  5143477 = disabled
    fix  2663857 = enabled
    fix  4717546 = enabled
    fix  5240264 = disabled
    fix  5099909 = enabled
    fix  5240607 = enabled
    fix  5195882 = enabled
    fix  5220356 = enabled
    fix  5263572 = enabled
    fix  5385629 = enabled
    fix  5302124 = enabled
    fix  5391942 = enabled
    fix  5384335 = enabled
    fix  5482831 = enabled
    fix  4158812 = enabled
    fix  5387148 = enabled
    fix  5383891 = enabled
    fix  5466973 = enabled
    fix  5396162 = enabled
    fix  5394888 = enabled
    fix  5395291 = enabled
    fix  5236908 = enabled
    fix  5509293 = enabled
    fix  5449488 = enabled
    fix  5567933 = enabled
    fix  5570494 = enabled
    fix  5288623 = enabled
    fix  5505995 = enabled
    fix  5505157 = enabled
    fix  5112460 = enabled
    fix  5554865 = enabled
    fix  5112260 = enabled
    fix  5112352 = enabled
    fix  5547058 = enabled
    fix  5618040 = enabled
    fix  5585313 = enabled
    fix  5547895 = enabled
    fix  5634346 = enabled
    fix  5620485 = enabled
    fix  5483301 = enabled
    fix  5657044 = enabled
    fix  5694984 = enabled
    fix  5868490 = enabled
    fix  5650477 = enabled
    fix  5611962 = enabled
    fix  4279274 = enabled
    fix  5741121 = enabled
    fix  5714944 = enabled
    fix  5391505 = enabled
    fix  5762598 = enabled
    fix  5578791 = enabled
    fix  5259048 = enabled
    fix  5882954 = enabled
    fix  2492766 = enabled
    fix  5707608 = enabled
    fix  5891471 = enabled
    fix  5884780 = enabled
    fix  5680702 = enabled
    fix  5371452 = enabled
    fix  5838613 = enabled
    fix  5949981 = enabled
    fix  5624216 = enabled
    fix  5741044 = enabled
    fix  5976822 = enabled
    fix  6006457 = enabled
    fix  5872956 = enabled
    fix  5923644 = enabled
    fix  5943234 = enabled
    fix  5844495 = enabled
    fix  4168080 = enabled
    fix  6020579 = enabled
    fix  5842686 = disabled
    fix  5996801 = enabled
    fix  5593639 = enabled
    fix  6133948 = enabled
    fix  3151991 = enabled
    fix  6146906 = enabled
    fix  6239909 = enabled
    fix  6267621 = enabled
    fix  5909305 = enabled
    fix  6279918 = enabled
    fix  6141818 = enabled
    fix  6151963 = enabled
    fix  6251917 = enabled
    fix  6282093 = enabled
    fix  6119510 = enabled
    fix  6119382 = enabled
    fix  3801750 = enabled
    fix  5705630 = disabled
    fix  5944076 = enabled
    fix  5406763 = enabled
    fix  6070954 = enabled
    fix  6282944 = enabled
    fix  6138746 = enabled
    fix  6082745 = enabled
    fix  3426050 = enabled
    fix   599680 = enabled
    fix  6062266 = enabled
    fix  6087237 = enabled
    fix  6122894 = enabled
    fix  6377505 = enabled
    fix  5893768 = enabled
    fix  6163564 = enabled
    fix  6073325 = enabled
    fix  6188881 = enabled
    fix  6007259 = enabled
    fix  6239971 = enabled
    fix  5284200 = disabled
    fix  6042205 = enabled
    fix  6051211 = enabled
    fix  6434668 = enabled
    fix  6438752 = enabled
    fix  5936366 = enabled
    fix  6439032 = enabled
    fix  6438892 = enabled
    fix  6006300 = enabled
    fix  5947231 = enabled
    fix  5416118 = 1       
    fix  6365442 = 1       
    fix  6239039 = enabled
    fix  6502845 = enabled
    fix  6913094 = enabled
    fix  6029469 = enabled
    fix  5919513 = enabled
    fix  6057611 = enabled
    fix  6469667 = enabled
    fix  6608941 = disabled
    fix  6368066 = enabled
    fix  6329318 = enabled
    fix  6656356 = enabled
    fix  4507997 = enabled
    fix  6671155 = enabled
    fix  6694548 = enabled
    fix  6688200 = enabled
    fix  6612471 = enabled
    fix  6708183 = disabled
    fix  6326934 = enabled
    fix  6520717 = disabled
    fix  6714199 = enabled
    fix  6681545 = enabled
    fix  6748058 = enabled
    fix  6167716 = enabled
    fix  6674254 = enabled
    fix  6468287 = enabled
    fix  6503543 = enabled
    fix  6808773 = disabled
    fix  6766962 = enabled
    fix  6120483 = enabled
    fix  6670551 = enabled
    fix  6771838 = enabled
    fix  6626018 = disabled
    fix  6530596 = enabled
    fix  6778642 = enabled
    fix  6699059 = enabled
    fix  6376551 = enabled
    fix  6429113 = enabled
    fix  6782437 = enabled
    fix  6776808 = enabled
    fix  6765823 = enabled
    fix  6768660 = enabled
    fix  6782665 = enabled
    fix  6610822 = enabled
    fix  6514189 = enabled
    fix  6818410 = enabled
    fix  6827696 = enabled
    fix  6773613 = enabled
    fix  5902962 = enabled
    fix  6956212 = enabled
    fix  3056297 = enabled
    fix  6440977 = disabled
    fix  6972291 = disabled
    fix  6904146 = enabled
    fix  6221403 = enabled
    fix  5475051 = enabled
    fix  6845871 = enabled
    fix  5468809 = enabled
    fix  6917633 = enabled
    fix  4444536 = disabled
    fix  6955210 = enabled
    fix  6994194 = enabled
    fix  6399597 = disabled
    fix  6951776 = enabled
    fix  5648287 = 3       
    fix  6987082 = disabled
    fix  7132036 = enabled
    fix  6980350 = enabled
    fix  5199213 = enabled
    fix  7138405 = enabled
    fix  7148689 = enabled
    fix  6820988 = enabled
    fix  7032684 = enabled
    fix  6617866 = enabled
    fix  7155968 = enabled
    fix  7127980 = enabled
    fix  6982954 = enabled
    fix  7241819 = enabled
    fix  6897034 = enabled
    fix  7236148 = enabled
    fix  7298570 = enabled
    fix  7249095 = enabled
    fix  7314499 = enabled
    fix  7324224 = enabled
    fix  7289023 = enabled
    fix  7237571 = enabled
    fix  7116357 = enabled
    fix  7345484 = enabled
    fix  7375179 = enabled
    fix  6430500 = disabled
    fix  5897486 = enabled
    fix  6774209 = enabled
    fix  7306637 = enabled
    fix  6451322 = enabled
    fix  7208131 = enabled
    fix  7388652 = enabled
    fix  7127530 = enabled
    fix  6751206 = enabled
    fix  6669103 = enabled
    fix  7430474 = enabled
    fix  6990305 = enabled
    fix  7043307 = enabled
    fix  3120429 = enabled
    fix  7452823 = disabled
    fix  6838105 = enabled
    fix  6769711 = enabled
    fix  7170213 = enabled
    fix  6528872 = enabled
    fix  7295298 = enabled
    fix  5922070 = enabled
    fix  7259468 = enabled
    fix  6418552 = enabled
    fix  4619997 = enabled
    fix  7524366 = enabled
    fix  6942476 = enabled
    fix  6418771 = enabled
    fix  7375077 = enabled
    fix  5400639 = enabled
    fix  4570921 = enabled
    fix  7426911 = enabled
    fix  5099019 = disabled
    fix  7528216 = enabled
    fix  7521266 = enabled
    fix  7385140 = enabled
    fix  7576516 = enabled
    fix  7573526 = enabled
    fix  7576476 = enabled
    fix  7165898 = enabled
    fix  7263214 = enabled
    fix  3320140 = enabled
    fix  7555510 = enabled
    fix  7613118 = enabled
    fix  7597059 = enabled
    fix  7558911 = enabled
    fix  5520732 = enabled
    fix  7679490 = disabled
    fix  7449971 = enabled
    fix  3628118 = enabled
    fix  4370840 = enabled
    fix  7281191 = enabled
    fix  7519687 = enabled
    fix  5029592 = 3       
    fix  6012093 = 1       
    fix  6053861 = disabled
    fix  6941515 = disabled
    fix  7696414 = enabled
    fix  7272039 = enabled
    fix  7834811 = enabled
    fix  7640597 = enabled
    fix  7341616 = enabled
    fix  7168184 = enabled
    fix   399198 = enabled
    fix  7831070 = enabled
    fix  7676897 = disabled
    fix  7414637 = enabled
    fix  7585456 = enabled
    fix  8202421 = enabled
    fix  7658097 = disabled
    fix  8251486 = enabled
    fix  7132684 = enabled
    fix  7512227 = enabled
    fix  6972987 = enabled
    fix  7199035 = enabled
    fix  8243446 = enabled
    fix  7650462 = enabled
    fix  6720701 = enabled
    fix  7592673 = enabled
    fix  7718694 = enabled
    fix  7534027 = enabled
    fix  7708267 = enabled
    fix  5716785 = enabled
    fix  7356191 = enabled
    fix  7679161 = enabled
    fix  7597159 = enabled
    fix  7499258 = enabled
    fix  8328363 = enabled
    fix  7452863 = enabled
    fix  8284930 = enabled
    fix  7298626 = enabled
    fix  7657126 = enabled
    fix  8371884 = enabled
    fix  8318020 = enabled
    fix  8255423 = enabled
    fix  7135745 = enabled
    fix  8356253 = enabled
    fix  7534257 = enabled
    fix  8323407 = enabled
    fix  7539815 = enabled
    fix  8289316 = enabled
    fix  8447850 = enabled
    fix  7675944 = enabled
    fix  8355120 = enabled
    fix  7176746 = enabled
    fix  8442891 = enabled
    fix  8373261 = enabled
    fix  7679164 = enabled
    fix  7670533 = enabled
    fix  8408665 = enabled
    fix  8491399 = enabled
    fix  8348392 = enabled
    fix  8348585 = enabled
    fix  8335178 = enabled
    fix  8247017 = enabled
    fix  7325597 = enabled
    fix  8531490 = enabled
    fix  6163600 = enabled
    fix  8589278 = disabled
    fix  8557992 = enabled
    fix  7556098 = enabled
    fix  8580883 = enabled
    fix  5892599 = disabled
    fix  8609714 = enabled
    fix  8619631 = disabled
    fix  8672915 = enabled
    fix  8514561 = enabled
    fix  8213977 = enabled
    fix  8560951 = disabled
    fix  8578587 = enabled
    fix  8287870 = enabled
    fix  8467123 = enabled
    fix  8602185 = enabled
    fix  8519457 = enabled
    fix  3335182 = enabled
    fix  8602840 = enabled
    fix  8725296 = enabled
    fix  8628970 = enabled
    fix  6754080 = enabled
    fix  8767442 = enabled
    fix  8760135 = enabled
    fix  8644935 = enabled
    fix  8352378 = enabled
    fix  8685327 = enabled
    fix  8763472 = enabled
    fix  8773324 = enabled
    fix  8813674 = enabled
    fix  8532236 = enabled
    fix  8629716 = enabled
    fix  7277732 = enabled
    fix  8692170 = enabled
    fix  8900973 = enabled
    fix  8919133 = enabled
    fix  8927050 = enabled
    fix  8551880 = enabled
    fix  8901237 = enabled
    fix  8812372 = enabled
    fix  6236862 = enabled
    fix  8528517 = enabled
    fix  7215982 = enabled
    fix  8214022 = enabled
    fix  8595392 = enabled
    fix  8890233 = enabled
    fix  8999317 = enabled
    fix  9004800 = enabled
    fix  8986163 = enabled
    fix  8855396 = enabled
    fix  8800514 = 20      
    fix  9007859 = enabled
    fix  8198783 = disabled
    fix  9053879 = enabled
    fix  6086930 = enabled
    fix  7641601 = enabled
    fix  9052506 = enabled
    fix  9103775 = enabled
    fix  9047975 = enabled
    fix  8893626 = enabled
    fix  9111170 = enabled
    fix  8971829 = enabled
    fix  7628358 = enabled
    fix  9125151 = enabled
    fix  9039715 = enabled
    fix  9106224 = enabled
    fix  9185228 = enabled
    fix  9206747 = enabled
    fix  9088510 = enabled
    fix  9143856 = enabled
    fix  8833381 = enabled
    fix  8949971 = enabled
    fix  8951812 = enabled
    fix  9148171 = enabled
    fix  8706652 = enabled
    fix  9245114 = enabled
    fix  8802198 = enabled
    fix  9011016 = enabled
    fix  9265681 = enabled
    fix  7284269 = enabled
    fix  9272549 = enabled
    fix  8917507 = 7       
    fix  8531463 = enabled
    fix  9263333 = enabled
    fix  8675087 = enabled
    fix  8896955 = enabled
    fix  9041934 = enabled
    fix  9344709 = enabled
    fix  9024933 = enabled
    fix  9033718 = enabled
    fix  9240455 = enabled
    fix  9081848 = enabled
    fix  5982893 = enabled
    fix  9287401 = enabled
    fix  8590021 = enabled
    fix  9340120 = enabled
    fix  9355794 = enabled
    fix  9356656 = enabled
    fix  9385634 = enabled
    fix  9069046 = enabled
    fix  9239337 = enabled
    fix  9300228 = enabled
    fix  9298010 = enabled
    fix  9384170 = enabled
    fix  9407929 = enabled
    fix  8836806 = enabled
    fix  9344055 = enabled
    fix  9274675 = enabled
    fix  9203723 = enabled
    fix  9443476 = enabled
    fix  9195582 = enabled
    fix  8226666 = enabled
    fix  9433490 = enabled
    fix  9065494 = enabled
    fix  9303766 = enabled
    fix  9437283 = enabled
    fix  9116214 = enabled
    fix  9456688 = enabled
    fix  9456746 = disabled
    fix  9342979 = enabled
    fix  9465425 = enabled
    fix  9092442 = enabled
    fix  4926618 = enabled
    fix  8792846 = enabled
    fix  9474259 = enabled
    fix  9495669 = disabled
    fix  6472966 = enabled
    fix  6408301 = enabled
    fix  9380298 = disabled
    fix  8500130 = enabled
    fix  9584723 = enabled
    fix  9270951 = enabled
    fix  9508254 = enabled
    fix  9593680 = enabled
    fix  9196440 = disabled
    fix  9309281 = enabled
    fix  8693158 = enabled
    fix  9381638 = enabled
    fix  9383967 = enabled
    fix  7711900 = enabled
    fix  9218587 = enabled
    fix  9728438 = enabled
    fix  9038395 = enabled
    fix  9577300 = enabled
    fix  9171113 = enabled
    fix  8973745 = enabled
    fix  9732434 = enabled
    fix  8937971 = disabled
    fix  9102474 = enabled
    fix  9243499 = enabled
    fix  9791810 = enabled
    fix  9785632 = enabled
    fix  9898249 = enabled
    fix  9153459 = enabled
    fix  9680430 = enabled
    fix  9841679 = enabled
    fix  9912503 = enabled
    fix  9850461 = enabled
    fix  9762592 = 3       
    fix  9716877 = enabled
    fix  9814067 = enabled
    fix  9776736 = enabled
    fix  8349119 = enabled
    fix  9958518 = enabled
    fix 10041074 = enabled
    fix 10004943 = enabled
    fix  9980661 = enabled
    fix  9554026 = enabled
    fix  9593547 = enabled
    fix  9833381 = enabled
    fix 10043801 = enabled
    fix  9940732 = enabled
    fix  9702850 = enabled
    fix  9659125 = 0       
    fix  9668086 = enabled
    fix  9476520 = enabled
    fix 10158107 = enabled
    fix 10148457 = enabled
    fix 10106423 = enabled
    fix  9721439 = disabled
    fix 10162430 = enabled
    fix 10134677 = enabled
    fix 10182051 = 3       
    fix 10175079 = enabled
    fix 10026972 = enabled
    fix 10192889 = enabled
    fix  3566843 = enabled
    fix  9550277 = disabled
    fix 10236566 = enabled
    fix 10227392 = enabled
    fix  8961143 = enabled
    fix  9721228 = enabled
    fix 10080014 = enabled
    fix 10101489 = enabled
    fix  9929609 = enabled
    fix 10015652 = enabled
    fix  9918661 = enabled
    fix 10333395 = enabled
    fix 10336499 = disabled
    fix 10182672 = enabled
    fix  9578670 = enabled
    fix 10232225 = enabled
    fix 10330090 = enabled
    fix 10232623 = enabled
    fix  9630092 = disabled
    fix 10271790 = enabled
    fix  9227576 = enabled
    fix 10197666 = enabled
    fix 10376744 = enabled
    fix  8274946 = enabled
    fix 10046368 = enabled
    fix  9569678 = enabled
    fix  9002661 = enabled
    fix 10038373 = enabled
    fix  9477688 = enabled
    fix 10013899 = enabled
    fix  9832338 = enabled
    fix 10623119 = enabled
    fix  9898066 = enabled
    fix 11699884 = enabled
    fix 10640430 = enabled
    fix 10428450 = enabled
    fix 10117760 = enabled
    fix 11720178 = enabled
    fix  9881812 = enabled
    fix 10428278 = enabled
    fix 11741436 = enabled
    fix 11668189 = enabled
    fix 10359631 = enabled
    fix  9829887 = enabled
    fix  8275054 = enabled
    fix 11814428 = enabled
    fix 11676888 = disabled
    fix 10348427 = enabled
    fix 11843512 = enabled
    fix 11657468 = enabled
    fix 11877160 = enabled
    fix 11738631 = enabled
    fix 11744086 = enabled
    fix 11830663 = enabled
    fix 11853331 = enabled
    fix  9748015 = enabled
    fix 11834739 = enabled
    fix  6055658 = enabled
    fix 11740670 = enabled
    fix 11940126 = enabled
    fix 12315002 = enabled
    fix  8275023 = enabled
    fix 12352373 = enabled
    fix 12390139 = enabled
    fix 11935589 = enabled
    fix 10226906 = enabled
    fix 12327548 = enabled
    fix 12388221 = enabled
    fix 11892888 = enabled
    fix 11814265 = enabled
    fix 10230017 = enabled
    fix 12341619 = enabled
    fix 11744016 = enabled
    fix 10216738 = enabled
    fix 10298302 = enabled
    fix 12563419 = enabled
    fix 12399886 = enabled
    fix 12584007 = enabled
    fix 11881047 = enabled
    fix 12534597 = enabled
    fix  8683604 = enabled
    fix 12410972 = enabled
    fix  7147087 = enabled
    fix 11846314 = enabled
    fix 12535474 = enabled
    fix 12561635 = enabled
    fix 12432426 = enabled
    fix  9913117 = enabled
    fix 12432089 = enabled
    fix 12587690 = enabled
    fix 11858963 = enabled
    fix 12569245 = enabled
    fix 12569300 = enabled
    fix  7308975 = disabled
    fix 12569316 = enabled
    fix 12569321 = enabled
    fix 12335617 = enabled
    fix  9002958 = enabled
    fix 12591120 = enabled
    fix 11876260 = enabled
    fix 12313574 = enabled
    fix 12569713 = enabled
    fix 12348584 = enabled
    fix 10420220 = enabled
    fix 12559453 = enabled
    fix 12727549 = enabled
    fix 12728203 = enabled
    fix 12828479 = enabled
    fix 10181153 = enabled
    fix  9971371 = disabled
    fix 12864791 = enabled
    fix 12810427 = enabled
    fix 12605402 = enabled
    fix 12861609 = enabled
    fix 12915337 = enabled
    fix 12942119 = enabled
    fix 12622441 = enabled
    fix 11072246 = enabled
    fix 12739252 = enabled
    fix 12953765 = enabled
    fix 12905116 = enabled
    fix 12978495 = enabled
    fix  9633142 = disabled
    fix  3639130 = enabled
    fix 12827166 = enabled
    fix 12944193 = enabled
    fix 13020272 = enabled
    fix 12673320 = enabled
    fix 12975771 = enabled
    fix 12882092 = enabled
    fix 12379334 = enabled
    fix 12723414 = enabled
    fix  9488694 = disabled
    fix 13255388 = 10      
    fix 11727871 = enabled
    fix 13110511 = enabled
    fix 13075297 = enabled
    fix 13345888 = enabled
    fix 11657903 = disabled
    fix 13396096 = enabled
    fix 12591379 = enabled
    fix 13398214 = enabled
    fix 13382280 = enabled
    fix 12869367 = enabled
    fix 12999577 = enabled
    fix 12433153 = enabled
    fix  9094254 = enabled
    fix 13104618 = enabled
    fix 13524237 = enabled
    fix 11813257 = enabled
    fix 13489017 = enabled
    fix 12954320 = enabled
    fix 13555551 = enabled
    fix 13499154 = enabled
    fix 13036910 = enabled
    fix 13545925 = enabled
    fix 13545956 = enabled
    fix 13545989 = enabled
    fix 12839247 = enabled
    fix  9858777 = enabled
    fix 13568366 = enabled
    fix 13393357 = enabled
    fix 13040171 = enabled
    fix 13406619 = enabled
    fix 13594757 = enabled
    fix 13543207 = enabled
    fix 13594712 = enabled
    fix 12648629 = enabled
    fix 13549808 = enabled
    fix 13634700 = enabled
    fix  8792821 = enabled
    fix 13454409 = enabled
    fix 13146487 = enabled
    fix 13592248 = enabled
    fix 11689541 = enabled
    fix 13527374 = enabled
    fix 13430622 = enabled
    fix 13704562 = enabled
    fix  9547706 = enabled
    fix 13497184 = enabled
    fix 13704977 = enabled
    fix 13734456 = enabled
    fix 13070532 = enabled
    fix  6520878 = enabled
    fix  2273284 = enabled
    fix 13786127 = enabled
    fix 13065064 = enabled
    fix 13972896 = enabled
    fix 11843466 = enabled
    fix 13777823 = enabled
    fix 13616573 = enabled
    fix 13831671 = enabled
    fix 13652216 = enabled
    fix 13912192 = enabled
    fix 13909909 = enabled
    fix 13849486 = enabled
    fix 13321547 = enabled
    fix 13886606 = disabled
    fix 14013502 = enabled
    fix 13850256 = enabled
    fix 13929275 = enabled
    fix 11732303 = enabled
    fix 13906168 = enabled
    fix 14055128 = enabled
    fix 12856200 = enabled
    fix 14008590 = enabled
    fix 13627489 = disabled
    fix 13961105 = enabled
    fix 13583722 = enabled
    fix 13076238 = enabled
    fix 13936229 = enabled
    fix  9852856 = enabled
    fix  3904125 = enabled
    fix  5910187 = enabled
    fix 10068316 = enabled
    fix 14029891 = enabled
    fix  4215125 = enabled
    fix 13711083 = enabled
    fix 13973691 = enabled
    fix 13486825 = enabled
    fix 13682550 = enabled
    fix 13826669 = enabled
    fix 14033181 = enabled
    fix 13836796 = enabled
    fix 12555499 = enabled
    fix 13568506 = enabled
    fix  9891396 = enabled
    fix 13835788 = enabled
    fix  7271518 = enabled
    fix 14127824 = enabled
    fix 12557401 = enabled
    fix 13350470 = enabled
    fix 14095362 = enabled
    fix 13000118 = enabled
    fix 14254795 = enabled
    fix 14012261 = enabled
    fix 14241953 = enabled
    fix 14221012 = enabled
    fix 13329748 = enabled
    fix 13843964 = enabled
    fix 14254052 = enabled
    fix 13814866 = enabled
    fix 14255600 = disabled
    fix 13735304 = enabled
    fix 14142884 = disabled
    fix 12909121 = enabled
    fix 14464068 = enabled
    fix 14295250 = 45000   
    fix  6873091 = enabled
    fix 13448445 = enabled
    fix 14155722 = enabled
    fix 14098180 = enabled
    fix 11905801 = enabled
    fix 14467202 = enabled
    fix 14541122 = enabled
    fix 13905599 = disabled
    fix 14320077 = enabled
    fix 14243782 = enabled
    fix  9114915 = enabled
    fix 14516175 = enabled
    fix 12812697 = enabled
    fix 13109345 = enabled
    fix 14456124 = enabled
    fix 14605040 = enabled
    fix 14595273 = disabled
    fix 14176247 = enabled
    fix 11894476 = enabled
    fix 14256885 = enabled
    fix 14545269 = disabled
    fix 14668404 = disabled
    fix 14144611 = enabled
    fix 14346182 = enabled
    fix 13083139 = enabled
    fix 14726188 = enabled
    fix 14707009 = enabled
    fix 14703133 = enabled
    fix 14618560 = enabled
    fix 14170552 = enabled
    fix 13263174 = enabled
    fix 14669785 = enabled
    fix 14633570 = enabled
    fix 14755138 = enabled
    fix 14682092 = enabled
    fix 14712222 = enabled
    fix 14570575 = enabled
    fix 14707748 = disabled
    fix 14684079 = enabled
    fix 13245379 = enabled
    fix 13853916 = enabled
    fix 13699007 = enabled
    fix 14843189 = enabled
    fix 14147762 = enabled
    fix 14795969 = enabled
    fix 14746036 = 1       
    fix 14750501 = enabled
    fix 13891981 = enabled
    fix 15996520 = enabled
    fix 16026776 = enabled
    fix 13573073 = enabled
    fix 13263455 = enabled
    fix 16053273 = enabled
    fix 16029607 = enabled
    fix 14242833 = enabled
    fix 13362020 = enabled
    fix 13799389 = enabled
    fix 12693573 = enabled
    fix 15998585 = enabled
    fix 16166364 = enabled
    fix 14723910 = enabled
    fix 15873008 = enabled
    fix 14133928 = enabled
    fix 16085999 = enabled
    fix 14176203 = enabled
    fix 16226575 = enabled
    fix 16015637 = enabled
    fix 15968693 = disabled
    fix 16220895 = enabled
    fix 16178821 = enabled
    fix 11865196 = enabled
    fix 16237969 = enabled
    fix 16058481 = enabled
    fix 13361493 = enabled
    fix 16264537 = enabled
    fix 14401107 = enabled
    fix 13943459 = enabled
    fix 13994546 = enabled
    fix  7174435 = enabled
    fix 14750443 = enabled
    fix 14469756 = enabled
    fix 14552075 = enabled
    fix 16324844 = enabled
    fix 13583529 = enabled
    fix 14565911 = enabled
    fix 13526551 = enabled
    fix 16368002 = enabled
    fix 16077770 = enabled
    fix 16419357 = enabled
    fix 15889476 = disabled
    fix 16273483 = enabled
    fix 16496848 = disabled
    fix 14107333 = enabled
    fix 11814337 = enabled
    fix 15882436 = enabled
    fix 14764840 = enabled
    fix 16226660 = enabled
    fix 16555865 = enabled
    fix 16625151 = enabled
    fix 16092378 = enabled
    fix 16487030 = enabled
    fix  9552303 = enabled
    fix 16609749 = enabled
    fix 16751246 = enabled
    fix 13253977 = enabled
    fix 14058291 = disabled
    fix 16749025 = enabled
    fix 16750067 = enabled
    fix 16726844 = enabled
    fix 15899648 = enabled
    fix 16690013 = enabled
    fix 15996156 = enabled
    fix 16544878 = enabled
    fix  9413591 = disabled
    fix 16792882 = 0       
    fix 16725982 = enabled
    fix 14648222 = enabled
    fix 16799181 = enabled
    fix 16516883 = enabled
    fix 16507317 = enabled
    fix 16837274 = enabled
    fix 14085520 = enabled
    fix 16713081 = enabled
    fix 14703295 = enabled
    fix 16908409 = enabled
    fix 16212250 = enabled
    fix 13692395 = disabled
    fix 17087729 = enabled
    fix 17088819 = enabled
    fix 13848786 = enabled
    fix 13522189 = enabled
    fix 16400122 = enabled
    fix 16796185 = enabled
    fix 15950252 = enabled
    fix 17070464 = enabled
    fix 16976121 = enabled
    fix 14580303 = enabled
    fix 16554552 = enabled
    fix 16582322 = enabled
    fix 16712213 = enabled
    fix 17382690 = enabled
    fix 14846352 = enabled
    fix 16516751 = enabled
    fix  3174223 = enabled
    fix  8611462 = enabled
    fix 14851437 = 3       
    fix 17348895 = enabled
    fix 16515789 = enabled
    fix  5451645 = disabled
    fix 14062749 = enabled
    fix 16346018 = enabled
    fix 12977599 = enabled
    fix 14191778 = enabled
    fix 15939321 = enabled
    fix 16874299 = enabled
    fix 16470836 = enabled
    fix 16805362 = disabled
    fix 17442009 = disabled
    fix 16825679 = enabled
    fix 17543180 = enabled
    fix 17301564 = enabled
    fix 12373708 = enabled
    fix 17397506 = enabled
    fix 14558315 = enabled
    fix 16615686 = enabled
    fix 16622801 = enabled
    fix 10038517 = enabled
    fix 16954950 = enabled
    fix 17728161 = enabled
    fix 17760375 = enabled
    fix 14311185 = enabled
    fix 13077335 = disabled
    fix 13458979 = disabled
    fix 17485514 = enabled
    fix 17599514 = enabled
    fix 17640863 = enabled
    fix 17716301 = enabled
    fix 17368047 = disabled
    fix 17597748 = enabled
    fix 17303359 = enabled
    fix 17376322 = disabled
    fix 16391176 = disabled
    fix 16673868 = enabled
    fix 17800514 = enabled
    fix 14826303 = enabled
    fix 17663076 = enabled
    fix 17760755 = enabled
    fix 17793460 = enabled
    fix 17997159 = enabled
    fix 17938754 = enabled
    fix 14733442 = enabled
    fix 17727676 = enabled
    fix 17781659 = enabled
    fix 17526569 = enabled
    fix 17950612 = enabled
    fix 17760686 = enabled
    fix 17696414 = enabled
    fix 17799716 = enabled
    fix 18116777 = enabled
    fix 18159664 = disabled
    fix 16052625 = enabled
    fix 18091750 = enabled
    fix 17572606 = enabled
    fix 17971955 = enabled
    fix 17946915 = enabled
    fix 18196576 = enabled
    fix 10145667 = enabled
    fix 17736165 = enabled
    fix 16434021 = enabled
    fix 18035463 = enabled
    fix 18011820 = enabled
    fix 16405740 = enabled
    fix 14612201 = enabled
    fix 17491018 = enabled
    fix 18365267 = enabled
    fix 17986549 = enabled
    fix 18115594 = enabled
    fix 18182018 = enabled
    fix 18302923 = enabled
    fix 18377553 = enabled
    fix  5677419 = enabled
    fix 17896018 = disabled
    fix 13097308 = enabled
    fix 17863980 = enabled
    fix 17567154 = enabled
    fix 18398980 = enabled
    fix 17023040 = enabled
    fix 17991403 = 1       
    fix 16033838 = enabled
    fix 17908541 = enabled
    fix 18134680 = enabled
    fix 18405517 = 0       
    fix 18304693 = enabled
    fix 18456944 = enabled
    fix 18467455 = enabled
    fix 18425876 = enabled
    fix 18508675 = enabled
    fix 17473046 = disabled
    fix 18636079 = enabled
    fix 18388128 = enabled
    fix 18415557 = enabled
    fix 18385778 = enabled
    fix 18308329 = enabled
    fix 18461984 = enabled
    fix 17973658 = enabled
    fix 18558952 = enabled
    fix  9912950 = enabled
    fix 18751128 = enabled
    fix 16809786 = enabled
    fix 18795224 = enabled
    fix 14776289 = enabled
    fix 18823135 = enabled
    fix 18874242 = enabled
    fix 18770199 = disabled
    fix  4185270 = disabled
    fix 18765574 = enabled
    fix 18754357 = disabled
    fix 18959892 = enabled
    fix 17324379 = disabled
    fix 18952882 = enabled
    fix 18924221 = enabled
    fix 18422714 = enabled
    fix 18798414 = enabled
    fix 18969167 = enabled
    fix 16191689 = enabled
    fix 18907562 = enabled
    fix 19055664 = enabled
    fix 18898582 = enabled
    fix 18960760 = enabled
    fix 19070454 = enabled
    fix 19230097 = enabled
    fix 19063497 = enabled
    fix 19046459 = enabled
    fix 19269482 = enabled
    fix 18876528 = enabled
    fix 19227996 = enabled
    fix 18864613 = enabled
    fix 19239478 = enabled
    fix 19451895 = enabled
    fix 19450139 = enabled
    fix 18907390 = enabled
    fix 19025959 = enabled
    fix 19309574 = enabled
    fix 16774698 = enabled
    fix 16923858 = 6       
    fix 19546825 = enabled
    fix 19475484 = enabled
    fix 19498595 = enabled
    fix 16934526 = enabled
    fix 19287919 = enabled
    fix 19386746 = enabled
    fix 19774486 = enabled
    fix 19803410 = enabled
    fix 18671960 = enabled
    fix 19484911 = enabled
    fix 19731940 = enabled
    fix 19604408 = enabled
    fix 14402409 = enabled
    fix 16486095 = enabled
    fix 19563657 = enabled
    fix 19632232 = enabled
    fix 19889960 = enabled
    fix 17208933 = enabled
    fix 19710102 = enabled
    fix 18697515 = enabled
    fix 18318631 = enabled
    fix 19377983 = enabled
    fix 20078639 = enabled
    fix 19503668 = enabled
    fix 20124288 = enabled
    fix 19847091 = enabled
    fix 12989345 = enabled
    fix 12618642 = enabled
    fix 19779920 = enabled
    fix 20186282 = enabled
    fix 20186295 = enabled
    fix 19563433 = enabled
    fix 19848804 = enabled
    fix 20046257 = enabled
    fix 20265690 = enabled
    fix 16047938 = enabled
    fix 19507904 = enabled
    fix 18915345 = enabled
    fix 20173686 = disabled
    fix 20329321 = enabled
    fix 20225191 = enabled
    fix 18776755 = enabled
    fix 19882842 = enabled
    fix 20010996 = enabled
    fix 20445764 = disabled
    fix 19728543 = disabled
    fix 20379571 = enabled
    fix 20129763 = enabled
    fix 19899588 = enabled
    fix 10098852 = enabled
    fix 19663421 = disabled
    fix 20355502 = 0       
    fix 20526705 = enabled
    fix 20465582 = enabled
    fix 20581886 = disabled
    fix 16732417 = enabled
    fix 20732410 = enabled
    fix 20289688 = enabled
    fix 20543684 = enabled
    fix 20636003 = enabled
    fix 20506136 = enabled
    fix 20458598 = disabled
    fix 20830312 = enabled
    fix 19768896 = enabled
    fix 20321661 = enabled
    fix 19814541 = enabled
    fix 20933264 = enabled
    fix 17443547 = enabled
    fix 20602794 = enabled
    fix 19123152 = enabled
    fix 19899833 = enabled
    fix 20754928 = enabled
    fix 20808265 = enabled
    fix 20808192 = enabled
    fix 20340595 = enabled
    fix 14474264 = disabled
    fix 20508819 = enabled
    fix 21098866 = disabled
    fix 18949550 = enabled
    fix 14775297 = enabled
    fix 19568958 = disabled
    fix 20923950 = enabled
    fix 21283159 = enabled
    fix 17497847 = enabled
    fix 21211629 = enabled
    fix 20819668 = enabled
    fix 20232513 = enabled
    fix 20906782 = enabled
    fix 20587527 = enabled
    fix 20914534 = disabled
    fix 20830544 = enabled
    fix 16851194 = enabled
    fix 19186783 = enabled
    fix 19653920 = enabled
    fix 21211786 = enabled
    fix 21057343 = enabled
    fix 21503478 = enabled
    fix 19808939 = disabled
    fix 21476032 = enabled
    fix 20859246 = enabled
    fix 20838633 = 2       
    fix 21639419 = enabled
    fix 20951803 = enabled
    fix 21683982 = enabled
    fix 20216500 = enabled
    fix 21614112 = enabled
    fix 20906162 = enabled
    fix 20854798 = enabled
    fix 21509656 = enabled
    fix 21833220 = enabled
    fix 21802552 = enabled
    fix 21452843 = enabled
    fix 21553593 = enabled
    fix 21093805 = enabled
    fix 16220085 = disabled
    fix 21800590 = enabled
    fix 21273039 = enabled
    fix 16750133 = enabled
    fix 22013607 = enabled
    fix 22152372 = enabled
    fix 22077191 = enabled
    fix 22123025 = enabled
    fix 16913734 = enabled
    fix  8357294 = enabled
    fix 12670904 = enabled
    fix 21979983 = enabled
    fix 22158526 = enabled
    fix 21971099 = enabled
    fix 22090662 = enabled
    fix 22149010 = disabled
    fix 21300129 = enabled
    fix 21339278 = enabled
    fix 20270511 = enabled
    fix 21424812 = enabled
    fix 22114090 = enabled
    fix 22310074 = disabled
    fix 22159570 = enabled
    fix 22272439 = enabled
    fix 22372694 = enabled
    fix 22514195 = enabled
    fix 20413540 = enabled
    fix 22520315 = enabled
    fix 22649054 = enabled
    fix  8617254 = enabled
    fix 22020067 = enabled
    fix 22864730 = enabled
    fix 21099502 = enabled
    fix 22904304 = enabled
    fix 22967807 = enabled
    fix 22879002 = enabled
    fix 23019286 = enabled
    fix 22760704 = enabled
    fix 20853506 = enabled
    fix 22540411 = disabled
    fix 22513493 = enabled
    fix 22518491 = enabled
    fix 23103096 = enabled
    fix 22143411 = enabled
    fix 23180670 = enabled
    fix 23002609 = enabled
    fix 22928015 = 1       
    fix 23210039 = enabled
    fix 23102649 = enabled
    fix 23071621 = enabled
    fix 22822245 = enabled
    fix 23136865 = enabled
    fix 23176721 = enabled
    fix 23308385 = enabled
    fix 23223113 = enabled
    fix 22301868 = disabled
    fix 22258300 = enabled
    fix 22205301 = enabled
    fix 23514473 = 1       
    fix 23556483 = enabled
    fix 21305617 = enabled
    fix 22533539 = enabled
    fix 23596611 = enabled
    fix 20347374 = disabled
    fix 22937293 = enabled
    fix 20107874 = enabled
    fix 19582337 = enabled
    fix 22746853 = enabled
    fix 23537232 = enabled
    fix 23565188 = enabled
    fix 20228468 = enabled
    fix 22393169 = enabled
    fix 24426912 = enabled
    fix 24690046 = enabled
    fix 23732552 = enabled
    fix 20648883 = enabled
    fix 24654471 = enabled
    fix 23738304 = enabled
    fix 24010030 = enabled
    fix 22766607 = enabled
    fix 24600280 = enabled
    fix 24845754 = enabled
    fix 24533235 = enabled
    fix 22128803 = enabled
    fix 24926999 = enabled
    fix 24434608 = enabled
    fix 25094218 = enabled
    fix 24819957 = enabled
    fix 23478835 = enabled
    fix 24745366 = enabled
    fix 24920138 = disabled
    fix 24570810 = enabled
    fix 25058954 = enabled
    fix 24518392 = enabled
    fix 23738186 = enabled
    fix 25234139 = enabled
    fix 25108065 = enabled
    fix 22212124 = enabled
    fix 25123105 = enabled
    fix 25078728 = enabled
    fix 23719498 = 0       
    fix 25090203 = enabled
    fix 23197730 = enabled
    fix 23738553 = enabled
    fix 22070473 = enabled
    fix 19956351 = enabled
    fix 25393617 = enabled
    fix 21130817 = enabled
    fix 25342352 = enabled
    fix 25167306 = disabled
    fix 23473108 = enabled
    fix 25501716 = enabled
    fix 22973474 = enabled
    fix 22153026 = enabled
    fix 25367727 = enabled
    fix 25477783 = enabled
    fix 25493582 = enabled
    fix 22205362 = enabled
    fix 23249829 = enabled
    fix 25120742 = enabled
    fix 23853877 = disabled
    fix 25796244 = enabled
    fix 25575369 = enabled
    fix 25643889 = disabled
    fix 25436615 = enabled
    fix 25478095 = enabled
    fix 25405100 = enabled
    fix 24952618 = enabled
    fix 25809211 = enabled
    fix 26094674 = enabled
    fix 21183079 = enabled
    fix 25948370 = enabled
    fix 24545933 = enabled
    fix 25926263 = enabled
    fix 26019148 = enabled
    fix 25995431 = enabled
    fix 21870589 = enabled
    fix 24584046 = enabled
    fix 26374214 = enabled
    fix 25476149 = enabled
    fix 25345279 = enabled
    fix 24478915 = enabled
    fix 26541991 = enabled
    fix 26338880 = enabled
    fix 26270685 = disabled
    fix 26560136 = enabled
    fix 26671842 = enabled
    fix 26712343 = enabled
    fix 26585420 = enabled
    fix 26677151 = enabled
    fix 26367868 = enabled
    fix 26552730 = disabled
    fix 26177646 = enabled
    fix 23643560 = enabled
    fix 25792706 = enabled
    fix 27057772 = disabled
    fix 26986173 = enabled
    fix 26423085 = enabled
    fix 27077069 = enabled
    fix 26536320 = enabled
    fix 25138211 = enabled
    fix 27321179 = enabled
    fix 27343844 = enabled
    fix 26790514 = enabled
    fix 27282295 = enabled
    fix 27432718 = enabled
    fix 27268249 = enabled
    fix 25507796 = enabled
    fix 25507810 = enabled
    fix 25507823 = disabled
    fix 25507828 = enabled
    fix 25660695 = enabled
    fix 27311177 = enabled
    fix 24841671 = enabled
    fix 26842212 = enabled
    fix 27559630 = enabled
    fix 27436816 = enabled
    fix 23098284 = enabled
    fix 26660568 = enabled
    fix 27693205 = enabled
    fix 27096140 = disabled
    fix 27174324 = enabled
    fix 27000158 = enabled
    fix 27208525 = enabled
    fix 27745220 = enabled
    fix 26527656 = enabled
    fix 27675947 = disabled
    fix 26566785 = enabled
    fix 27175987 = enabled
    fix  8932139 = enabled
    fix 18816560 = enabled
    fix 27466597 = enabled
    fix 27210659 = enabled
    fix 27643128 = enabled
    fix 27782339 = enabled
    fix 24761824 = enabled
    fix 27634227 = enabled
    fix 26733841 = enabled
    fix 27971253 = enabled
    fix 22174392 = enabled
    fix 27730925 = enabled
    fix 22559379 = enabled
    fix 27622097 = enabled
    fix 20424684 = enabled
    fix 27593424 = enabled
    fix 28096482 = enabled
    fix 24573561 = enabled
    fix 22582700 = enabled
    fix 28201419 = enabled
    fix 26836964 = disabled
    fix 27991474 = enabled
    fix 28210382 = enabled
    fix 27500916 = enabled
    fix 28012754 = 7       
    fix 28071742 = enabled
    fix 27836278 = enabled
    fix 28256899 = enabled
    fix 28345522 = 0       
    fix 20922160 = enabled
    fix 28135957 = enabled
    fix 23058521 = enabled
    fix 28567417 = disabled
    fix 27680422 = 1       
    fix 28084251 = enabled
    fix 28660798 = enabled
    fix 27541468 = enabled
    fix 28378804 = enabled
    fix 28242450 = enabled
    fix 22569303 = enabled
    fix 28558645 = enabled
    fix 28173995 = enabled
    fix 26758837 = enabled
    fix 28725660 = enabled
    fix 28813044 = enabled
    fix 27642227 = enabled
    fix 28816113 = enabled
    fix 28072567 = enabled
    fix 24561942 = enabled
    fix 28135381 = enabled
    fix 28835937 = enabled
    fix 28606162 = disabled
    fix 28708585 = enabled
    fix 27551065 = enabled
    fix 28144569 = enabled
    fix 28985067 = enabled
    fix 27776359 = enabled
    fix 27825962 = disabled
    fix 20228093 = enabled
    fix 30751143 = disabled
    fix 28781681 = enabled
    fix 26577716 = enabled
    fix 28498976 = enabled
    fix 28965084 = enabled
    fix 28776811 = enabled
    fix 29331066 = enabled
    fix 29499077 = enabled
    fix 28522248 = 3       
    fix 29358049 = enabled
    fix 29450812 = enabled
    fix 29657973 = enabled
    fix 29665260 = enabled
    fix 29725425 = enabled
    fix 29487407 = enabled
    fix 29794416 = enabled
    fix 28414968 = 3       
    fix 29132869 = enabled
    fix 29435966 = enabled
    fix 27317825 = enabled
    fix 29302565 = enabled
    fix 27572786 = enabled
    fix 29463553 = enabled
    fix 29651517 = enabled
    fix 29937655 = enabled
    fix 29939400 = enabled
    fix 29933934 = 3       
    fix 29972495 = enabled
    fix 28602253 = enabled
    fix 29867728 = enabled
    fix 29304314 = enabled
    fix 30063629 = enabled
    fix 30207519 = enabled
    fix 28776431 = enabled
    fix 29687220 = enabled
    fix 30001331 = enabled
    fix 30228422 = enabled
    fix 30235754 = 0       
    fix 30232638 = enabled
    fix 30006705 = enabled
    fix 28242130 = enabled
    fix 30374470 = enabled
    fix 30008456 = 1       
    fix 10123661 = enabled
    fix 30028663 = 1       
    fix 30142527 = enabled
    fix 30358390 = enabled
    fix 29712727 = enabled
    fix 29385774 = enabled
    fix 29590666 = disabled
    fix 30235878 = enabled
    fix 30467743 = enabled
    fix 30486896 = enabled
    fix 30539126 = enabled
    fix 30483217 = enabled
    fix 30235691 = enabled
    fix 30652595 = enabled
    fix 30570982 = enabled
    fix 30483184 = enabled
    fix 30483151 = enabled
    fix 30347410 = enabled
    fix 29930457 = enabled
    fix 29893198 = enabled
    fix 22387320 = enabled
    fix 30751171 = enabled
    fix 30609737 = enabled
    fix 30723767 = enabled
    fix  9876287 = enabled
    fix 30564898 = enabled
    fix 30311403 = enabled
    fix 30646077 = enabled
    fix 30602828 = enabled
    fix 29653132 = disabled
    fix 30776676 = enabled
    fix 19138896 = enabled
    fix 30822446 = enabled
    fix 30470947 = enabled
    fix 30786641 = enabled
    fix 30896685 = disabled
    fix 30018126 = enabled
    fix 30902655 = enabled
    fix 30927440 = enabled
    fix 30681521 = 1       
    fix 31009032 = enabled
    fix 31014660 = enabled
    fix 30231086 = enabled
    fix 30617002 = enabled
    fix 30905358 = enabled
    fix 30222669 = enabled
    fix 31072746 = enabled
    fix 27261477 = enabled
    fix 31069997 = enabled
    fix 31077481 = enabled
    fix 30998035 = enabled
    fix 30980115 = enabled
    fix 30972817 = enabled
    fix 31001490 = enabled
    fix 30267129 = enabled
    fix 30618230 = enabled
    fix 30479981 = 1       
    fix 30717947 = enabled
    fix 30675651 = disabled
    fix 28999046 = enabled
    fix 27262721 = enabled
    fix 30249927 = enabled
    fix 26491973 = enabled
    fix 18101156 = disabled
    fix 30630477 = enabled
    fix 30568514 = enabled
    fix 30697843 = 3       
    fix 30195773 = enabled
    fix 29636078 = enabled
    fix 31191224 = enabled
    fix 31091402 = enabled
    fix 30942641 = enabled
    fix 31459242 = disabled
    fix 31134487 = enabled
    fix 31001295 = enabled
    fix 30781970 = disabled
    fix 29222233 = enabled
    fix 31475299 = enabled
    fix 31448053 = enabled
    fix 31045304 = enabled
    fix 31162457 = enabled
    fix 31360214 = enabled
    fix 31512115 = enabled
    fix 31454352 = enabled
    fix 31626438 = enabled
    fix 31444353 = 0       
    fix 28234255 = 3       
    fix 30537403 = enabled
    fix 31386820 = enabled
    fix 31579233 = enabled
    fix 30198239 = 7       
    fix 31580352 = enabled
    fix 30616738 = disabled
    fix 29773708 = disabled
    fix 27060221 = disabled
    fix 19861179 = disabled
    fix 31517502 = enabled
    fix 31266779 = enabled
    fix 31487332 = enabled
    fix 31821701 = enabled
    fix 31895670 = disabled
    fix 31670824 = disabled
    fix 29696242 = enabled
    fix 32005394 = enabled
    fix 32037237 = enabled
    fix 32075777 = disabled
    fix 31625959 = enabled
    fix 31580374 = enabled
    fix 17295505 = disabled
    fix 31668694 = enabled
    fix 32014520 = enabled
    fix 31974424 = enabled
    fix 25979242 = enabled
    fix 31945701 = disabled
    fix 30979701 = enabled
    fix 31961578 = disabled
    fix 31496840 = enabled
    fix 31143146 = enabled
    fix 31558194 = enabled
    fix 32107621 = enabled
    fix 32205825 = enabled


Query Block Registry:
SEL$2 0x25bb5580 (PARSER)
  SEL$F5BB74E1 0x25bb6780 (VIEW MERGE SEL$1; SEL$2; SEL$1) [FINAL]
SEL$1 0x25bb6780 (PARSER)
  SEL$F5BB74E1 0x25bb6780 (VIEW MERGE SEL$1; SEL$2; SEL$1) [FINAL]
digraph g{
    rankdir = TB
    "SEL$F5BB74E1" [peripheries=2]
    "SEL$1" -> "SEL$F5BB74E1" [label="VIEW MERGE"]
    "SEL$2" -> "SEL$F5BB74E1" [style=dotted]
    "SEL$1"
    "SEL$2"
    { rank = same }
    {
      rank="sink";
      rankdir = LR;
      item1 [style=invis];
      item2 [shape="plaintext" label="Participating query blocks"];
      item3 [label="&nbsp;" peripheries=2];
      item4 [shape="plaintext" label="Final query blocks"];
      item1 -> item2 [style=dotted];
      { rank=same item3 item4; }
    }
}

:
    call(in-use=19248, alloc=390936), compile(in-use=116712, alloc=181720), execution(in-use=16728, alloc=20224)

End of Optimizer State Dump
Dumping Hints
=============
====================== END SQL Statement Dump ======================
AP: qesdpDPCSetupNextExec(enter): SQL_ID=a1ytbhgb1a8kp
AP: qesdpDPCSetupNextExec: Not an adaptive plan
AP: qesdpInitExecMutable(enter): SQL_ID=a1ytbhgb1a8kp
AP: qesdpInitExecMut (exit)
AP: qesdpSetupMutable(enter): SQL_ID=a1ytbhgb1a8kp
