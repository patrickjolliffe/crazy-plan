Trace file /opt/oracle/diag/rdbms/orclcdb/ORCLCDB/trace/ORCLCDB_ora_23667.trc
Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0
Build label:    RDBMS_19.3.0.0.0DBRU_LINUX.X64_190417
ORACLE_HOME:    /opt/oracle/product/19c/dbhome_1
System name:	Linux
Node name:	9b5b0be11923
Release:	4.19.128-microsoft-standard
Version:	#1 SMP Tue Jun 23 12:58:10 UTC 2020
Machine:	x86_64
Instance name: ORCLCDB
Redo thread mounted by this instance: 1
Oracle process number: 59
Unix process pid: 23667, image: oracle@9b5b0be11923


*** 2021-01-18T03:04:04.647576+00:00 (ORCLPDB1(3))
*** SESSION ID:(377.10645) 2021-01-18T03:04:04.647621+00:00
*** CLIENT ID:() 2021-01-18T03:04:04.647632+00:00
*** SERVICE NAME:(orclpdb1) 2021-01-18T03:04:04.647643+00:00
*** MODULE NAME:(SQLcl) 2021-01-18T03:04:04.647652+00:00
*** ACTION NAME:() 2021-01-18T03:04:04.647661+00:00
*** CLIENT DRIVER:(jdbcthin : 21.1.0.0.0) 2021-01-18T03:04:04.647669+00:00
*** CONTAINER ID:(3) 2021-01-18T03:04:04.647679+00:00
 
Registered qb: SEL$1 0x8126d988 (PARSER)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$1 nbfros=3 flg=0
    fro(0): flg=4 objn=73956 hint_alias="L"@"SEL$1"
    fro(1): flg=4 objn=73958 hint_alias="T1"@"SEL$1"
    fro(2): flg=4 objn=73960 hint_alias="T2"@"SEL$1"

SPM: statement not found in SMB
SPM: capture of plan baseline is OFF

**************************
Automatic degree of parallelism (AUTODOP)
**************************
Automatic degree of parallelism is disabled: Parameter.
kkopqSetForceParallelProperties: Hint:no
Query: compute:yes forced:no forceDop:0
Global Manual Dop: 1 - Rounded?: no

PM: Considering predicate move-around in query block SEL$1 (#0)
**************************
Predicate Move-Around (PM)
**************************
OPTIMIZER INFORMATION

******************************************
----- Current SQL Statement for this session (sql_id=a5t76fz006a0y) -----
explain plan for SELECT /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null FROM l, t1, t2 WHERE  
(  ( t1.t1f = 0 AND t2.t2f1 BETWEEN 9 AND 10)       OR 
   ( t1.t1f = 1 AND t2.t2f1 = 14 AND t2.t2f2 = 13  )   )  AND 
    ( l.id1 = t1.id1 AND l.id2 = t2.id2 )
*******************************************
Legend
The following abbreviations are used by optimizer trace.
CBQT - cost-based query transformation
JPPD - join predicate push-down
OJPPD - old-style (non-cost-based) JPPD
FPD - filter push-down
PM - predicate move-around
CVM - complex view merging
SPJ - select-project-join
SJC - set join conversion
SU - subquery unnesting
OBYE - order by elimination
OST - old style star transformation
ST - new (cbqt) star transformation
CNT - count(col) to count(*) transformation
JE - Join Elimination
JF - join factorization
CBY - connect by
SLP - select list pruning
DP - distinct placement
VT - vector transformation
AAT - Approximate Aggregate Transformation
ORE - CBQT OR-Expansion
LORE - Legacy OR-Expansion
qb - query block
LB - leaf blocks
DK - distinct keys
LB/K - average number of leaf blocks per key
DB/K - average number of data blocks per key
CLUF - clustering factor
NDV - number of distinct values
Resp - response cost
Card - cardinality
Resc - resource cost
NL - nested loops (join)
SM - sort merge (join)
HA - hash (join)
CPUSPEED - CPU Speed 
IOTFRSPEED - I/O transfer speed
IOSEEKTIM - I/O seek time
SREADTIM - average single block read time
MREADTIM - average multiblock read time
MBRC - average multiblock read count
MAXTHR - maximum I/O system throughput
SLAVETHR - average slave I/O throughput
dmeth - distribution method
  1: no partitioning required
  2: value partitioned
  4: right is random (round-robin)
  128: left is random (round-robin)
  8: broadcast right and partition left
  16: broadcast left and partition right
  32: partition left using partitioning of right
  64: partition right using partitioning of left
  256: run the join in serial
  0: invalid distribution method
sel - selectivity
ptn - partition
AP - adaptive plans
***************************************
PARAMETERS USED BY THE OPTIMIZER
********************************
  *************************************
  PARAMETERS WITH ALTERED VALUES
  ******************************
Compilation Environment Dump
Bug Fix Control Environment


  *************************************
  PARAMETERS WITH DEFAULT VALUES
  ******************************
Compilation Environment Dump
optimizer_mode_hinted               = false
optimizer_features_hinted           = 0.0.0
parallel_execution_enabled          = true
parallel_query_forced_dop           = 0
parallel_dml_forced_dop             = 0
parallel_ddl_forced_degree          = 0
parallel_ddl_forced_instances       = 0
_query_rewrite_fudge                = 90
optimizer_features_enable           = 19.1.0
_optimizer_search_limit             = 5
cpu_count                           = 8
active_instance_count               = 1
parallel_threads_per_cpu            = 1
hash_area_size                      = 131072
bitmap_merge_area_size              = 1048576
sort_area_size                      = 65536
sort_area_retained_size             = 0
_sort_elimination_cost_ratio        = 0
_optimizer_block_size               = 8192
_sort_multiblock_read_count         = 2
_hash_multiblock_io_count           = 0
_db_file_optimizer_read_count       = 8
_optimizer_max_permutations         = 2000
pga_aggregate_target                = 524288 KB
_pga_max_size                       = 204800 KB
_query_rewrite_maxdisjunct          = 257
_smm_auto_min_io_size               = 56 KB
_smm_auto_max_io_size               = 248 KB
_smm_min_size                       = 524 KB
_smm_max_size_static                = 102400 KB
_smm_px_max_size_static             = 262144 KB
_cpu_to_io                          = 0
_optimizer_undo_cost_change         = 19.1.0
parallel_query_mode                 = enabled
_enable_parallel_dml                = disabled
parallel_ddl_mode                   = enabled
optimizer_mode                      = all_rows
sqlstat_enabled                     = false
_optimizer_percent_parallel         = 101
_always_anti_join                   = choose
_always_semi_join                   = choose
_optimizer_mode_force               = true
_partition_view_enabled             = true
_always_star_transformation         = false
_query_rewrite_or_error             = false
_hash_join_enabled                  = true
cursor_sharing                      = exact
_b_tree_bitmap_plans                = true
star_transformation_enabled         = false
_optimizer_cost_model               = choose
_new_sort_cost_estimate             = true
_complex_view_merging               = true
_unnest_subquery                    = true
_eliminate_common_subexpr           = true
_pred_move_around                   = true
_convert_set_to_join                = false
_push_join_predicate                = true
_push_join_union_view               = true
_fast_full_scan_enabled             = true
_optim_enhance_nnull_detection      = true
_parallel_broadcast_enabled         = true
_px_broadcast_fudge_factor          = 100
_ordered_nested_loop                = true
_no_or_expansion                    = false
optimizer_index_cost_adj            = 100
optimizer_index_caching             = 0
_system_index_caching               = 0
_disable_datalayer_sampling         = false
query_rewrite_enabled               = true
query_rewrite_integrity             = enforced
_query_cost_rewrite                 = true
_query_rewrite_2                    = true
_query_rewrite_1                    = true
_query_rewrite_expression           = true
_query_rewrite_jgmigrate            = true
_query_rewrite_fpc                  = true
_query_rewrite_drj                  = false
_full_pwise_join_enabled            = true
_partial_pwise_join_enabled         = true
_left_nested_loops_random           = true
_improved_row_length_enabled        = true
_index_join_enabled                 = true
_enable_type_dep_selectivity        = true
_improved_outerjoin_card            = true
_optimizer_adjust_for_nulls         = true
_optimizer_degree                   = 0
_use_column_stats_for_function      = true
_subquery_pruning_enabled           = true
_subquery_pruning_mv_enabled        = false
_or_expand_nvl_predicate            = true
_like_with_bind_as_equality         = false
_table_scan_cost_plus_one           = true
_cost_equality_semi_join            = true
_default_non_equality_sel_check     = true
_new_initial_join_orders            = true
_oneside_colstat_for_equijoins      = true
_optim_peek_user_binds              = true
_minimal_stats_aggregation          = true
_force_temptables_for_gsets         = false
workarea_size_policy                = auto
_smm_auto_cost_enabled              = true
_gs_anti_semi_join_allowed          = true
_optim_new_default_join_sel         = true
optimizer_dynamic_sampling          = 2
_pre_rewrite_push_pred              = true
_optimizer_new_join_card_computation = true
_union_rewrite_for_gs               = yes_gset_mvs
_generalized_pruning_enabled        = true
_optim_adjust_for_part_skews        = true
_force_datefold_trunc               = false
statistics_level                    = typical
_optimizer_system_stats_usage       = true
skip_unusable_indexes               = true
_remove_aggr_subquery               = true
_optimizer_push_down_distinct       = 0
_dml_monitoring_enabled             = true
_optimizer_undo_changes             = false
_predicate_elimination_enabled      = true
_nested_loop_fudge                  = 100
_project_view_columns               = true
_local_communication_costing_enabled = true
_local_communication_ratio          = 50
_query_rewrite_vop_cleanup          = true
_slave_mapping_enabled              = true
_optimizer_cost_based_transformation = linear
_optimizer_mjc_enabled              = true
_right_outer_hash_enable            = true
_spr_push_pred_refspr               = true
_optimizer_cache_stats              = false
_optimizer_cbqt_factor              = 50
_optimizer_squ_bottomup             = true
_fic_area_size                      = 131072
_optimizer_skip_scan_enabled        = true
_optimizer_cost_filter_pred         = false
_optimizer_sortmerge_join_enabled   = true
_optimizer_join_sel_sanity_check    = true
_mmv_query_rewrite_enabled          = true
_bt_mmv_query_rewrite_enabled       = true
_add_stale_mv_to_dependency_list    = true
_distinct_view_unnesting            = false
_optimizer_dim_subq_join_sel        = true
_optimizer_disable_strans_sanity_checks = 0
_optimizer_compute_index_stats      = true
_push_join_union_view2              = true
optimizer_ignore_hints              = false
_optimizer_random_plan              = 0
_query_rewrite_setopgrw_enable      = true
_optimizer_correct_sq_selectivity   = true
_disable_function_based_index       = false
_optimizer_join_order_control       = 3
_optimizer_cartesian_enabled        = true
_optimizer_starplan_enabled         = true
_extended_pruning_enabled           = true
_optimizer_push_pred_cost_based     = true
_optimizer_null_aware_antijoin      = true
_optimizer_extend_jppd_view_types   = true
_sql_model_unfold_forloops          = run_time
_enable_dml_lock_escalation         = false
_bloom_filter_enabled               = true
_update_bji_ipdml_enabled           = 0
_optimizer_extended_cursor_sharing  = udo
_dm_max_shared_pool_pct             = 1
_optimizer_cost_hjsmj_multimatch    = true
_optimizer_transitivity_retain      = true
_px_pwg_enabled                     = true
optimizer_secure_view_merging       = true
_optimizer_join_elimination_enabled = true
flashback_table_rpi                 = non_fbt
_optimizer_cbqt_no_size_restriction = true
_optimizer_enhanced_filter_push     = true
_optimizer_filter_pred_pullup       = true
_rowsrc_trace_level                 = 0
_simple_view_merging                = true
_optimizer_rownum_pred_based_fkr    = true
_optimizer_better_inlist_costing    = all
_optimizer_self_induced_cache_cost  = false
_optimizer_min_cache_blocks         = 10
_optimizer_or_expansion             = depth
_optimizer_order_by_elimination_enabled = true
_optimizer_outer_to_anti_enabled    = true
_selfjoin_mv_duplicates             = true
_dimension_skip_null                = true
_force_rewrite_enable               = false
_optimizer_star_tran_in_with_clause = true
_optimizer_complex_pred_selectivity = true
_optimizer_connect_by_cost_based    = true
_gby_hash_aggregation_enabled       = true
_globalindex_pnum_filter_enabled    = true
_px_minus_intersect                 = true
_fix_control_key                    = 0
_force_slave_mapping_intra_part_loads = false
_force_tmp_segment_loads            = false
_query_mmvrewrite_maxpreds          = 10
_query_mmvrewrite_maxintervals      = 5
_query_mmvrewrite_maxinlists        = 5
_query_mmvrewrite_maxdmaps          = 10
_query_mmvrewrite_maxcmaps          = 20
_query_mmvrewrite_maxregperm        = 512
_query_mmvrewrite_maxqryinlistvals  = 500
_disable_parallel_conventional_load = false
_trace_virtual_columns              = false
_replace_virtual_columns            = true
_virtual_column_overload_allowed    = true
_kdt_buffering                      = true
_first_k_rows_dynamic_proration     = true
_optimizer_sortmerge_join_inequality = true
_optimizer_aw_stats_enabled         = true
_bloom_pruning_enabled              = true
result_cache_mode                   = MANUAL
_px_ual_serial_input                = true
_optimizer_skip_scan_guess          = false
_enable_row_shipping                = true
_row_shipping_threshold             = 100
_row_shipping_explain               = false
transaction_isolation_level         = read_commited
_optimizer_distinct_elimination     = true
_optimizer_multi_level_push_pred    = true
_optimizer_group_by_placement       = true
_optimizer_rownum_bind_default      = 10
_enable_query_rewrite_on_remote_objs = true
_optimizer_extended_cursor_sharing_rel = simple
_optimizer_adaptive_cursor_sharing  = true
_direct_path_insert_features        = 0
_optimizer_improve_selectivity      = true
optimizer_use_pending_statistics    = false
_optimizer_enable_density_improvements = true
_optimizer_aw_join_push_enabled     = true
_optimizer_connect_by_combine_sw    = true
_enable_pmo_ctas                    = 0
_optimizer_native_full_outer_join   = force
_bloom_predicate_enabled            = true
_optimizer_enable_extended_stats    = true
_is_lock_table_for_ddl_wait_lock    = 0
_pivot_implementation_method        = choose
optimizer_capture_sql_plan_baselines = false
optimizer_use_sql_plan_baselines    = true
_optimizer_star_trans_min_cost      = 0
_optimizer_star_trans_min_ratio     = 0
_with_subquery                      = OPTIMIZER
_optimizer_fkr_index_cost_bias      = 10
_optimizer_use_subheap              = true
parallel_degree_policy              = manual
parallel_degree                     = 0
parallel_min_time_threshold         = 10
_parallel_time_unit                 = 10
_optimizer_or_expansion_subheap     = true
_optimizer_free_transformation_heap = true
_optimizer_reuse_cost_annotations   = true
_result_cache_auto_size_threshold   = 100
_result_cache_auto_time_threshold   = 1000
_optimizer_nested_rollup_for_gset   = 100
_nlj_batching_enabled               = 1
parallel_query_default_dop          = 0
is_recur_flags                      = 0
optimizer_use_invisible_indexes     = false
flashback_data_archive_internal_cursor = 0
_optimizer_extended_stats_usage_control = 192
_parallel_syspls_obey_force         = true
cell_offload_processing             = true
_rdbms_internal_fplib_enabled       = false
db_file_multiblock_read_count       = 128
_bloom_folding_enabled              = true
_mv_generalized_oj_refresh_opt      = true
cell_offload_compaction             = ADAPTIVE
cell_offload_plan_display           = AUTO
_bloom_predicate_offload            = true
_bloom_filter_size                  = 0
_bloom_pushing_max                  = 512
parallel_degree_limit               = 65535
parallel_force_local                = false
parallel_max_degree                 = 8
total_cpu_count                     = 8
_optimizer_coalesce_subqueries      = true
_optimizer_fast_pred_transitivity   = true
_optimizer_fast_access_pred_analysis = true
_optimizer_unnest_disjunctive_subq  = true
_optimizer_unnest_corr_set_subq     = true
_optimizer_distinct_agg_transform   = true
_aggregation_optimization_settings  = 0
_optimizer_connect_by_elim_dups     = true
_optimizer_eliminate_filtering_join = true
_connect_by_use_union_all           = true
dst_upgrade_insert_conv             = true
advanced_queuing_internal_cursor    = 0
_optimizer_unnest_all_subqueries    = true
parallel_autodop                    = 0
parallel_ddldml                     = 0
_parallel_cluster_cache_policy      = adaptive
_parallel_scalability               = 50
iot_internal_cursor                 = 0
_optimizer_instance_count           = 0
_optimizer_connect_by_cb_whr_only   = false
_suppress_scn_chk_for_cqn           = nosuppress_1466
_optimizer_join_factorization       = true
_optimizer_use_cbqt_star_transformation = true
_optimizer_table_expansion          = true
_and_pruning_enabled                = true
_deferred_constant_folding_mode     = DEFAULT
_optimizer_distinct_placement       = true
partition_pruning_internal_cursor   = 0
parallel_hinted                     = none
_sql_compatibility                  = 0
_optimizer_use_feedback             = true
_optimizer_try_st_before_jppd       = true
_dml_frequency_tracking             = false
_optimizer_interleave_jppd          = true
kkb_drop_empty_segments             = 0
_px_partition_scan_enabled          = true
_px_partition_scan_threshold        = 64
_optimizer_false_filter_pred_pullup = true
_bloom_minmax_enabled               = true
only_move_row                       = 0
_optimizer_enable_table_lookup_by_nl = true
parallel_execution_message_size     = 16384
_px_loc_msg_cost                    = 1000
_px_net_msg_cost                    = 10000
_optimizer_generate_transitive_pred = true
_optimizer_cube_join_enabled        = true
_optimizer_filter_pushdown          = true
deferred_segment_creation           = true
_optimizer_outer_join_to_inner      = true
_allow_level_without_connect_by     = false
_max_rwgs_groupings                 = 8192
_optimizer_hybrid_fpwj_enabled      = true
_px_replication_enabled             = true
ilm_filter                          = 0
_optimizer_partial_join_eval        = true
_px_concurrent                      = true
_px_object_sampling_enabled         = true
_px_back_to_parallel                = OFF
_optimizer_unnest_scalar_sq         = true
_optimizer_full_outer_join_to_outer = true
_px_filter_parallelized             = true
_px_filter_skew_handling            = true
_zonemap_use_enabled                = true
_zonemap_control                    = 0
_optimizer_multi_table_outerjoin    = true
_px_groupby_pushdown                = force
_partition_advisor_srs_active       = true
_optimizer_ansi_join_lateral_enhance = true
_px_parallelize_expression          = true
_fast_index_maintenance             = true
_optimizer_ansi_rearchitecture      = true
_optimizer_gather_stats_on_load     = true
ilm_access_tracking                 = 0
ilm_dml_timestamp                   = 0
_px_adaptive_dist_method            = choose
_px_adaptive_dist_method_threshold  = 0
_optimizer_batch_table_access_by_rowid = true
optimizer_adaptive_reporting_only   = false
_optimizer_ads_max_table_count      = 0
_optimizer_ads_time_limit           = 0
_optimizer_ads_use_result_cache     = true
_px_wif_dfo_declumping              = choose
_px_wif_extend_distribution_keys    = true
_px_join_skew_handling              = true
_px_join_skew_ratio                 = 10
_px_join_skew_minfreq               = 30
CLI_internal_cursor                 = 0
_parallel_fault_tolerance_enabled   = false
_parallel_fault_tolerance_threshold = 3
_px_partial_rollup_pushdown         = adaptive
_px_single_server_enabled           = true
_optimizer_dsdir_usage_control      = 0
_px_cpu_autodop_enabled             = true
_px_cpu_process_bandwidth           = 200
_sql_hvshare_threshold              = 0
_px_tq_rowhvs                       = true
_optimizer_use_gtt_session_stats    = true
_optimizer_proc_rate_level          = basic
_px_hybrid_TSM_HWMB_load            = true
_optimizer_use_histograms           = true
PMO_altidx_rebuild                  = 0
_cell_offload_expressions           = true
_cell_materialize_virtual_columns   = true
_cell_materialize_all_expressions   = false
_rowsets_enabled                    = true
_rowsets_target_maxsize             = 524288
_rowsets_max_rows                   = 256
_use_hidden_partitions              = 0
_px_load_monitor_threshold          = 10000
_px_numa_support_enabled            = false
total_processor_group_count         = 1
_adaptive_window_consolidator_enabled = true
_optimizer_strans_adaptive_pruning  = true
_bloom_rm_filter                    = false
_optimizer_null_accepting_semijoin  = true
_long_varchar_allow_IOT             = 0
_parallel_ctas_enabled              = true
_cell_offload_complex_processing    = true
_optimizer_performance_feedback     = off
_optimizer_proc_rate_source         = DEFAULT
_hashops_prefetch_size              = 4
_cell_offload_sys_context           = true
_multi_commit_global_index_maint    = 0
_stat_aggs_one_pass_algorithm       = false
_dbg_scan                           = 0
_oltp_comp_dbg_scan                 = 0
_arch_comp_dbg_scan                 = 0
_optimizer_gather_feedback          = true
_upddel_dba_hash_mask_bits          = 0
_px_pwmr_enabled                    = true
_px_cdb_view_enabled                = true
_bloom_sm_enabled                   = true
_optimizer_cluster_by_rowid         = true
_optimizer_cluster_by_rowid_control = 129
_partition_cdb_view_enabled         = true
_common_data_view_enabled           = true
_pred_push_cdb_view_enabled         = true
_rowsets_cdb_view_enabled           = true
_distinct_agg_optimization_gsets    = choose
_array_cdb_view_enabled             = true
_optimizer_adaptive_plan_control    = 0
_optimizer_adaptive_random_seed     = 0
_optimizer_cbqt_or_expansion        = on
_inmemory_dbg_scan                  = 0
_gby_vector_aggregation_enabled     = true
_optimizer_vector_transformation    = true
_optimizer_vector_fact_dim_ratio    = 10
_key_vector_max_size                = 0
_key_vector_predicate_enabled       = true
_key_vector_predicate_threshold     = 0
_vector_operations_control          = 0
_optimizer_vector_min_fact_rows     = 10000000
parallel_dblink                     = 0
_px_scalable_invdist                = true
_key_vector_offload                 = predicate
_optimizer_aggr_groupby_elim        = true
_optimizer_reduce_groupby_key       = true
_vector_serialize_temp_threshold    = 1000
_always_vector_transformation       = false
_optimizer_cluster_by_rowid_batched = true
_object_link_fixed_enabled          = true
optimizer_inmemory_aware            = true
_optimizer_inmemory_table_expansion = true
_optimizer_inmemory_gen_pushable_preds = true
_optimizer_inmemory_autodop         = true
_optimizer_inmemory_access_path     = true
_optimizer_inmemory_bloom_filter    = true
_parallel_inmemory_min_time_threshold = 1
_parallel_inmemory_time_unit        = 1
_rc_sys_obj_enabled                 = true
_optimizer_nlj_hj_adaptive_join     = true
_indexable_con_id                   = true
_bloom_serial_filter                = on
inmemory_force                      = default
inmemory_query                      = enable
_inmemory_query_scan                = true
_inmemory_query_fetch_by_rowid      = false
_inmemory_pruning                   = on
_px_autodop_pq_overhead             = true
_px_external_table_default_stats    = true
_optimizer_key_vector_aggr_factor   = 75
_optimizer_vector_cost_adj          = 100
_cdb_cross_container                = 65535
_cdb_view_parallel_degree           = 65535
_optimizer_hll_entry                = 4096
_px_cdb_view_join_enabled           = true
inmemory_size                       = 0
_external_table_smart_scan          = hadoop_only
_optimizer_inmemory_minmax_pruning  = true
_approx_cnt_distinct_gby_pushdown   = choose
_approx_cnt_distinct_optimization   = 0
_optimizer_ads_use_partial_results  = true
_query_execution_time_limit         = 0
_optimizer_inmemory_cluster_aware_dop = true
_optimizer_db_blocks_buffers        = 0 KB
_query_rewrite_use_on_query_computation = true
_px_scalable_invdist_mcol           = true
_optimizer_bushy_join               = off
_optimizer_bushy_fact_dim_ratio     = 20
_optimizer_bushy_fact_min_size      = 100000
_optimizer_bushy_cost_factor        = 100
_rmt_for_table_redef_enabled        = true
_optimizer_eliminate_subquery       = true
_sqlexec_cache_aware_hash_join_enabled = true
_zonemap_usage_tracking             = true
_sqlexec_hash_based_distagg_enabled = false
_sqlexec_disable_hash_based_distagg_tiv = false
_sqlexec_hash_based_distagg_ssf_enabled = true
_sqlexec_distagg_optimization_settings = 0
approx_for_aggregation              = false
approx_for_count_distinct           = false
_optimizer_union_all_gsets          = true
_rowsets_use_encoding               = true
_rowsets_max_enc_rows               = 64
_optimizer_enhanced_join_elimination = true
_optimizer_multicol_join_elimination = true
_key_vector_create_pushdown_threshold = 20000
_optimizer_enable_plsql_stats       = true
_recursive_with_parallel            = true
_recursive_with_branch_iterations   = 7
_px_dist_agg_partial_rollup_pushdown = adaptive
_px_adaptive_dist_bypass_enabled    = true
_enable_view_pdb                    = true
_optimizer_key_vector_pruning_enabled = true
_pwise_distinct_enabled             = true
_recursive_with_using_temp_table    = false
_partition_read_only                = true
_sql_alias_scope                    = true
_cdb_view_no_skip_migrate           = false
_approx_perc_sampling_err_rate      = 2
_sqlexec_encoding_aware_hj_enabled  = true
rim_node_exist                      = 0
_enable_containers_subquery         = true
_force_containers_subquery          = false
_cell_offload_vector_groupby        = true
_vector_encoding_mode               = manual
_ds_xt_split_count                  = 1
_ds_sampling_method                 = PROGRESSIVE
_optimizer_ads_use_spd_cache        = true
_optimizer_use_table_scanrate       = HADOOP_ONLY
_optimizer_use_xt_rowid             = true
_xt_sampling_scan_granules          = on
_recursive_with_control             = 0
_sqlexec_use_rwo_aware_expr_analysis = true
_optimizer_band_join_aware          = true
_optimizer_vector_base_dim_fact_factor = 200
approx_for_percentile               = none
_approx_percentile_optimization     = 0
_projection_pushdown                = true
_px_object_sampling                 = 200
_optimizer_adaptive_plans_continuous = false
_optimizer_adaptive_plans_iterative = false
_ds_enable_view_sampling            = true
_optimizer_generate_ptf_implied_preds = true
_optimizer_inmemory_use_stored_stats = AUTO
_cdb_special_old_xplan              = true
uniaud_internal_cursor              = 0
_kd_dbg_control                     = 0
_mv_access_compute_fresh_data       = on
_bloom_filter_ratio                 = 35
_optimizer_control_shard_qry_processing = 65528
containers_parallel_degree          = 65535
sql_from_coordinator                = 0
_xt_sampling_scan_granules_min_granules = 1
_in_memory_cdt                      = LIMITED
_in_memory_cdt_maxpx                = 4
_px_partition_load_dist_threshold   = 64
_px_adaptive_dist_bypass_optimization = 1
_optimizer_interleave_or_expansion  = true
optimizer_adaptive_plans            = true
optimizer_adaptive_statistics       = false
_optimizer_use_feedback_for_join    = false
_optimizer_ads_for_pq               = false
_px_join_skewed_values_count        = 0
optimizer_ignore_parallel_hints     = false
parallel_min_degree                 = 1
_px_nlj_bcast_rr_threshold          = 10
_optimizer_gather_stats_on_load_all = false
_optimizer_gather_stats_on_load_hist = false
_optimizer_allow_all_access_paths   = true
_key_vector_double_enabled          = true
_key_vector_timestamp_enabled       = true
_optimizer_answering_query_using_stats = false
_disable_dblink_optim               = true
_cell_offload_hybrid_processing     = true
_read_optimized_table_lookup        = true
_optimizer_key_vector_payload       = true
_optimizer_vector_fact_payload_ratio = 20
_bloom_pruning_setops_enabled       = true
_bloom_filter_setops_enabled        = true
_key_vector_shared_dgk_ht           = true
_px_pwise_wif_enabled               = true
_sqlexec_reorder_wif_enabled        = true
_px_partition_skew_threshold        = 80
_sqlexec_pwiseops_with_sqlfuncs_enabled = true
_sqlexec_pwiseops_with_binds_enabled = true
_px_shared_hash_join                = false
_px_reuse_server_groups             = multi
_px_join_skew_null_handling         = true
_px_join_skew_use_histogram         = true
_px_join_skew_sampling_time_limit   = 50
_px_join_skew_sampling_percent      = 0
_cdb_view_no_skip_restricted        = false
_inmemory_external_table            = true
_sqlexec_use_kgghash3               = true
_cell_offload_vector_groupby_force  = false
_hcs_enable_pred_push               = true
parallel_dop_doubled                = 0
_optimizer_gather_stats_on_load_index = true
_con_map_sql_enforcement            = true
_uniq_cons_sql_enforcement          = true
_ref_cons_sql_enforcement           = true
_is_lock_table_for_split_merge      = 0
_cell_offload_vector_groupby_fact_key = true
_px_scalable_gby_invdist            = true
_px_dynamic_granules                = true
_px_dynamic_granules_adjust         = 10
_px_hybrid_partition_execution_enabled = true
_px_hybrid_partition_skew_threshold = 10
_optimizer_key_vector_use_max_size  = 1048576
_cell_offload_vector_groupby_withnojoin = true
_key_vector_join_pushdown_enabled   = true
_cell_offload_grand_total           = true
_optimizer_key_vector_payload_dim_aggs = false
_optimizer_use_auto_indexes         = AUTO
_optimizer_use_stats_on_conventional_dml = true
_optimizer_gather_stats_on_conventional_dml = true
_optimizer_use_stats_on_conventional_config = 0
_skip_pset_col_chk                  = 0
_nls_binary                         = false
_optimizer_quarantine_sql           = true
_optimizer_gather_stats_on_conventional_config = 0
_nls_forced_binary                  = 0
_utl32k_mv_query                    = false
_optimizer_auto_index_allow         = AUTO

  ***************************************
  PARAMETERS IN OPT_PARAM HINT
  ****************************
  _optimizer_cbqt_or_expansion        = 'off'
***************************************
Column Usage Monitoring is ON: tracking level = 53
***************************************

Considering Query Transformations on query block SEL$1 (#0)
**************************
Query transformations (QT)
**************************
JF: Checking validity of join factorization for query block SEL$1 (#0)
JF: Bypassed: not a UNION or UNION-ALL query block.
ST: not valid since star transformation parameter is FALSE
TE: Checking validity of table expansion for query block SEL$1 (#0)
TE: Bypassed: No partitioned table in query block.
ORE: Checking validity of OR Expansion for query block SEL$1 (#0)
ORE: Predicate chain before QB validity check - SEL$1
("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"
ORE: Predicate chain after QB validity check - SEL$1
("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"
ORE: bypassed - Disabled by parameter.
VT: Initial VT validity check for query block SEL$1 (#0)
VT: Bypassed: inmemory is disabled.
BJ: Checking validity for bushy join for query block SEL$1 (#0)
invalid because Not enabled by hint/parameter
BJ: Bypassed: Not enabled by hint/parameter.
CBQT bypassed for query block SEL$1 (#0): no complex view, sub-queries or UNION (ALL) queries.
CBQT: Validity checks failed for a5t76fz006a0y.
CSE: Considering common sub-expression elimination in query block SEL$1 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$1 (#0).
OBYE:   Considering Order-by Elimination from view SEL$1 (#0)
***************************
Order-by elimination (OBYE)
***************************
OBYE:     OBYE bypassed: no order by to eliminate.
JE:[V2]   Considering Join Elimination on query block SEL$1 (#0)
*************************
Join Elimination [JE:R 12.2]    
*************************
SQL:******* UNPARSED QUERY IS *******
SELECT NULL "NULL" FROM "PDBADMIN"."L" "L","PDBADMIN"."T1" "T1","PDBADMIN"."T2" "T2" WHERE ("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"
JE:[V2] Query block (0x8126d988) before join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT NULL "NULL" FROM "PDBADMIN"."L" "L","PDBADMIN"."T1" "T1","PDBADMIN"."T2" "T2" WHERE ("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"
JE:[V2]: Try to eliminate T2 by ref. join elim using NTSID
JE:[V2]: Cannot eliminate T2 by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate T2 by ref. join elim using NTSID
JE:[V2]: Cannot eliminate T2 by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate T1 by ref. join elim using NTSID
JE:[V2]: Cannot eliminate T1 by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate T1 by ref. join elim using NTSID
JE:[V2]: Cannot eliminate T1 by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate L by ref. join elim using NTSID
JE:[V2]: Cannot eliminate L by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate L by ref. join elim using NTSID
JE:[V2]: Cannot eliminate L by ref. join elim - no constr. based join pred(s)
JE:[V2] Query block (0x8126d988) after join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT NULL "NULL" FROM "PDBADMIN"."L" "L","PDBADMIN"."T1" "T1","PDBADMIN"."T2" "T2" WHERE ("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"

CVM: Considering view merge in query block SEL$1 (#0)
OJE: Begin: find best directive for query block SEL$1 (#0)
OJE: End: finding best directive for query block SEL$1 (#0)
JE:[V2]   Considering Join Elimination on query block SEL$1 (#0)
*************************
Join Elimination [JE:R 12.2]    
*************************
SQL:******* UNPARSED QUERY IS *******
SELECT NULL "NULL" FROM "PDBADMIN"."L" "L","PDBADMIN"."T1" "T1","PDBADMIN"."T2" "T2" WHERE ("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"
JE:[V2] Query block (0x8126d988) before join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT NULL "NULL" FROM "PDBADMIN"."L" "L","PDBADMIN"."T1" "T1","PDBADMIN"."T2" "T2" WHERE ("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"
JE:[V2]: Try to eliminate T2 by ref. join elim using NTSID
JE:[V2]: Cannot eliminate T2 by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate T2 by ref. join elim using NTSID
JE:[V2]: Cannot eliminate T2 by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate T1 by ref. join elim using NTSID
JE:[V2]: Cannot eliminate T1 by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate T1 by ref. join elim using NTSID
JE:[V2]: Cannot eliminate T1 by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate L by ref. join elim using NTSID
JE:[V2]: Cannot eliminate L by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate L by ref. join elim using NTSID
JE:[V2]: Cannot eliminate L by ref. join elim - no constr. based join pred(s)
JE:[V2] Query block (0x8126d988) after join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT NULL "NULL" FROM "PDBADMIN"."L" "L","PDBADMIN"."T1" "T1","PDBADMIN"."T2" "T2" WHERE ("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"

query block SEL$1 (#0) unchanged
Considering Query Transformations on query block SEL$1 (#0)
**************************
Query transformations (QT)
**************************
JF: Checking validity of join factorization for query block SEL$1 (#0)
JF: Bypassed: not a UNION or UNION-ALL query block.
ST: not valid since star transformation parameter is FALSE
TE: Checking validity of table expansion for query block SEL$1 (#0)
TE: Bypassed: No partitioned table in query block.
ORE: Checking validity of OR Expansion for query block SEL$1 (#0)
ORE: Predicate chain before QB validity check - SEL$1
("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"
ORE: Predicate chain after QB validity check - SEL$1
("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"
ORE: bypassed - Disabled by parameter.
VT: Initial VT validity check for query block SEL$1 (#0)
VT: Bypassed: inmemory is disabled.
BJ: Checking validity for bushy join for query block SEL$1 (#0)
invalid because Not enabled by hint/parameter
BJ: Bypassed: Not enabled by hint/parameter.
CBQT bypassed for query block SEL$1 (#0): no complex view, sub-queries or UNION (ALL) queries.
CBQT: Validity checks failed for a5t76fz006a0y.
CSE: Considering common sub-expression elimination in query block SEL$1 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$1 (#0).
AAT:   Considering Approximate Aggregate Transformation on query block SEL$1 (#0) 
*******************************************
Approximate Aggregate Transformation (AAT) 
*******************************************
AAT: no exact aggregates transformed
SQE: Trying SQ elimination.
Query after View Removal
******* UNPARSED QUERY IS *******
SELECT NULL "NULL" FROM "PDBADMIN"."L" "L","PDBADMIN"."T1" "T1","PDBADMIN"."T2" "T2" WHERE ("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"
SU: Considering subquery unnesting in query block SEL$1 (#0)
********************
Subquery Unnest (SU)
********************
SJC: Considering set-join conversion in query block SEL$1 (#0)
*************************
Set-Join Conversion (SJC)
*************************
SJC: not performed
DCL: Checking validity of group-by elimination SEL$1 (#0)
DCL: Result of group-by elimination: Invalid
JE:[V2]   Considering Join Elimination on query block SEL$1 (#0)
*************************
Join Elimination [JE:R 12.2]    
*************************
SQL:******* UNPARSED QUERY IS *******
SELECT NULL "NULL" FROM "PDBADMIN"."L" "L","PDBADMIN"."T1" "T1","PDBADMIN"."T2" "T2" WHERE ("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"
JE:[V2] Query block (0x8126d988) before join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT NULL "NULL" FROM "PDBADMIN"."L" "L","PDBADMIN"."T1" "T1","PDBADMIN"."T2" "T2" WHERE ("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"
JE:[V2]: Try to eliminate T2 by ref. join elim using NTSID
JE:[V2]: Cannot eliminate T2 by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate T2 by ref. join elim using NTSID
JE:[V2]: Cannot eliminate T2 by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate T1 by ref. join elim using NTSID
JE:[V2]: Cannot eliminate T1 by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate T1 by ref. join elim using NTSID
JE:[V2]: Cannot eliminate T1 by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate L by ref. join elim using NTSID
JE:[V2]: Cannot eliminate L by ref. join elim - no constr. based join pred(s)
JE:[V2]: Try to eliminate L by ref. join elim using NTSID
JE:[V2]: Cannot eliminate L by ref. join elim - no constr. based join pred(s)
JE:[V2] Query block (0x8126d988) after join elimination:
SQL:******* UNPARSED QUERY IS *******
SELECT NULL "NULL" FROM "PDBADMIN"."L" "L","PDBADMIN"."T1" "T1","PDBADMIN"."T2" "T2" WHERE ("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"

PM: Considering predicate move-around in query block SEL$1 (#0)
**************************
Predicate Move-Around (PM)
**************************
PM:     PM bypassed: Outer query contains no views.
PM:     PM bypassed: Outer query contains no views.
isReduceGrByValid:   Group By Validation (Failed).
isReduceGrByValid:   Group By Validation (Failed).
SQT:   Considering Statistic-based Query Transformation from query block SEL$1 (#0)
***************************
Statistic-based Query Transformation (SQT)
***************************
SQT:     SQT bypassed: Disabled by parameter.
query block SEL$1 (#0) unchanged
FPD: Considering simple filter push in query block SEL$1 (#0)
("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"
try to generate transitive predicate from check constraints for query block SEL$1 (#0)
finally: ("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"

apadrv-start sqlid=11737759930831284254
CSE: Considering common sub-expression elimination in query block SEL$1 (#0)
*************************
Common Subexpression elimination (CSE)
*************************
CSE:     CSE not performed on query block SEL$1 (#0).
  :
    call(in-use=11384, alloc=25856), compile(in-use=239160, alloc=241416), execution(in-use=278272, alloc=280320)

*******************************************
Peeked values of the binds in SQL statement
*******************************************


=====================================
SPD: BEGIN context at statement level
=====================================
Stmt: ******* UNPARSED QUERY IS *******
SELECT NULL "NULL" FROM "PDBADMIN"."L" "L","PDBADMIN"."T1" "T1","PDBADMIN"."T2" "T2" WHERE ("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"
Objects referenced in the statement
  T2[T2] 73960, type = 1
  T1[T1] 73958, type = 1
  L[L] 73956, type = 1
Objects in the hash table
  Hash table Object 73958, type = 1, ownerid = 8703905615756872415:
    No Dynamic Sampling Directives for the object
  Hash table Object 73960, type = 1, ownerid = 1942017135121998163:
    No Dynamic Sampling Directives for the object
  Hash table Object 73956, type = 1, ownerid = 10189872951783844936:
    No Dynamic Sampling Directives for the object
Return code in qosdInitDirCtx: ENBLD
===================================
SPD: END context at statement level
===================================
Final query after transformations:******* UNPARSED QUERY IS *******
SELECT NULL "NULL" FROM "PDBADMIN"."L" "L","PDBADMIN"."T1" "T1","PDBADMIN"."T2" "T2" WHERE ("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"
kkoqbc: optimizing query block SEL$1 (#0)
        
        :
    call(in-use=11728, alloc=25856), compile(in-use=248256, alloc=249448), execution(in-use=286384, alloc=288432)

kkoqbc-subheap (create addr=0x7fa8a7b4fb80)
****************
QUERY BLOCK TEXT
****************
SELECT /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null FROM l, t1, t2 WHERE  
(  ( t1.t1f = 0 AND t2.t2f1 BETWEEN 9 AND 10)       OR 
   ( t1.t1f = 1 AND t2.t2f1 = 14 AND t2.t2f2 = 13  )   )  AND 
    ( l.id1 = t1.id1 AND l.id2 = t2.id2 )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$1 nbfros=3 flg=0
  fro(0): flg=0 objn=73956 hint_alias="L"@"SEL$1"
  fro(1): flg=0 objn=73958 hint_alias="T1"@"SEL$1"
  fro(2): flg=0 objn=73960 hint_alias="T2"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 2467 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: T2  Alias: T2
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  25  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID2(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: T2_ID2  Col#: 1
  LVLS: 1  #LB: 20  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: T2_T2F1_T2F2_ID2  Col#: 2 3 1
  LVLS: 1  #LB: 29  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 168.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: T1  Alias: T1
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: T1_T1F_ID1  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  L  Alias:  L
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
  Column (#2): ID2(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: L_ID1  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
try to generate single-table filter predicates from ORs for query block SEL$1 (#0)
finally: ("T1"."T1F"=0 OR "T1"."T1F"=1) AND ("T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND ("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"

=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$1 (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for L
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for L[L] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: L  Alias: L
    Card: Original: 10.000000  Rounded: 10  Computed: 10.000000  Non Adjusted: 10.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                       =   30185.760000
  Access Path: TableScan
    Cost:  3.001020  Resp: 3.001020  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 30186
      Resp_io: 3.000000  Resp_cpu: 30186
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3.001020  Degree: 1  Resp: 3.001020  Card: 10.000000  Bytes: 0.000000

Access path analysis for T1
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T1[T1] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE

 kkecdn: Single Table Predicate:"T1"."T1F"=0 OR "T1"."T1F"=1
  Column (#2): T1F(NUMBER)
    AvgLen: 3 NDV: 5 Nulls: 0 Density: 0.200000 Min: 0.000000 Max: 4.000000
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Table: T1  Alias: T1
    Card: Original: 10.000000  Rounded: 4  Computed: 4.000000  Non Adjusted: 4.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 900.000000 (cpu filter eval) (= 90.000000 (per row) * 10.000000 (#rows))
                       =   31085.760000
  Access Path: TableScan
    Cost:  3.001050  Resp: 3.001050  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 31086
      Resp_io: 3.000000  Resp_cpu: 31086
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9221
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000311  Resp: 2.000311  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9221
      Resp_io: 2.000000  Resp_cpu: 9221
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 15043
    ix_sel: 0.400000  ix_sel_with_filters: 0.400000 
    Cost: 1.000508  Resp: 1.000508  Degree: 1
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    Cost: 1.000254  Resp: 1.000254  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    Cost: 1.000254  Resp: 1.000254  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Not used T1_T1F_ID1
      Cost = 2.000267, sel = 0.200000
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T1_T1F_ID1
         Cost: 1.000508  Degree: 1  Resp: 1.000508  Card: 4.000000  Bytes: 0.000000

Access path analysis for T2
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T2[T2] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE

 kkecdn: Single Table Predicate: ?? 

  Column (#2): T2F1(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Column (#3): T2F2(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Estimated selectivity: 0.125000 , col: #3 

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Table: T2  Alias: T2
    Card: Original: 10000.000000  Rounded: 1250  Computed: 1250.007812  Non Adjusted: 1250.007812
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 98.216473, sel = 0.125001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 54.464286, sel = 0.125000 flag = 2049  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2049  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 50.002500, sel = 0.000001 flag = 2048  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 982164.732143 (cpu filter eval) (= 98.216473 (per row) * 10000.000000 (#rows))
                       =   3060200.732143
  Access Path: TableScan
    Cost:  9.103361  Resp: 9.103361  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 3060201
      Resp_io: 9.000000  Resp_cpu: 3060201
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 2388686
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.080680  Resp: 10.080680  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2388686
      Resp_io: 10.000000  Resp_cpu: 2388686
kkofmx: index filter: ?? 

 ****** Costing Index T2_T2F1_T2F2_ID2
  Access Path: index (FullScan)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 30.000000  resc_cpu: 2213643
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 30.107942  Resp: 30.107942  Degree: 1
  ****** trying bitmap/domain indexes ******

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 5.000000  resc_cpu: 285607
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    Cost: 5.009647  Resp: 5.009647  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 8.9286e-07  ix_sel_with_filters: 8.9286e-07 
    Cost: 2.000488  Resp: 2.000488  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 5.000000  resc_cpu: 285607
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    Cost: 5.009647  Resp: 5.009647  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 8.9286e-07  ix_sel_with_filters: 8.9286e-07 
    Cost: 2.000488  Resp: 2.000488  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_T2F1_T2F2_ID2
      Cost = 6.034921, sel = 0.125000
  Bitmap nodes:
    Used T2_T2F1_T2F2_ID2
      Cost = 3.000488, sel = 8.9286e-07
  Bitmap nodes:
    Used  bitmap node 
    Used  bitmap node 
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  Access path: Bitmap index - accepted
    Cost: 19.171856 Cost_io: 17.120037 Cost_cpu: 60747880.403532 Sel: 0.125001
    Not Believed to be index-only
  ****** finished trying bitmap/domain indexes ******
******** Begin index join costing ********
 ****** Costing Index T2_T2F1_T2F2_ID2
  Access Path: index (FullScan)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 30.000000  resc_cpu: 2213643
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 30.074768  Resp: 30.074768  Degree: 0
******** End index join costing ********
  Best:: AccessPath: TableScan
         Cost: 9.103361  Degree: 1  Resp: 9.103361  Card: 1250.007812  Bytes: 0.000000

***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  T1[T1]#0  L[L]#1  T2[T2]#2

***************
Now joining: L[L]#1
***************
NL Join
  Outer table: Card: 4.000000  Cost: 1.000508  Resp: 1.000508  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 7.004654  Resp: 7.004654  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 137786
      Resp_io: 7.000000  Resp_cpu: 137786
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.001635  Resp: 5.001635  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48409
      Resp_io: 5.000000  Resp_cpu: 48409
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.001635  Resp: 5.001635  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48409
      Resp_io: 5.000000  Resp_cpu: 48409
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001635
          resc: 5.001635  resc_io: 5.000000  resc_cpu: 48409
          resp: 5.001635  resp_io: 5.000000  resc_cpu: 48409
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  T1  Alias: T1
    resc: 1.000508  card 4.000000  bytes:   deg: 1  resp: 1.000508
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001590  Resp: 6.001590  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001590 
     resc: 6.001590 resc_io: 4.000000 resc_cpu: 59260769
     resp: 6.001590 resp_io: 4.000000 resp_cpu: 59260769
  Outer table:  T1  Alias: T1
    resc: 1.000508  card 4.000000  bytes:   deg: 1  resp: 1.000508
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021847  Resp: 4.021847  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021847  
     resc: 4.021847 resc_io: 4.000000 resc_cpu: 646829
     resp: 4.021847 resp_io: 4.000000 resp_cpu: 646829
Best:: JoinMethod: Hash
       Cost: 4.021847  Degree: 1  Resp: 4.021847  Card: 10.000000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 4.021847  Resp: 4.021847  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Cost of predicates:
    io = 0.000000, cpu = 98.216473, sel = 0.125001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 54.464286, sel = 0.125000 flag = 2049  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2049  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 50.002500, sel = 0.000001 flag = 2048  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 2048  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 2048  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500904.402355 (cpu filter eval) (= 50.090440 (per row) * 10000.000000 (#rows))
                       =   2578940.402355
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 73.892910  Resp: 73.892910  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 26436233
      Resp_io: 73.000000  Resp_cpu: 26436233
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1907426
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 84.666099  Resp: 84.666099  Degree: 1
      Cost_io: 84.000000  Cost_cpu: 19721090
      Resp_io: 84.000000  Resp_cpu: 19721090
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9325
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 14.024997  Resp: 14.024997  Degree: 1
      Cost_io: 14.000000  Cost_cpu: 740074
      Resp_io: 14.000000  Resp_cpu: 740074
kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

kkofmx: index filter:"L"."ID2"="T2"."ID2"

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9325
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 14.024997  Resp: 14.024997  Degree: 1
      Cost_io: 14.000000  Cost_cpu: 740074
      Resp_io: 14.000000  Resp_cpu: 740074
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Access Path: index (FullScan)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 30.000000  resc_cpu: 2213643
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    NL Join : Cost: 304.938712  Resp: 304.938712  Degree: 1
      Cost_io: 304.000000  Cost_cpu: 27792305
      Resp_io: 304.000000  Resp_cpu: 27792305
  ****** trying bitmap/domain indexes ******
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 0.000000  resc_cpu: 1900
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.022489  Resp: 4.022489  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 665829
      Resp_io: 4.000000  Resp_cpu: 665829

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 44.116196  Resp: 44.116196  Degree: 1
      Cost_io: 44.000000  Cost_cpu: 3440186
      Resp_io: 44.000000  Resp_cpu: 3440186
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 44.116196  Resp: 44.116196  Degree: 1
      Cost_io: 44.000000  Cost_cpu: 3440186
      Resp_io: 44.000000  Resp_cpu: 3440186
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_ID2
      Cost = 4.022525, sel = 7.9936e-04
    Not used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 14.024997
          resc: 14.024997  resc_io: 14.000000  resc_cpu: 740074
          resp: 14.024997  resp_io: 14.000000  resc_cpu: 740074

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  1.998415 = outer (10.000000) * inner (10000.000000) * sel (1.9984e-05)
Join cardinality for HJ/SMJ (no post filters):  79.936051, outer: 10.000000, inner: 10000.000000, sel: 1.9984e-05
Join Card - Rounded: 2 Computed: 1.998415
  Outer table:  L  Alias: L
    resc: 4.021847  card 10.000000  bytes:   deg: 1  resp: 4.021847
  Inner table:  T2  Alias: T2
    resc: 9.103361  card: 1250.007812  bytes:   deg: 1  resp: 9.103361
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  SM join: Resc: 15.144828  Resp: 15.144828  [multiMatchCost=0.000000]
SM Join
  SM cost: 15.144828 
     resc: 15.144828 resc_io: 13.000000 resc_cpu: 63501595
     resp: 15.144828 resp_io: 13.000000 resp_cpu: 63501595
  Outer table:  L  Alias: L
    resc: 4.021847  card 10.000000  bytes:   deg: 1  resp: 4.021847
  Inner table:  T2  Alias: T2
    resc: 9.103361  card: 1250.007812  bytes:   deg: 1  resp: 9.103361
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024538  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 13.149747  Resp: 13.149747  [multiMatchCost=0.000000]
HA Join
  HA cost: 13.149747  
     resc: 13.149747 resc_io: 13.000000 resc_cpu: 4433529
     resp: 13.149747 resp_io: 13.000000 resp_cpu: 4433529
Best:: JoinMethod: Hash
       Cost: 13.149747  Degree: 1  Resp: 13.149747  Card: 1.998415 Bytes: 
***********************
Best so far:  Table#: 0  cost: 1.000508  card: 4.000000  bytes: 24.000000
              Table#: 1  cost: 4.021847  card: 10.000000  bytes: 120.000000
              Table#: 2  cost: 13.149747  card: 1.998415  bytes: 44.000000
***********************
Join order[2]:  T1[T1]#0  T2[T2]#2  L[L]#1

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 4.000000  Cost: 1.000508  Resp: 1.000508  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   7.250000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 98.216473, sel = 0.125001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 54.464286, sel = 0.125000 flag = 1  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2049  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 50.002500, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   7.250000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.250000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 1131407.345707 (cpu filter eval) (= 113.140735 (per row) * 10000.000000 (#rows))
                       =   3209443.345707
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 30.434116  Resp: 30.434116  Degree: 1
      Cost_io: 30.000000  Cost_cpu: 12852816
      Resp_io: 30.000000  Resp_cpu: 12852816
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.250000  resc_cpu: 2537929
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 34.343392  Resp: 34.343392  Degree: 1
      Cost_io: 34.000000  Cost_cpu: 10166759
      Resp_io: 34.000000  Resp_cpu: 10166759
kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

 ****** Costing Index T2_T2F1_T2F2_ID2
  Access Path: index (FullScan)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 30.000000  resc_cpu: 2213643
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    NL Join : Cost: 121.452437  Resp: 121.452437  Degree: 1
      Cost_io: 121.000000  Cost_cpu: 13395245
      Resp_io: 121.000000  Resp_cpu: 13395245
  ****** trying bitmap/domain indexes ******

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 17.038247  Resp: 17.038247  Degree: 1
      Cost_io: 17.000000  Cost_cpu: 1132386
      Resp_io: 17.000000  Resp_cpu: 1132386
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-07  ix_sel_with_filters: 8.9286e-07 
    NL Join : Cost: 5.001612  Resp: 5.001612  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 47729
      Resp_io: 5.000000  Resp_cpu: 47729
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 17.038247  Resp: 17.038247  Degree: 1
      Cost_io: 17.000000  Cost_cpu: 1132386
      Resp_io: 17.000000  Resp_cpu: 1132386
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-07  ix_sel_with_filters: 8.9286e-07 
    NL Join : Cost: 5.001612  Resp: 5.001612  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 47729
      Resp_io: 5.000000  Resp_cpu: 47729
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_T2F1_T2F2_ID2
      Cost = 18.063533, sel = 0.125000
  Bitmap nodes:
    Used T2_T2F1_T2F2_ID2
      Cost = 6.001612, sel = 8.9286e-07
  Bitmap nodes:
    Used  bitmap node 
    Used  bitmap node 
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  Access path: Bitmap index - accepted
    Cost: 65.610684 Cost_io: 63.480145 Cost_cpu: 63078518.529653 Sel: 0.125001
    Not Believed to be index-only
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 30.434116
          resc: 30.434116  resc_io: 30.000000  resc_cpu: 12852816
          resp: 30.434116  resp_io: 30.000000  resc_cpu: 12852816
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  2500.017411 = outer (10.000000) * inner (10000.000000) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  100000.000000, outer: 10.000000, inner: 10000.000000, sel: 0.025000
Join Card - Rounded: 2500 Computed: 2500.017411
Join order aborted: cost > best plan cost
***********************
Join order[3]:  L[L]#1  T1[T1]#0  T2[T2]#2

***************
Now joining: T1[T1]#0
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.200000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.200000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.200000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 590.000000 (cpu filter eval) (= 59.000000 (per row) * 10.000000 (#rows))
                       =   30775.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 15.011414  Resp: 15.011414  Degree: 1
      Cost_io: 15.000000  Cost_cpu: 337943
      Resp_io: 15.000000  Resp_cpu: 337943
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.400000  resc_cpu: 8911
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 7.004029  Resp: 7.004029  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 119300
      Resp_io: 7.000000  Resp_cpu: 119300
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup (#1, Index) T1_T1F_ID1
    Col#: 1 2    CorStregth: 5.00
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:   Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
 Sel: 0.200000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.200000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 14643
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 13.005965  Resp: 13.005965  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 176615
      Resp_io: 13.000000  Resp_cpu: 176615
  ****** trying bitmap/domain indexes ******

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.001374  Resp: 3.001374  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 40686
      Resp_io: 3.000000  Resp_cpu: 40686

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.001374  Resp: 3.001374  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 40686
      Resp_io: 3.000000  Resp_cpu: 40686
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 13.003560  Resp: 13.003560  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 105400
      Resp_io: 13.000000  Resp_cpu: 105400
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Used T1_T1F_ID1
      Cost = 3.001375, sel = 0.020000
    Used T1_T1F_ID1
      Cost = 3.001375, sel = 0.020000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 7.004029
          resc: 7.004029  resc_io: 7.000000  resc_cpu: 119300
          resp: 7.004029  resp_io: 7.000000  resc_cpu: 119300
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 6.001590  Resp: 6.001590  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001590 
     resc: 6.001590 resc_io: 4.000000 resc_cpu: 59260769
     resp: 6.001590 resp_io: 4.000000 resp_cpu: 59260769
SM Join (with index on outer)
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 2.000000  resc_cpu: 18443
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2.000623  Resp: 2.000623  Degree: 1
  Outer table:  L  Alias: L
    resc: 2.000623  card 10.000000  bytes:   deg: 1  resp: 2.000623
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 4.001143  Resp: 4.001143  [multiMatchCost=0.000000]
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020330  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021878  Resp: 4.021878  [multiMatchCost=0.000020]
HA Join
  HA cost: 4.021878  
     resc: 4.021878 resc_io: 4.000000 resc_cpu: 647729
     resp: 4.021878 resp_io: 4.000000 resp_cpu: 647729
Best:: JoinMethod: SortMerge
       Cost: 4.001143  Degree: 1  Resp: 4.001143  Card: 10.000000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 4.001143  Resp: 4.001143  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 98.216473, sel = 0.125001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 54.464286, sel = 0.125000 flag = 1  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2049  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 50.002500, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500904.402355 (cpu filter eval) (= 50.090440 (per row) * 10000.000000 (#rows))
                       =   2578940.402355
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 73.872206  Resp: 73.872206  Degree: 1
      Cost_io: 72.000000  Cost_cpu: 55430092
      Resp_io: 72.000000  Resp_cpu: 55430092
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1907426
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 84.645395  Resp: 84.645395  Degree: 1
      Cost_io: 83.000000  Cost_cpu: 48714949
      Resp_io: 83.000000  Resp_cpu: 48714949
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9325
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 14.004293  Resp: 14.004293  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 29733934
      Resp_io: 13.000000  Resp_cpu: 29733934
kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

kkofmx: index filter:"L"."ID2"="T2"."ID2"

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9325
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 14.004293  Resp: 14.004293  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 29733934
      Resp_io: 13.000000  Resp_cpu: 29733934
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Access Path: index (FullScan)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 30.000000  resc_cpu: 2213643
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    NL Join : Cost: 304.918008  Resp: 304.918008  Degree: 1
      Cost_io: 303.000000  Cost_cpu: 56786164
      Resp_io: 303.000000  Resp_cpu: 56786164
  ****** trying bitmap/domain indexes ******
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 0.000000  resc_cpu: 1900
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001785  Resp: 4.001785  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 29659688
      Resp_io: 3.000000  Resp_cpu: 29659688

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 44.095492  Resp: 44.095492  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 32434045
      Resp_io: 43.000000  Resp_cpu: 32434045
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 44.095492  Resp: 44.095492  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 32434045
      Resp_io: 43.000000  Resp_cpu: 32434045
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_ID2
      Cost = 4.001821, sel = 7.9936e-04
    Not used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 14.004293
          resc: 14.004293  resc_io: 13.000000  resc_cpu: 29733934
          resp: 14.004293  resp_io: 13.000000  resc_cpu: 29733934

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  1.998415 = outer (10.000000) * inner (10000.000000) * sel (1.9984e-05)
Join cardinality for HJ/SMJ (no post filters):  79.936051, outer: 10.000000, inner: 10000.000000, sel: 1.9984e-05
Join Card - Rounded: 2 Computed: 1.998415
  Outer table:  T1  Alias: T1
    resc: 4.001143  card 10.000000  bytes:   deg: 1  resp: 4.001143
  Inner table:  T2  Alias: T2
    resc: 9.103361  card: 1250.007812  bytes:   deg: 1  resp: 9.103361
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  SM join: Resc: 15.124124  Resp: 15.124124  [multiMatchCost=0.000000]
SM Join
  SM cost: 15.124124 
     resc: 15.124124 resc_io: 12.000000 resc_cpu: 92495454
     resp: 15.124124 resp_io: 12.000000 resp_cpu: 92495454
  Outer table:  T1  Alias: T1
    resc: 4.001143  card 10.000000  bytes:   deg: 1  resp: 4.001143
  Inner table:  T2  Alias: T2
    resc: 9.103361  card: 1250.007812  bytes:   deg: 1  resp: 9.103361
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024538  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 13.129043  Resp: 13.129043  [multiMatchCost=0.000000]
HA Join
  HA cost: 13.129043  
     resc: 13.129043 resc_io: 12.000000 resc_cpu: 33427389
     resp: 13.129043 resp_io: 12.000000 resp_cpu: 33427389
Best:: JoinMethod: Hash
       Cost: 13.129043  Degree: 1  Resp: 13.129043  Card: 1.998415 Bytes: 
***********************
Best so far:  Table#: 1  cost: 2.000623  card: 10.000000  bytes: 60.000000
              Table#: 0  cost: 4.001143  card: 10.000000  bytes: 120.000000
              Table#: 2  cost: 13.129043  card: 1.998415  bytes: 44.000000
***********************
Join order[4]:  L[L]#1  T2[T2]#2  T1[T1]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 98.216473, sel = 0.125001 flag = 2048  (OR chain)
      io = 0.000000, cpu = 54.464286, sel = 0.125000 flag = 1  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2049  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 50.002500, sel = 0.000001 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500785.103703 (cpu filter eval) (= 50.078510 (per row) * 10000.000000 (#rows))
                       =   2578821.103703
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 72.872042  Resp: 72.872042  Degree: 1
      Cost_io: 72.000000  Cost_cpu: 25818397
      Resp_io: 72.000000  Resp_cpu: 25818397
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1907307
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 83.645231  Resp: 83.645231  Degree: 1
      Cost_io: 83.000000  Cost_cpu: 19103254
      Resp_io: 83.000000  Resp_cpu: 19103254
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9310
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004164  Resp: 13.004164  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 123282
      Resp_io: 13.000000  Resp_cpu: 123282
kkofmx: index filter: ?? 

kkofmx: index filter:"L"."ID2"="T2"."ID2"

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9310
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004164  Resp: 13.004164  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 123282
      Resp_io: 13.000000  Resp_cpu: 123282
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Access Path: index (FullScan)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 30.000000  resc_cpu: 2213643
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    NL Join : Cost: 303.917844  Resp: 303.917844  Degree: 1
      Cost_io: 303.000000  Cost_cpu: 27174469
      Resp_io: 303.000000  Resp_cpu: 27174469
  ****** trying bitmap/domain indexes ******
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 0.000000  resc_cpu: 1900
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.001661  Resp: 3.001661  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 49186
      Resp_io: 3.000000  Resp_cpu: 49186

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 43.095368  Resp: 43.095368  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 2823543
      Resp_io: 43.000000  Resp_cpu: 2823543
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 43.095368  Resp: 43.095368  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 2823543
      Resp_io: 43.000000  Resp_cpu: 2823543
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_ID2
      Cost = 3.001698, sel = 7.9936e-04
    Not used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 13.004164
          resc: 13.004164  resc_io: 13.000000  resc_cpu: 123282
          resp: 13.004164  resp_io: 13.000000  resc_cpu: 123282

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  79.936051 = outer (10.000000) * inner (10000.000000) * sel (1.0000e-04)
Join cardinality for NL:  10.000000, outer: 10.000000, inner: 10000.000000, sel: 1.0000e-04
Join cardinality without POSQ:  10.000000, outer: 10.000000, inner: 10000.000000, sel: 1.0000e-04
Join Card - Rounded: 80 Computed: 79.936051
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 9.103361  card: 1250.007812  bytes:   deg: 1  resp: 9.103361
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  SM join: Resc: 14.124001  Resp: 14.124001  [multiMatchCost=0.000000]
SM Join
  SM cost: 14.124001 
     resc: 14.124001 resc_io: 12.000000 resc_cpu: 62884952
     resp: 14.124001 resp_io: 12.000000 resp_cpu: 62884952
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 9.103361  card: 1250.007812  bytes:   deg: 1  resp: 9.103361
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024538  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 12.128919  Resp: 12.128919  [multiMatchCost=0.000000]
HA Join
  HA cost: 12.128919  
     resc: 12.128919 resc_io: 12.000000 resc_cpu: 3816886
     resp: 12.128919 resp_io: 12.000000 resp_cpu: 3816886
Best:: JoinMethod: Hash
       Cost: 12.128919  Degree: 1  Resp: 12.128919  Card: 79.936051 Bytes: 

***************
Now joining: T1[T1]#0
***************
NL Join
  Outer table: Card: 79.936051  Cost: 12.128919  Resp: 12.128919  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.100000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.100000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.100000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 621.643360 (cpu filter eval) (= 62.164336 (per row) * 10.000000 (#rows))
                       =   30807.403360
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 100.212163  Resp: 100.212163  Degree: 1
      Cost_io: 100.000000  Cost_cpu: 6281479
      Resp_io: 100.000000  Resp_cpu: 6281479
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.287500  resc_cpu: 8943
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 35.153084  Resp: 35.153084  Degree: 1
      Cost_io: 35.000000  Cost_cpu: 4532333
      Resp_io: 35.000000  Resp_cpu: 4532333
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:   Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
 Sel: 0.200000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.200000
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 14643
    ix_sel: 0.200000  ix_sel_with_filters: 0.005000 
    NL Join : Cost: 92.169130  Resp: 92.169130  Degree: 1
      Cost_io: 92.000000  Cost_cpu: 5007420
      Resp_io: 92.000000  Resp_cpu: 5007420
  ****** trying bitmap/domain indexes ******

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 12.131756  Resp: 12.131756  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 3900886
      Resp_io: 12.000000  Resp_cpu: 3900886

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 12.131756  Resp: 12.131756  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 3900886
      Resp_io: 12.000000  Resp_cpu: 3900886
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 92.149243  Resp: 92.149243  Degree: 1
      Cost_io: 92.000000  Cost_cpu: 4418602
      Resp_io: 92.000000  Resp_cpu: 4418602
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Used T1_T1F_ID1
      Cost = 12.131757, sel = 0.020000
    Used T1_T1F_ID1
      Cost = 12.131757, sel = 0.020000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 35.153084
          resc: 35.153084  resc_io: 35.000000  resc_cpu: 4532333
          resp: 35.153084  resp_io: 35.000000  resc_cpu: 4532333
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  1.998415 = outer (79.936051) * inner (10.000000) * sel (0.002500)
Join cardinality for HJ/SMJ (no post filters):  79.936051, outer: 79.936051, inner: 10.000000, sel: 0.002500
Join cardinality without POSQ:  0.250002, outer: 10.000000, inner: 10.000000, sel: 0.002500
Join Card - Rounded: 2 Computed: 1.998415
  Outer table:  T2  Alias: T2
    resc: 12.128919  card 79.936051  bytes:   deg: 1  resp: 12.128919
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:             80
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29629628
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 15.130209  Resp: 15.130209  [multiMatchCost=0.000000]
SM Join
  SM cost: 15.130209 
     resc: 15.130209 resc_io: 13.000000 resc_cpu: 63068760
     resp: 15.130209 resp_io: 13.000000 resp_cpu: 63068760
  Outer table:  T2  Alias: T2
    resc: 12.128919  card 79.936051  bytes:   deg: 1  resp: 12.128919
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020684  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 13.150368  Resp: 13.150368  [multiMatchCost=0.000257]
HA Join
  HA cost: 13.150368  
     resc: 13.150368 resc_io: 13.000000 resc_cpu: 4451929
     resp: 13.150368 resp_io: 13.000000 resp_cpu: 4451929
Plan cardinality mismatch: best card= 1.99841519641   curr card= 0.25000174107
Join order aborted: cost > best plan cost
***********************
Join order[5]:  T2[T2]#2  T1[T1]#0  L[L]#1

***************
Now joining: T1[T1]#0
***************
NL Join
  Outer table: Card: 1250.007812  Cost: 9.103361  Resp: 9.103361  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.084800
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   1.084800 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.084800
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 1216.433603 (cpu filter eval) (= 121.643360 (per row) * 10.000000 (#rows))
                       =   31402.193603
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 1366.429161  Resp: 1366.429161  Degree: 1
      Cost_io: 1365.000000  Cost_cpu: 42312943
      Resp_io: 1365.000000  Resp_cpu: 42312943
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.272000  resc_cpu: 9538
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 349.506050  Resp: 349.506050  Degree: 1
      Cost_io: 349.000000  Cost_cpu: 14982543
      Resp_io: 349.000000  Resp_cpu: 14982543
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 15043
    ix_sel: 0.400000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 1259.758634  Resp: 1259.758634  Degree: 1
      Cost_io: 1259.000000  Cost_cpu: 22460767
      Resp_io: 1259.000000  Resp_cpu: 22460767
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 1259.420916  Resp: 1259.420916  Degree: 1
      Cost_io: 1259.000000  Cost_cpu: 12462001
      Resp_io: 1259.000000  Resp_cpu: 12462001
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 1259.420916  Resp: 1259.420916  Degree: 1
      Cost_io: 1259.000000  Cost_cpu: 12462001
      Resp_io: 1259.000000  Resp_cpu: 12462001
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Not used T1_T1F_ID1
      Cost = 4357.345678, sel = 0.200000
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 349.506050
          resc: 349.506050  resc_io: 349.000000  resc_cpu: 14982543
          resp: 349.506050  resp_io: 349.000000  resc_cpu: 14982543

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  2500.017411 = outer (10000.000000) * inner (10.000000) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  100000.000000, outer: 10000.000000, inner: 10.000000, sel: 0.025000
Join Card - Rounded: 2500 Computed: 2500.017411
Join order aborted: cost > best plan cost
***********************
Join order[6]:  T2[T2]#2  L[L]#1  T1[T1]#0

***************
Now joining: L[L]#1
***************
NL Join
  Outer table: Card: 1250.007812  Cost: 9.103361  Resp: 9.103361  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   1.084800
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   1.084800 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.084800
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 1366.398913  Resp: 1366.398913  Degree: 1
      Cost_io: 1365.000000  Cost_cpu: 41417401
      Resp_io: 1365.000000  Resp_cpu: 41417401
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 1366.398913
          resc: 1366.398913  resc_io: 1365.000000  resc_cpu: 41417401
          resp: 1366.398913  resp_io: 1365.000000  resc_cpu: 41417401

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  79.936051 = outer (10000.000000) * inner (10.000000) * sel (7.9936e-04)
Join Card - Rounded: 80 Computed: 79.936051
  Outer table:  T2  Alias: T2
    resc: 9.103361  card 1250.007812  bytes:   deg: 1  resp: 9.103361
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 14.124001  Resp: 14.124001  [multiMatchCost=0.000000]
SM Join
  SM cost: 14.124001 
     resc: 14.124001 resc_io: 12.000000 resc_cpu: 62884952
     resp: 14.124001 resp_io: 12.000000 resp_cpu: 62884952
SM Join (with index on outer)
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: T2_ID2
    resc_io: 42.000000  resc_cpu: 4699886
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 42.158743  Resp: 42.158743  Degree: 1
  Outer table:  T2  Alias: T2
    resc: 42.158743  card 1250.007812  bytes:   deg: 1  resp: 42.158743
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 46.159813  Resp: 46.159813  [multiMatchCost=0.000000]
  Outer table:  T2  Alias: T2
    resc: 9.103361  card 1250.007812  bytes:   deg: 1  resp: 9.103361
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.026632  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 4  probefrag: 1  ppasses: 1
  Hash join: Resc: 12.131250  Resp: 12.131250  [multiMatchCost=0.000236]
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 9.103361  card: 1250.007812  bytes:   deg: 1  resp: 9.103361
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024538  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 12.128919  Resp: 12.128919  [multiMatchCost=0.000000]
HA Join
  HA cost: 12.128919 swapped 
     resc: 12.128919 resc_io: 12.000000 resc_cpu: 3816886
     resp: 12.128919 resp_io: 12.000000 resp_cpu: 3816886
Best:: JoinMethod: Hash
       Cost: 12.128919  Degree: 1  Resp: 12.128919  Card: 79.936051 Bytes: 

***************
Now joining: T1[T1]#0
***************
NL Join
  Outer table: Card: 79.936051  Cost: 12.128919  Resp: 12.128919  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.100000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.100000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.100000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 621.643360 (cpu filter eval) (= 62.164336 (per row) * 10.000000 (#rows))
                       =   30807.403360
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 100.212163  Resp: 100.212163  Degree: 1
      Cost_io: 100.000000  Cost_cpu: 6281479
      Resp_io: 100.000000  Resp_cpu: 6281479
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.287500  resc_cpu: 8943
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 35.153084  Resp: 35.153084  Degree: 1
      Cost_io: 35.000000  Cost_cpu: 4532333
      Resp_io: 35.000000  Resp_cpu: 4532333
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:   Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
 Sel: 0.200000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.200000
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 14643
    ix_sel: 0.200000  ix_sel_with_filters: 0.005000 
    NL Join : Cost: 92.169130  Resp: 92.169130  Degree: 1
      Cost_io: 92.000000  Cost_cpu: 5007420
      Resp_io: 92.000000  Resp_cpu: 5007420
  ****** trying bitmap/domain indexes ******

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 12.131756  Resp: 12.131756  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 3900886
      Resp_io: 12.000000  Resp_cpu: 3900886

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 12.131756  Resp: 12.131756  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 3900886
      Resp_io: 12.000000  Resp_cpu: 3900886
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 92.149243  Resp: 92.149243  Degree: 1
      Cost_io: 92.000000  Cost_cpu: 4418602
      Resp_io: 92.000000  Resp_cpu: 4418602
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Used T1_T1F_ID1
      Cost = 12.131757, sel = 0.020000
    Used T1_T1F_ID1
      Cost = 12.131757, sel = 0.020000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 35.153084
          resc: 35.153084  resc_io: 35.000000  resc_cpu: 4532333
          resp: 35.153084  resp_io: 35.000000  resc_cpu: 4532333
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  1.998415 = outer (79.936051) * inner (10.000000) * sel (0.002500)
Join cardinality for HJ/SMJ (no post filters):  79.936051, outer: 79.936051, inner: 10.000000, sel: 0.002500
Join Card - Rounded: 2 Computed: 1.998415
  Outer table:  L  Alias: L
    resc: 12.128919  card 79.936051  bytes:   deg: 1  resp: 12.128919
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:             80
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29629628
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 15.130209  Resp: 15.130209  [multiMatchCost=0.000000]
SM Join
  SM cost: 15.130209 
     resc: 15.130209 resc_io: 13.000000 resc_cpu: 63068760
     resp: 15.130209 resp_io: 13.000000 resp_cpu: 63068760
  Outer table:  L  Alias: L
    resc: 12.128919  card 79.936051  bytes:   deg: 1  resp: 12.128919
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020684  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 13.150368  Resp: 13.150368  [multiMatchCost=0.000257]
HA Join
  HA cost: 13.150368  
     resc: 13.150368 resc_io: 13.000000 resc_cpu: 4451929
     resp: 13.150368 resp_io: 13.000000 resp_cpu: 4451929
Plan cardinality mismatch: best card= 1.99841519641   curr card= 1.99841519641
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:0, spcnt:0, perm:6, maxperm:2000

*********************************
Number of join permutations tried: 6
*********************************
Consider using bloom filter between T1[T1] and T2[T2] with ??
kkoBloomFilter: join (lcdn:10 rcdn:1250 jcdn:2 limit:6250)
kkopqSingleJoinBloomNdv:Compute bloom ndv for lfro:L[L] and rfro:T2[T2] swap:no
kkopqSingleJoinBloomNdv: predCnt:#1 col1:(bndv:10 ndv:10) and col2:(bndv:10000 ndv:1251) creatorNDV:10.0 userNDV:10000.0
kkopqSingleJoinBloomNdv:Compute bloom ndv for lfro:T1[T1] and rfro:T2[T2] swap:no
kkopqComputeBloomNdv: predCnt:1 creatorNdv:10.0 userNdv:10000.0 singleTblPred:yes
kkoBloomFilter: join ndv:10 reduction:0.008000 (limit:0.500000)  accepted, but final decision will be made in code generation
Enumerating distribution method (advanced)
--- Distribution method for 
join between L[L](serial) and T1[T1](serial); jm = 8; right side access path = IndexRange
---- serial Sort-Merge-Join -> NONE
--- Distribution method for 
join between T1[T1](serial) and T2[T2](serial); jm = 1; right side access path = TableScan
---- serial Hash-Join -> NONE

(newjo-save)    [2 1 0 ]
LORE: Trying or-Expansion on query block SEL$1 (#0)

LORE: ******** Next OR predicate ********

LORE: Trying or-Expansion on query block SEL$1 (#0) on OR chain:
id=0  predicate=("T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND ("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"

LORE: ******** OR-branching ********

LORE: or-expansion-subheap (create addr=0x7fa8a2978e48)
****************
QUERY BLOCK TEXT
****************
SELECT /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null FROM l, t1, t2 WHERE  
(  ( t1.t1f = 0 AND t2.t2f1 BETWEEN 9 AND 10)       OR 
   ( t1.t1f = 1 AND t2.t2f1 = 14 AND t2.t2f2 = 13  )   )  AND 
    ( l.id1 = t1.id1 AND l.id2 = t2.id2 )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$1 nbfros=3 flg=0
  fro(0): flg=0 objn=73956 hint_alias="L"@"SEL$1"
  fro(1): flg=0 objn=73958 hint_alias="T1"@"SEL$1"
  fro(2): flg=0 objn=73960 hint_alias="T2"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 2467 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: T2  Alias: T2
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  25  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T2F1(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#3): T2F2(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#1): ID2(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: T2_ID2  Col#: 1
  LVLS: 1  #LB: 20  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: T2_T2F1_T2F2_ID2  Col#: 2 3 1
  LVLS: 1  #LB: 29  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 168.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: T1  Alias: T1
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T1F(NUMBER)
    AvgLen: 3 NDV: 5 Nulls: 0 Density: 0.200000 Min: 0.000000 Max: 4.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: T1_T1F_ID1  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  L  Alias:  L
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
  Column (#2): ID2(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: L_ID1  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$1 (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for L
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for L[L] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: L  Alias: L
    Card: Original: 10.000000  Rounded: 10  Computed: 10.000000  Non Adjusted: 10.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                       =   30185.760000
  Access Path: TableScan
    Cost:  3.001020  Resp: 3.001020  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 30186
      Resp_io: 3.000000  Resp_cpu: 30186
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3.001020  Degree: 1  Resp: 3.001020  Card: 10.000000  Bytes: 0.000000

Access path analysis for T1
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T1[T1] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE

 kkecdn: Single Table Predicate:"T1"."T1F"=0 OR "T1"."T1F"=1
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Table: T1  Alias: T1
    Card: Original: 10.000000  Rounded: 4  Computed: 4.000000  Non Adjusted: 4.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 900.000000 (cpu filter eval) (= 90.000000 (per row) * 10.000000 (#rows))
                       =   31085.760000
  Access Path: TableScan
    Cost:  3.001050  Resp: 3.001050  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 31086
      Resp_io: 3.000000  Resp_cpu: 31086
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9221
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000311  Resp: 2.000311  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9221
      Resp_io: 2.000000  Resp_cpu: 9221
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 15043
    ix_sel: 0.400000  ix_sel_with_filters: 0.400000 
    Cost: 1.000508  Resp: 1.000508  Degree: 1
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    Cost: 1.000254  Resp: 1.000254  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    Cost: 1.000254  Resp: 1.000254  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Not used T1_T1F_ID1
      Cost = 2.000267, sel = 0.200000
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T1_T1F_ID1
         Cost: 1.000508  Degree: 1  Resp: 1.000508  Card: 4.000000  Bytes: 0.000000

Access path analysis for T2
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T2[T2] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE


 kkecdn: Single Table Predicate:"T2"."T2F1">=9
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F1"<=10
  Estimated selectivity: 1.000000 , col: #2 
  Table: T2  Alias: T2
    Card: Original: 10000.000000  Rounded: 1250  Computed: 1250.000000  Non Adjusted: 1250.000000
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   1903036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2049  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   1903036.000000 (scan (Disk))
                         + 544642.857143 (cpu filter eval) (= 54.464286 (per row) * 10000.000000 (#rows))
                       =   2447678.857143
  Access Path: TableScan
    Cost:  9.082673  Resp: 9.082673  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2447679
      Resp_io: 9.000000  Resp_cpu: 2447679
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1951165
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.065902  Resp: 10.065902  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1951165
      Resp_io: 10.000000  Resp_cpu: 1951165
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 5.000000  resc_cpu: 285607
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    Cost: 5.009647  Resp: 5.009647  Degree: 1
  ****** trying bitmap/domain indexes ******

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 5.000000  resc_cpu: 285607
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    Cost: 5.009647  Resp: 5.009647  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 5.000000  resc_cpu: 285607
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    Cost: 5.009647  Resp: 5.009647  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_T2F1_T2F2_ID2
      Cost = 6.034921, sel = 0.125000
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T2_T2F1_T2F2_ID2
         Cost: 5.009647  Degree: 1  Resp: 5.009647  Card: 1250.000000  Bytes: 0.000000

(newjo-restore) [2 1 0 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is undergoing OR expansion SEL$1 (#0)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  L[L]#0  T1[T1]#1  T2[T2]#2

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.200000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.200000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.200000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 590.000000 (cpu filter eval) (= 59.000000 (per row) * 10.000000 (#rows))
                       =   30775.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 15.011414  Resp: 15.011414  Degree: 1
      Cost_io: 15.000000  Cost_cpu: 337943
      Resp_io: 15.000000  Resp_cpu: 337943
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.400000  resc_cpu: 8911
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 7.004029  Resp: 7.004029  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 119300
      Resp_io: 7.000000  Resp_cpu: 119300
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:   Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
 Sel: 0.200000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.200000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 14643
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 13.005965  Resp: 13.005965  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 176615
      Resp_io: 13.000000  Resp_cpu: 176615
  ****** trying bitmap/domain indexes ******

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.001374  Resp: 3.001374  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 40686
      Resp_io: 3.000000  Resp_cpu: 40686

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.001374  Resp: 3.001374  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 40686
      Resp_io: 3.000000  Resp_cpu: 40686
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 13.003560  Resp: 13.003560  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 105400
      Resp_io: 13.000000  Resp_cpu: 105400
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Used T1_T1F_ID1
      Cost = 3.001375, sel = 0.020000
    Used T1_T1F_ID1
      Cost = 3.001375, sel = 0.020000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 7.004029
          resc: 7.004029  resc_io: 7.000000  resc_cpu: 119300
          resp: 7.004029  resp_io: 7.000000  resc_cpu: 119300
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 6.001590  Resp: 6.001590  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001590 
     resc: 6.001590 resc_io: 4.000000 resc_cpu: 59260769
     resp: 6.001590 resp_io: 4.000000 resp_cpu: 59260769
SM Join (with index on outer)
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 2.000000  resc_cpu: 17943
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2.000606  Resp: 2.000606  Degree: 1
  Outer table:  L  Alias: L
    resc: 2.000606  card 10.000000  bytes:   deg: 1  resp: 2.000606
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 4.001126  Resp: 4.001126  [multiMatchCost=0.000000]
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020330  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021878  Resp: 4.021878  [multiMatchCost=0.000020]
HA Join
  HA cost: 4.021878  
     resc: 4.021878 resc_io: 4.000000 resc_cpu: 647729
     resp: 4.021878 resp_io: 4.000000 resp_cpu: 647729
Best:: JoinMethod: SortMerge
       Cost: 4.001126  Degree: 1  Resp: 4.001126  Card: 10.000000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 4.001126  Resp: 4.001126  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2049  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500485.785196 (cpu filter eval) (= 50.048579 (per row) * 10000.000000 (#rows))
                       =   2578521.785196
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 73.872047  Resp: 73.872047  Degree: 1
      Cost_io: 72.000000  Cost_cpu: 55425406
      Resp_io: 72.000000  Resp_cpu: 55425406
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1907008
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 84.645237  Resp: 84.645237  Degree: 1
      Cost_io: 83.000000  Cost_cpu: 48710263
      Resp_io: 83.000000  Resp_cpu: 48710263
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9272
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 14.004258  Resp: 14.004258  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 29732910
      Resp_io: 13.000000  Resp_cpu: 29732910
kkofmx: index filter: ?? 

kkofmx: index filter:"L"."ID2"="T2"."ID2"

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9272
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 14.004258  Resp: 14.004258  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 29732910
      Resp_io: 13.000000  Resp_cpu: 29732910
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 3.1250e-07 
    NL Join : Cost: 44.116625  Resp: 44.116625  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 33059738
      Resp_io: 43.000000  Resp_cpu: 33059738
  ****** trying bitmap/domain indexes ******
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 0.000000  resc_cpu: 1900
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001768  Resp: 4.001768  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 29659188
      Resp_io: 3.000000  Resp_cpu: 29659188

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 44.095475  Resp: 44.095475  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 32433545
      Resp_io: 43.000000  Resp_cpu: 32433545
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_ID2
      Cost = 4.001805, sel = 8.0000e-04
    Not used T2_T2F1_T2F2_ID2
      Cost = 45.120787, sel = 0.125000
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 14.004258
          resc: 14.004258  resc_io: 13.000000  resc_cpu: 29732910
          resp: 14.004258  resp_io: 13.000000  resc_cpu: 29732910
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.250002 = outer (10.000000) * inner (1250.000000) * sel (2.0000e-05)
Join cardinality for HJ/SMJ (no post filters):  10.000000, outer: 10.000000, inner: 1250.000000, sel: 2.0000e-05
Join Card - Rounded: 1 Computed: 0.250002
  Outer table:  T1  Alias: T1
    resc: 4.001126  card 10.000000  bytes:   deg: 1  resp: 4.001126
  Inner table:  T2  Alias: T2
    resc: 5.009647  card: 1250.000000  bytes:   deg: 1  resp: 5.009647
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  SM join: Resc: 11.030393  Resp: 11.030393  [multiMatchCost=0.000000]
SM Join
  SM cost: 11.030393 
     resc: 11.030393 resc_io: 8.000000 resc_cpu: 89720361
     resp: 11.030393 resp_io: 8.000000 resp_cpu: 89720361
  Outer table:  T1  Alias: T1
    resc: 4.001126  card 10.000000  bytes:   deg: 1  resp: 4.001126
  Inner table:  T2  Alias: T2
    resc: 5.009647  card: 1250.000000  bytes:   deg: 1  resp: 5.009647
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024538  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 9.035311  Resp: 9.035311  [multiMatchCost=0.000000]
HA Join
  HA cost: 9.035311  
     resc: 9.035311 resc_io: 8.000000 resc_cpu: 30652295
     resp: 9.035311 resp_io: 8.000000 resp_cpu: 30652295
Best:: JoinMethod: Hash
       Cost: 9.035311  Degree: 1  Resp: 9.035311  Card: 0.250002 Bytes: 
***********************
Best so far:  Table#: 0  cost: 2.000606  card: 10.000000  bytes: 60.000000
              Table#: 1  cost: 4.001126  card: 10.000000  bytes: 120.000000
              Table#: 2  cost: 9.035311  card: 0.250002  bytes: 22.000000
***********************
Join order[2]:  L[L]#0  T2[T2]#2  T1[T1]#1

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   1903036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2065  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   1903036.000000 (scan (Disk))
                         + 500435.365993 (cpu filter eval) (= 50.043537 (per row) * 10000.000000 (#rows))
                       =   2403471.365993
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 72.812815  Resp: 72.812815  Degree: 1
      Cost_io: 72.000000  Cost_cpu: 24064899
      Resp_io: 72.000000  Resp_cpu: 24064899
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1906957
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 83.645113  Resp: 83.645113  Degree: 1
      Cost_io: 83.000000  Cost_cpu: 19099757
      Resp_io: 83.000000  Resp_cpu: 19099757
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9266
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004149  Resp: 13.004149  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122845
      Resp_io: 13.000000  Resp_cpu: 122845
kkofmx: index filter:"L"."ID2"="T2"."ID2"

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9266
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004149  Resp: 13.004149  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122845
      Resp_io: 13.000000  Resp_cpu: 122845
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 1.2500e-05 
    NL Join : Cost: 43.116478  Resp: 43.116478  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 3448543
      Resp_io: 43.000000  Resp_cpu: 3448543
  ****** trying bitmap/domain indexes ******
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 0.000000  resc_cpu: 1900
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.001661  Resp: 3.001661  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 49186
      Resp_io: 3.000000  Resp_cpu: 49186

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 43.095368  Resp: 43.095368  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 2823543
      Resp_io: 43.000000  Resp_cpu: 2823543
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 43.095368  Resp: 43.095368  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 2823543
      Resp_io: 43.000000  Resp_cpu: 2823543
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_ID2
      Cost = 3.001698, sel = 8.0000e-04
    Not used T2_T2F1_T2F2_ID2
      Cost = 44.120680, sel = 0.125000
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 13.004149
          resc: 13.004149  resc_io: 13.000000  resc_cpu: 122845
          resp: 13.004149  resp_io: 13.000000  resc_cpu: 122845
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (1250.000000) * sel (8.0000e-04)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 5.009647  card: 1250.000000  bytes:   deg: 1  resp: 5.009647
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  SM join: Resc: 10.030286  Resp: 10.030286  [multiMatchCost=0.000000]
SM Join
  SM cost: 10.030286 
     resc: 10.030286 resc_io: 8.000000 resc_cpu: 60110358
     resp: 10.030286 resp_io: 8.000000 resp_cpu: 60110358
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 5.009647  card: 1250.000000  bytes:   deg: 1  resp: 5.009647
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024538  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 8.035204  Resp: 8.035204  [multiMatchCost=0.000000]
HA Join
  HA cost: 8.035204  
     resc: 8.035204 resc_io: 8.000000 resc_cpu: 1042293
     resp: 8.035204 resp_io: 8.000000 resp_cpu: 1042293
Best:: JoinMethod: Hash
       Cost: 8.035204  Degree: 1  Resp: 8.035204  Card: 10.000000 Bytes: 

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 8.035204  Resp: 8.035204  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.200000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.200000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.200000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 621.643360 (cpu filter eval) (= 62.164336 (per row) * 10.000000 (#rows))
                       =   30807.403360
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 20.045610  Resp: 20.045610  Degree: 1
      Cost_io: 20.000000  Cost_cpu: 1350367
      Resp_io: 20.000000  Resp_cpu: 1350367
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.400000  resc_cpu: 8943
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 12.038225  Resp: 12.038225  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1131724
      Resp_io: 12.000000  Resp_cpu: 1131724
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:   Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
 Sel: 0.200000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.200000
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 14643
    ix_sel: 0.200000  ix_sel_with_filters: 0.005000 
    NL Join : Cost: 18.040231  Resp: 18.040231  Degree: 1
      Cost_io: 18.000000  Cost_cpu: 1191110
      Resp_io: 18.000000  Resp_cpu: 1191110
  ****** trying bitmap/domain indexes ******

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 8.035559  Resp: 8.035559  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 1052793
      Resp_io: 8.000000  Resp_cpu: 1052793

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 8.035559  Resp: 8.035559  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 1052793
      Resp_io: 8.000000  Resp_cpu: 1052793
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 18.037745  Resp: 18.037745  Degree: 1
      Cost_io: 18.000000  Cost_cpu: 1117507
      Resp_io: 18.000000  Resp_cpu: 1117507
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Used T1_T1F_ID1
      Cost = 8.035560, sel = 0.020000
    Used T1_T1F_ID1
      Cost = 8.035560, sel = 0.020000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 12.038225
          resc: 12.038225  resc_io: 12.000000  resc_cpu: 1131724
          resp: 12.038225  resp_io: 12.000000  resc_cpu: 1131724
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.250002 = outer (10.000000) * inner (10.000000) * sel (0.002500)
Join cardinality for HJ/SMJ (no post filters):  10.000000, outer: 10.000000, inner: 10.000000, sel: 0.002500
Join Card - Rounded: 1 Computed: 0.250002
  Outer table:  T2  Alias: T2
    resc: 8.035204  card 10.000000  bytes:   deg: 1  resp: 8.035204
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 11.035775  Resp: 11.035775  [multiMatchCost=0.000000]
SM Join
  SM cost: 11.035775 
     resc: 11.035775 resc_io: 9.000000 resc_cpu: 60272876
     resp: 11.035775 resp_io: 9.000000 resp_cpu: 60272876
  Outer table:  T2  Alias: T2
    resc: 8.035204  card 10.000000  bytes:   deg: 1  resp: 8.035204
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020330  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 9.056063  Resp: 9.056063  [multiMatchCost=0.000020]
HA Join
  HA cost: 9.056063  
     resc: 9.056063 resc_io: 9.000000 resc_cpu: 1659836
     resp: 9.056063 resp_io: 9.000000 resp_cpu: 1659836
Join order aborted: cost > best plan cost
***********************
Join order[3]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 4.000000  Cost: 1.000508  Resp: 1.000508  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 7.004654  Resp: 7.004654  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 137786
      Resp_io: 7.000000  Resp_cpu: 137786
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.001635  Resp: 5.001635  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48409
      Resp_io: 5.000000  Resp_cpu: 48409
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.001635  Resp: 5.001635  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48409
      Resp_io: 5.000000  Resp_cpu: 48409
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001635
          resc: 5.001635  resc_io: 5.000000  resc_cpu: 48409
          resp: 5.001635  resp_io: 5.000000  resc_cpu: 48409
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  T1  Alias: T1
    resc: 1.000508  card 4.000000  bytes:   deg: 1  resp: 1.000508
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001590  Resp: 6.001590  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001590 
     resc: 6.001590 resc_io: 4.000000 resc_cpu: 59260769
     resp: 6.001590 resp_io: 4.000000 resp_cpu: 59260769
  Outer table:  T1  Alias: T1
    resc: 1.000508  card 4.000000  bytes:   deg: 1  resp: 1.000508
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021847  Resp: 4.021847  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021847  
     resc: 4.021847 resc_io: 4.000000 resc_cpu: 646829
     resp: 4.021847 resp_io: 4.000000 resp_cpu: 646829
Best:: JoinMethod: Hash
       Cost: 4.021847  Degree: 1  Resp: 4.021847  Card: 10.000000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 4.021847  Resp: 4.021847  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2049  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500485.785196 (cpu filter eval) (= 50.048579 (per row) * 10000.000000 (#rows))
                       =   2578521.785196
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 73.892768  Resp: 73.892768  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 26432046
      Resp_io: 73.000000  Resp_cpu: 26432046
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1907008
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 84.665958  Resp: 84.665958  Degree: 1
      Cost_io: 84.000000  Cost_cpu: 19716904
      Resp_io: 84.000000  Resp_cpu: 19716904
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9272
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 14.024979  Resp: 14.024979  Degree: 1
      Cost_io: 14.000000  Cost_cpu: 739551
      Resp_io: 14.000000  Resp_cpu: 739551
kkofmx: index filter: ?? 

kkofmx: index filter:"L"."ID2"="T2"."ID2"

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9272
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 14.024979  Resp: 14.024979  Degree: 1
      Cost_io: 14.000000  Cost_cpu: 739551
      Resp_io: 14.000000  Resp_cpu: 739551
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 3.1250e-07 
    NL Join : Cost: 44.137346  Resp: 44.137346  Degree: 1
      Cost_io: 44.000000  Cost_cpu: 4066379
      Resp_io: 44.000000  Resp_cpu: 4066379
  ****** trying bitmap/domain indexes ******
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 0.000000  resc_cpu: 1900
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.022489  Resp: 4.022489  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 665829
      Resp_io: 4.000000  Resp_cpu: 665829

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 44.116196  Resp: 44.116196  Degree: 1
      Cost_io: 44.000000  Cost_cpu: 3440186
      Resp_io: 44.000000  Resp_cpu: 3440186
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_ID2
      Cost = 4.022525, sel = 8.0000e-04
    Not used T2_T2F1_T2F2_ID2
      Cost = 45.141509, sel = 0.125000
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 14.024979
          resc: 14.024979  resc_io: 14.000000  resc_cpu: 739551
          resp: 14.024979  resp_io: 14.000000  resc_cpu: 739551
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.250002 = outer (10.000000) * inner (1250.000000) * sel (2.0000e-05)
Join cardinality for HJ/SMJ (no post filters):  10.000000, outer: 10.000000, inner: 1250.000000, sel: 2.0000e-05
Join Card - Rounded: 1 Computed: 0.250002
  Outer table:  L  Alias: L
    resc: 4.021847  card 10.000000  bytes:   deg: 1  resp: 4.021847
  Inner table:  T2  Alias: T2
    resc: 5.009647  card: 1250.000000  bytes:   deg: 1  resp: 5.009647
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  SM join: Resc: 11.051114  Resp: 11.051114  [multiMatchCost=0.000000]
SM Join
  SM cost: 11.051114 
     resc: 11.051114 resc_io: 9.000000 resc_cpu: 60727001
     resp: 11.051114 resp_io: 9.000000 resp_cpu: 60727001
  Outer table:  L  Alias: L
    resc: 4.021847  card 10.000000  bytes:   deg: 1  resp: 4.021847
  Inner table:  T2  Alias: T2
    resc: 5.009647  card: 1250.000000  bytes:   deg: 1  resp: 5.009647
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024538  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 9.056032  Resp: 9.056032  [multiMatchCost=0.000000]
HA Join
  HA cost: 9.056032  
     resc: 9.056032 resc_io: 9.000000 resc_cpu: 1658936
     resp: 9.056032 resp_io: 9.000000 resp_cpu: 1658936
Join order aborted: cost > best plan cost
***********************
Join order[4]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 4.000000  Cost: 1.000508  Resp: 1.000508  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   7.250000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2065  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   7.250000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.250000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 607717.279775 (cpu filter eval) (= 60.771728 (per row) * 10000.000000 (#rows))
                       =   2685753.279775
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 30.363364  Resp: 30.363364  Degree: 1
      Cost_io: 30.000000  Cost_cpu: 10758056
      Resp_io: 30.000000  Resp_cpu: 10758056
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.250000  resc_cpu: 2014239
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 34.272640  Resp: 34.272640  Degree: 1
      Cost_io: 34.000000  Cost_cpu: 8071999
      Resp_io: 34.000000  Resp_cpu: 8071999
kkofmx: index filter: ?? 

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.003125 
    NL Join : Cost: 17.058411  Resp: 17.058411  Degree: 1
      Cost_io: 17.000000  Cost_cpu: 1729353
      Resp_io: 17.000000  Resp_cpu: 1729353
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 17.058411
          resc: 17.058411  resc_io: 17.000000  resc_cpu: 1729353
          resp: 17.058411  resp_io: 17.000000  resc_cpu: 1729353
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  312.502176 = outer (10.000000) * inner (1250.000000) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  12500.000000, outer: 10.000000, inner: 1250.000000, sel: 0.025000
Join Card - Rounded: 313 Computed: 312.502176
Join order aborted: cost > best plan cost
***********************
Join order[5]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 1250.000000  Cost: 5.009647  Resp: 5.009647  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   1.084800
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   1.084800 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.084800
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 1362.305199  Resp: 1362.305199  Degree: 1
      Cost_io: 1361.000000  Cost_cpu: 38642807
      Resp_io: 1361.000000  Resp_cpu: 38642807
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 1362.305199
          resc: 1362.305199  resc_io: 1361.000000  resc_cpu: 38642807
          resp: 1362.305199  resp_io: 1361.000000  resc_cpu: 38642807
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (1250.000000) * inner (10.000000) * sel (8.0000e-04)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  T2  Alias: T2
    resc: 5.009647  card 1250.000000  bytes:   deg: 1  resp: 5.009647
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 10.030286  Resp: 10.030286  [multiMatchCost=0.000000]
SM Join
  SM cost: 10.030286 
     resc: 10.030286 resc_io: 8.000000 resc_cpu: 60110358
     resp: 10.030286 resp_io: 8.000000 resp_cpu: 60110358
  Outer table:  T2  Alias: T2
    resc: 5.009647  card 1250.000000  bytes:   deg: 1  resp: 5.009647
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.026632  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 4  probefrag: 1  ppasses: 1
  Hash join: Resc: 8.037299  Resp: 8.037299  [multiMatchCost=0.000000]
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 5.009647  card: 1250.000000  bytes:   deg: 1  resp: 5.009647
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024538  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 8.035204  Resp: 8.035204  [multiMatchCost=0.000000]
HA Join
  HA cost: 8.035204 swapped 
     resc: 8.035204 resc_io: 8.000000 resc_cpu: 1042293
     resp: 8.035204 resp_io: 8.000000 resp_cpu: 1042293
Best:: JoinMethod: Hash
       Cost: 8.035204  Degree: 1  Resp: 8.035204  Card: 10.000000 Bytes: 

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 8.035204  Resp: 8.035204  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.200000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2080  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.200000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.200000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 621.643360 (cpu filter eval) (= 62.164336 (per row) * 10.000000 (#rows))
                       =   30807.403360
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 20.045610  Resp: 20.045610  Degree: 1
      Cost_io: 20.000000  Cost_cpu: 1350367
      Resp_io: 20.000000  Resp_cpu: 1350367
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.400000  resc_cpu: 8943
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 12.038225  Resp: 12.038225  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1131724
      Resp_io: 12.000000  Resp_cpu: 1131724
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:   Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
 Sel: 0.200000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.200000
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 14643
    ix_sel: 0.200000  ix_sel_with_filters: 0.005000 
    NL Join : Cost: 18.040231  Resp: 18.040231  Degree: 1
      Cost_io: 18.000000  Cost_cpu: 1191110
      Resp_io: 18.000000  Resp_cpu: 1191110
  ****** trying bitmap/domain indexes ******

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 8.035559  Resp: 8.035559  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 1052793
      Resp_io: 8.000000  Resp_cpu: 1052793

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 8.035559  Resp: 8.035559  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 1052793
      Resp_io: 8.000000  Resp_cpu: 1052793
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 18.037745  Resp: 18.037745  Degree: 1
      Cost_io: 18.000000  Cost_cpu: 1117507
      Resp_io: 18.000000  Resp_cpu: 1117507
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Used T1_T1F_ID1
      Cost = 8.035560, sel = 0.020000
    Used T1_T1F_ID1
      Cost = 8.035560, sel = 0.020000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 12.038225
          resc: 12.038225  resc_io: 12.000000  resc_cpu: 1131724
          resp: 12.038225  resp_io: 12.000000  resc_cpu: 1131724
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.250002 = outer (10.000000) * inner (10.000000) * sel (0.002500)
Join cardinality for HJ/SMJ (no post filters):  10.000000, outer: 10.000000, inner: 10.000000, sel: 0.002500
Join Card - Rounded: 1 Computed: 0.250002
  Outer table:  L  Alias: L
    resc: 8.035204  card 10.000000  bytes:   deg: 1  resp: 8.035204
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 11.035775  Resp: 11.035775  [multiMatchCost=0.000000]
SM Join
  SM cost: 11.035775 
     resc: 11.035775 resc_io: 9.000000 resc_cpu: 60272876
     resp: 11.035775 resp_io: 9.000000 resp_cpu: 60272876
  Outer table:  L  Alias: L
    resc: 8.035204  card 10.000000  bytes:   deg: 1  resp: 8.035204
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020330  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 9.056063  Resp: 9.056063  [multiMatchCost=0.000020]
HA Join
  HA cost: 9.056063  
     resc: 9.056063 resc_io: 9.000000 resc_cpu: 1659836
     resp: 9.056063 resp_io: 9.000000 resp_cpu: 1659836
Join order aborted: cost > best plan cost
***********************
Join order[6]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 1250.000000  Cost: 5.009647  Resp: 5.009647  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.084800
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   1.084800 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.084800
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 1216.433603 (cpu filter eval) (= 121.643360 (per row) * 10.000000 (#rows))
                       =   31402.193603
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 1362.335446  Resp: 1362.335446  Degree: 1
      Cost_io: 1361.000000  Cost_cpu: 39538349
      Resp_io: 1361.000000  Resp_cpu: 39538349
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.272000  resc_cpu: 9538
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 345.412335  Resp: 345.412335  Degree: 1
      Cost_io: 345.000000  Cost_cpu: 12207949
      Resp_io: 345.000000  Resp_cpu: 12207949
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 15043
    ix_sel: 0.400000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 1255.664920  Resp: 1255.664920  Degree: 1
      Cost_io: 1255.000000  Cost_cpu: 19686174
      Resp_io: 1255.000000  Resp_cpu: 19686174
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 1255.327202  Resp: 1255.327202  Degree: 1
      Cost_io: 1255.000000  Cost_cpu: 9687407
      Resp_io: 1255.000000  Resp_cpu: 9687407
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 1255.327202  Resp: 1255.327202  Degree: 1
      Cost_io: 1255.000000  Cost_cpu: 9687407
      Resp_io: 1255.000000  Resp_cpu: 9687407
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Not used T1_T1F_ID1
      Cost = 4333.599824, sel = 0.200000
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 345.412335
          resc: 345.412335  resc_io: 345.000000  resc_cpu: 12207949
          resp: 345.412335  resp_io: 345.000000  resc_cpu: 12207949
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  312.502176 = outer (1250.000000) * inner (10.000000) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  12500.000000, outer: 1250.000000, inner: 10.000000, sel: 0.025000
Join Card - Rounded: 313 Computed: 312.502176
Join order aborted: cost > best plan cost
***********************
Permutations for Starting Table :1
Join order[7]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 1250.000000  Cost: 5.009647  Resp: 5.009647  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   1.084800
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   1.084800 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.084800
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 1362.305199  Resp: 1362.305199  Degree: 1
      Cost_io: 1361.000000  Cost_cpu: 38642807
      Resp_io: 1361.000000  Resp_cpu: 38642807
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 1362.305199
          resc: 1362.305199  resc_io: 1361.000000  resc_cpu: 38642807
          resp: 1362.305199  resp_io: 1361.000000  resc_cpu: 38642807
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (1250.000000) * inner (10.000000) * sel (8.0000e-04)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  T2  Alias: T2
    resc: 5.009647  card 1250.000000  bytes:   deg: 1  resp: 5.009647
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 10.030286  Resp: 10.030286  [multiMatchCost=0.000000]
SM Join
  SM cost: 10.030286 
     resc: 10.030286 resc_io: 8.000000 resc_cpu: 60110358
     resp: 10.030286 resp_io: 8.000000 resp_cpu: 60110358
  Outer table:  T2  Alias: T2
    resc: 5.009647  card 1250.000000  bytes:   deg: 1  resp: 5.009647
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.026632  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 4  probefrag: 1  ppasses: 1
  Hash join: Resc: 8.037299  Resp: 8.037299  [multiMatchCost=0.000000]
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 5.009647  card: 1250.000000  bytes:   deg: 1  resp: 5.009647
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024538  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 8.035204  Resp: 8.035204  [multiMatchCost=0.000000]
HA Join
  HA cost: 8.035204 swapped 
     resc: 8.035204 resc_io: 8.000000 resc_cpu: 1042293
     resp: 8.035204 resp_io: 8.000000 resp_cpu: 1042293
Best:: JoinMethod: Hash
       Cost: 8.035204  Degree: 1  Resp: 8.035204  Card: 10.000000 Bytes: 

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 8.035204  Resp: 8.035204  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.200000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.200000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.200000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 621.643360 (cpu filter eval) (= 62.164336 (per row) * 10.000000 (#rows))
                       =   30807.403360
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 20.045610  Resp: 20.045610  Degree: 1
      Cost_io: 20.000000  Cost_cpu: 1350367
      Resp_io: 20.000000  Resp_cpu: 1350367
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.400000  resc_cpu: 8943
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 12.038225  Resp: 12.038225  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1131724
      Resp_io: 12.000000  Resp_cpu: 1131724
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:   Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
 Sel: 0.200000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.200000
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 14643
    ix_sel: 0.200000  ix_sel_with_filters: 0.005000 
    NL Join : Cost: 18.040231  Resp: 18.040231  Degree: 1
      Cost_io: 18.000000  Cost_cpu: 1191110
      Resp_io: 18.000000  Resp_cpu: 1191110
  ****** trying bitmap/domain indexes ******

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 8.035559  Resp: 8.035559  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 1052793
      Resp_io: 8.000000  Resp_cpu: 1052793

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 8.035559  Resp: 8.035559  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 1052793
      Resp_io: 8.000000  Resp_cpu: 1052793
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 18.037745  Resp: 18.037745  Degree: 1
      Cost_io: 18.000000  Cost_cpu: 1117507
      Resp_io: 18.000000  Resp_cpu: 1117507
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Used T1_T1F_ID1
      Cost = 8.035560, sel = 0.020000
    Used T1_T1F_ID1
      Cost = 8.035560, sel = 0.020000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 12.038225
          resc: 12.038225  resc_io: 12.000000  resc_cpu: 1131724
          resp: 12.038225  resp_io: 12.000000  resc_cpu: 1131724
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.250002 = outer (10.000000) * inner (10.000000) * sel (0.002500)
Join cardinality for HJ/SMJ (no post filters):  10.000000, outer: 10.000000, inner: 10.000000, sel: 0.002500
Join Card - Rounded: 1 Computed: 0.250002
  Outer table:  L  Alias: L
    resc: 8.035204  card 10.000000  bytes:   deg: 1  resp: 8.035204
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 11.035775  Resp: 11.035775  [multiMatchCost=0.000000]
SM Join
  SM cost: 11.035775 
     resc: 11.035775 resc_io: 9.000000 resc_cpu: 60272876
     resp: 11.035775 resp_io: 9.000000 resp_cpu: 60272876
  Outer table:  L  Alias: L
    resc: 8.035204  card 10.000000  bytes:   deg: 1  resp: 8.035204
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020330  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 9.056063  Resp: 9.056063  [multiMatchCost=0.000020]
HA Join
  HA cost: 9.056063  
     resc: 9.056063 resc_io: 9.000000 resc_cpu: 1659836
     resp: 9.056063 resp_io: 9.000000 resp_cpu: 1659836
Join order aborted: cost > best plan cost
***********************
Join order[8]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 1250.000000  Cost: 5.009647  Resp: 5.009647  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.084800
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   1.084800 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.084800
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 1216.433603 (cpu filter eval) (= 121.643360 (per row) * 10.000000 (#rows))
                       =   31402.193603
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 1362.335446  Resp: 1362.335446  Degree: 1
      Cost_io: 1361.000000  Cost_cpu: 39538349
      Resp_io: 1361.000000  Resp_cpu: 39538349
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.272000  resc_cpu: 9538
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 345.412335  Resp: 345.412335  Degree: 1
      Cost_io: 345.000000  Cost_cpu: 12207949
      Resp_io: 345.000000  Resp_cpu: 12207949
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 15043
    ix_sel: 0.400000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 1255.664920  Resp: 1255.664920  Degree: 1
      Cost_io: 1255.000000  Cost_cpu: 19686174
      Resp_io: 1255.000000  Resp_cpu: 19686174
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 1255.327202  Resp: 1255.327202  Degree: 1
      Cost_io: 1255.000000  Cost_cpu: 9687407
      Resp_io: 1255.000000  Resp_cpu: 9687407
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 1255.327202  Resp: 1255.327202  Degree: 1
      Cost_io: 1255.000000  Cost_cpu: 9687407
      Resp_io: 1255.000000  Resp_cpu: 9687407
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Not used T1_T1F_ID1
      Cost = 4333.599824, sel = 0.200000
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 345.412335
          resc: 345.412335  resc_io: 345.000000  resc_cpu: 12207949
          resp: 345.412335  resp_io: 345.000000  resc_cpu: 12207949
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  312.502176 = outer (1250.000000) * inner (10.000000) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  12500.000000, outer: 1250.000000, inner: 10.000000, sel: 0.025000
Join Card - Rounded: 313 Computed: 312.502176
Join order aborted: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[9]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 4.000000  Cost: 1.000508  Resp: 1.000508  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 7.004654  Resp: 7.004654  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 137786
      Resp_io: 7.000000  Resp_cpu: 137786
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.001635  Resp: 5.001635  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48409
      Resp_io: 5.000000  Resp_cpu: 48409
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.001635  Resp: 5.001635  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48409
      Resp_io: 5.000000  Resp_cpu: 48409
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001635
          resc: 5.001635  resc_io: 5.000000  resc_cpu: 48409
          resp: 5.001635  resp_io: 5.000000  resc_cpu: 48409
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  T1  Alias: T1
    resc: 1.000508  card 4.000000  bytes:   deg: 1  resp: 1.000508
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001590  Resp: 6.001590  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001590 
     resc: 6.001590 resc_io: 4.000000 resc_cpu: 59260769
     resp: 6.001590 resp_io: 4.000000 resp_cpu: 59260769
  Outer table:  T1  Alias: T1
    resc: 1.000508  card 4.000000  bytes:   deg: 1  resp: 1.000508
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021847  Resp: 4.021847  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021847  
     resc: 4.021847 resc_io: 4.000000 resc_cpu: 646829
     resp: 4.021847 resp_io: 4.000000 resp_cpu: 646829
Best:: JoinMethod: Hash
       Cost: 4.021847  Degree: 1  Resp: 4.021847  Card: 10.000000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 4.021847  Resp: 4.021847  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2065  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500485.785196 (cpu filter eval) (= 50.048579 (per row) * 10000.000000 (#rows))
                       =   2578521.785196
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 73.892768  Resp: 73.892768  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 26432046
      Resp_io: 73.000000  Resp_cpu: 26432046
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1907008
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 84.665958  Resp: 84.665958  Degree: 1
      Cost_io: 84.000000  Cost_cpu: 19716904
      Resp_io: 84.000000  Resp_cpu: 19716904
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9272
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 14.024979  Resp: 14.024979  Degree: 1
      Cost_io: 14.000000  Cost_cpu: 739551
      Resp_io: 14.000000  Resp_cpu: 739551
kkofmx: index filter: ?? 

kkofmx: index filter:"L"."ID2"="T2"."ID2"

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9272
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 14.024979  Resp: 14.024979  Degree: 1
      Cost_io: 14.000000  Cost_cpu: 739551
      Resp_io: 14.000000  Resp_cpu: 739551
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 3.1250e-07 
    NL Join : Cost: 44.137346  Resp: 44.137346  Degree: 1
      Cost_io: 44.000000  Cost_cpu: 4066379
      Resp_io: 44.000000  Resp_cpu: 4066379
  ****** trying bitmap/domain indexes ******
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 0.000000  resc_cpu: 1900
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.022489  Resp: 4.022489  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 665829
      Resp_io: 4.000000  Resp_cpu: 665829

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 44.116196  Resp: 44.116196  Degree: 1
      Cost_io: 44.000000  Cost_cpu: 3440186
      Resp_io: 44.000000  Resp_cpu: 3440186
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_ID2
      Cost = 4.022525, sel = 8.0000e-04
    Not used T2_T2F1_T2F2_ID2
      Cost = 45.141509, sel = 0.125000
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 14.024979
          resc: 14.024979  resc_io: 14.000000  resc_cpu: 739551
          resp: 14.024979  resp_io: 14.000000  resc_cpu: 739551
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.250002 = outer (10.000000) * inner (1250.000000) * sel (2.0000e-05)
Join cardinality for HJ/SMJ (no post filters):  10.000000, outer: 10.000000, inner: 1250.000000, sel: 2.0000e-05
Join Card - Rounded: 1 Computed: 0.250002
  Outer table:  L  Alias: L
    resc: 4.021847  card 10.000000  bytes:   deg: 1  resp: 4.021847
  Inner table:  T2  Alias: T2
    resc: 5.009647  card: 1250.000000  bytes:   deg: 1  resp: 5.009647
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  SM join: Resc: 11.051114  Resp: 11.051114  [multiMatchCost=0.000000]
SM Join
  SM cost: 11.051114 
     resc: 11.051114 resc_io: 9.000000 resc_cpu: 60727001
     resp: 11.051114 resp_io: 9.000000 resp_cpu: 60727001
  Outer table:  L  Alias: L
    resc: 4.021847  card 10.000000  bytes:   deg: 1  resp: 4.021847
  Inner table:  T2  Alias: T2
    resc: 5.009647  card: 1250.000000  bytes:   deg: 1  resp: 5.009647
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024538  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 9.056032  Resp: 9.056032  [multiMatchCost=0.000000]
HA Join
  HA cost: 9.056032  
     resc: 9.056032 resc_io: 9.000000 resc_cpu: 1658936
     resp: 9.056032 resp_io: 9.000000 resp_cpu: 1658936
Join order aborted: cost > best plan cost
***********************
Join order[10]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 4.000000  Cost: 1.000508  Resp: 1.000508  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   7.250000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2065  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   7.250000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.250000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 607717.279775 (cpu filter eval) (= 60.771728 (per row) * 10000.000000 (#rows))
                       =   2685753.279775
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 30.363364  Resp: 30.363364  Degree: 1
      Cost_io: 30.000000  Cost_cpu: 10758056
      Resp_io: 30.000000  Resp_cpu: 10758056
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.250000  resc_cpu: 2014239
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 34.272640  Resp: 34.272640  Degree: 1
      Cost_io: 34.000000  Cost_cpu: 8071999
      Resp_io: 34.000000  Resp_cpu: 8071999
kkofmx: index filter: ?? 

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.003125 
    NL Join : Cost: 17.058411  Resp: 17.058411  Degree: 1
      Cost_io: 17.000000  Cost_cpu: 1729353
      Resp_io: 17.000000  Resp_cpu: 1729353
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 17.058411
          resc: 17.058411  resc_io: 17.000000  resc_cpu: 1729353
          resp: 17.058411  resp_io: 17.000000  resc_cpu: 1729353
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  312.502176 = outer (10.000000) * inner (1250.000000) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  12500.000000, outer: 10.000000, inner: 1250.000000, sel: 0.025000
Join Card - Rounded: 313 Computed: 312.502176
Join order aborted: cost > best plan cost
***********************
Join order[11]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 1250.000000  Cost: 5.009647  Resp: 5.009647  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   1.084800
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   1.084800 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.084800
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 1362.305199  Resp: 1362.305199  Degree: 1
      Cost_io: 1361.000000  Cost_cpu: 38642807
      Resp_io: 1361.000000  Resp_cpu: 38642807
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 1362.305199
          resc: 1362.305199  resc_io: 1361.000000  resc_cpu: 38642807
          resp: 1362.305199  resp_io: 1361.000000  resc_cpu: 38642807
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (1250.000000) * inner (10.000000) * sel (8.0000e-04)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  T2  Alias: T2
    resc: 5.009647  card 1250.000000  bytes:   deg: 1  resp: 5.009647
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 10.030286  Resp: 10.030286  [multiMatchCost=0.000000]
SM Join
  SM cost: 10.030286 
     resc: 10.030286 resc_io: 8.000000 resc_cpu: 60110358
     resp: 10.030286 resp_io: 8.000000 resp_cpu: 60110358
  Outer table:  T2  Alias: T2
    resc: 5.009647  card 1250.000000  bytes:   deg: 1  resp: 5.009647
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.026632  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 4  probefrag: 1  ppasses: 1
  Hash join: Resc: 8.037299  Resp: 8.037299  [multiMatchCost=0.000000]
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 5.009647  card: 1250.000000  bytes:   deg: 1  resp: 5.009647
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024538  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 8.035204  Resp: 8.035204  [multiMatchCost=0.000000]
HA Join
  HA cost: 8.035204 swapped 
     resc: 8.035204 resc_io: 8.000000 resc_cpu: 1042293
     resp: 8.035204 resp_io: 8.000000 resp_cpu: 1042293
Best:: JoinMethod: Hash
       Cost: 8.035204  Degree: 1  Resp: 8.035204  Card: 10.000000 Bytes: 

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 8.035204  Resp: 8.035204  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.200000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2080  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.200000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.200000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 621.643360 (cpu filter eval) (= 62.164336 (per row) * 10.000000 (#rows))
                       =   30807.403360
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 20.045610  Resp: 20.045610  Degree: 1
      Cost_io: 20.000000  Cost_cpu: 1350367
      Resp_io: 20.000000  Resp_cpu: 1350367
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.400000  resc_cpu: 8943
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 12.038225  Resp: 12.038225  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1131724
      Resp_io: 12.000000  Resp_cpu: 1131724
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:   Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
 Sel: 0.200000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.200000
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 14643
    ix_sel: 0.200000  ix_sel_with_filters: 0.005000 
    NL Join : Cost: 18.040231  Resp: 18.040231  Degree: 1
      Cost_io: 18.000000  Cost_cpu: 1191110
      Resp_io: 18.000000  Resp_cpu: 1191110
  ****** trying bitmap/domain indexes ******

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 8.035559  Resp: 8.035559  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 1052793
      Resp_io: 8.000000  Resp_cpu: 1052793

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 8.035559  Resp: 8.035559  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 1052793
      Resp_io: 8.000000  Resp_cpu: 1052793
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 18.037745  Resp: 18.037745  Degree: 1
      Cost_io: 18.000000  Cost_cpu: 1117507
      Resp_io: 18.000000  Resp_cpu: 1117507
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Used T1_T1F_ID1
      Cost = 8.035560, sel = 0.020000
    Used T1_T1F_ID1
      Cost = 8.035560, sel = 0.020000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 12.038225
          resc: 12.038225  resc_io: 12.000000  resc_cpu: 1131724
          resp: 12.038225  resp_io: 12.000000  resc_cpu: 1131724
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.250002 = outer (10.000000) * inner (10.000000) * sel (0.002500)
Join cardinality for HJ/SMJ (no post filters):  10.000000, outer: 10.000000, inner: 10.000000, sel: 0.002500
Join Card - Rounded: 1 Computed: 0.250002
  Outer table:  L  Alias: L
    resc: 8.035204  card 10.000000  bytes:   deg: 1  resp: 8.035204
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 11.035775  Resp: 11.035775  [multiMatchCost=0.000000]
SM Join
  SM cost: 11.035775 
     resc: 11.035775 resc_io: 9.000000 resc_cpu: 60272876
     resp: 11.035775 resp_io: 9.000000 resp_cpu: 60272876
  Outer table:  L  Alias: L
    resc: 8.035204  card 10.000000  bytes:   deg: 1  resp: 8.035204
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020330  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 9.056063  Resp: 9.056063  [multiMatchCost=0.000020]
HA Join
  HA cost: 9.056063  
     resc: 9.056063 resc_io: 9.000000 resc_cpu: 1659836
     resp: 9.056063 resp_io: 9.000000 resp_cpu: 1659836
Join order aborted: cost > best plan cost
***********************
Join order[12]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 1250.000000  Cost: 5.009647  Resp: 5.009647  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.084800
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   1.084800 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.084800
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 1216.433603 (cpu filter eval) (= 121.643360 (per row) * 10.000000 (#rows))
                       =   31402.193603
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 1362.335446  Resp: 1362.335446  Degree: 1
      Cost_io: 1361.000000  Cost_cpu: 39538349
      Resp_io: 1361.000000  Resp_cpu: 39538349
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.272000  resc_cpu: 9538
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 345.412335  Resp: 345.412335  Degree: 1
      Cost_io: 345.000000  Cost_cpu: 12207949
      Resp_io: 345.000000  Resp_cpu: 12207949
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 15043
    ix_sel: 0.400000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 1255.664920  Resp: 1255.664920  Degree: 1
      Cost_io: 1255.000000  Cost_cpu: 19686174
      Resp_io: 1255.000000  Resp_cpu: 19686174
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 1255.327202  Resp: 1255.327202  Degree: 1
      Cost_io: 1255.000000  Cost_cpu: 9687407
      Resp_io: 1255.000000  Resp_cpu: 9687407
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 1255.327202  Resp: 1255.327202  Degree: 1
      Cost_io: 1255.000000  Cost_cpu: 9687407
      Resp_io: 1255.000000  Resp_cpu: 9687407
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Not used T1_T1F_ID1
      Cost = 4333.599824, sel = 0.200000
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 345.412335
          resc: 345.412335  resc_io: 345.000000  resc_cpu: 12207949
          resp: 345.412335  resp_io: 345.000000  resc_cpu: 12207949
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  312.502176 = outer (1250.000000) * inner (10.000000) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  12500.000000, outer: 1250.000000, inner: 10.000000, sel: 0.025000
Join Card - Rounded: 313 Computed: 312.502176
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
Consider using bloom filter between T1[T1] and T2[T2] with ??
kkoBloomFilter: join (lcdn:10 rcdn:1250 jcdn:0 limit:6250)
kkopqSingleJoinBloomNdv:Compute bloom ndv for lfro:L[L] and rfro:T2[T2] swap:no
kkopqSingleJoinBloomNdv: predCnt:#1 col1:(bndv:10 ndv:10) and col2:(bndv:10000 ndv:10000) creatorNDV:10.0 userNDV:10000.0
kkopqSingleJoinBloomNdv:Compute bloom ndv for lfro:T1[T1] and rfro:T2[T2] swap:no
kkopqComputeBloomNdv: predCnt:1 creatorNdv:10.0 userNdv:10000.0 singleTblPred:yes
kkoBloomFilter: join ndv:10 reduction:0.008000 (limit:0.500000)  accepted, but final decision will be made in code generation
Enumerating distribution method (advanced)
--- Distribution method for 
join between L[L](serial) and T1[T1](serial); jm = 8; right side access path = IndexRange
---- serial Sort-Merge-Join -> NONE
--- Distribution method for 
join between T1[T1](serial) and T2[T2](serial); jm = 1; right side access path = IndexRange
---- serial Hash-Join -> NONE

LORE: or-expansion-subheap (delete addr=0x7fa8a2978e48, in-use=131352, alloc=139032)

LORE: ******** OR-branching ********

LORE: or-expansion-subheap (create addr=0x7fa8a2978e48)
****************
QUERY BLOCK TEXT
****************
SELECT /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null FROM l, t1, t2 WHERE  
(  ( t1.t1f = 0 AND t2.t2f1 BETWEEN 9 AND 10)       OR 
   ( t1.t1f = 1 AND t2.t2f1 = 14 AND t2.t2f2 = 13  )   )  AND 
    ( l.id1 = t1.id1 AND l.id2 = t2.id2 )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$1 nbfros=3 flg=0
  fro(0): flg=0 objn=73956 hint_alias="L"@"SEL$1"
  fro(1): flg=0 objn=73958 hint_alias="T1"@"SEL$1"
  fro(2): flg=0 objn=73960 hint_alias="T2"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 2467 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: T2  Alias: T2
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  25  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T2F1(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#3): T2F2(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#1): ID2(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: T2_ID2  Col#: 1
  LVLS: 1  #LB: 20  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: T2_T2F1_T2F2_ID2  Col#: 2 3 1
  LVLS: 1  #LB: 29  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 168.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: T1  Alias: T1
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T1F(NUMBER)
    AvgLen: 3 NDV: 5 Nulls: 0 Density: 0.200000 Min: 0.000000 Max: 4.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: T1_T1F_ID1  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  L  Alias:  L
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
  Column (#2): ID2(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: L_ID1  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$1 (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for L
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for L[L] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: L  Alias: L
    Card: Original: 10.000000  Rounded: 10  Computed: 10.000000  Non Adjusted: 10.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                       =   30185.760000
  Access Path: TableScan
    Cost:  3.001020  Resp: 3.001020  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 30186
      Resp_io: 3.000000  Resp_cpu: 30186
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3.001020  Degree: 1  Resp: 3.001020  Card: 10.000000  Bytes: 0.000000

Access path analysis for T1
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T1[T1] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE

 kkecdn: Single Table Predicate:"T1"."T1F"=0 OR "T1"."T1F"=1
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Table: T1  Alias: T1
    Card: Original: 10.000000  Rounded: 4  Computed: 4.000000  Non Adjusted: 4.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 900.000000 (cpu filter eval) (= 90.000000 (per row) * 10.000000 (#rows))
                       =   31085.760000
  Access Path: TableScan
    Cost:  3.001050  Resp: 3.001050  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 31086
      Resp_io: 3.000000  Resp_cpu: 31086
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9221
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000311  Resp: 2.000311  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9221
      Resp_io: 2.000000  Resp_cpu: 9221
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 15043
    ix_sel: 0.400000  ix_sel_with_filters: 0.400000 
    Cost: 1.000508  Resp: 1.000508  Degree: 1
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    Cost: 1.000254  Resp: 1.000254  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    Cost: 1.000254  Resp: 1.000254  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Not used T1_T1F_ID1
      Cost = 2.000267, sel = 0.200000
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T1_T1F_ID1
         Cost: 1.000508  Degree: 1  Resp: 1.000508  Card: 4.000000  Bytes: 0.000000

Access path analysis for T2
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T2[T2] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 0.125000 , col: #2 
  Estimated selectivity: 0.125000 , col: #3 


 kkecdn: Single Table Predicate:"T2"."T2F1"=14
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F2"=13
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Table: T2  Alias: T2
    Card: Original: 10000.000000  Rounded: 1  Computed: 0.008929  Non Adjusted: 0.008929
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.000000 (cpu filter eval) (= 50.002500 (per row) * 10000.000000 (#rows))
                       =   2578061.000000
  Access Path: TableScan
    Cost:  9.087077  Resp: 9.087077  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2578061
      Resp_io: 9.000000  Resp_cpu: 2578061
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.064395  Resp: 10.064395  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1906547
      Resp_io: 10.000000  Resp_cpu: 1906547
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 8.9286e-07  ix_sel_with_filters: 8.9286e-07 
    Cost: 2.000488  Resp: 2.000488  Degree: 1
  ****** trying bitmap/domain indexes ******

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 8.9286e-07  ix_sel_with_filters: 8.9286e-07 
    Cost: 2.000488  Resp: 2.000488  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 5.000000  resc_cpu: 285607
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    Cost: 5.009647  Resp: 5.009647  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_T2F1_T2F2_ID2
      Cost = 3.000488, sel = 8.9286e-07
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T2_T2F1_T2F2_ID2
         Cost: 2.000488  Degree: 1  Resp: 2.000488  Card: 0.008929  Bytes: 0.000000

(newjo-restore) [2 1 0 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is undergoing OR expansion SEL$1 (#0)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  L[L]#0  T1[T1]#1  T2[T2]#2

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.200000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.200000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.200000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 590.000000 (cpu filter eval) (= 59.000000 (per row) * 10.000000 (#rows))
                       =   30775.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 15.011414  Resp: 15.011414  Degree: 1
      Cost_io: 15.000000  Cost_cpu: 337943
      Resp_io: 15.000000  Resp_cpu: 337943
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.400000  resc_cpu: 8911
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 7.004029  Resp: 7.004029  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 119300
      Resp_io: 7.000000  Resp_cpu: 119300
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:   Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
 Sel: 0.200000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.200000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 14643
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 13.005965  Resp: 13.005965  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 176615
      Resp_io: 13.000000  Resp_cpu: 176615
  ****** trying bitmap/domain indexes ******

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.001374  Resp: 3.001374  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 40686
      Resp_io: 3.000000  Resp_cpu: 40686

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.001374  Resp: 3.001374  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 40686
      Resp_io: 3.000000  Resp_cpu: 40686
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 13.003560  Resp: 13.003560  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 105400
      Resp_io: 13.000000  Resp_cpu: 105400
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Used T1_T1F_ID1
      Cost = 3.001375, sel = 0.020000
    Used T1_T1F_ID1
      Cost = 3.001375, sel = 0.020000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 7.004029
          resc: 7.004029  resc_io: 7.000000  resc_cpu: 119300
          resp: 7.004029  resp_io: 7.000000  resc_cpu: 119300
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 6.001590  Resp: 6.001590  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001590 
     resc: 6.001590 resc_io: 4.000000 resc_cpu: 59260769
     resp: 6.001590 resp_io: 4.000000 resp_cpu: 59260769
SM Join (with index on outer)
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 2.000000  resc_cpu: 17943
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2.000606  Resp: 2.000606  Degree: 1
  Outer table:  L  Alias: L
    resc: 2.000606  card 10.000000  bytes:   deg: 1  resp: 2.000606
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 4.001126  Resp: 4.001126  [multiMatchCost=0.000000]
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020330  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021878  Resp: 4.021878  [multiMatchCost=0.000020]
HA Join
  HA cost: 4.021878  
     resc: 4.021878 resc_io: 4.000000 resc_cpu: 647729
     resp: 4.021878 resp_io: 4.000000 resp_cpu: 647729
Best:: JoinMethod: SortMerge
       Cost: 4.001126  Degree: 1  Resp: 4.001126  Card: 10.000000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 4.001126  Resp: 4.001126  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.020836 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.020836
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 73.871892  Resp: 73.871892  Degree: 1
      Cost_io: 72.000000  Cost_cpu: 55420798
      Resp_io: 72.000000  Resp_cpu: 55420798
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 84.645081  Resp: 84.645081  Degree: 1
      Cost_io: 83.000000  Cost_cpu: 48705656
      Resp_io: 83.000000  Resp_cpu: 48705656
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 14.004254  Resp: 14.004254  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 29732802
      Resp_io: 13.000000  Resp_cpu: 29732802
kkofmx: index filter: ?? 

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 14.004254  Resp: 14.004254  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 29732802
      Resp_io: 13.000000  Resp_cpu: 29732802
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 2.2322e-12 
    NL Join : Cost: 14.003927  Resp: 14.003927  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 29723096
      Resp_io: 13.000000  Resp_cpu: 29723096
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 14.003927
          resc: 14.003927  resc_io: 13.000000  resc_cpu: 29723096
          resp: 14.003927  resp_io: 13.000000  resc_cpu: 29723096
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.000223 = outer (10.000000) * inner (0.008929) * sel (0.002500)
Join cardinality for HJ/SMJ (no post filters):  0.008929, outer: 10.000000, inner: 0.008929, sel: 0.002500
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  T1  Alias: T1
    resc: 4.001126  card 10.000000  bytes:   deg: 1  resp: 4.001126
  Inner table:  T2  Alias: T2
    resc: 2.000488  card: 0.008929  bytes:   deg: 1  resp: 2.000488
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 8.001665  Resp: 8.001665  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.001665 
     resc: 8.001665 resc_io: 5.000000 resc_cpu: 88869811
     resp: 8.001665 resp_io: 5.000000 resp_cpu: 88869811
  Outer table:  T1  Alias: T1
    resc: 4.001126  card 10.000000  bytes:   deg: 1  resp: 4.001126
  Inner table:  T2  Alias: T2
    resc: 2.000488  card: 0.008929  bytes:   deg: 1  resp: 2.000488
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.021934  Resp: 6.021934  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.021934  
     resc: 6.021934 resc_io: 5.000000 resc_cpu: 30256231
     resp: 6.021934 resp_io: 5.000000 resp_cpu: 30256231
Best:: JoinMethod: Hash
       Cost: 6.021934  Degree: 1  Resp: 6.021934  Card: 0.000223 Bytes: 
***********************
Best so far:  Table#: 0  cost: 2.000606  card: 10.000000  bytes: 60.000000
              Table#: 1  cost: 4.001126  card: 10.000000  bytes: 120.000000
              Table#: 2  cost: 6.021934  card: 0.000223  bytes: 22.000000
***********************
Join order[2]:  L[L]#0  T2[T2]#2  T1[T1]#1

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.019984 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.019984
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 72.871785  Resp: 72.871785  Degree: 1
      Cost_io: 72.000000  Cost_cpu: 25810796
      Resp_io: 72.000000  Resp_cpu: 25810796
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 83.644974  Resp: 83.644974  Degree: 1
      Cost_io: 83.000000  Cost_cpu: 19095654
      Resp_io: 83.000000  Resp_cpu: 19095654
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004148  Resp: 13.004148  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122800
      Resp_io: 13.000000  Resp_cpu: 122800
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004148  Resp: 13.004148  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122800
      Resp_io: 13.000000  Resp_cpu: 122800
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 8.9286e-11 
    NL Join : Cost: 13.003780  Resp: 13.003780  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 111900
      Resp_io: 13.000000  Resp_cpu: 111900
  ****** trying bitmap/domain indexes ******

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 8.9286e-11 
    NL Join : Cost: 13.003780  Resp: 13.003780  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 111900
      Resp_io: 13.000000  Resp_cpu: 111900

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 43.095368  Resp: 43.095368  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 2823543
      Resp_io: 43.000000  Resp_cpu: 2823543
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_T2F1_T2F2_ID2
      Cost = 13.003780, sel = 8.9286e-08
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 13.003780
          resc: 13.003780  resc_io: 13.000000  resc_cpu: 111900
          resp: 13.003780  resp_io: 13.000000  resc_cpu: 111900
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.008929 = outer (10.000000) * inner (0.008929) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.008929
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 2.000488  card: 0.008929  bytes:   deg: 1  resp: 2.000488
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 7.001558  Resp: 7.001558  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001558 
     resc: 7.001558 resc_io: 5.000000 resc_cpu: 59259809
     resp: 7.001558 resp_io: 5.000000 resp_cpu: 59259809
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 2.000488  card: 0.008929  bytes:   deg: 1  resp: 2.000488
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021827  Resp: 5.021827  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021827  
     resc: 5.021827 resc_io: 5.000000 resc_cpu: 646229
     resp: 5.021827 resp_io: 5.000000 resp_cpu: 646229
Best:: JoinMethod: Hash
       Cost: 5.021827  Degree: 1  Resp: 5.021827  Card: 0.008929 Bytes: 

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.008929  Cost: 5.021827  Resp: 5.021827  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2080  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 621.643360 (cpu filter eval) (= 62.164336 (per row) * 10.000000 (#rows))
                       =   30807.403360
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 8.022868  Resp: 8.022868  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 677036
      Resp_io: 8.000000  Resp_cpu: 677036
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 8943
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 7.022129  Resp: 7.022129  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 655172
      Resp_io: 7.000000  Resp_cpu: 655172
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:   Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
 Sel: 0.200000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.200000
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 14643
    ix_sel: 0.200000  ix_sel_with_filters: 0.005000 
    NL Join : Cost: 6.022330  Resp: 6.022330  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 661110
      Resp_io: 6.000000  Resp_cpu: 661110
  ****** trying bitmap/domain indexes ******

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.021862  Resp: 5.021862  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 647279
      Resp_io: 5.000000  Resp_cpu: 647279

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.021862  Resp: 5.021862  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 647279
      Resp_io: 5.000000  Resp_cpu: 647279
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 6.022081  Resp: 6.022081  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 653750
      Resp_io: 6.000000  Resp_cpu: 653750
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Not used  bitmap node 
    Used  bitmap node 
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  Access path: Bitmap index - accepted
    Cost: 14.442524 Cost_io: 13.398006 Cost_cpu: 30924879.681888 Sel: 0.200000
    Not Believed to be index-only
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 6.022330
          resc: 6.022330  resc_io: 6.000000  resc_cpu: 661110
          resp: 6.022330  resp_io: 6.000000  resc_cpu: 661110
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.000223 = outer (0.008929) * inner (10.000000) * sel (0.002500)
Join cardinality for HJ/SMJ (no post filters):  0.008929, outer: 0.008929, inner: 10.000000, sel: 0.002500
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  T2  Alias: T2
    resc: 5.021827  card 0.008929  bytes:   deg: 1  resp: 5.021827
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 8.022347  Resp: 8.022347  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.022347 
     resc: 8.022347 resc_io: 6.000000 resc_cpu: 59875315
     resp: 8.022347 resp_io: 6.000000 resp_cpu: 59875315
  Outer table:  T2  Alias: T2
    resc: 5.021827  card 0.008929  bytes:   deg: 1  resp: 5.021827
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020284  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.042619  Resp: 6.042619  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.042619  
     resc: 6.042619 resc_io: 6.000000 resc_cpu: 1261822
     resp: 6.042619 resp_io: 6.000000 resp_cpu: 1261822
Join order aborted: cost > best plan cost
***********************
Join order[3]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 4.000000  Cost: 1.000508  Resp: 1.000508  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 7.004654  Resp: 7.004654  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 137786
      Resp_io: 7.000000  Resp_cpu: 137786
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.001635  Resp: 5.001635  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48409
      Resp_io: 5.000000  Resp_cpu: 48409
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.001635  Resp: 5.001635  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48409
      Resp_io: 5.000000  Resp_cpu: 48409
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001635
          resc: 5.001635  resc_io: 5.000000  resc_cpu: 48409
          resp: 5.001635  resp_io: 5.000000  resc_cpu: 48409
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  T1  Alias: T1
    resc: 1.000508  card 4.000000  bytes:   deg: 1  resp: 1.000508
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001590  Resp: 6.001590  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001590 
     resc: 6.001590 resc_io: 4.000000 resc_cpu: 59260769
     resp: 6.001590 resp_io: 4.000000 resp_cpu: 59260769
  Outer table:  T1  Alias: T1
    resc: 1.000508  card 4.000000  bytes:   deg: 1  resp: 1.000508
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021847  Resp: 4.021847  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021847  
     resc: 4.021847 resc_io: 4.000000 resc_cpu: 646829
     resp: 4.021847 resp_io: 4.000000 resp_cpu: 646829
Best:: JoinMethod: Hash
       Cost: 4.021847  Degree: 1  Resp: 4.021847  Card: 10.000000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 4.021847  Resp: 4.021847  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.020836 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.020836
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 73.892613  Resp: 73.892613  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 26427439
      Resp_io: 73.000000  Resp_cpu: 26427439
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 84.665802  Resp: 84.665802  Degree: 1
      Cost_io: 84.000000  Cost_cpu: 19712296
      Resp_io: 84.000000  Resp_cpu: 19712296
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 14.024975  Resp: 14.024975  Degree: 1
      Cost_io: 14.000000  Cost_cpu: 739443
      Resp_io: 14.000000  Resp_cpu: 739443
kkofmx: index filter: ?? 

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 14.024975  Resp: 14.024975  Degree: 1
      Cost_io: 14.000000  Cost_cpu: 739443
      Resp_io: 14.000000  Resp_cpu: 739443
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 2.2322e-12 
    NL Join : Cost: 14.024648  Resp: 14.024648  Degree: 1
      Cost_io: 14.000000  Cost_cpu: 729737
      Resp_io: 14.000000  Resp_cpu: 729737
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 14.024648
          resc: 14.024648  resc_io: 14.000000  resc_cpu: 729737
          resp: 14.024648  resp_io: 14.000000  resc_cpu: 729737
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.000223 = outer (10.000000) * inner (0.008929) * sel (0.002500)
Join cardinality for HJ/SMJ (no post filters):  0.008929, outer: 10.000000, inner: 0.008929, sel: 0.002500
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  L  Alias: L
    resc: 4.021847  card 10.000000  bytes:   deg: 1  resp: 4.021847
  Inner table:  T2  Alias: T2
    resc: 2.000488  card: 0.008929  bytes:   deg: 1  resp: 2.000488
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 8.022386  Resp: 8.022386  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.022386 
     resc: 8.022386 resc_io: 6.000000 resc_cpu: 59876451
     resp: 8.022386 resp_io: 6.000000 resp_cpu: 59876451
  Outer table:  L  Alias: L
    resc: 4.021847  card 10.000000  bytes:   deg: 1  resp: 4.021847
  Inner table:  T2  Alias: T2
    resc: 2.000488  card: 0.008929  bytes:   deg: 1  resp: 2.000488
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.042655  Resp: 6.042655  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.042655  
     resc: 6.042655 resc_io: 6.000000 resc_cpu: 1262872
     resp: 6.042655 resp_io: 6.000000 resp_cpu: 1262872
Join order aborted: cost > best plan cost
***********************
Join order[4]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 4.000000  Cost: 1.000508  Resp: 1.000508  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   7.250000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2080  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   7.250000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.250000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500026.066012 (cpu filter eval) (= 50.002607 (per row) * 10000.000000 (#rows))
                       =   2578062.066012
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 30.348814  Resp: 30.348814  Degree: 1
      Cost_io: 30.000000  Cost_cpu: 10327291
      Resp_io: 30.000000  Resp_cpu: 10327291
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.250000  resc_cpu: 1906548
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 34.258090  Resp: 34.258090  Degree: 1
      Cost_io: 34.000000  Cost_cpu: 7641234
      Resp_io: 34.000000  Resp_cpu: 7641234
kkofmx: index filter: ?? 

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-07  ix_sel_with_filters: 2.2322e-08 
    NL Join : Cost: 5.001628  Resp: 5.001628  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48206
      Resp_io: 5.000000  Resp_cpu: 48206
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001628
          resc: 5.001628  resc_io: 5.000000  resc_cpu: 48206
          resp: 5.001628  resp_io: 5.000000  resc_cpu: 48206
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.002232 = outer (10.000000) * inner (0.008929) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  0.089286, outer: 10.000000, inner: 0.008929, sel: 0.025000
Join Card - Rounded: 1 Computed: 0.002232
Best:: JoinMethod: NestedLoop
       Cost: 5.001628  Degree: 1  Resp: 5.001628  Card: 0.002232 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.002232  Cost: 5.001628  Resp: 5.001628  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.399680 (cpu filter eval) (= 50.039968 (per row) * 10.000000 (#rows))
                       =   30686.159680
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 8.002665  Resp: 8.002665  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 78892
      Resp_io: 8.000000  Resp_cpu: 78892
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 6.001912  Resp: 6.001912  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 56598
      Resp_io: 6.000000  Resp_cpu: 56598
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 6.001912  Resp: 6.001912  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 56598
      Resp_io: 6.000000  Resp_cpu: 56598
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 6.001912
          resc: 6.001912  resc_io: 6.000000  resc_cpu: 56598
          resp: 6.001912  resp_io: 6.000000  resc_cpu: 56598
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000223 = outer (0.002232) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  T2  Alias: T2
    resc: 5.001628  card 0.002232  bytes:   deg: 1  resp: 5.001628
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 10.002698  Resp: 10.002698  [multiMatchCost=0.000000]
SM Join
  SM cost: 10.002698 
     resc: 10.002698 resc_io: 8.000000 resc_cpu: 59293572
     resp: 10.002698 resp_io: 8.000000 resp_cpu: 59293572
  Outer table:  T2  Alias: T2
    resc: 5.001628  card 0.002232  bytes:   deg: 1  resp: 5.001628
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 8.022952  Resp: 8.022952  [multiMatchCost=0.000000]
HA Join
  HA cost: 8.022952  
     resc: 8.022952 resc_io: 8.000000 resc_cpu: 679542
     resp: 8.022952 resp_io: 8.000000 resp_cpu: 679542
Plan cardinality mismatch: best card= 0.00022321584   curr card= 0.00022321584
Best:: JoinMethod: NestedLoop
       Cost: 6.001912  Degree: 1  Resp: 6.001912  Card: 0.000223 Bytes: 
***********************
Best so far:  Table#: 1  cost: 1.000508  card: 4.000000  bytes: 24.000000
              Table#: 2  cost: 5.001628  card: 0.002232  bytes: 16.000000
              Table#: 0  cost: 6.001912  card: 0.000223  bytes: 22.000000
***********************
Join order[5]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000488  Resp: 2.000488  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001524  Resp: 5.001524  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45129
      Resp_io: 5.000000  Resp_cpu: 45129
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001524
          resc: 5.001524  resc_io: 5.000000  resc_cpu: 45129
          resp: 5.001524  resp_io: 5.000000  resc_cpu: 45129
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.008929 = outer (0.008929) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.008929
  Outer table:  T2  Alias: T2
    resc: 2.000488  card 0.008929  bytes:   deg: 1  resp: 2.000488
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001558  Resp: 7.001558  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001558 
     resc: 7.001558 resc_io: 5.000000 resc_cpu: 59259809
     resp: 7.001558 resp_io: 5.000000 resp_cpu: 59259809
  Outer table:  T2  Alias: T2
    resc: 2.000488  card 0.008929  bytes:   deg: 1  resp: 2.000488
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021812  Resp: 5.021812  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021812  
     resc: 5.021812 resc_io: 5.000000 resc_cpu: 645779
     resp: 5.021812 resp_io: 5.000000 resp_cpu: 645779
Best:: JoinMethod: Hash
       Cost: 5.021812  Degree: 1  Resp: 5.021812  Card: 0.008929 Bytes: 

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.008929  Cost: 5.021812  Resp: 5.021812  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2080  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 621.643360 (cpu filter eval) (= 62.164336 (per row) * 10.000000 (#rows))
                       =   30807.403360
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 8.022852  Resp: 8.022852  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 676586
      Resp_io: 8.000000  Resp_cpu: 676586
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 8943
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 7.022114  Resp: 7.022114  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 654722
      Resp_io: 7.000000  Resp_cpu: 654722
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:   Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
 Sel: 0.200000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.200000
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 14643
    ix_sel: 0.200000  ix_sel_with_filters: 0.005000 
    NL Join : Cost: 6.022314  Resp: 6.022314  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 660660
      Resp_io: 6.000000  Resp_cpu: 660660
  ****** trying bitmap/domain indexes ******

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.021847  Resp: 5.021847  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 646829
      Resp_io: 5.000000  Resp_cpu: 646829

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.021847  Resp: 5.021847  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 646829
      Resp_io: 5.000000  Resp_cpu: 646829
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 6.022066  Resp: 6.022066  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 653300
      Resp_io: 6.000000  Resp_cpu: 653300
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Not used  bitmap node 
    Used  bitmap node 
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  Access path: Bitmap index - accepted
    Cost: 14.442494 Cost_io: 13.398006 Cost_cpu: 30923979.681888 Sel: 0.200000
    Not Believed to be index-only
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 6.022314
          resc: 6.022314  resc_io: 6.000000  resc_cpu: 660660
          resp: 6.022314  resp_io: 6.000000  resc_cpu: 660660
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.000223 = outer (0.008929) * inner (10.000000) * sel (0.002500)
Join cardinality for HJ/SMJ (no post filters):  0.008929, outer: 0.008929, inner: 10.000000, sel: 0.002500
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  L  Alias: L
    resc: 5.021812  card 0.008929  bytes:   deg: 1  resp: 5.021812
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 8.022332  Resp: 8.022332  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.022332 
     resc: 8.022332 resc_io: 6.000000 resc_cpu: 59874865
     resp: 8.022332 resp_io: 6.000000 resp_cpu: 59874865
  Outer table:  L  Alias: L
    resc: 5.021812  card 0.008929  bytes:   deg: 1  resp: 5.021812
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020284  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.042604  Resp: 6.042604  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.042604  
     resc: 6.042604 resc_io: 6.000000 resc_cpu: 1261372
     resp: 6.042604 resp_io: 6.000000 resp_cpu: 1261372
Plan cardinality mismatch: best card= 0.00022321584   curr card= 0.00022321584
Join order aborted: cost > best plan cost
***********************
Join order[6]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000488  Resp: 2.000488  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 1216.433603 (cpu filter eval) (= 121.643360 (per row) * 10.000000 (#rows))
                       =   31402.193603
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001548  Resp: 5.001548  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45845
      Resp_io: 5.000000  Resp_cpu: 45845
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9538
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000810  Resp: 4.000810  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23981
      Resp_io: 4.000000  Resp_cpu: 23981
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 15043
    ix_sel: 0.400000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 3.001012  Resp: 3.001012  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 29963
      Resp_io: 3.000000  Resp_cpu: 29963
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 3.000742  Resp: 3.000742  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 21964
      Resp_io: 3.000000  Resp_cpu: 21964
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 3.000742  Resp: 3.000742  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 21964
      Resp_io: 3.000000  Resp_cpu: 21964
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Not used T1_T1F_ID1
      Cost = 4.000757, sel = 0.200000
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.001012
          resc: 3.001012  resc_io: 3.000000  resc_cpu: 29963
          resp: 3.001012  resp_io: 3.000000  resc_cpu: 29963
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.002232 = outer (0.008929) * inner (10.000000) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  0.089286, outer: 0.008929, inner: 10.000000, sel: 0.025000
Join Card - Rounded: 1 Computed: 0.002232
Best:: JoinMethod: NestedLoop
       Cost: 3.001012  Degree: 1  Resp: 3.001012  Card: 0.002232 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.002232  Cost: 3.001012  Resp: 3.001012  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.399680 (cpu filter eval) (= 50.039968 (per row) * 10.000000 (#rows))
                       =   30686.159680
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.002048  Resp: 6.002048  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 60649
      Resp_io: 6.000000  Resp_cpu: 60649
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001295  Resp: 4.001295  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38355
      Resp_io: 4.000000  Resp_cpu: 38355
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001295  Resp: 4.001295  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38355
      Resp_io: 4.000000  Resp_cpu: 38355
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001295
          resc: 4.001295  resc_io: 4.000000  resc_cpu: 38355
          resp: 4.001295  resp_io: 4.000000  resc_cpu: 38355
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000223 = outer (0.002232) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  T1  Alias: T1
    resc: 3.001012  card 0.002232  bytes:   deg: 1  resp: 3.001012
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.002082  Resp: 8.002082  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.002082 
     resc: 8.002082 resc_io: 6.000000 resc_cpu: 59275329
     resp: 8.002082 resp_io: 6.000000 resp_cpu: 59275329
  Outer table:  T1  Alias: T1
    resc: 3.001012  card 0.002232  bytes:   deg: 1  resp: 3.001012
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022336  Resp: 6.022336  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022336  
     resc: 6.022336 resc_io: 6.000000 resc_cpu: 661299
     resp: 6.022336 resp_io: 6.000000 resp_cpu: 661299
Best:: JoinMethod: NestedLoop
       Cost: 4.001295  Degree: 1  Resp: 4.001295  Card: 0.000223 Bytes: 
***********************
Best so far:  Table#: 2  cost: 2.000488  card: 0.008929  bytes: 10.000000
              Table#: 1  cost: 3.001012  card: 0.002232  bytes: 16.000000
              Table#: 0  cost: 4.001295  card: 0.000223  bytes: 22.000000
***********************
Permutations for Starting Table :1
Join order[7]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000488  Resp: 2.000488  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001524  Resp: 5.001524  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45129
      Resp_io: 5.000000  Resp_cpu: 45129
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001524
          resc: 5.001524  resc_io: 5.000000  resc_cpu: 45129
          resp: 5.001524  resp_io: 5.000000  resc_cpu: 45129
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.008929 = outer (0.008929) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.008929
  Outer table:  T2  Alias: T2
    resc: 2.000488  card 0.008929  bytes:   deg: 1  resp: 2.000488
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001558  Resp: 7.001558  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001558 
     resc: 7.001558 resc_io: 5.000000 resc_cpu: 59259809
     resp: 7.001558 resp_io: 5.000000 resp_cpu: 59259809
  Outer table:  T2  Alias: T2
    resc: 2.000488  card 0.008929  bytes:   deg: 1  resp: 2.000488
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021812  Resp: 5.021812  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021812  
     resc: 5.021812 resc_io: 5.000000 resc_cpu: 645779
     resp: 5.021812 resp_io: 5.000000 resp_cpu: 645779
Join order aborted: cost > best plan cost
***********************
Join order[8]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000488  Resp: 2.000488  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 1216.433603 (cpu filter eval) (= 121.643360 (per row) * 10.000000 (#rows))
                       =   31402.193603
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001548  Resp: 5.001548  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45845
      Resp_io: 5.000000  Resp_cpu: 45845
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9538
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000810  Resp: 4.000810  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23981
      Resp_io: 4.000000  Resp_cpu: 23981
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 15043
    ix_sel: 0.400000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 3.001012  Resp: 3.001012  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 29963
      Resp_io: 3.000000  Resp_cpu: 29963
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 3.000742  Resp: 3.000742  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 21964
      Resp_io: 3.000000  Resp_cpu: 21964
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 3.000742  Resp: 3.000742  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 21964
      Resp_io: 3.000000  Resp_cpu: 21964
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Not used T1_T1F_ID1
      Cost = 4.000757, sel = 0.200000
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.001012
          resc: 3.001012  resc_io: 3.000000  resc_cpu: 29963
          resp: 3.001012  resp_io: 3.000000  resc_cpu: 29963
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.002232 = outer (0.008929) * inner (10.000000) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  0.089286, outer: 0.008929, inner: 10.000000, sel: 0.025000
Join Card - Rounded: 1 Computed: 0.002232
Best:: JoinMethod: NestedLoop
       Cost: 3.001012  Degree: 1  Resp: 3.001012  Card: 0.002232 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.002232  Cost: 3.001012  Resp: 3.001012  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.399680 (cpu filter eval) (= 50.039968 (per row) * 10.000000 (#rows))
                       =   30686.159680
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.002048  Resp: 6.002048  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 60649
      Resp_io: 6.000000  Resp_cpu: 60649
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001295  Resp: 4.001295  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38355
      Resp_io: 4.000000  Resp_cpu: 38355
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001295  Resp: 4.001295  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38355
      Resp_io: 4.000000  Resp_cpu: 38355
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001295
          resc: 4.001295  resc_io: 4.000000  resc_cpu: 38355
          resp: 4.001295  resp_io: 4.000000  resc_cpu: 38355
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000223 = outer (0.002232) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  T1  Alias: T1
    resc: 3.001012  card 0.002232  bytes:   deg: 1  resp: 3.001012
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.002082  Resp: 8.002082  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.002082 
     resc: 8.002082 resc_io: 6.000000 resc_cpu: 59275329
     resp: 8.002082 resp_io: 6.000000 resp_cpu: 59275329
  Outer table:  T1  Alias: T1
    resc: 3.001012  card 0.002232  bytes:   deg: 1  resp: 3.001012
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022336  Resp: 6.022336  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022336  
     resc: 6.022336 resc_io: 6.000000 resc_cpu: 661299
     resp: 6.022336 resp_io: 6.000000 resp_cpu: 661299
Join order aborted: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[9]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 4.000000  Cost: 1.000508  Resp: 1.000508  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 7.004654  Resp: 7.004654  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 137786
      Resp_io: 7.000000  Resp_cpu: 137786
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.001635  Resp: 5.001635  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48409
      Resp_io: 5.000000  Resp_cpu: 48409
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.001635  Resp: 5.001635  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48409
      Resp_io: 5.000000  Resp_cpu: 48409
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001635
          resc: 5.001635  resc_io: 5.000000  resc_cpu: 48409
          resp: 5.001635  resp_io: 5.000000  resc_cpu: 48409
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  T1  Alias: T1
    resc: 1.000508  card 4.000000  bytes:   deg: 1  resp: 1.000508
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001590  Resp: 6.001590  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001590 
     resc: 6.001590 resc_io: 4.000000 resc_cpu: 59260769
     resp: 6.001590 resp_io: 4.000000 resp_cpu: 59260769
  Outer table:  T1  Alias: T1
    resc: 1.000508  card 4.000000  bytes:   deg: 1  resp: 1.000508
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021847  Resp: 4.021847  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021847  
     resc: 4.021847 resc_io: 4.000000 resc_cpu: 646829
     resp: 4.021847 resp_io: 4.000000 resp_cpu: 646829
Join order aborted: cost > best plan cost
***********************
Join order[10]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 4.000000  Cost: 1.000508  Resp: 1.000508  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   7.250000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   7.250000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.250000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500026.066012 (cpu filter eval) (= 50.002607 (per row) * 10000.000000 (#rows))
                       =   2578062.066012
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 30.348814  Resp: 30.348814  Degree: 1
      Cost_io: 30.000000  Cost_cpu: 10327291
      Resp_io: 30.000000  Resp_cpu: 10327291
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.250000  resc_cpu: 1906548
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 34.258090  Resp: 34.258090  Degree: 1
      Cost_io: 34.000000  Cost_cpu: 7641234
      Resp_io: 34.000000  Resp_cpu: 7641234
kkofmx: index filter: ?? 

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-07  ix_sel_with_filters: 2.2322e-08 
    NL Join : Cost: 5.001628  Resp: 5.001628  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48206
      Resp_io: 5.000000  Resp_cpu: 48206
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001628
          resc: 5.001628  resc_io: 5.000000  resc_cpu: 48206
          resp: 5.001628  resp_io: 5.000000  resc_cpu: 48206
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.002232 = outer (10.000000) * inner (0.008929) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  0.089286, outer: 10.000000, inner: 0.008929, sel: 0.025000
Join Card - Rounded: 1 Computed: 0.002232
Join order aborted: cost > best plan cost
***********************
Join order[11]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000488  Resp: 2.000488  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001524  Resp: 5.001524  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45129
      Resp_io: 5.000000  Resp_cpu: 45129
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001524
          resc: 5.001524  resc_io: 5.000000  resc_cpu: 45129
          resp: 5.001524  resp_io: 5.000000  resc_cpu: 45129
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.008929 = outer (0.008929) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.008929
  Outer table:  T2  Alias: T2
    resc: 2.000488  card 0.008929  bytes:   deg: 1  resp: 2.000488
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001558  Resp: 7.001558  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001558 
     resc: 7.001558 resc_io: 5.000000 resc_cpu: 59259809
     resp: 7.001558 resp_io: 5.000000 resp_cpu: 59259809
  Outer table:  T2  Alias: T2
    resc: 2.000488  card 0.008929  bytes:   deg: 1  resp: 2.000488
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021812  Resp: 5.021812  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021812  
     resc: 5.021812 resc_io: 5.000000 resc_cpu: 645779
     resp: 5.021812 resp_io: 5.000000 resp_cpu: 645779
Join order aborted: cost > best plan cost
***********************
Join order[12]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000488  Resp: 2.000488  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2080  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 1216.433603 (cpu filter eval) (= 121.643360 (per row) * 10.000000 (#rows))
                       =   31402.193603
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001548  Resp: 5.001548  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45845
      Resp_io: 5.000000  Resp_cpu: 45845
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9538
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000810  Resp: 4.000810  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23981
      Resp_io: 4.000000  Resp_cpu: 23981
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 15043
    ix_sel: 0.400000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 3.001012  Resp: 3.001012  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 29963
      Resp_io: 3.000000  Resp_cpu: 29963
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 3.000742  Resp: 3.000742  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 21964
      Resp_io: 3.000000  Resp_cpu: 21964
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 3.000742  Resp: 3.000742  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 21964
      Resp_io: 3.000000  Resp_cpu: 21964
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Not used T1_T1F_ID1
      Cost = 4.000757, sel = 0.200000
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.001012
          resc: 3.001012  resc_io: 3.000000  resc_cpu: 29963
          resp: 3.001012  resp_io: 3.000000  resc_cpu: 29963
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.002232 = outer (0.008929) * inner (10.000000) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  0.089286, outer: 0.008929, inner: 10.000000, sel: 0.025000
Join Card - Rounded: 1 Computed: 0.002232
Best:: JoinMethod: NestedLoop
       Cost: 3.001012  Degree: 1  Resp: 3.001012  Card: 0.002232 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.002232  Cost: 3.001012  Resp: 3.001012  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.399680 (cpu filter eval) (= 50.039968 (per row) * 10.000000 (#rows))
                       =   30686.159680
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.002048  Resp: 6.002048  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 60649
      Resp_io: 6.000000  Resp_cpu: 60649
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001295  Resp: 4.001295  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38355
      Resp_io: 4.000000  Resp_cpu: 38355
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001295  Resp: 4.001295  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38355
      Resp_io: 4.000000  Resp_cpu: 38355
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001295
          resc: 4.001295  resc_io: 4.000000  resc_cpu: 38355
          resp: 4.001295  resp_io: 4.000000  resc_cpu: 38355
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000223 = outer (0.002232) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  T1  Alias: T1
    resc: 3.001012  card 0.002232  bytes:   deg: 1  resp: 3.001012
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.002082  Resp: 8.002082  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.002082 
     resc: 8.002082 resc_io: 6.000000 resc_cpu: 59275329
     resp: 8.002082 resp_io: 6.000000 resp_cpu: 59275329
  Outer table:  T1  Alias: T1
    resc: 3.001012  card 0.002232  bytes:   deg: 1  resp: 3.001012
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022336  Resp: 6.022336  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022336  
     resc: 6.022336 resc_io: 6.000000 resc_cpu: 661299
     resp: 6.022336 resp_io: 6.000000 resp_cpu: 661299
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between T2[T2](serial) and T1[T1](serial); jm = 14; right side access path = IndexRange
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL
--- Distribution method for 
join between T1[T1](serial) and L[L](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

LORE: or-expansion-subheap (delete addr=0x7fa8a2978e48, in-use=131432, alloc=139168)
LORE: or-expansion is better cost:13.036607

LORE: ******** Same chain after expansion ********
****************
QUERY BLOCK TEXT
****************
SELECT /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null FROM l, t1, t2 WHERE  
(  ( t1.t1f = 0 AND t2.t2f1 BETWEEN 9 AND 10)       OR 
   ( t1.t1f = 1 AND t2.t2f1 = 14 AND t2.t2f2 = 13  )   )  AND 
    ( l.id1 = t1.id1 AND l.id2 = t2.id2 )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$1 nbfros=3 flg=0
  fro(0): flg=0 objn=73956 hint_alias="L"@"SEL$1"
  fro(1): flg=0 objn=73958 hint_alias="T1"@"SEL$1"
  fro(2): flg=0 objn=73960 hint_alias="T2"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 2467 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: T2  Alias: T2
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  25  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T2F1(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#3): T2F2(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#1): ID2(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: T2_ID2  Col#: 1
  LVLS: 1  #LB: 20  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: T2_T2F1_T2F2_ID2  Col#: 2 3 1
  LVLS: 1  #LB: 29  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 168.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: T1  Alias: T1
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T1F(NUMBER)
    AvgLen: 3 NDV: 5 Nulls: 0 Density: 0.200000 Min: 0.000000 Max: 4.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: T1_T1F_ID1  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  L  Alias:  L
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
  Column (#2): ID2(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: L_ID1  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$1 (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for L
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for L[L] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: L  Alias: L
    Card: Original: 10.000000  Rounded: 10  Computed: 10.000000  Non Adjusted: 10.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                       =   30185.760000
  Access Path: TableScan
    Cost:  3.001020  Resp: 3.001020  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 30186
      Resp_io: 3.000000  Resp_cpu: 30186
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3.001020  Degree: 1  Resp: 3.001020  Card: 10.000000  Bytes: 0.000000

Access path analysis for T1
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T1[T1] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE

 kkecdn: Single Table Predicate:"T1"."T1F"=0 OR "T1"."T1F"=1
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Table: T1  Alias: T1
    Card: Original: 10.000000  Rounded: 4  Computed: 4.000000  Non Adjusted: 4.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 900.000000 (cpu filter eval) (= 90.000000 (per row) * 10.000000 (#rows))
                       =   31085.760000
  Access Path: TableScan
    Cost:  3.001050  Resp: 3.001050  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 31086
      Resp_io: 3.000000  Resp_cpu: 31086
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9221
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000311  Resp: 2.000311  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9221
      Resp_io: 2.000000  Resp_cpu: 9221
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 15043
    ix_sel: 0.400000  ix_sel_with_filters: 0.400000 
    Cost: 1.000508  Resp: 1.000508  Degree: 1
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    Cost: 1.000254  Resp: 1.000254  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    Cost: 1.000254  Resp: 1.000254  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Not used T1_T1F_ID1
      Cost = 2.000267, sel = 0.200000
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T1_T1F_ID1
         Cost: 1.000508  Degree: 1  Resp: 1.000508  Card: 4.000000  Bytes: 0.000000

Access path analysis for T2
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T2[T2] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 0.125000 , col: #2 
  Estimated selectivity: 0.125000 , col: #3 


 kkecdn: Single Table Predicate:"T2"."T2F1"=14
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F2"=13
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Table: T2  Alias: T2
    Card: Original: 10000.000000  Rounded: 1  Computed: 0.008929  Non Adjusted: 0.008929
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.000000 (cpu filter eval) (= 50.002500 (per row) * 10000.000000 (#rows))
                       =   2578061.000000
  Access Path: TableScan
    Cost:  9.087077  Resp: 9.087077  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2578061
      Resp_io: 9.000000  Resp_cpu: 2578061
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.064395  Resp: 10.064395  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1906547
      Resp_io: 10.000000  Resp_cpu: 1906547
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 8.9286e-07  ix_sel_with_filters: 8.9286e-07 
    Cost: 2.000488  Resp: 2.000488  Degree: 1
  ****** trying bitmap/domain indexes ******

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 8.9286e-07  ix_sel_with_filters: 8.9286e-07 
    Cost: 2.000488  Resp: 2.000488  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 5.000000  resc_cpu: 285607
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    Cost: 5.009647  Resp: 5.009647  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_T2F1_T2F2_ID2
      Cost = 3.000488, sel = 8.9286e-07
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T2_T2F1_T2F2_ID2
         Cost: 2.000488  Degree: 1  Resp: 2.000488  Card: 0.008929  Bytes: 0.000000

(newjo-restore) [2 1 0 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is OR expanded SEL$1 (#0)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  L[L]#0  T1[T1]#1  T2[T2]#2

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.200000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.200000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.200000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 590.000000 (cpu filter eval) (= 59.000000 (per row) * 10.000000 (#rows))
                       =   30775.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 15.011414  Resp: 15.011414  Degree: 1
      Cost_io: 15.000000  Cost_cpu: 337943
      Resp_io: 15.000000  Resp_cpu: 337943
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.400000  resc_cpu: 8911
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 7.004029  Resp: 7.004029  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 119300
      Resp_io: 7.000000  Resp_cpu: 119300
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:   Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
 Sel: 0.200000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.200000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 14643
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 13.005965  Resp: 13.005965  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 176615
      Resp_io: 13.000000  Resp_cpu: 176615
  ****** trying bitmap/domain indexes ******

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.001374  Resp: 3.001374  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 40686
      Resp_io: 3.000000  Resp_cpu: 40686

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.001374  Resp: 3.001374  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 40686
      Resp_io: 3.000000  Resp_cpu: 40686
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 13.003560  Resp: 13.003560  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 105400
      Resp_io: 13.000000  Resp_cpu: 105400
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Used T1_T1F_ID1
      Cost = 3.001375, sel = 0.020000
    Used T1_T1F_ID1
      Cost = 3.001375, sel = 0.020000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 7.004029
          resc: 7.004029  resc_io: 7.000000  resc_cpu: 119300
          resp: 7.004029  resp_io: 7.000000  resc_cpu: 119300
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 6.001590  Resp: 6.001590  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001590 
     resc: 6.001590 resc_io: 4.000000 resc_cpu: 59260769
     resp: 6.001590 resp_io: 4.000000 resp_cpu: 59260769
SM Join (with index on outer)
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 2.000000  resc_cpu: 17943
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2.000606  Resp: 2.000606  Degree: 1
  Outer table:  L  Alias: L
    resc: 2.000606  card 10.000000  bytes:   deg: 1  resp: 2.000606
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 4.001126  Resp: 4.001126  [multiMatchCost=0.000000]
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020330  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021878  Resp: 4.021878  [multiMatchCost=0.000020]
HA Join
  HA cost: 4.021878  
     resc: 4.021878 resc_io: 4.000000 resc_cpu: 647729
     resp: 4.021878 resp_io: 4.000000 resp_cpu: 647729
Best:: JoinMethod: SortMerge
       Cost: 4.001126  Degree: 1  Resp: 4.001126  Card: 10.000000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 4.001126  Resp: 4.001126  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.020836 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.020836
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 73.871892  Resp: 73.871892  Degree: 1
      Cost_io: 72.000000  Cost_cpu: 55420798
      Resp_io: 72.000000  Resp_cpu: 55420798
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 84.645081  Resp: 84.645081  Degree: 1
      Cost_io: 83.000000  Cost_cpu: 48705656
      Resp_io: 83.000000  Resp_cpu: 48705656
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 14.004254  Resp: 14.004254  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 29732802
      Resp_io: 13.000000  Resp_cpu: 29732802
kkofmx: index filter: ?? 

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 14.004254  Resp: 14.004254  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 29732802
      Resp_io: 13.000000  Resp_cpu: 29732802
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 2.2322e-12 
    NL Join : Cost: 14.003927  Resp: 14.003927  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 29723096
      Resp_io: 13.000000  Resp_cpu: 29723096
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 14.003927
          resc: 14.003927  resc_io: 13.000000  resc_cpu: 29723096
          resp: 14.003927  resp_io: 13.000000  resc_cpu: 29723096
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.000223 = outer (10.000000) * inner (0.008929) * sel (0.002500)
Join cardinality for HJ/SMJ (no post filters):  0.008929, outer: 10.000000, inner: 0.008929, sel: 0.002500
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  T1  Alias: T1
    resc: 4.001126  card 10.000000  bytes:   deg: 1  resp: 4.001126
  Inner table:  T2  Alias: T2
    resc: 2.000488  card: 0.008929  bytes:   deg: 1  resp: 2.000488
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 8.001665  Resp: 8.001665  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.001665 
     resc: 8.001665 resc_io: 5.000000 resc_cpu: 88869811
     resp: 8.001665 resp_io: 5.000000 resp_cpu: 88869811
  Outer table:  T1  Alias: T1
    resc: 4.001126  card 10.000000  bytes:   deg: 1  resp: 4.001126
  Inner table:  T2  Alias: T2
    resc: 2.000488  card: 0.008929  bytes:   deg: 1  resp: 2.000488
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.021934  Resp: 6.021934  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.021934  
     resc: 6.021934 resc_io: 5.000000 resc_cpu: 30256231
     resp: 6.021934 resp_io: 5.000000 resp_cpu: 30256231
Best:: JoinMethod: Hash
       Cost: 6.021934  Degree: 1  Resp: 6.021934  Card: 0.000223 Bytes: 
***********************
Best so far:  Table#: 0  cost: 2.000606  card: 10.000000  bytes: 60.000000
              Table#: 1  cost: 4.001126  card: 10.000000  bytes: 120.000000
              Table#: 2  cost: 6.021934  card: 0.000223  bytes: 22.000000
***********************
Join order[2]:  L[L]#0  T2[T2]#2  T1[T1]#1

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.019984 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.019984
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 72.871785  Resp: 72.871785  Degree: 1
      Cost_io: 72.000000  Cost_cpu: 25810796
      Resp_io: 72.000000  Resp_cpu: 25810796
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 83.644974  Resp: 83.644974  Degree: 1
      Cost_io: 83.000000  Cost_cpu: 19095654
      Resp_io: 83.000000  Resp_cpu: 19095654
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004148  Resp: 13.004148  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122800
      Resp_io: 13.000000  Resp_cpu: 122800
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004148  Resp: 13.004148  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122800
      Resp_io: 13.000000  Resp_cpu: 122800
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 8.9286e-11 
    NL Join : Cost: 13.003780  Resp: 13.003780  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 111900
      Resp_io: 13.000000  Resp_cpu: 111900
  ****** trying bitmap/domain indexes ******

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 8.9286e-11 
    NL Join : Cost: 13.003780  Resp: 13.003780  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 111900
      Resp_io: 13.000000  Resp_cpu: 111900

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 43.095368  Resp: 43.095368  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 2823543
      Resp_io: 43.000000  Resp_cpu: 2823543
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_T2F1_T2F2_ID2
      Cost = 13.003780, sel = 8.9286e-08
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 13.003780
          resc: 13.003780  resc_io: 13.000000  resc_cpu: 111900
          resp: 13.003780  resp_io: 13.000000  resc_cpu: 111900
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.008929 = outer (10.000000) * inner (0.008929) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.008929
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 2.000488  card: 0.008929  bytes:   deg: 1  resp: 2.000488
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 7.001558  Resp: 7.001558  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001558 
     resc: 7.001558 resc_io: 5.000000 resc_cpu: 59259809
     resp: 7.001558 resp_io: 5.000000 resp_cpu: 59259809
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 2.000488  card: 0.008929  bytes:   deg: 1  resp: 2.000488
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021827  Resp: 5.021827  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021827  
     resc: 5.021827 resc_io: 5.000000 resc_cpu: 646229
     resp: 5.021827 resp_io: 5.000000 resp_cpu: 646229
Best:: JoinMethod: Hash
       Cost: 5.021827  Degree: 1  Resp: 5.021827  Card: 0.008929 Bytes: 

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.008929  Cost: 5.021827  Resp: 5.021827  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2080  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 621.643360 (cpu filter eval) (= 62.164336 (per row) * 10.000000 (#rows))
                       =   30807.403360
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 8.022868  Resp: 8.022868  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 677036
      Resp_io: 8.000000  Resp_cpu: 677036
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 8943
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 7.022129  Resp: 7.022129  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 655172
      Resp_io: 7.000000  Resp_cpu: 655172
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:   Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
 Sel: 0.200000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.200000
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 14643
    ix_sel: 0.200000  ix_sel_with_filters: 0.005000 
    NL Join : Cost: 6.022330  Resp: 6.022330  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 661110
      Resp_io: 6.000000  Resp_cpu: 661110
  ****** trying bitmap/domain indexes ******

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.021862  Resp: 5.021862  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 647279
      Resp_io: 5.000000  Resp_cpu: 647279

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.021862  Resp: 5.021862  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 647279
      Resp_io: 5.000000  Resp_cpu: 647279
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 6.022081  Resp: 6.022081  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 653750
      Resp_io: 6.000000  Resp_cpu: 653750
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Not used  bitmap node 
    Used  bitmap node 
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  Access path: Bitmap index - accepted
    Cost: 14.442524 Cost_io: 13.398006 Cost_cpu: 30924879.681888 Sel: 0.200000
    Not Believed to be index-only
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 6.022330
          resc: 6.022330  resc_io: 6.000000  resc_cpu: 661110
          resp: 6.022330  resp_io: 6.000000  resc_cpu: 661110
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.000223 = outer (0.008929) * inner (10.000000) * sel (0.002500)
Join cardinality for HJ/SMJ (no post filters):  0.008929, outer: 0.008929, inner: 10.000000, sel: 0.002500
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  T2  Alias: T2
    resc: 5.021827  card 0.008929  bytes:   deg: 1  resp: 5.021827
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 8.022347  Resp: 8.022347  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.022347 
     resc: 8.022347 resc_io: 6.000000 resc_cpu: 59875315
     resp: 8.022347 resp_io: 6.000000 resp_cpu: 59875315
  Outer table:  T2  Alias: T2
    resc: 5.021827  card 0.008929  bytes:   deg: 1  resp: 5.021827
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020284  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.042619  Resp: 6.042619  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.042619  
     resc: 6.042619 resc_io: 6.000000 resc_cpu: 1261822
     resp: 6.042619 resp_io: 6.000000 resp_cpu: 1261822
Join order aborted: cost > best plan cost
***********************
Join order[3]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 4.000000  Cost: 1.000508  Resp: 1.000508  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 7.004654  Resp: 7.004654  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 137786
      Resp_io: 7.000000  Resp_cpu: 137786
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.001635  Resp: 5.001635  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48409
      Resp_io: 5.000000  Resp_cpu: 48409
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.001635  Resp: 5.001635  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48409
      Resp_io: 5.000000  Resp_cpu: 48409
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001635
          resc: 5.001635  resc_io: 5.000000  resc_cpu: 48409
          resp: 5.001635  resp_io: 5.000000  resc_cpu: 48409
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  T1  Alias: T1
    resc: 1.000508  card 4.000000  bytes:   deg: 1  resp: 1.000508
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001590  Resp: 6.001590  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001590 
     resc: 6.001590 resc_io: 4.000000 resc_cpu: 59260769
     resp: 6.001590 resp_io: 4.000000 resp_cpu: 59260769
  Outer table:  T1  Alias: T1
    resc: 1.000508  card 4.000000  bytes:   deg: 1  resp: 1.000508
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021847  Resp: 4.021847  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021847  
     resc: 4.021847 resc_io: 4.000000 resc_cpu: 646829
     resp: 4.021847 resp_io: 4.000000 resp_cpu: 646829
Best:: JoinMethod: Hash
       Cost: 4.021847  Degree: 1  Resp: 4.021847  Card: 10.000000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 4.021847  Resp: 4.021847  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.020836 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.020836
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 73.892613  Resp: 73.892613  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 26427439
      Resp_io: 73.000000  Resp_cpu: 26427439
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 84.665802  Resp: 84.665802  Degree: 1
      Cost_io: 84.000000  Cost_cpu: 19712296
      Resp_io: 84.000000  Resp_cpu: 19712296
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 14.024975  Resp: 14.024975  Degree: 1
      Cost_io: 14.000000  Cost_cpu: 739443
      Resp_io: 14.000000  Resp_cpu: 739443
kkofmx: index filter: ?? 

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 14.024975  Resp: 14.024975  Degree: 1
      Cost_io: 14.000000  Cost_cpu: 739443
      Resp_io: 14.000000  Resp_cpu: 739443
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 2.2322e-12 
    NL Join : Cost: 14.024648  Resp: 14.024648  Degree: 1
      Cost_io: 14.000000  Cost_cpu: 729737
      Resp_io: 14.000000  Resp_cpu: 729737
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 14.024648
          resc: 14.024648  resc_io: 14.000000  resc_cpu: 729737
          resp: 14.024648  resp_io: 14.000000  resc_cpu: 729737
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.000223 = outer (10.000000) * inner (0.008929) * sel (0.002500)
Join cardinality for HJ/SMJ (no post filters):  0.008929, outer: 10.000000, inner: 0.008929, sel: 0.002500
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  L  Alias: L
    resc: 4.021847  card 10.000000  bytes:   deg: 1  resp: 4.021847
  Inner table:  T2  Alias: T2
    resc: 2.000488  card: 0.008929  bytes:   deg: 1  resp: 2.000488
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 8.022386  Resp: 8.022386  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.022386 
     resc: 8.022386 resc_io: 6.000000 resc_cpu: 59876451
     resp: 8.022386 resp_io: 6.000000 resp_cpu: 59876451
  Outer table:  L  Alias: L
    resc: 4.021847  card 10.000000  bytes:   deg: 1  resp: 4.021847
  Inner table:  T2  Alias: T2
    resc: 2.000488  card: 0.008929  bytes:   deg: 1  resp: 2.000488
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.042655  Resp: 6.042655  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.042655  
     resc: 6.042655 resc_io: 6.000000 resc_cpu: 1262872
     resp: 6.042655 resp_io: 6.000000 resp_cpu: 1262872
Join order aborted: cost > best plan cost
***********************
Join order[4]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 4.000000  Cost: 1.000508  Resp: 1.000508  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   7.250000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2080  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   7.250000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.250000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500026.066012 (cpu filter eval) (= 50.002607 (per row) * 10000.000000 (#rows))
                       =   2578062.066012
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 30.348814  Resp: 30.348814  Degree: 1
      Cost_io: 30.000000  Cost_cpu: 10327291
      Resp_io: 30.000000  Resp_cpu: 10327291
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.250000  resc_cpu: 1906548
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 34.258090  Resp: 34.258090  Degree: 1
      Cost_io: 34.000000  Cost_cpu: 7641234
      Resp_io: 34.000000  Resp_cpu: 7641234
kkofmx: index filter: ?? 

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-07  ix_sel_with_filters: 2.2322e-08 
    NL Join : Cost: 5.001628  Resp: 5.001628  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48206
      Resp_io: 5.000000  Resp_cpu: 48206
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001628
          resc: 5.001628  resc_io: 5.000000  resc_cpu: 48206
          resp: 5.001628  resp_io: 5.000000  resc_cpu: 48206
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.002232 = outer (10.000000) * inner (0.008929) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  0.089286, outer: 10.000000, inner: 0.008929, sel: 0.025000
Join Card - Rounded: 1 Computed: 0.002232
Best:: JoinMethod: NestedLoop
       Cost: 5.001628  Degree: 1  Resp: 5.001628  Card: 0.002232 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.002232  Cost: 5.001628  Resp: 5.001628  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.399680 (cpu filter eval) (= 50.039968 (per row) * 10.000000 (#rows))
                       =   30686.159680
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 8.002665  Resp: 8.002665  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 78892
      Resp_io: 8.000000  Resp_cpu: 78892
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 6.001912  Resp: 6.001912  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 56598
      Resp_io: 6.000000  Resp_cpu: 56598
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 6.001912  Resp: 6.001912  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 56598
      Resp_io: 6.000000  Resp_cpu: 56598
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 6.001912
          resc: 6.001912  resc_io: 6.000000  resc_cpu: 56598
          resp: 6.001912  resp_io: 6.000000  resc_cpu: 56598
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000223 = outer (0.002232) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  T2  Alias: T2
    resc: 5.001628  card 0.002232  bytes:   deg: 1  resp: 5.001628
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 10.002698  Resp: 10.002698  [multiMatchCost=0.000000]
SM Join
  SM cost: 10.002698 
     resc: 10.002698 resc_io: 8.000000 resc_cpu: 59293572
     resp: 10.002698 resp_io: 8.000000 resp_cpu: 59293572
  Outer table:  T2  Alias: T2
    resc: 5.001628  card 0.002232  bytes:   deg: 1  resp: 5.001628
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 8.022952  Resp: 8.022952  [multiMatchCost=0.000000]
HA Join
  HA cost: 8.022952  
     resc: 8.022952 resc_io: 8.000000 resc_cpu: 679542
     resp: 8.022952 resp_io: 8.000000 resp_cpu: 679542
Plan cardinality mismatch: best card= 0.00022321584   curr card= 0.00022321584
Best:: JoinMethod: NestedLoop
       Cost: 6.001912  Degree: 1  Resp: 6.001912  Card: 0.000223 Bytes: 
***********************
Best so far:  Table#: 1  cost: 1.000508  card: 4.000000  bytes: 24.000000
              Table#: 2  cost: 5.001628  card: 0.002232  bytes: 16.000000
              Table#: 0  cost: 6.001912  card: 0.000223  bytes: 22.000000
***********************
Join order[5]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000488  Resp: 2.000488  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001524  Resp: 5.001524  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45129
      Resp_io: 5.000000  Resp_cpu: 45129
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001524
          resc: 5.001524  resc_io: 5.000000  resc_cpu: 45129
          resp: 5.001524  resp_io: 5.000000  resc_cpu: 45129
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.008929 = outer (0.008929) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.008929
  Outer table:  T2  Alias: T2
    resc: 2.000488  card 0.008929  bytes:   deg: 1  resp: 2.000488
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001558  Resp: 7.001558  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001558 
     resc: 7.001558 resc_io: 5.000000 resc_cpu: 59259809
     resp: 7.001558 resp_io: 5.000000 resp_cpu: 59259809
  Outer table:  T2  Alias: T2
    resc: 2.000488  card 0.008929  bytes:   deg: 1  resp: 2.000488
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021812  Resp: 5.021812  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021812  
     resc: 5.021812 resc_io: 5.000000 resc_cpu: 645779
     resp: 5.021812 resp_io: 5.000000 resp_cpu: 645779
Best:: JoinMethod: Hash
       Cost: 5.021812  Degree: 1  Resp: 5.021812  Card: 0.008929 Bytes: 

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.008929  Cost: 5.021812  Resp: 5.021812  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2080  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 621.643360 (cpu filter eval) (= 62.164336 (per row) * 10.000000 (#rows))
                       =   30807.403360
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 8.022852  Resp: 8.022852  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 676586
      Resp_io: 8.000000  Resp_cpu: 676586
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 8943
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 7.022114  Resp: 7.022114  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 654722
      Resp_io: 7.000000  Resp_cpu: 654722
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:   Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
 Sel: 0.200000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.200000
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 14643
    ix_sel: 0.200000  ix_sel_with_filters: 0.005000 
    NL Join : Cost: 6.022314  Resp: 6.022314  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 660660
      Resp_io: 6.000000  Resp_cpu: 660660
  ****** trying bitmap/domain indexes ******

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.021847  Resp: 5.021847  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 646829
      Resp_io: 5.000000  Resp_cpu: 646829

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.021847  Resp: 5.021847  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 646829
      Resp_io: 5.000000  Resp_cpu: 646829
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 6.022066  Resp: 6.022066  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 653300
      Resp_io: 6.000000  Resp_cpu: 653300
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Not used  bitmap node 
    Used  bitmap node 
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  Access path: Bitmap index - accepted
    Cost: 14.442494 Cost_io: 13.398006 Cost_cpu: 30923979.681888 Sel: 0.200000
    Not Believed to be index-only
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 6.022314
          resc: 6.022314  resc_io: 6.000000  resc_cpu: 660660
          resp: 6.022314  resp_io: 6.000000  resc_cpu: 660660
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.000223 = outer (0.008929) * inner (10.000000) * sel (0.002500)
Join cardinality for HJ/SMJ (no post filters):  0.008929, outer: 0.008929, inner: 10.000000, sel: 0.002500
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  L  Alias: L
    resc: 5.021812  card 0.008929  bytes:   deg: 1  resp: 5.021812
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 8.022332  Resp: 8.022332  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.022332 
     resc: 8.022332 resc_io: 6.000000 resc_cpu: 59874865
     resp: 8.022332 resp_io: 6.000000 resp_cpu: 59874865
  Outer table:  L  Alias: L
    resc: 5.021812  card 0.008929  bytes:   deg: 1  resp: 5.021812
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020284  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.042604  Resp: 6.042604  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.042604  
     resc: 6.042604 resc_io: 6.000000 resc_cpu: 1261372
     resp: 6.042604 resp_io: 6.000000 resp_cpu: 1261372
Plan cardinality mismatch: best card= 0.00022321584   curr card= 0.00022321584
Join order aborted: cost > best plan cost
***********************
Join order[6]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000488  Resp: 2.000488  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 1216.433603 (cpu filter eval) (= 121.643360 (per row) * 10.000000 (#rows))
                       =   31402.193603
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001548  Resp: 5.001548  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45845
      Resp_io: 5.000000  Resp_cpu: 45845
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9538
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000810  Resp: 4.000810  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23981
      Resp_io: 4.000000  Resp_cpu: 23981
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 15043
    ix_sel: 0.400000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 3.001012  Resp: 3.001012  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 29963
      Resp_io: 3.000000  Resp_cpu: 29963
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 3.000742  Resp: 3.000742  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 21964
      Resp_io: 3.000000  Resp_cpu: 21964
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 3.000742  Resp: 3.000742  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 21964
      Resp_io: 3.000000  Resp_cpu: 21964
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Not used T1_T1F_ID1
      Cost = 4.000757, sel = 0.200000
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.001012
          resc: 3.001012  resc_io: 3.000000  resc_cpu: 29963
          resp: 3.001012  resp_io: 3.000000  resc_cpu: 29963
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.002232 = outer (0.008929) * inner (10.000000) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  0.089286, outer: 0.008929, inner: 10.000000, sel: 0.025000
Join Card - Rounded: 1 Computed: 0.002232
Best:: JoinMethod: NestedLoop
       Cost: 3.001012  Degree: 1  Resp: 3.001012  Card: 0.002232 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.002232  Cost: 3.001012  Resp: 3.001012  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.399680 (cpu filter eval) (= 50.039968 (per row) * 10.000000 (#rows))
                       =   30686.159680
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.002048  Resp: 6.002048  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 60649
      Resp_io: 6.000000  Resp_cpu: 60649
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001295  Resp: 4.001295  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38355
      Resp_io: 4.000000  Resp_cpu: 38355
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001295  Resp: 4.001295  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38355
      Resp_io: 4.000000  Resp_cpu: 38355
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001295
          resc: 4.001295  resc_io: 4.000000  resc_cpu: 38355
          resp: 4.001295  resp_io: 4.000000  resc_cpu: 38355
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000223 = outer (0.002232) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  T1  Alias: T1
    resc: 3.001012  card 0.002232  bytes:   deg: 1  resp: 3.001012
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.002082  Resp: 8.002082  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.002082 
     resc: 8.002082 resc_io: 6.000000 resc_cpu: 59275329
     resp: 8.002082 resp_io: 6.000000 resp_cpu: 59275329
  Outer table:  T1  Alias: T1
    resc: 3.001012  card 0.002232  bytes:   deg: 1  resp: 3.001012
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022336  Resp: 6.022336  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022336  
     resc: 6.022336 resc_io: 6.000000 resc_cpu: 661299
     resp: 6.022336 resp_io: 6.000000 resp_cpu: 661299
Best:: JoinMethod: NestedLoop
       Cost: 4.001295  Degree: 1  Resp: 4.001295  Card: 0.000223 Bytes: 
***********************
Best so far:  Table#: 2  cost: 2.000488  card: 0.008929  bytes: 10.000000
              Table#: 1  cost: 3.001012  card: 0.002232  bytes: 16.000000
              Table#: 0  cost: 4.001295  card: 0.000223  bytes: 22.000000
***********************
Permutations for Starting Table :1
Join order[7]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000488  Resp: 2.000488  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001524  Resp: 5.001524  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45129
      Resp_io: 5.000000  Resp_cpu: 45129
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001524
          resc: 5.001524  resc_io: 5.000000  resc_cpu: 45129
          resp: 5.001524  resp_io: 5.000000  resc_cpu: 45129
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.008929 = outer (0.008929) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.008929
  Outer table:  T2  Alias: T2
    resc: 2.000488  card 0.008929  bytes:   deg: 1  resp: 2.000488
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001558  Resp: 7.001558  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001558 
     resc: 7.001558 resc_io: 5.000000 resc_cpu: 59259809
     resp: 7.001558 resp_io: 5.000000 resp_cpu: 59259809
  Outer table:  T2  Alias: T2
    resc: 2.000488  card 0.008929  bytes:   deg: 1  resp: 2.000488
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021812  Resp: 5.021812  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021812  
     resc: 5.021812 resc_io: 5.000000 resc_cpu: 645779
     resp: 5.021812 resp_io: 5.000000 resp_cpu: 645779
Join order aborted: cost > best plan cost
***********************
Join order[8]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000488  Resp: 2.000488  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 1216.433603 (cpu filter eval) (= 121.643360 (per row) * 10.000000 (#rows))
                       =   31402.193603
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001548  Resp: 5.001548  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45845
      Resp_io: 5.000000  Resp_cpu: 45845
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9538
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000810  Resp: 4.000810  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23981
      Resp_io: 4.000000  Resp_cpu: 23981
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 15043
    ix_sel: 0.400000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 3.001012  Resp: 3.001012  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 29963
      Resp_io: 3.000000  Resp_cpu: 29963
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 3.000742  Resp: 3.000742  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 21964
      Resp_io: 3.000000  Resp_cpu: 21964
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 3.000742  Resp: 3.000742  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 21964
      Resp_io: 3.000000  Resp_cpu: 21964
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Not used T1_T1F_ID1
      Cost = 4.000757, sel = 0.200000
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.001012
          resc: 3.001012  resc_io: 3.000000  resc_cpu: 29963
          resp: 3.001012  resp_io: 3.000000  resc_cpu: 29963
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.002232 = outer (0.008929) * inner (10.000000) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  0.089286, outer: 0.008929, inner: 10.000000, sel: 0.025000
Join Card - Rounded: 1 Computed: 0.002232
Best:: JoinMethod: NestedLoop
       Cost: 3.001012  Degree: 1  Resp: 3.001012  Card: 0.002232 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.002232  Cost: 3.001012  Resp: 3.001012  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.399680 (cpu filter eval) (= 50.039968 (per row) * 10.000000 (#rows))
                       =   30686.159680
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.002048  Resp: 6.002048  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 60649
      Resp_io: 6.000000  Resp_cpu: 60649
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001295  Resp: 4.001295  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38355
      Resp_io: 4.000000  Resp_cpu: 38355
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001295  Resp: 4.001295  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38355
      Resp_io: 4.000000  Resp_cpu: 38355
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001295
          resc: 4.001295  resc_io: 4.000000  resc_cpu: 38355
          resp: 4.001295  resp_io: 4.000000  resc_cpu: 38355
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000223 = outer (0.002232) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  T1  Alias: T1
    resc: 3.001012  card 0.002232  bytes:   deg: 1  resp: 3.001012
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.002082  Resp: 8.002082  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.002082 
     resc: 8.002082 resc_io: 6.000000 resc_cpu: 59275329
     resp: 8.002082 resp_io: 6.000000 resp_cpu: 59275329
  Outer table:  T1  Alias: T1
    resc: 3.001012  card 0.002232  bytes:   deg: 1  resp: 3.001012
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022336  Resp: 6.022336  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022336  
     resc: 6.022336 resc_io: 6.000000 resc_cpu: 661299
     resp: 6.022336 resp_io: 6.000000 resp_cpu: 661299
Join order aborted: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[9]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 4.000000  Cost: 1.000508  Resp: 1.000508  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 7.004654  Resp: 7.004654  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 137786
      Resp_io: 7.000000  Resp_cpu: 137786
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.001635  Resp: 5.001635  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48409
      Resp_io: 5.000000  Resp_cpu: 48409
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.001635  Resp: 5.001635  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48409
      Resp_io: 5.000000  Resp_cpu: 48409
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001635
          resc: 5.001635  resc_io: 5.000000  resc_cpu: 48409
          resp: 5.001635  resp_io: 5.000000  resc_cpu: 48409
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  T1  Alias: T1
    resc: 1.000508  card 4.000000  bytes:   deg: 1  resp: 1.000508
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001590  Resp: 6.001590  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001590 
     resc: 6.001590 resc_io: 4.000000 resc_cpu: 59260769
     resp: 6.001590 resp_io: 4.000000 resp_cpu: 59260769
  Outer table:  T1  Alias: T1
    resc: 1.000508  card 4.000000  bytes:   deg: 1  resp: 1.000508
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021847  Resp: 4.021847  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021847  
     resc: 4.021847 resc_io: 4.000000 resc_cpu: 646829
     resp: 4.021847 resp_io: 4.000000 resp_cpu: 646829
Join order aborted: cost > best plan cost
***********************
Join order[10]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 4.000000  Cost: 1.000508  Resp: 1.000508  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   7.250000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   7.250000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.250000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500026.066012 (cpu filter eval) (= 50.002607 (per row) * 10000.000000 (#rows))
                       =   2578062.066012
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 30.348814  Resp: 30.348814  Degree: 1
      Cost_io: 30.000000  Cost_cpu: 10327291
      Resp_io: 30.000000  Resp_cpu: 10327291
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.250000  resc_cpu: 1906548
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 34.258090  Resp: 34.258090  Degree: 1
      Cost_io: 34.000000  Cost_cpu: 7641234
      Resp_io: 34.000000  Resp_cpu: 7641234
kkofmx: index filter: ?? 

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-07  ix_sel_with_filters: 2.2322e-08 
    NL Join : Cost: 5.001628  Resp: 5.001628  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48206
      Resp_io: 5.000000  Resp_cpu: 48206
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001628
          resc: 5.001628  resc_io: 5.000000  resc_cpu: 48206
          resp: 5.001628  resp_io: 5.000000  resc_cpu: 48206
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.002232 = outer (10.000000) * inner (0.008929) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  0.089286, outer: 10.000000, inner: 0.008929, sel: 0.025000
Join Card - Rounded: 1 Computed: 0.002232
Join order aborted: cost > best plan cost
***********************
Join order[11]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000488  Resp: 2.000488  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001524  Resp: 5.001524  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45129
      Resp_io: 5.000000  Resp_cpu: 45129
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001524
          resc: 5.001524  resc_io: 5.000000  resc_cpu: 45129
          resp: 5.001524  resp_io: 5.000000  resc_cpu: 45129
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.008929 = outer (0.008929) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.008929
  Outer table:  T2  Alias: T2
    resc: 2.000488  card 0.008929  bytes:   deg: 1  resp: 2.000488
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001558  Resp: 7.001558  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001558 
     resc: 7.001558 resc_io: 5.000000 resc_cpu: 59259809
     resp: 7.001558 resp_io: 5.000000 resp_cpu: 59259809
  Outer table:  T2  Alias: T2
    resc: 2.000488  card 0.008929  bytes:   deg: 1  resp: 2.000488
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021812  Resp: 5.021812  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021812  
     resc: 5.021812 resc_io: 5.000000 resc_cpu: 645779
     resp: 5.021812 resp_io: 5.000000 resp_cpu: 645779
Join order aborted: cost > best plan cost
***********************
Join order[12]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000488  Resp: 2.000488  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2080  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 1216.433603 (cpu filter eval) (= 121.643360 (per row) * 10.000000 (#rows))
                       =   31402.193603
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001548  Resp: 5.001548  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45845
      Resp_io: 5.000000  Resp_cpu: 45845
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9538
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000810  Resp: 4.000810  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23981
      Resp_io: 4.000000  Resp_cpu: 23981
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 15043
    ix_sel: 0.400000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 3.001012  Resp: 3.001012  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 29963
      Resp_io: 3.000000  Resp_cpu: 29963
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 3.000742  Resp: 3.000742  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 21964
      Resp_io: 3.000000  Resp_cpu: 21964
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 3.000742  Resp: 3.000742  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 21964
      Resp_io: 3.000000  Resp_cpu: 21964
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Not used T1_T1F_ID1
      Cost = 4.000757, sel = 0.200000
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.001012
          resc: 3.001012  resc_io: 3.000000  resc_cpu: 29963
          resp: 3.001012  resp_io: 3.000000  resc_cpu: 29963
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.002232 = outer (0.008929) * inner (10.000000) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  0.089286, outer: 0.008929, inner: 10.000000, sel: 0.025000
Join Card - Rounded: 1 Computed: 0.002232
Best:: JoinMethod: NestedLoop
       Cost: 3.001012  Degree: 1  Resp: 3.001012  Card: 0.002232 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.002232  Cost: 3.001012  Resp: 3.001012  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.399680 (cpu filter eval) (= 50.039968 (per row) * 10.000000 (#rows))
                       =   30686.159680
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.002048  Resp: 6.002048  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 60649
      Resp_io: 6.000000  Resp_cpu: 60649
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001295  Resp: 4.001295  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38355
      Resp_io: 4.000000  Resp_cpu: 38355
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001295  Resp: 4.001295  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38355
      Resp_io: 4.000000  Resp_cpu: 38355
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001295
          resc: 4.001295  resc_io: 4.000000  resc_cpu: 38355
          resp: 4.001295  resp_io: 4.000000  resc_cpu: 38355
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000223 = outer (0.002232) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  T1  Alias: T1
    resc: 3.001012  card 0.002232  bytes:   deg: 1  resp: 3.001012
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.002082  Resp: 8.002082  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.002082 
     resc: 8.002082 resc_io: 6.000000 resc_cpu: 59275329
     resp: 8.002082 resp_io: 6.000000 resp_cpu: 59275329
  Outer table:  T1  Alias: T1
    resc: 3.001012  card 0.002232  bytes:   deg: 1  resp: 3.001012
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022336  Resp: 6.022336  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022336  
     resc: 6.022336 resc_io: 6.000000 resc_cpu: 661299
     resp: 6.022336 resp_io: 6.000000 resp_cpu: 661299
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between T2[T2](serial) and T1[T1](serial); jm = 14; right side access path = IndexRange
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL
--- Distribution method for 
join between T1[T1](serial) and L[L](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

LORE: Trying or-Expansion on query block SEL$1 (#0)

LORE: ******** Next OR predicate ********

LORE: Trying or-Expansion on query block SEL$1 (#0) on OR chain:
id=0  predicate=("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"

LORE: ******** OR-branching ********

LORE: or-expansion-subheap (create addr=0x7fa8a2848da0)
****************
QUERY BLOCK TEXT
****************
SELECT /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null FROM l, t1, t2 WHERE  
(  ( t1.t1f = 0 AND t2.t2f1 BETWEEN 9 AND 10)       OR 
   ( t1.t1f = 1 AND t2.t2f1 = 14 AND t2.t2f2 = 13  )   )  AND 
    ( l.id1 = t1.id1 AND l.id2 = t2.id2 )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$1 nbfros=3 flg=0
  fro(0): flg=0 objn=73956 hint_alias="L"@"SEL$1"
  fro(1): flg=0 objn=73958 hint_alias="T1"@"SEL$1"
  fro(2): flg=0 objn=73960 hint_alias="T2"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 2467 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: T2  Alias: T2
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  25  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T2F1(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#3): T2F2(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#1): ID2(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: T2_ID2  Col#: 1
  LVLS: 1  #LB: 20  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: T2_T2F1_T2F2_ID2  Col#: 2 3 1
  LVLS: 1  #LB: 29  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 168.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: T1  Alias: T1
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T1F(NUMBER)
    AvgLen: 3 NDV: 5 Nulls: 0 Density: 0.200000 Min: 0.000000 Max: 4.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: T1_T1F_ID1  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  L  Alias:  L
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
  Column (#2): ID2(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: L_ID1  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$1 (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for L
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for L[L] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: L  Alias: L
    Card: Original: 10.000000  Rounded: 10  Computed: 10.000000  Non Adjusted: 10.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                       =   30185.760000
  Access Path: TableScan
    Cost:  3.001020  Resp: 3.001020  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 30186
      Resp_io: 3.000000  Resp_cpu: 30186
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3.001020  Degree: 1  Resp: 3.001020  Card: 10.000000  Bytes: 0.000000

Access path analysis for T1
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T1[T1] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE


 kkecdn: Single Table Predicate:"T1"."T1F"=0 OR "T1"."T1F"=1
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

 kkecdn: Single Table Predicate:"T1"."T1F"=0
  Estimated selectivity: 0.200000 , col: #2 
  Table: T1  Alias: T1
    Card: Original: 10.000000  Rounded: 1  Computed: 0.800000  Non Adjusted: 0.800000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 680.000000 (cpu filter eval) (= 68.000000 (per row) * 10.000000 (#rows))
                       =   30865.760000
  Access Path: TableScan
    Cost:  3.001043  Resp: 3.001043  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 30866
      Resp_io: 3.000000  Resp_cpu: 30866
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9001
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000304  Resp: 2.000304  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9001
      Resp_io: 2.000000  Resp_cpu: 9001
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.080000 
    Cost: 1.000260  Resp: 1.000260  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T1_T1F_ID1
         Cost: 1.000260  Degree: 1  Resp: 1.000260  Card: 0.800000  Bytes: 0.000000

Access path analysis for T2
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T2[T2] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 0.125000 , col: #2 
  Estimated selectivity: 0.125000 , col: #3 


 kkecdn: Single Table Predicate:"T2"."T2F1"=14
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F2"=13
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F1">=9
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F1"<=10
  Estimated selectivity: 1.000000 , col: #2 
  Table: T2  Alias: T2
    Card: Original: 10000.000000  Rounded: 1  Computed: 0.000000  Non Adjusted: 0.000000
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.486288 (cpu filter eval) (= 50.002549 (per row) * 10000.000000 (#rows))
                       =   2578061.486288
  Access Path: TableScan
    Cost:  9.087077  Resp: 9.087077  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2578061
      Resp_io: 9.000000  Resp_cpu: 2578061
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.064395  Resp: 10.064395  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1906547
      Resp_io: 10.000000  Resp_cpu: 1906547
kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 8.9286e-07  ix_sel_with_filters: 7.9719e-08 
    Cost: 2.000490  Resp: 2.000490  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T2_T2F1_T2F2_ID2
         Cost: 2.000490  Degree: 1  Resp: 2.000490  Card: 0.000000  Bytes: 0.000000

(newjo-restore) [2 1 0 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is OR expanded SEL$1 (#0)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  L[L]#0  T1[T1]#1  T2[T2]#2

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.200000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.200000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.200000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 568.000000 (cpu filter eval) (= 56.800000 (per row) * 10.000000 (#rows))
                       =   30753.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 15.011407  Resp: 15.011407  Degree: 1
      Cost_io: 15.000000  Cost_cpu: 337723
      Resp_io: 15.000000  Resp_cpu: 337723
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.400000  resc_cpu: 8889
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 7.004022  Resp: 7.004022  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 119080
      Resp_io: 7.000000  Resp_cpu: 119080
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.200000 , col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.008000 
    NL Join : Cost: 3.001405  Resp: 3.001405  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 41586
      Resp_io: 3.000000  Resp_cpu: 41586
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.001405
          resc: 3.001405  resc_io: 3.000000  resc_cpu: 41586
          resp: 3.001405  resp_io: 3.000000  resc_cpu: 41586
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  2.000000 = outer (10.000000) * inner (2.000000) * sel (0.100000)
Join Card - Rounded: 2 Computed: 2.000000
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
SM Join (with index on outer)
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 2.000000  resc_cpu: 17943
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2.000606  Resp: 2.000606  Degree: 1
  Outer table:  L  Alias: L
    resc: 2.000606  card 10.000000  bytes:   deg: 1  resp: 2.000606
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 4.000866  Resp: 4.000866  [multiMatchCost=0.000000]
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021603  Resp: 4.021603  [multiMatchCost=0.000003]
HA Join
  HA cost: 4.021603  
     resc: 4.021603 resc_io: 4.000000 resc_cpu: 639587
     resp: 4.021603 resp_io: 4.000000 resp_cpu: 639587
Best:: JoinMethod: NestedLoop
       Cost: 3.001405  Degree: 1  Resp: 3.001405  Card: 2.000000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 2.000000  Cost: 3.001405  Resp: 3.001405  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   7.500000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2080  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   7.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.500000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.020373 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.020373
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 18.175558  Resp: 18.175558  Degree: 1
      Cost_io: 18.000000  Cost_cpu: 5197708
      Resp_io: 18.000000  Resp_cpu: 5197708
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.500000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 20.130196  Resp: 20.130196  Degree: 1
      Cost_io: 20.000000  Cost_cpu: 3854679
      Resp_io: 20.000000  Resp_cpu: 3854679
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 5.002030  Resp: 5.002030  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 60109
      Resp_io: 5.000000  Resp_cpu: 60109
kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 5.002030  Resp: 5.002030  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 60109
      Resp_io: 5.000000  Resp_cpu: 60109
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 7.9719e-12 
    NL Join : Cost: 5.001960  Resp: 5.001960  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 58038
      Resp_io: 5.000000  Resp_cpu: 58038
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001960
          resc: 5.001960  resc_io: 5.000000  resc_cpu: 58038
          resp: 5.001960  resp_io: 5.000000  resc_cpu: 58038
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.000000) * inner (0.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T1  Alias: T1
    resc: 3.001405  card 2.000000  bytes:   deg: 1  resp: 3.001405
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 7.001897  Resp: 7.001897  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001897 
     resc: 7.001897 resc_io: 5.000000 resc_cpu: 59269856
     resp: 7.001897 resp_io: 5.000000 resp_cpu: 59269856
  Outer table:  T1  Alias: T1
    resc: 3.001405  card 2.000000  bytes:   deg: 1  resp: 3.001405
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020279  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.022173  Resp: 5.022173  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.022173  
     resc: 5.022173 resc_io: 5.000000 resc_cpu: 656483
     resp: 5.022173 resp_io: 5.000000 resp_cpu: 656483
Best:: JoinMethod: NestedLoop
       Cost: 5.001960  Degree: 1  Resp: 5.001960  Card: 0.000000 Bytes: 
***********************
Best so far:  Table#: 0  cost: 3.001020  card: 10.000000  bytes: 60.000000
              Table#: 1  cost: 3.001405  card: 2.000000  bytes: 24.000000
              Table#: 2  cost: 5.001960  card: 0.000000  bytes: 22.000000
***********************
Join order[2]:  L[L]#0  T2[T2]#2  T1[T1]#1

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2080  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.020373 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.020373
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 72.871785  Resp: 72.871785  Degree: 1
      Cost_io: 72.000000  Cost_cpu: 25810796
      Resp_io: 72.000000  Resp_cpu: 25810796
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 83.644974  Resp: 83.644974  Degree: 1
      Cost_io: 83.000000  Cost_cpu: 19095654
      Resp_io: 83.000000  Resp_cpu: 19095654
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004148  Resp: 13.004148  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122800
      Resp_io: 13.000000  Resp_cpu: 122800
kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004148  Resp: 13.004148  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122800
      Resp_io: 13.000000  Resp_cpu: 122800
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 7.9719e-12 
    NL Join : Cost: 13.003798  Resp: 13.003798  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 112445
      Resp_io: 13.000000  Resp_cpu: 112445
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 13.003798
          resc: 13.003798  resc_io: 13.000000  resc_cpu: 112445
          resp: 13.003798  resp_io: 13.000000  resc_cpu: 112445
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (10.000000) * inner (0.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 7.001560  Resp: 7.001560  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001560 
     resc: 7.001560 resc_io: 5.000000 resc_cpu: 59259863
     resp: 7.001560 resp_io: 5.000000 resp_cpu: 59259863
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021829  Resp: 5.021829  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021829  
     resc: 5.021829 resc_io: 5.000000 resc_cpu: 646283
     resp: 5.021829 resp_io: 5.000000 resp_cpu: 646283
Join order aborted: cost > best plan cost
***********************
Join order[3]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 4.001297  Resp: 4.001297  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38387
      Resp_io: 4.000000  Resp_cpu: 38387
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000542
          resc: 2.000542  resc_io: 2.000000  resc_cpu: 16043
          resp: 2.000542  resp_io: 2.000000  resc_cpu: 16043
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  2.000000 = outer (2.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 2 Computed: 2.000000
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021584  Resp: 4.021584  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021584  
     resc: 4.021584 resc_io: 4.000000 resc_cpu: 639037
     resp: 4.021584 resp_io: 4.000000 resp_cpu: 639037
Best:: JoinMethod: NestedLoop
       Cost: 2.000542  Degree: 1  Resp: 2.000542  Card: 2.000000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 2.000000  Cost: 2.000542  Resp: 2.000542  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   7.500000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2080  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   7.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.500000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.020373 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.020373
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 17.174695  Resp: 17.174695  Degree: 1
      Cost_io: 17.000000  Cost_cpu: 5172165
      Resp_io: 17.000000  Resp_cpu: 5172165
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.500000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 19.129333  Resp: 19.129333  Degree: 1
      Cost_io: 19.000000  Cost_cpu: 3829136
      Resp_io: 19.000000  Resp_cpu: 3829136
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001167  Resp: 4.001167  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 34566
      Resp_io: 4.000000  Resp_cpu: 34566
kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001167  Resp: 4.001167  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 34566
      Resp_io: 4.000000  Resp_cpu: 34566
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 7.9719e-12 
    NL Join : Cost: 4.001098  Resp: 4.001098  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 32495
      Resp_io: 4.000000  Resp_cpu: 32495
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001098
          resc: 4.001098  resc_io: 4.000000  resc_cpu: 32495
          resp: 4.001098  resp_io: 4.000000  resc_cpu: 32495
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.000000) * inner (0.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  L  Alias: L
    resc: 2.000542  card 2.000000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 6.001035  Resp: 6.001035  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001035 
     resc: 6.001035 resc_io: 4.000000 resc_cpu: 59244314
     resp: 6.001035 resp_io: 4.000000 resp_cpu: 59244314
  Outer table:  L  Alias: L
    resc: 2.000542  card 2.000000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020279  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021311  Resp: 4.021311  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021311  
     resc: 4.021311 resc_io: 4.000000 resc_cpu: 630940
     resp: 4.021311 resp_io: 4.000000 resp_cpu: 630940
Best:: JoinMethod: NestedLoop
       Cost: 4.001098  Degree: 1  Resp: 4.001098  Card: 0.000000 Bytes: 
***********************
Best so far:  Table#: 1  cost: 1.000260  card: 0.800000  bytes: 6.000000
              Table#: 0  cost: 2.000542  card: 2.000000  bytes: 24.000000
              Table#: 2  cost: 4.001098  card: 0.000000  bytes: 22.000000
***********************
Join order[4]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2080  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.486288 (cpu filter eval) (= 50.002549 (per row) * 10000.000000 (#rows))
                       =   2578061.486288
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 10.087337  Resp: 10.087337  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2585763
      Resp_io: 10.000000  Resp_cpu: 2585763
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 11.064656  Resp: 11.064656  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1914249
      Resp_io: 11.000000  Resp_cpu: 1914249
kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-07  ix_sel_with_filters: 7.9719e-08 
    NL Join : Cost: 2.000538  Resp: 2.000538  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15927
      Resp_io: 2.000000  Resp_cpu: 15927
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000538
          resc: 2.000538  resc_io: 2.000000  resc_cpu: 15927
          resp: 2.000538  resp_io: 2.000000  resc_cpu: 15927
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.000000) * inner (0.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Best:: JoinMethod: NestedLoop
       Cost: 2.000538  Degree: 1  Resp: 2.000538  Card: 0.000000 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000538  Resp: 2.000538  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.399680 (cpu filter eval) (= 50.039968 (per row) * 10.000000 (#rows))
                       =   30686.159680
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001574  Resp: 5.001574  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 46614
      Resp_io: 5.000000  Resp_cpu: 46614
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000821  Resp: 3.000821  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24319
      Resp_io: 3.000000  Resp_cpu: 24319
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000821  Resp: 3.000821  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24319
      Resp_io: 3.000000  Resp_cpu: 24319
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000821
          resc: 3.000821  resc_io: 3.000000  resc_cpu: 24319
          resp: 3.000821  resp_io: 3.000000  resc_cpu: 24319
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T2  Alias: T2
    resc: 2.000538  card 0.000000  bytes:   deg: 1  resp: 2.000538
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001608  Resp: 7.001608  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001608 
     resc: 7.001608 resc_io: 5.000000 resc_cpu: 59261293
     resp: 7.001608 resp_io: 5.000000 resp_cpu: 59261293
  Outer table:  T2  Alias: T2
    resc: 2.000538  card 0.000000  bytes:   deg: 1  resp: 2.000538
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021862  Resp: 5.021862  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021862  
     resc: 5.021862 resc_io: 5.000000 resc_cpu: 647263
     resp: 5.021862 resp_io: 5.000000 resp_cpu: 647263
Best:: JoinMethod: NestedLoop
       Cost: 3.000821  Degree: 1  Resp: 3.000821  Card: 0.000000 Bytes: 
***********************
Best so far:  Table#: 1  cost: 1.000260  card: 0.800000  bytes: 6.000000
              Table#: 2  cost: 2.000538  card: 0.000000  bytes: 16.000000
              Table#: 0  cost: 3.000821  card: 0.000000  bytes: 22.000000
***********************
Join order[5]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001526  Resp: 5.001526  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45183
      Resp_io: 5.000000  Resp_cpu: 45183
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001526
          resc: 5.001526  resc_io: 5.000000  resc_cpu: 45183
          resp: 5.001526  resp_io: 5.000000  resc_cpu: 45183
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001560  Resp: 7.001560  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001560 
     resc: 7.001560 resc_io: 5.000000 resc_cpu: 59259863
     resp: 7.001560 resp_io: 5.000000 resp_cpu: 59259863
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021814  Resp: 5.021814  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021814  
     resc: 5.021814 resc_io: 5.000000 resc_cpu: 645833
     resp: 5.021814 resp_io: 5.000000 resp_cpu: 645833
Join order aborted: cost > best plan cost
***********************
Join order[6]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=0)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 680.000000 (cpu filter eval) (= 68.000000 (per row) * 10.000000 (#rows))
                       =   30865.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001532  Resp: 5.001532  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45363
      Resp_io: 5.000000  Resp_cpu: 45363
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9001
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000794  Resp: 4.000794  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23499
      Resp_io: 4.000000  Resp_cpu: 23499
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.200000 , col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.080000 
    NL Join : Cost: 3.000750  Resp: 3.000750  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 22199
      Resp_io: 3.000000  Resp_cpu: 22199
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000750
          resc: 3.000750  resc_io: 3.000000  resc_cpu: 22199
          resp: 3.000750  resp_io: 3.000000  resc_cpu: 22199
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (2.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Best:: JoinMethod: NestedLoop
       Cost: 3.000750  Degree: 1  Resp: 3.000750  Card: 0.000000 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 3.000750  Resp: 3.000750  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.399680 (cpu filter eval) (= 50.039968 (per row) * 10.000000 (#rows))
                       =   30686.159680
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.001786  Resp: 6.001786  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 52885
      Resp_io: 6.000000  Resp_cpu: 52885
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30590
      Resp_io: 4.000000  Resp_cpu: 30590
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30590
      Resp_io: 4.000000  Resp_cpu: 30590
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001033
          resc: 4.001033  resc_io: 4.000000  resc_cpu: 30590
          resp: 4.001033  resp_io: 4.000000  resc_cpu: 30590
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.001820  Resp: 8.001820  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.001820 
     resc: 8.001820 resc_io: 6.000000 resc_cpu: 59267565
     resp: 8.001820 resp_io: 6.000000 resp_cpu: 59267565
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022074  Resp: 6.022074  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022074  
     resc: 6.022074 resc_io: 6.000000 resc_cpu: 653535
     resp: 6.022074 resp_io: 6.000000 resp_cpu: 653535
Join order aborted: cost > best plan cost
***********************
Permutations for Starting Table :1
Join order[7]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001526  Resp: 5.001526  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45183
      Resp_io: 5.000000  Resp_cpu: 45183
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001526
          resc: 5.001526  resc_io: 5.000000  resc_cpu: 45183
          resp: 5.001526  resp_io: 5.000000  resc_cpu: 45183
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001560  Resp: 7.001560  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001560 
     resc: 7.001560 resc_io: 5.000000 resc_cpu: 59259863
     resp: 7.001560 resp_io: 5.000000 resp_cpu: 59259863
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021814  Resp: 5.021814  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021814  
     resc: 5.021814 resc_io: 5.000000 resc_cpu: 645833
     resp: 5.021814 resp_io: 5.000000 resp_cpu: 645833
Join order aborted: cost > best plan cost
***********************
Join order[8]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=0)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 680.000000 (cpu filter eval) (= 68.000000 (per row) * 10.000000 (#rows))
                       =   30865.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001532  Resp: 5.001532  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45363
      Resp_io: 5.000000  Resp_cpu: 45363
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9001
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000794  Resp: 4.000794  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23499
      Resp_io: 4.000000  Resp_cpu: 23499
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.200000 , col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.080000 
    NL Join : Cost: 3.000750  Resp: 3.000750  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 22199
      Resp_io: 3.000000  Resp_cpu: 22199
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000750
          resc: 3.000750  resc_io: 3.000000  resc_cpu: 22199
          resp: 3.000750  resp_io: 3.000000  resc_cpu: 22199
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (2.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Best:: JoinMethod: NestedLoop
       Cost: 3.000750  Degree: 1  Resp: 3.000750  Card: 0.000000 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 3.000750  Resp: 3.000750  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.399680 (cpu filter eval) (= 50.039968 (per row) * 10.000000 (#rows))
                       =   30686.159680
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.001786  Resp: 6.001786  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 52885
      Resp_io: 6.000000  Resp_cpu: 52885
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30590
      Resp_io: 4.000000  Resp_cpu: 30590
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30590
      Resp_io: 4.000000  Resp_cpu: 30590
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001033
          resc: 4.001033  resc_io: 4.000000  resc_cpu: 30590
          resp: 4.001033  resp_io: 4.000000  resc_cpu: 30590
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.001820  Resp: 8.001820  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.001820 
     resc: 8.001820 resc_io: 6.000000 resc_cpu: 59267565
     resp: 8.001820 resp_io: 6.000000 resp_cpu: 59267565
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022074  Resp: 6.022074  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022074  
     resc: 6.022074 resc_io: 6.000000 resc_cpu: 653535
     resp: 6.022074 resp_io: 6.000000 resp_cpu: 653535
Join order aborted: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[9]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 4.001297  Resp: 4.001297  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38387
      Resp_io: 4.000000  Resp_cpu: 38387
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000542
          resc: 2.000542  resc_io: 2.000000  resc_cpu: 16043
          resp: 2.000542  resp_io: 2.000000  resc_cpu: 16043
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  2.000000 = outer (2.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 2 Computed: 2.000000
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021584  Resp: 4.021584  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021584  
     resc: 4.021584 resc_io: 4.000000 resc_cpu: 639037
     resp: 4.021584 resp_io: 4.000000 resp_cpu: 639037
Best:: JoinMethod: NestedLoop
       Cost: 2.000542  Degree: 1  Resp: 2.000542  Card: 2.000000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 2.000000  Cost: 2.000542  Resp: 2.000542  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   7.500000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2080  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   7.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.500000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.020373 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.020373
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 17.174695  Resp: 17.174695  Degree: 1
      Cost_io: 17.000000  Cost_cpu: 5172165
      Resp_io: 17.000000  Resp_cpu: 5172165
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.500000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 19.129333  Resp: 19.129333  Degree: 1
      Cost_io: 19.000000  Cost_cpu: 3829136
      Resp_io: 19.000000  Resp_cpu: 3829136
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001167  Resp: 4.001167  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 34566
      Resp_io: 4.000000  Resp_cpu: 34566
kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001167  Resp: 4.001167  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 34566
      Resp_io: 4.000000  Resp_cpu: 34566
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 7.9719e-12 
    NL Join : Cost: 4.001098  Resp: 4.001098  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 32495
      Resp_io: 4.000000  Resp_cpu: 32495
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001098
          resc: 4.001098  resc_io: 4.000000  resc_cpu: 32495
          resp: 4.001098  resp_io: 4.000000  resc_cpu: 32495
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.000000) * inner (0.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  L  Alias: L
    resc: 2.000542  card 2.000000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 6.001035  Resp: 6.001035  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001035 
     resc: 6.001035 resc_io: 4.000000 resc_cpu: 59244314
     resp: 6.001035 resp_io: 4.000000 resp_cpu: 59244314
  Outer table:  L  Alias: L
    resc: 2.000542  card 2.000000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020279  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021311  Resp: 4.021311  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021311  
     resc: 4.021311 resc_io: 4.000000 resc_cpu: 630940
     resp: 4.021311 resp_io: 4.000000 resp_cpu: 630940
Join order aborted: cost > best plan cost
***********************
Join order[10]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2080  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.486288 (cpu filter eval) (= 50.002549 (per row) * 10000.000000 (#rows))
                       =   2578061.486288
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 10.087337  Resp: 10.087337  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2585763
      Resp_io: 10.000000  Resp_cpu: 2585763
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 11.064656  Resp: 11.064656  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1914249
      Resp_io: 11.000000  Resp_cpu: 1914249
kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-07  ix_sel_with_filters: 7.9719e-08 
    NL Join : Cost: 2.000538  Resp: 2.000538  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15927
      Resp_io: 2.000000  Resp_cpu: 15927
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000538
          resc: 2.000538  resc_io: 2.000000  resc_cpu: 15927
          resp: 2.000538  resp_io: 2.000000  resc_cpu: 15927
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (2.000000) * inner (0.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Best:: JoinMethod: NestedLoop
       Cost: 2.000538  Degree: 1  Resp: 2.000538  Card: 0.000000 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000538  Resp: 2.000538  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.399680 (cpu filter eval) (= 50.039968 (per row) * 10.000000 (#rows))
                       =   30686.159680
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001574  Resp: 5.001574  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 46614
      Resp_io: 5.000000  Resp_cpu: 46614
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000821  Resp: 3.000821  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24319
      Resp_io: 3.000000  Resp_cpu: 24319
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000821  Resp: 3.000821  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24319
      Resp_io: 3.000000  Resp_cpu: 24319
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000821
          resc: 3.000821  resc_io: 3.000000  resc_cpu: 24319
          resp: 3.000821  resp_io: 3.000000  resc_cpu: 24319
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T2  Alias: T2
    resc: 2.000538  card 0.000000  bytes:   deg: 1  resp: 2.000538
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001608  Resp: 7.001608  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001608 
     resc: 7.001608 resc_io: 5.000000 resc_cpu: 59261293
     resp: 7.001608 resp_io: 5.000000 resp_cpu: 59261293
  Outer table:  T2  Alias: T2
    resc: 2.000538  card 0.000000  bytes:   deg: 1  resp: 2.000538
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021862  Resp: 5.021862  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021862  
     resc: 5.021862 resc_io: 5.000000 resc_cpu: 647263
     resp: 5.021862 resp_io: 5.000000 resp_cpu: 647263
Join order aborted: cost > best plan cost
***********************
Join order[11]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001526  Resp: 5.001526  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45183
      Resp_io: 5.000000  Resp_cpu: 45183
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001526
          resc: 5.001526  resc_io: 5.000000  resc_cpu: 45183
          resp: 5.001526  resp_io: 5.000000  resc_cpu: 45183
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001560  Resp: 7.001560  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001560 
     resc: 7.001560 resc_io: 5.000000 resc_cpu: 59259863
     resp: 7.001560 resp_io: 5.000000 resp_cpu: 59259863
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021814  Resp: 5.021814  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021814  
     resc: 5.021814 resc_io: 5.000000 resc_cpu: 645833
     resp: 5.021814 resp_io: 5.000000 resp_cpu: 645833
Join order aborted: cost > best plan cost
***********************
Join order[12]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=0)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 680.000000 (cpu filter eval) (= 68.000000 (per row) * 10.000000 (#rows))
                       =   30865.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001532  Resp: 5.001532  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45363
      Resp_io: 5.000000  Resp_cpu: 45363
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9001
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000794  Resp: 4.000794  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23499
      Resp_io: 4.000000  Resp_cpu: 23499
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.200000 , col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.080000 
    NL Join : Cost: 3.000750  Resp: 3.000750  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 22199
      Resp_io: 3.000000  Resp_cpu: 22199
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000750
          resc: 3.000750  resc_io: 3.000000  resc_cpu: 22199
          resp: 3.000750  resp_io: 3.000000  resc_cpu: 22199
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (2.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Best:: JoinMethod: NestedLoop
       Cost: 3.000750  Degree: 1  Resp: 3.000750  Card: 0.000000 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 3.000750  Resp: 3.000750  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.399680 (cpu filter eval) (= 50.039968 (per row) * 10.000000 (#rows))
                       =   30686.159680
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.001786  Resp: 6.001786  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 52885
      Resp_io: 6.000000  Resp_cpu: 52885
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30590
      Resp_io: 4.000000  Resp_cpu: 30590
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30590
      Resp_io: 4.000000  Resp_cpu: 30590
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001033
          resc: 4.001033  resc_io: 4.000000  resc_cpu: 30590
          resp: 4.001033  resp_io: 4.000000  resc_cpu: 30590
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.001820  Resp: 8.001820  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.001820 
     resc: 8.001820 resc_io: 6.000000 resc_cpu: 59267565
     resp: 8.001820 resp_io: 6.000000 resp_cpu: 59267565
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022074  Resp: 6.022074  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022074  
     resc: 6.022074 resc_io: 6.000000 resc_cpu: 653535
     resp: 6.022074 resp_io: 6.000000 resp_cpu: 653535
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between T1[T1](serial) and T2[T2](serial); jm = 14; right side access path = IndexRange
---- serial Hash-Join -> NONE
--- Distribution method for 
join between T2[T2](serial) and L[L](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

LORE: or-expansion-subheap (delete addr=0x7fa8a2848da0, in-use=116304, alloc=124880)

LORE: ******** OR-branching ********

LORE: or-expansion-subheap (create addr=0x7fa8a2865380)
****************
QUERY BLOCK TEXT
****************
SELECT /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null FROM l, t1, t2 WHERE  
(  ( t1.t1f = 0 AND t2.t2f1 BETWEEN 9 AND 10)       OR 
   ( t1.t1f = 1 AND t2.t2f1 = 14 AND t2.t2f2 = 13  )   )  AND 
    ( l.id1 = t1.id1 AND l.id2 = t2.id2 )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$1 nbfros=3 flg=0
  fro(0): flg=0 objn=73956 hint_alias="L"@"SEL$1"
  fro(1): flg=0 objn=73958 hint_alias="T1"@"SEL$1"
  fro(2): flg=0 objn=73960 hint_alias="T2"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 2467 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: T2  Alias: T2
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  25  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T2F1(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#3): T2F2(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#1): ID2(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: T2_ID2  Col#: 1
  LVLS: 1  #LB: 20  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: T2_T2F1_T2F2_ID2  Col#: 2 3 1
  LVLS: 1  #LB: 29  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 168.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: T1  Alias: T1
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T1F(NUMBER)
    AvgLen: 3 NDV: 5 Nulls: 0 Density: 0.200000 Min: 0.000000 Max: 4.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: T1_T1F_ID1  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  L  Alias:  L
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
  Column (#2): ID2(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: L_ID1  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$1 (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for L
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for L[L] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: L  Alias: L
    Card: Original: 10.000000  Rounded: 10  Computed: 10.000000  Non Adjusted: 10.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                       =   30185.760000
  Access Path: TableScan
    Cost:  3.001020  Resp: 3.001020  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 30186
      Resp_io: 3.000000  Resp_cpu: 30186
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3.001020  Degree: 1  Resp: 3.001020  Card: 10.000000  Bytes: 0.000000

Access path analysis for T1
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T1[T1] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE


 kkecdn: Single Table Predicate:"T1"."T1F"=0 OR "T1"."T1F"=1
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

 kkecdn: Single Table Predicate:"T1"."T1F"=1
  Estimated selectivity: 0.200000 , col: #2 
  Table: T1  Alias: T1
    Card: Original: 10.000000  Rounded: 1  Computed: 0.800000  Non Adjusted: 0.800000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 680.000000 (cpu filter eval) (= 68.000000 (per row) * 10.000000 (#rows))
                       =   30865.760000
  Access Path: TableScan
    Cost:  3.001043  Resp: 3.001043  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 30866
      Resp_io: 3.000000  Resp_cpu: 30866
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9001
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000304  Resp: 2.000304  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9001
      Resp_io: 2.000000  Resp_cpu: 9001
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.080000 
    Cost: 1.000260  Resp: 1.000260  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T1_T1F_ID1
         Cost: 1.000260  Degree: 1  Resp: 1.000260  Card: 0.800000  Bytes: 0.000000

Access path analysis for T2
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T2[T2] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 0.125000 , col: #2 
  Estimated selectivity: 0.125000 , col: #3 


 kkecdn: Single Table Predicate:"T2"."T2F1"=14
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F2"=13
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F1"=14
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F2"=13
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Table: T2  Alias: T2
    Card: Original: 10000.000000  Rounded: 1  Computed: 0.008929  Non Adjusted: 0.008929
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.001272 (cpu filter eval) (= 50.002500 (per row) * 10000.000000 (#rows))
                       =   2578061.001272
  Access Path: TableScan
    Cost:  9.087077  Resp: 9.087077  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2578061
      Resp_io: 9.000000  Resp_cpu: 2578061
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.064395  Resp: 10.064395  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1906547
      Resp_io: 10.000000  Resp_cpu: 1906547
kkofmx: index filter:"T2"."T2F1"=14

kkofmx: index filter:"T2"."T2F2"=13

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 8.9286e-07  ix_sel_with_filters: 7.9719e-13 
    Cost: 2.000490  Resp: 2.000490  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T2_T2F1_T2F2_ID2
         Cost: 2.000490  Degree: 1  Resp: 2.000490  Card: 0.008929  Bytes: 0.000000

(newjo-restore) [2 1 0 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is OR expanded SEL$1 (#0)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  L[L]#0  T1[T1]#1  T2[T2]#2

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.200000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.200000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.200000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 568.000000 (cpu filter eval) (= 56.800000 (per row) * 10.000000 (#rows))
                       =   30753.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 15.011407  Resp: 15.011407  Degree: 1
      Cost_io: 15.000000  Cost_cpu: 337723
      Resp_io: 15.000000  Resp_cpu: 337723
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.400000  resc_cpu: 8889
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 7.004022  Resp: 7.004022  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 119080
      Resp_io: 7.000000  Resp_cpu: 119080
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.200000 , col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.008000 
    NL Join : Cost: 3.001405  Resp: 3.001405  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 41586
      Resp_io: 3.000000  Resp_cpu: 41586
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.001405
          resc: 3.001405  resc_io: 3.000000  resc_cpu: 41586
          resp: 3.001405  resp_io: 3.000000  resc_cpu: 41586
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  2.000000 = outer (10.000000) * inner (2.000000) * sel (0.100000)
Join Card - Rounded: 2 Computed: 2.000000
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
SM Join (with index on outer)
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 2.000000  resc_cpu: 17943
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2.000606  Resp: 2.000606  Degree: 1
  Outer table:  L  Alias: L
    resc: 2.000606  card 10.000000  bytes:   deg: 1  resp: 2.000606
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 4.000866  Resp: 4.000866  [multiMatchCost=0.000000]
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021603  Resp: 4.021603  [multiMatchCost=0.000003]
HA Join
  HA cost: 4.021603  
     resc: 4.021603 resc_io: 4.000000 resc_cpu: 639587
     resp: 4.021603 resp_io: 4.000000 resp_cpu: 639587
Best:: JoinMethod: NestedLoop
       Cost: 3.001405  Degree: 1  Resp: 3.001405  Card: 2.000000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 2.000000  Cost: 3.001405  Resp: 3.001405  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   7.500000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2081  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2080  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   7.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.500000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.001251 (cpu filter eval) (= 50.002500 (per row) * 10000.000000 (#rows))
                       =   2578061.001251
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 18.175558  Resp: 18.175558  Degree: 1
      Cost_io: 18.000000  Cost_cpu: 5197708
      Resp_io: 18.000000  Resp_cpu: 5197708
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.500000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 20.130196  Resp: 20.130196  Degree: 1
      Cost_io: 20.000000  Cost_cpu: 3854679
      Resp_io: 20.000000  Resp_cpu: 3854679
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 5.002030  Resp: 5.002030  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 60109
      Resp_io: 5.000000  Resp_cpu: 60109
kkofmx: index filter:"T2"."T2F1"=14

kkofmx: index filter:"T2"."T2F2"=13

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 5.002030  Resp: 5.002030  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 60109
      Resp_io: 5.000000  Resp_cpu: 60109
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 7.9719e-17 
    NL Join : Cost: 5.001960  Resp: 5.001960  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 58029
      Resp_io: 5.000000  Resp_cpu: 58029
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001960
          resc: 5.001960  resc_io: 5.000000  resc_cpu: 58029
          resp: 5.001960  resp_io: 5.000000  resc_cpu: 58029
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.001786 = outer (2.000000) * inner (0.008929) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.001786
  Outer table:  T1  Alias: T1
    resc: 3.001405  card 2.000000  bytes:   deg: 1  resp: 3.001405
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.008929  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 7.001897  Resp: 7.001897  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001897 
     resc: 7.001897 resc_io: 5.000000 resc_cpu: 59269852
     resp: 7.001897 resp_io: 5.000000 resp_cpu: 59269852
  Outer table:  T1  Alias: T1
    resc: 3.001405  card 2.000000  bytes:   deg: 1  resp: 3.001405
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.008929  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020279  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.022173  Resp: 5.022173  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.022173  
     resc: 5.022173 resc_io: 5.000000 resc_cpu: 656479
     resp: 5.022173 resp_io: 5.000000 resp_cpu: 656479
Best:: JoinMethod: NestedLoop
       Cost: 5.001960  Degree: 1  Resp: 5.001960  Card: 0.001786 Bytes: 
***********************
Best so far:  Table#: 0  cost: 3.001020  card: 10.000000  bytes: 60.000000
              Table#: 1  cost: 3.001405  card: 2.000000  bytes: 24.000000
              Table#: 2  cost: 5.001960  card: 0.001786  bytes: 22.000000
***********************
Join order[2]:  L[L]#0  T2[T2]#2  T1[T1]#1

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2081  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2080  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.001251 (cpu filter eval) (= 50.002500 (per row) * 10000.000000 (#rows))
                       =   2578061.001251
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 72.871785  Resp: 72.871785  Degree: 1
      Cost_io: 72.000000  Cost_cpu: 25810796
      Resp_io: 72.000000  Resp_cpu: 25810796
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 83.644974  Resp: 83.644974  Degree: 1
      Cost_io: 83.000000  Cost_cpu: 19095653
      Resp_io: 83.000000  Resp_cpu: 19095653
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004148  Resp: 13.004148  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122800
      Resp_io: 13.000000  Resp_cpu: 122800
kkofmx: index filter:"T2"."T2F1"=14

kkofmx: index filter:"T2"."T2F2"=13

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004148  Resp: 13.004148  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122800
      Resp_io: 13.000000  Resp_cpu: 122800
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 7.9719e-17 
    NL Join : Cost: 13.003796  Resp: 13.003796  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 112400
      Resp_io: 13.000000  Resp_cpu: 112400
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 13.003796
          resc: 13.003796  resc_io: 13.000000  resc_cpu: 112400
          resp: 13.003796  resp_io: 13.000000  resc_cpu: 112400
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.008929 = outer (10.000000) * inner (0.008929) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.008929
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.008929  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 7.001560  Resp: 7.001560  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001560 
     resc: 7.001560 resc_io: 5.000000 resc_cpu: 59259859
     resp: 7.001560 resp_io: 5.000000 resp_cpu: 59259859
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.008929  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021829  Resp: 5.021829  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021829  
     resc: 5.021829 resc_io: 5.000000 resc_cpu: 646279
     resp: 5.021829 resp_io: 5.000000 resp_cpu: 646279
Join order aborted: cost > best plan cost
***********************
Join order[3]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 4.001297  Resp: 4.001297  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38387
      Resp_io: 4.000000  Resp_cpu: 38387
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000542
          resc: 2.000542  resc_io: 2.000000  resc_cpu: 16043
          resp: 2.000542  resp_io: 2.000000  resc_cpu: 16043
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  2.000000 = outer (2.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 2 Computed: 2.000000
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021584  Resp: 4.021584  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021584  
     resc: 4.021584 resc_io: 4.000000 resc_cpu: 639037
     resp: 4.021584 resp_io: 4.000000 resp_cpu: 639037
Best:: JoinMethod: NestedLoop
       Cost: 2.000542  Degree: 1  Resp: 2.000542  Card: 2.000000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 2.000000  Cost: 2.000542  Resp: 2.000542  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   7.500000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2081  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2080  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   7.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.500000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.001251 (cpu filter eval) (= 50.002500 (per row) * 10000.000000 (#rows))
                       =   2578061.001251
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 17.174695  Resp: 17.174695  Degree: 1
      Cost_io: 17.000000  Cost_cpu: 5172165
      Resp_io: 17.000000  Resp_cpu: 5172165
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.500000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 19.129333  Resp: 19.129333  Degree: 1
      Cost_io: 19.000000  Cost_cpu: 3829136
      Resp_io: 19.000000  Resp_cpu: 3829136
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001167  Resp: 4.001167  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 34566
      Resp_io: 4.000000  Resp_cpu: 34566
kkofmx: index filter:"T2"."T2F1"=14

kkofmx: index filter:"T2"."T2F2"=13

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001167  Resp: 4.001167  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 34566
      Resp_io: 4.000000  Resp_cpu: 34566
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 7.9719e-17 
    NL Join : Cost: 4.001097  Resp: 4.001097  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 32486
      Resp_io: 4.000000  Resp_cpu: 32486
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001097
          resc: 4.001097  resc_io: 4.000000  resc_cpu: 32486
          resp: 4.001097  resp_io: 4.000000  resc_cpu: 32486
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.001786 = outer (2.000000) * inner (0.008929) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.001786
  Outer table:  L  Alias: L
    resc: 2.000542  card 2.000000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.008929  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 6.001034  Resp: 6.001034  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001034 
     resc: 6.001034 resc_io: 4.000000 resc_cpu: 59244309
     resp: 6.001034 resp_io: 4.000000 resp_cpu: 59244309
  Outer table:  L  Alias: L
    resc: 2.000542  card 2.000000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.008929  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020279  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021310  Resp: 4.021310  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021310  
     resc: 4.021310 resc_io: 4.000000 resc_cpu: 630936
     resp: 4.021310 resp_io: 4.000000 resp_cpu: 630936
Best:: JoinMethod: NestedLoop
       Cost: 4.001097  Degree: 1  Resp: 4.001097  Card: 0.001786 Bytes: 
***********************
Best so far:  Table#: 1  cost: 1.000260  card: 0.800000  bytes: 6.000000
              Table#: 0  cost: 2.000542  card: 2.000000  bytes: 24.000000
              Table#: 2  cost: 4.001097  card: 0.001786  bytes: 22.000000
***********************
Join order[4]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2081  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2080  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.001272 (cpu filter eval) (= 50.002500 (per row) * 10000.000000 (#rows))
                       =   2578061.001272
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 10.087337  Resp: 10.087337  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2585762
      Resp_io: 10.000000  Resp_cpu: 2585762
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 11.064656  Resp: 11.064656  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1914248
      Resp_io: 11.000000  Resp_cpu: 1914248
kkofmx: index filter:"T2"."T2F1"=14

kkofmx: index filter:"T2"."T2F2"=13

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-07  ix_sel_with_filters: 7.9719e-13 
    NL Join : Cost: 2.000538  Resp: 2.000538  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15923
      Resp_io: 2.000000  Resp_cpu: 15923
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000538
          resc: 2.000538  resc_io: 2.000000  resc_cpu: 15923
          resp: 2.000538  resp_io: 2.000000  resc_cpu: 15923
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.017857 = outer (2.000000) * inner (0.008929) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.017857
Best:: JoinMethod: NestedLoop
       Cost: 2.000538  Degree: 1  Resp: 2.000538  Card: 0.017857 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.017857  Cost: 2.000538  Resp: 2.000538  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.399680 (cpu filter eval) (= 50.039968 (per row) * 10.000000 (#rows))
                       =   30686.159680
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001574  Resp: 5.001574  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 46609
      Resp_io: 5.000000  Resp_cpu: 46609
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000821  Resp: 3.000821  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24314
      Resp_io: 3.000000  Resp_cpu: 24314
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000821  Resp: 3.000821  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24314
      Resp_io: 3.000000  Resp_cpu: 24314
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000821
          resc: 3.000821  resc_io: 3.000000  resc_cpu: 24314
          resp: 3.000821  resp_io: 3.000000  resc_cpu: 24314
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.001786 = outer (0.017857) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.001786
  Outer table:  T2  Alias: T2
    resc: 2.000538  card 0.017857  bytes:   deg: 1  resp: 2.000538
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001608  Resp: 7.001608  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001608 
     resc: 7.001608 resc_io: 5.000000 resc_cpu: 59261289
     resp: 7.001608 resp_io: 5.000000 resp_cpu: 59261289
  Outer table:  T2  Alias: T2
    resc: 2.000538  card 0.017857  bytes:   deg: 1  resp: 2.000538
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021862  Resp: 5.021862  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021862  
     resc: 5.021862 resc_io: 5.000000 resc_cpu: 647259
     resp: 5.021862 resp_io: 5.000000 resp_cpu: 647259
Plan cardinality mismatch: best card= 0.00178571429   curr card= 0.00178571429
Best:: JoinMethod: NestedLoop
       Cost: 3.000821  Degree: 1  Resp: 3.000821  Card: 0.001786 Bytes: 
***********************
Best so far:  Table#: 1  cost: 1.000260  card: 0.800000  bytes: 6.000000
              Table#: 2  cost: 2.000538  card: 0.017857  bytes: 16.000000
              Table#: 0  cost: 3.000821  card: 0.001786  bytes: 22.000000
***********************
Join order[5]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001526  Resp: 5.001526  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45179
      Resp_io: 5.000000  Resp_cpu: 45179
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001526
          resc: 5.001526  resc_io: 5.000000  resc_cpu: 45179
          resp: 5.001526  resp_io: 5.000000  resc_cpu: 45179
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.008929 = outer (0.008929) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.008929
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.008929  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001560  Resp: 7.001560  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001560 
     resc: 7.001560 resc_io: 5.000000 resc_cpu: 59259859
     resp: 7.001560 resp_io: 5.000000 resp_cpu: 59259859
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.008929  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021813  Resp: 5.021813  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021813  
     resc: 5.021813 resc_io: 5.000000 resc_cpu: 645829
     resp: 5.021813 resp_io: 5.000000 resp_cpu: 645829
Join order aborted: cost > best plan cost
***********************
Join order[6]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 680.000000 (cpu filter eval) (= 68.000000 (per row) * 10.000000 (#rows))
                       =   30865.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001532  Resp: 5.001532  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45359
      Resp_io: 5.000000  Resp_cpu: 45359
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9001
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000794  Resp: 4.000794  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23494
      Resp_io: 4.000000  Resp_cpu: 23494
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.200000 , col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.080000 
    NL Join : Cost: 3.000750  Resp: 3.000750  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 22194
      Resp_io: 3.000000  Resp_cpu: 22194
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000750
          resc: 3.000750  resc_io: 3.000000  resc_cpu: 22194
          resp: 3.000750  resp_io: 3.000000  resc_cpu: 22194
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.017857 = outer (0.008929) * inner (2.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.017857
Best:: JoinMethod: NestedLoop
       Cost: 3.000750  Degree: 1  Resp: 3.000750  Card: 0.017857 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.017857  Cost: 3.000750  Resp: 3.000750  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.399680 (cpu filter eval) (= 50.039968 (per row) * 10.000000 (#rows))
                       =   30686.159680
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.001786  Resp: 6.001786  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 52880
      Resp_io: 6.000000  Resp_cpu: 52880
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30586
      Resp_io: 4.000000  Resp_cpu: 30586
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30586
      Resp_io: 4.000000  Resp_cpu: 30586
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001033
          resc: 4.001033  resc_io: 4.000000  resc_cpu: 30586
          resp: 4.001033  resp_io: 4.000000  resc_cpu: 30586
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.001786 = outer (0.017857) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.001786
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.017857  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.001820  Resp: 8.001820  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.001820 
     resc: 8.001820 resc_io: 6.000000 resc_cpu: 59267560
     resp: 8.001820 resp_io: 6.000000 resp_cpu: 59267560
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.017857  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022074  Resp: 6.022074  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022074  
     resc: 6.022074 resc_io: 6.000000 resc_cpu: 653530
     resp: 6.022074 resp_io: 6.000000 resp_cpu: 653530
Join order aborted: cost > best plan cost
***********************
Permutations for Starting Table :1
Join order[7]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001526  Resp: 5.001526  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45179
      Resp_io: 5.000000  Resp_cpu: 45179
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001526
          resc: 5.001526  resc_io: 5.000000  resc_cpu: 45179
          resp: 5.001526  resp_io: 5.000000  resc_cpu: 45179
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.008929 = outer (0.008929) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.008929
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.008929  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001560  Resp: 7.001560  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001560 
     resc: 7.001560 resc_io: 5.000000 resc_cpu: 59259859
     resp: 7.001560 resp_io: 5.000000 resp_cpu: 59259859
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.008929  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021813  Resp: 5.021813  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021813  
     resc: 5.021813 resc_io: 5.000000 resc_cpu: 645829
     resp: 5.021813 resp_io: 5.000000 resp_cpu: 645829

*** 2021-01-18T03:04:04.761890+00:00 (ORCLPDB1(3))
Join order aborted: cost > best plan cost
***********************
Join order[8]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 680.000000 (cpu filter eval) (= 68.000000 (per row) * 10.000000 (#rows))
                       =   30865.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001532  Resp: 5.001532  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45359
      Resp_io: 5.000000  Resp_cpu: 45359
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9001
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000794  Resp: 4.000794  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23494
      Resp_io: 4.000000  Resp_cpu: 23494
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.200000 , col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.080000 
    NL Join : Cost: 3.000750  Resp: 3.000750  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 22194
      Resp_io: 3.000000  Resp_cpu: 22194
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000750
          resc: 3.000750  resc_io: 3.000000  resc_cpu: 22194
          resp: 3.000750  resp_io: 3.000000  resc_cpu: 22194
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.017857 = outer (0.008929) * inner (2.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.017857
Best:: JoinMethod: NestedLoop
       Cost: 3.000750  Degree: 1  Resp: 3.000750  Card: 0.017857 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.017857  Cost: 3.000750  Resp: 3.000750  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.399680 (cpu filter eval) (= 50.039968 (per row) * 10.000000 (#rows))
                       =   30686.159680
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.001786  Resp: 6.001786  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 52880
      Resp_io: 6.000000  Resp_cpu: 52880
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30586
      Resp_io: 4.000000  Resp_cpu: 30586
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30586
      Resp_io: 4.000000  Resp_cpu: 30586
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001033
          resc: 4.001033  resc_io: 4.000000  resc_cpu: 30586
          resp: 4.001033  resp_io: 4.000000  resc_cpu: 30586
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.001786 = outer (0.017857) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.001786
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.017857  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.001820  Resp: 8.001820  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.001820 
     resc: 8.001820 resc_io: 6.000000 resc_cpu: 59267560
     resp: 8.001820 resp_io: 6.000000 resp_cpu: 59267560
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.017857  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022074  Resp: 6.022074  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022074  
     resc: 6.022074 resc_io: 6.000000 resc_cpu: 653530
     resp: 6.022074 resp_io: 6.000000 resp_cpu: 653530
Join order aborted: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[9]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 4.001297  Resp: 4.001297  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38387
      Resp_io: 4.000000  Resp_cpu: 38387
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000542
          resc: 2.000542  resc_io: 2.000000  resc_cpu: 16043
          resp: 2.000542  resp_io: 2.000000  resc_cpu: 16043
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  2.000000 = outer (2.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 2 Computed: 2.000000
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021584  Resp: 4.021584  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021584  
     resc: 4.021584 resc_io: 4.000000 resc_cpu: 639037
     resp: 4.021584 resp_io: 4.000000 resp_cpu: 639037
Best:: JoinMethod: NestedLoop
       Cost: 2.000542  Degree: 1  Resp: 2.000542  Card: 2.000000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 2.000000  Cost: 2.000542  Resp: 2.000542  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   7.500000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2081  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2080  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   7.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.500000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.001251 (cpu filter eval) (= 50.002500 (per row) * 10000.000000 (#rows))
                       =   2578061.001251
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 17.174695  Resp: 17.174695  Degree: 1
      Cost_io: 17.000000  Cost_cpu: 5172165
      Resp_io: 17.000000  Resp_cpu: 5172165
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.500000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 19.129333  Resp: 19.129333  Degree: 1
      Cost_io: 19.000000  Cost_cpu: 3829136
      Resp_io: 19.000000  Resp_cpu: 3829136
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001167  Resp: 4.001167  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 34566
      Resp_io: 4.000000  Resp_cpu: 34566
kkofmx: index filter:"T2"."T2F1"=14

kkofmx: index filter:"T2"."T2F2"=13

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001167  Resp: 4.001167  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 34566
      Resp_io: 4.000000  Resp_cpu: 34566
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 7.9719e-17 
    NL Join : Cost: 4.001097  Resp: 4.001097  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 32486
      Resp_io: 4.000000  Resp_cpu: 32486
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001097
          resc: 4.001097  resc_io: 4.000000  resc_cpu: 32486
          resp: 4.001097  resp_io: 4.000000  resc_cpu: 32486
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.001786 = outer (2.000000) * inner (0.008929) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.001786
  Outer table:  L  Alias: L
    resc: 2.000542  card 2.000000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.008929  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 6.001034  Resp: 6.001034  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001034 
     resc: 6.001034 resc_io: 4.000000 resc_cpu: 59244309
     resp: 6.001034 resp_io: 4.000000 resp_cpu: 59244309
  Outer table:  L  Alias: L
    resc: 2.000542  card 2.000000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.008929  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020279  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021310  Resp: 4.021310  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021310  
     resc: 4.021310 resc_io: 4.000000 resc_cpu: 630936
     resp: 4.021310 resp_io: 4.000000 resp_cpu: 630936
Plan cardinality mismatch: best card= 0.00178571429   curr card= 0.00178571429
Join order aborted: cost > best plan cost
***********************
Join order[10]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2081  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2080  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.001272 (cpu filter eval) (= 50.002500 (per row) * 10000.000000 (#rows))
                       =   2578061.001272
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 10.087337  Resp: 10.087337  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2585762
      Resp_io: 10.000000  Resp_cpu: 2585762
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 11.064656  Resp: 11.064656  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1914248
      Resp_io: 11.000000  Resp_cpu: 1914248
kkofmx: index filter:"T2"."T2F1"=14

kkofmx: index filter:"T2"."T2F2"=13

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-07  ix_sel_with_filters: 7.9719e-13 
    NL Join : Cost: 2.000538  Resp: 2.000538  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15923
      Resp_io: 2.000000  Resp_cpu: 15923
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000538
          resc: 2.000538  resc_io: 2.000000  resc_cpu: 15923
          resp: 2.000538  resp_io: 2.000000  resc_cpu: 15923
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.017857 = outer (2.000000) * inner (0.008929) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.017857
Best:: JoinMethod: NestedLoop
       Cost: 2.000538  Degree: 1  Resp: 2.000538  Card: 0.017857 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.017857  Cost: 2.000538  Resp: 2.000538  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.399680 (cpu filter eval) (= 50.039968 (per row) * 10.000000 (#rows))
                       =   30686.159680
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001574  Resp: 5.001574  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 46609
      Resp_io: 5.000000  Resp_cpu: 46609
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000821  Resp: 3.000821  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24314
      Resp_io: 3.000000  Resp_cpu: 24314
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000821  Resp: 3.000821  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24314
      Resp_io: 3.000000  Resp_cpu: 24314
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000821
          resc: 3.000821  resc_io: 3.000000  resc_cpu: 24314
          resp: 3.000821  resp_io: 3.000000  resc_cpu: 24314
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.001786 = outer (0.017857) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.001786
  Outer table:  T2  Alias: T2
    resc: 2.000538  card 0.017857  bytes:   deg: 1  resp: 2.000538
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001608  Resp: 7.001608  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001608 
     resc: 7.001608 resc_io: 5.000000 resc_cpu: 59261289
     resp: 7.001608 resp_io: 5.000000 resp_cpu: 59261289
  Outer table:  T2  Alias: T2
    resc: 2.000538  card 0.017857  bytes:   deg: 1  resp: 2.000538
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021862  Resp: 5.021862  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021862  
     resc: 5.021862 resc_io: 5.000000 resc_cpu: 647259
     resp: 5.021862 resp_io: 5.000000 resp_cpu: 647259
Join order aborted: cost > best plan cost
***********************
Join order[11]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001526  Resp: 5.001526  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45179
      Resp_io: 5.000000  Resp_cpu: 45179
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001526
          resc: 5.001526  resc_io: 5.000000  resc_cpu: 45179
          resp: 5.001526  resp_io: 5.000000  resc_cpu: 45179
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.008929 = outer (0.008929) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.008929
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.008929  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001560  Resp: 7.001560  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001560 
     resc: 7.001560 resc_io: 5.000000 resc_cpu: 59259859
     resp: 7.001560 resp_io: 5.000000 resp_cpu: 59259859
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.008929  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021813  Resp: 5.021813  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021813  
     resc: 5.021813 resc_io: 5.000000 resc_cpu: 645829
     resp: 5.021813 resp_io: 5.000000 resp_cpu: 645829
Join order aborted: cost > best plan cost
***********************
Join order[12]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 680.000000 (cpu filter eval) (= 68.000000 (per row) * 10.000000 (#rows))
                       =   30865.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001532  Resp: 5.001532  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45359
      Resp_io: 5.000000  Resp_cpu: 45359
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9001
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000794  Resp: 4.000794  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23494
      Resp_io: 4.000000  Resp_cpu: 23494
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.200000 , col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.080000 
    NL Join : Cost: 3.000750  Resp: 3.000750  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 22194
      Resp_io: 3.000000  Resp_cpu: 22194
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000750
          resc: 3.000750  resc_io: 3.000000  resc_cpu: 22194
          resp: 3.000750  resp_io: 3.000000  resc_cpu: 22194
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.017857 = outer (0.008929) * inner (2.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.017857
Best:: JoinMethod: NestedLoop
       Cost: 3.000750  Degree: 1  Resp: 3.000750  Card: 0.017857 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.017857  Cost: 3.000750  Resp: 3.000750  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.399680 (cpu filter eval) (= 50.039968 (per row) * 10.000000 (#rows))
                       =   30686.159680
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.001786  Resp: 6.001786  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 52880
      Resp_io: 6.000000  Resp_cpu: 52880
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30586
      Resp_io: 4.000000  Resp_cpu: 30586
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30586
      Resp_io: 4.000000  Resp_cpu: 30586
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001033
          resc: 4.001033  resc_io: 4.000000  resc_cpu: 30586
          resp: 4.001033  resp_io: 4.000000  resc_cpu: 30586
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.001786 = outer (0.017857) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.001786
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.017857  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.001820  Resp: 8.001820  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.001820 
     resc: 8.001820 resc_io: 6.000000 resc_cpu: 59267560
     resp: 8.001820 resp_io: 6.000000 resp_cpu: 59267560
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.017857  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022074  Resp: 6.022074  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022074  
     resc: 6.022074 resc_io: 6.000000 resc_cpu: 653530
     resp: 6.022074 resp_io: 6.000000 resp_cpu: 653530
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between T1[T1](serial) and T2[T2](serial); jm = 14; right side access path = IndexRange
---- serial Hash-Join -> NONE
--- Distribution method for 
join between T2[T2](serial) and L[L](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

LORE: or-expansion-subheap (delete addr=0x7fa8a2865380, in-use=116184, alloc=121464)
LORE: or-expansion is worse cost:6.001643
****************
QUERY BLOCK TEXT
****************
SELECT /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null FROM l, t1, t2 WHERE  
(  ( t1.t1f = 0 AND t2.t2f1 BETWEEN 9 AND 10)       OR 
   ( t1.t1f = 1 AND t2.t2f1 = 14 AND t2.t2f2 = 13  )   )  AND 
    ( l.id1 = t1.id1 AND l.id2 = t2.id2 )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$1 nbfros=3 flg=0
  fro(0): flg=4 objn=73956 hint_alias="L"@"SEL$1"
  fro(1): flg=4 objn=73958 hint_alias="T1"@"SEL$1"
  fro(2): flg=4 objn=73960 hint_alias="T2"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 2467 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: T2  Alias: T2
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  25  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T2F1(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#3): T2F2(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#1): ID2(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: T2_ID2  Col#: 1
  LVLS: 1  #LB: 20  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: T2_T2F1_T2F2_ID2  Col#: 2 3 1
  LVLS: 1  #LB: 29  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 168.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: T1  Alias: T1
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T1F(NUMBER)
    AvgLen: 3 NDV: 5 Nulls: 0 Density: 0.200000 Min: 0.000000 Max: 4.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: T1_T1F_ID1  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  L  Alias:  L
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
  Column (#2): ID2(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: L_ID1  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$1 (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for L
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for L[L] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: L  Alias: L
    Card: Original: 10.000000  Rounded: 10  Computed: 10.000000  Non Adjusted: 10.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                       =   30185.760000
  Access Path: TableScan
    Cost:  3.001020  Resp: 3.001020  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 30186
      Resp_io: 3.000000  Resp_cpu: 30186
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3.001020  Degree: 1  Resp: 3.001020  Card: 10.000000  Bytes: 0.000000

Access path analysis for T1
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T1[T1] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE

 kkecdn: Single Table Predicate:"T1"."T1F"=0 OR "T1"."T1F"=1
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Table: T1  Alias: T1
    Card: Original: 10.000000  Rounded: 4  Computed: 4.000000  Non Adjusted: 4.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 900.000000 (cpu filter eval) (= 90.000000 (per row) * 10.000000 (#rows))
                       =   31085.760000
  Access Path: TableScan
    Cost:  3.001050  Resp: 3.001050  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 31086
      Resp_io: 3.000000  Resp_cpu: 31086
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9221
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000311  Resp: 2.000311  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9221
      Resp_io: 2.000000  Resp_cpu: 9221
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 15043
    ix_sel: 0.400000  ix_sel_with_filters: 0.400000 
    Cost: 1.000508  Resp: 1.000508  Degree: 1
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    Cost: 1.000254  Resp: 1.000254  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    Cost: 1.000254  Resp: 1.000254  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Not used T1_T1F_ID1
      Cost = 2.000267, sel = 0.200000
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T1_T1F_ID1
         Cost: 1.000508  Degree: 1  Resp: 1.000508  Card: 4.000000  Bytes: 0.000000

Access path analysis for T2
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T2[T2] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE


 kkecdn: Single Table Predicate: ?? 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F1">=9
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F1"<=10
  Estimated selectivity: 1.000000 , col: #2 
  Table: T2  Alias: T2
    Card: Original: 10000.000000  Rounded: 1250  Computed: 1249.998884  Non Adjusted: 1249.998884
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2065  ("T2"."T2F1">=9)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 589287.906569 (cpu filter eval) (= 58.928791 (per row) * 10000.000000 (#rows))
                       =   2667323.906569
  Access Path: TableScan
    Cost:  9.090091  Resp: 9.090091  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2667324
      Resp_io: 9.000000  Resp_cpu: 2667324
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1995810
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.067410  Resp: 10.067410  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1995810
      Resp_io: 10.000000  Resp_cpu: 1995810
kkofmx: index filter: ?? 

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 5.000000  resc_cpu: 285607
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    Cost: 5.011758  Resp: 5.011758  Degree: 1
  ****** trying bitmap/domain indexes ******

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 5.000000  resc_cpu: 285607
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    Cost: 5.009647  Resp: 5.009647  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 5.000000  resc_cpu: 285607
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    Cost: 5.009647  Resp: 5.009647  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_T2F1_T2F2_ID2
      Cost = 6.034921, sel = 0.125000
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T2_T2F1_T2F2_ID2
         Cost: 5.011758  Degree: 1  Resp: 5.011758  Card: 1249.998884  Bytes: 0.000000

(newjo-restore) [2 1 0 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is OR expanded SEL$1 (#0)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  L[L]#0  T1[T1]#1  T2[T2]#2

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.200000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.200000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.200000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 590.000000 (cpu filter eval) (= 59.000000 (per row) * 10.000000 (#rows))
                       =   30775.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 15.011414  Resp: 15.011414  Degree: 1
      Cost_io: 15.000000  Cost_cpu: 337943
      Resp_io: 15.000000  Resp_cpu: 337943
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.400000  resc_cpu: 8911
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 7.004029  Resp: 7.004029  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 119300
      Resp_io: 7.000000  Resp_cpu: 119300
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:   Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
 Sel: 0.200000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.200000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 14643
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 13.005965  Resp: 13.005965  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 176615
      Resp_io: 13.000000  Resp_cpu: 176615
  ****** trying bitmap/domain indexes ******

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.001374  Resp: 3.001374  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 40686
      Resp_io: 3.000000  Resp_cpu: 40686

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.001374  Resp: 3.001374  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 40686
      Resp_io: 3.000000  Resp_cpu: 40686
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 13.003560  Resp: 13.003560  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 105400
      Resp_io: 13.000000  Resp_cpu: 105400
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Used T1_T1F_ID1
      Cost = 3.001375, sel = 0.020000
    Used T1_T1F_ID1
      Cost = 3.001375, sel = 0.020000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 7.004029
          resc: 7.004029  resc_io: 7.000000  resc_cpu: 119300
          resp: 7.004029  resp_io: 7.000000  resc_cpu: 119300
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  4.000000 = outer (10.000000) * inner (4.000000) * sel (0.100000)
Join Card - Rounded: 4 Computed: 4.000000
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 6.001590  Resp: 6.001590  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001590 
     resc: 6.001590 resc_io: 4.000000 resc_cpu: 59260769
     resp: 6.001590 resp_io: 4.000000 resp_cpu: 59260769
SM Join (with index on outer)
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 2.000000  resc_cpu: 17943
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2.000606  Resp: 2.000606  Degree: 1
  Outer table:  L  Alias: L
    resc: 2.000606  card 10.000000  bytes:   deg: 1  resp: 2.000606
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 4.001126  Resp: 4.001126  [multiMatchCost=0.000000]
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020330  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021857  Resp: 4.021857  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021857  
     resc: 4.021857 resc_io: 4.000000 resc_cpu: 647129
     resp: 4.021857 resp_io: 4.000000 resp_cpu: 647129
Best:: JoinMethod: SortMerge
       Cost: 4.001126  Degree: 1  Resp: 4.001126  Card: 4.000000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 4.000000  Cost: 4.001126  Resp: 4.001126  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   7.250000
  Scan CPU Cost (Disk) =   2078036.000000
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2049  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 2048  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 2048  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   7.250000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.250000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500487.066731 (cpu filter eval) (= 50.048707 (per row) * 10000.000000 (#rows))
                       =   2578523.066731
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 33.349495  Resp: 33.349495  Degree: 1
      Cost_io: 32.000000  Cost_cpu: 39954280
      Resp_io: 32.000000  Resp_cpu: 39954280
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.250000  resc_cpu: 1907009
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 37.258771  Resp: 37.258771  Degree: 1
      Cost_io: 36.000000  Cost_cpu: 37268223
      Resp_io: 36.000000  Resp_cpu: 37268223
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9272
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 8.002379  Resp: 8.002379  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 29677277
      Resp_io: 7.000000  Resp_cpu: 29677277
kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

kkofmx: index filter:"L"."ID2"="T2"."ID2"

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9272
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 8.002379  Resp: 8.002379  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 29677277
      Resp_io: 7.000000  Resp_cpu: 29677277
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 3.1250e-07 
    NL Join : Cost: 20.047326  Resp: 20.047326  Degree: 1
      Cost_io: 19.000000  Cost_cpu: 31008013
      Resp_io: 19.000000  Resp_cpu: 31008013
  ****** trying bitmap/domain indexes ******
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 0.000000  resc_cpu: 1900
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001383  Resp: 4.001383  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 29647788
      Resp_io: 3.000000  Resp_cpu: 29647788

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 20.038866  Resp: 20.038866  Degree: 1
      Cost_io: 19.000000  Cost_cpu: 30757531
      Resp_io: 19.000000  Resp_cpu: 30757531
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_ID2
      Cost = 4.001419, sel = 8.0000e-04
    Not used T2_T2F1_T2F2_ID2
      Cost = 21.064154, sel = 0.125000
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 8.002379
          resc: 8.002379  resc_io: 7.000000  resc_cpu: 29677277
          resp: 8.002379  resp_io: 7.000000  resc_cpu: 29677277
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.100001 = outer (4.000000) * inner (1249.998884) * sel (2.0000e-05)
Join cardinality for HJ/SMJ (no post filters):  3.999996, outer: 4.000000, inner: 1249.998884, sel: 2.0000e-05
Join Card - Rounded: 1 Computed: 0.100001
  Outer table:  T1  Alias: T1
    resc: 4.001126  card 4.000000  bytes:   deg: 1  resp: 4.001126
  Inner table:  T2  Alias: T2
    resc: 5.011758  card: 1249.998884  bytes:   deg: 1  resp: 5.011758
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  SM join: Resc: 11.032466  Resp: 11.032466  [multiMatchCost=0.000000]
SM Join
  SM cost: 11.032466 
     resc: 11.032466 resc_io: 8.000000 resc_cpu: 89781727
     resp: 11.032466 resp_io: 8.000000 resp_cpu: 89781727
  Outer table:  T1  Alias: T1
    resc: 4.001126  card 4.000000  bytes:   deg: 1  resp: 4.001126
  Inner table:  T2  Alias: T2
    resc: 5.011758  card: 1249.998884  bytes:   deg: 1  resp: 5.011758
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024508  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 9.037392  Resp: 9.037392  [multiMatchCost=0.000000]
HA Join
  HA cost: 9.037392  
     resc: 9.037392 resc_io: 8.000000 resc_cpu: 30713898
     resp: 9.037392 resp_io: 8.000000 resp_cpu: 30713898
Best:: JoinMethod: NestedLoop
       Cost: 8.002379  Degree: 1  Resp: 8.002379  Card: 0.100001 Bytes: 
***********************
Best so far:  Table#: 0  cost: 2.000606  card: 10.000000  bytes: 60.000000
              Table#: 1  cost: 4.001126  card: 4.000000  bytes: 48.000000
              Table#: 2  cost: 8.002379  card: 0.100001  bytes: 22.000000
***********************
Join order[2]:  L[L]#0  T2[T2]#2  T1[T1]#1

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2065  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500471.430325 (cpu filter eval) (= 50.047143 (per row) * 10000.000000 (#rows))
                       =   2578507.430325
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 72.871936  Resp: 72.871936  Degree: 1
      Cost_io: 72.000000  Cost_cpu: 25815260
      Resp_io: 72.000000  Resp_cpu: 25815260
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1906993
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 83.645125  Resp: 83.645125  Degree: 1
      Cost_io: 83.000000  Cost_cpu: 19100118
      Resp_io: 83.000000  Resp_cpu: 19100118
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9270
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004151  Resp: 13.004151  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122889
      Resp_io: 13.000000  Resp_cpu: 122889
kkofmx: index filter: ?? 

kkofmx: index filter:"L"."ID2"="T2"."ID2"

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9270
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004151  Resp: 13.004151  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122889
      Resp_io: 13.000000  Resp_cpu: 122889
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 1.2500e-05 
    NL Join : Cost: 43.116495  Resp: 43.116495  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 3449043
      Resp_io: 43.000000  Resp_cpu: 3449043
  ****** trying bitmap/domain indexes ******
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 0.000000  resc_cpu: 1900
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.001661  Resp: 3.001661  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 49186
      Resp_io: 3.000000  Resp_cpu: 49186

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 43.095368  Resp: 43.095368  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 2823543
      Resp_io: 43.000000  Resp_cpu: 2823543
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 43.095368  Resp: 43.095368  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 2823543
      Resp_io: 43.000000  Resp_cpu: 2823543
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_ID2
      Cost = 3.001698, sel = 8.0000e-04
    Not used T2_T2F1_T2F2_ID2
      Cost = 44.120680, sel = 0.125000
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 13.004151
          resc: 13.004151  resc_io: 13.000000  resc_cpu: 122889
          resp: 13.004151  resp_io: 13.000000  resc_cpu: 122889
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  9.999991 = outer (10.000000) * inner (1249.998884) * sel (8.0000e-04)
Join Card - Rounded: 10 Computed: 9.999991
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 5.011758  card: 1249.998884  bytes:   deg: 1  resp: 5.011758
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  SM join: Resc: 10.032397  Resp: 10.032397  [multiMatchCost=0.000000]
SM Join
  SM cost: 10.032397 
     resc: 10.032397 resc_io: 8.000000 resc_cpu: 60172862
     resp: 10.032397 resp_io: 8.000000 resp_cpu: 60172862
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 5.011758  card: 1249.998884  bytes:   deg: 1  resp: 5.011758
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024538  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 8.037316  Resp: 8.037316  [multiMatchCost=0.000000]
HA Join
  HA cost: 8.037316  
     resc: 8.037316 resc_io: 8.000000 resc_cpu: 1104796
     resp: 8.037316 resp_io: 8.000000 resp_cpu: 1104796
Join order aborted: cost > best plan cost
***********************
Join order[3]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 4.000000  Cost: 1.000508  Resp: 1.000508  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 7.004654  Resp: 7.004654  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 137786
      Resp_io: 7.000000  Resp_cpu: 137786
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.001635  Resp: 5.001635  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48409
      Resp_io: 5.000000  Resp_cpu: 48409
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.001635  Resp: 5.001635  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48409
      Resp_io: 5.000000  Resp_cpu: 48409
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001635
          resc: 5.001635  resc_io: 5.000000  resc_cpu: 48409
          resp: 5.001635  resp_io: 5.000000  resc_cpu: 48409
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  4.000000 = outer (4.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 4 Computed: 4.000000
  Outer table:  T1  Alias: T1
    resc: 1.000508  card 4.000000  bytes:   deg: 1  resp: 1.000508
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001590  Resp: 6.001590  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001590 
     resc: 6.001590 resc_io: 4.000000 resc_cpu: 59260769
     resp: 6.001590 resp_io: 4.000000 resp_cpu: 59260769
  Outer table:  T1  Alias: T1
    resc: 1.000508  card 4.000000  bytes:   deg: 1  resp: 1.000508
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021847  Resp: 4.021847  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021847  
     resc: 4.021847 resc_io: 4.000000 resc_cpu: 646829
     resp: 4.021847 resp_io: 4.000000 resp_cpu: 646829
Best:: JoinMethod: Hash
       Cost: 4.021847  Degree: 1  Resp: 4.021847  Card: 4.000000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 4.000000  Cost: 4.021847  Resp: 4.021847  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   7.250000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2049  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   7.250000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.250000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500487.066731 (cpu filter eval) (= 50.048707 (per row) * 10000.000000 (#rows))
                       =   2578523.066731
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 33.370216  Resp: 33.370216  Degree: 1
      Cost_io: 33.000000  Cost_cpu: 10960921
      Resp_io: 33.000000  Resp_cpu: 10960921
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.250000  resc_cpu: 1907009
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 37.279492  Resp: 37.279492  Degree: 1
      Cost_io: 37.000000  Cost_cpu: 8274864
      Resp_io: 37.000000  Resp_cpu: 8274864
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9272
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 8.023100  Resp: 8.023100  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 683918
      Resp_io: 8.000000  Resp_cpu: 683918
kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

kkofmx: index filter:"L"."ID2"="T2"."ID2"

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9272
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 8.023100  Resp: 8.023100  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 683918
      Resp_io: 8.000000  Resp_cpu: 683918
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 3.1250e-07 
    NL Join : Cost: 20.068047  Resp: 20.068047  Degree: 1
      Cost_io: 20.000000  Cost_cpu: 2014654
      Resp_io: 20.000000  Resp_cpu: 2014654
  ****** trying bitmap/domain indexes ******
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 0.000000  resc_cpu: 1900
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.022104  Resp: 4.022104  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 654429
      Resp_io: 4.000000  Resp_cpu: 654429

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 20.059587  Resp: 20.059587  Degree: 1
      Cost_io: 20.000000  Cost_cpu: 1764172
      Resp_io: 20.000000  Resp_cpu: 1764172
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_ID2
      Cost = 4.022140, sel = 8.0000e-04
    Not used T2_T2F1_T2F2_ID2
      Cost = 21.084876, sel = 0.125000
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 8.023100
          resc: 8.023100  resc_io: 8.000000  resc_cpu: 683918
          resp: 8.023100  resp_io: 8.000000  resc_cpu: 683918
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.100001 = outer (4.000000) * inner (1249.998884) * sel (2.0000e-05)
Join cardinality for HJ/SMJ (no post filters):  3.999996, outer: 4.000000, inner: 1249.998884, sel: 2.0000e-05
Join Card - Rounded: 1 Computed: 0.100001
  Outer table:  L  Alias: L
    resc: 4.021847  card 4.000000  bytes:   deg: 1  resp: 4.021847
  Inner table:  T2  Alias: T2
    resc: 5.011758  card: 1249.998884  bytes:   deg: 1  resp: 5.011758
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  SM join: Resc: 11.053187  Resp: 11.053187  [multiMatchCost=0.000000]
SM Join
  SM cost: 11.053187 
     resc: 11.053187 resc_io: 9.000000 resc_cpu: 60788368
     resp: 11.053187 resp_io: 9.000000 resp_cpu: 60788368
  Outer table:  L  Alias: L
    resc: 4.021847  card 4.000000  bytes:   deg: 1  resp: 4.021847
  Inner table:  T2  Alias: T2
    resc: 5.011758  card: 1249.998884  bytes:   deg: 1  resp: 5.011758
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024508  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 9.058113  Resp: 9.058113  [multiMatchCost=0.000000]
HA Join
  HA cost: 9.058113  
     resc: 9.058113 resc_io: 9.000000 resc_cpu: 1720539
     resp: 9.058113 resp_io: 9.000000 resp_cpu: 1720539
Join order aborted: cost > best plan cost
***********************
Join order[4]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 4.000000  Cost: 1.000508  Resp: 1.000508  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   7.250000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2065  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   7.250000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.250000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 608833.413784 (cpu filter eval) (= 60.883341 (per row) * 10000.000000 (#rows))
                       =   2686869.413784
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 30.363515  Resp: 30.363515  Degree: 1
      Cost_io: 30.000000  Cost_cpu: 10762521
      Resp_io: 30.000000  Resp_cpu: 10762521
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.250000  resc_cpu: 2015355
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 34.272790  Resp: 34.272790  Degree: 1
      Cost_io: 34.000000  Cost_cpu: 8076464
      Resp_io: 34.000000  Resp_cpu: 8076464
kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.003125 
    NL Join : Cost: 17.058622  Resp: 17.058622  Degree: 1
      Cost_io: 17.000000  Cost_cpu: 1735603
      Resp_io: 17.000000  Resp_cpu: 1735603
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 17.058622
          resc: 17.058622  resc_io: 17.000000  resc_cpu: 1735603
          resp: 17.058622  resp_io: 17.000000  resc_cpu: 1735603
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  125.000759 = outer (4.000000) * inner (1249.998884) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  4999.995536, outer: 4.000000, inner: 1249.998884, sel: 0.025000
Join Card - Rounded: 125 Computed: 125.000759
Join order aborted: cost > best plan cost
***********************
Join order[5]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 1249.998884  Cost: 5.011758  Resp: 5.011758  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   1.084800
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   1.084800 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.084800
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 1362.307310  Resp: 1362.307310  Degree: 1
      Cost_io: 1361.000000  Cost_cpu: 38705310
      Resp_io: 1361.000000  Resp_cpu: 38705310
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 1362.307310
          resc: 1362.307310  resc_io: 1361.000000  resc_cpu: 38705310
          resp: 1362.307310  resp_io: 1361.000000  resc_cpu: 38705310
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  9.999991 = outer (1249.998884) * inner (10.000000) * sel (8.0000e-04)
Join Card - Rounded: 10 Computed: 9.999991
  Outer table:  T2  Alias: T2
    resc: 5.011758  card 1249.998884  bytes:   deg: 1  resp: 5.011758
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 10.032397  Resp: 10.032397  [multiMatchCost=0.000000]
SM Join
  SM cost: 10.032397 
     resc: 10.032397 resc_io: 8.000000 resc_cpu: 60172862
     resp: 10.032397 resp_io: 8.000000 resp_cpu: 60172862
  Outer table:  T2  Alias: T2
    resc: 5.011758  card 1249.998884  bytes:   deg: 1  resp: 5.011758
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.026632  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 4  probefrag: 1  ppasses: 1
  Hash join: Resc: 8.039410  Resp: 8.039410  [multiMatchCost=0.000000]
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 5.011758  card: 1249.998884  bytes:   deg: 1  resp: 5.011758
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024538  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 8.037316  Resp: 8.037316  [multiMatchCost=0.000000]
HA Join
  HA cost: 8.037316 swapped 
     resc: 8.037316 resc_io: 8.000000 resc_cpu: 1104796
     resp: 8.037316 resp_io: 8.000000 resp_cpu: 1104796
Join order aborted: cost > best plan cost
***********************
Join order[6]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 1249.998884  Cost: 5.011758  Resp: 5.011758  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.084800
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2080  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   1.084800 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.084800
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 1216.433603 (cpu filter eval) (= 121.643360 (per row) * 10.000000 (#rows))
                       =   31402.193603
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 1362.337557  Resp: 1362.337557  Degree: 1
      Cost_io: 1361.000000  Cost_cpu: 39600852
      Resp_io: 1361.000000  Resp_cpu: 39600852
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.272000  resc_cpu: 9538
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 345.414447  Resp: 345.414447  Degree: 1
      Cost_io: 345.000000  Cost_cpu: 12270452
      Resp_io: 345.000000  Resp_cpu: 12270452
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 15043
    ix_sel: 0.400000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 1255.667031  Resp: 1255.667031  Degree: 1
      Cost_io: 1255.000000  Cost_cpu: 19748677
      Resp_io: 1255.000000  Resp_cpu: 19748677
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 1255.329313  Resp: 1255.329313  Degree: 1
      Cost_io: 1255.000000  Cost_cpu: 9749910
      Resp_io: 1255.000000  Resp_cpu: 9749910
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 1255.329313  Resp: 1255.329313  Degree: 1
      Cost_io: 1255.000000  Cost_cpu: 9749910
      Resp_io: 1255.000000  Resp_cpu: 9749910
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Not used T1_T1F_ID1
      Cost = 4333.601935, sel = 0.200000
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 345.414447
          resc: 345.414447  resc_io: 345.000000  resc_cpu: 12270452
          resp: 345.414447  resp_io: 345.000000  resc_cpu: 12270452
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  125.000759 = outer (1249.998884) * inner (4.000000) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  4999.995536, outer: 1249.998884, inner: 4.000000, sel: 0.025000
Join Card - Rounded: 125 Computed: 125.000759
Join order aborted: cost > best plan cost
***********************
Permutations for Starting Table :1
Join order[7]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 1249.998884  Cost: 5.011758  Resp: 5.011758  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   1.084800
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   1.084800 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.084800
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 1362.307310  Resp: 1362.307310  Degree: 1
      Cost_io: 1361.000000  Cost_cpu: 38705310
      Resp_io: 1361.000000  Resp_cpu: 38705310
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 1362.307310
          resc: 1362.307310  resc_io: 1361.000000  resc_cpu: 38705310
          resp: 1362.307310  resp_io: 1361.000000  resc_cpu: 38705310
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  9.999991 = outer (1249.998884) * inner (10.000000) * sel (8.0000e-04)
Join Card - Rounded: 10 Computed: 9.999991
  Outer table:  T2  Alias: T2
    resc: 5.011758  card 1249.998884  bytes:   deg: 1  resp: 5.011758
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 10.032397  Resp: 10.032397  [multiMatchCost=0.000000]
SM Join
  SM cost: 10.032397 
     resc: 10.032397 resc_io: 8.000000 resc_cpu: 60172862
     resp: 10.032397 resp_io: 8.000000 resp_cpu: 60172862
  Outer table:  T2  Alias: T2
    resc: 5.011758  card 1249.998884  bytes:   deg: 1  resp: 5.011758
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.026632  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 4  probefrag: 1  ppasses: 1
  Hash join: Resc: 8.039410  Resp: 8.039410  [multiMatchCost=0.000000]
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 5.011758  card: 1249.998884  bytes:   deg: 1  resp: 5.011758
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024538  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 8.037316  Resp: 8.037316  [multiMatchCost=0.000000]
HA Join
  HA cost: 8.037316 swapped 
     resc: 8.037316 resc_io: 8.000000 resc_cpu: 1104796
     resp: 8.037316 resp_io: 8.000000 resp_cpu: 1104796
Join order aborted: cost > best plan cost
***********************
Join order[8]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 1249.998884  Cost: 5.011758  Resp: 5.011758  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.084800
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   1.084800 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.084800
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 1216.433603 (cpu filter eval) (= 121.643360 (per row) * 10.000000 (#rows))
                       =   31402.193603
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 1362.337557  Resp: 1362.337557  Degree: 1
      Cost_io: 1361.000000  Cost_cpu: 39600852
      Resp_io: 1361.000000  Resp_cpu: 39600852
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.272000  resc_cpu: 9538
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 345.414447  Resp: 345.414447  Degree: 1
      Cost_io: 345.000000  Cost_cpu: 12270452
      Resp_io: 345.000000  Resp_cpu: 12270452
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 15043
    ix_sel: 0.400000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 1255.667031  Resp: 1255.667031  Degree: 1
      Cost_io: 1255.000000  Cost_cpu: 19748677
      Resp_io: 1255.000000  Resp_cpu: 19748677
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 1255.329313  Resp: 1255.329313  Degree: 1
      Cost_io: 1255.000000  Cost_cpu: 9749910
      Resp_io: 1255.000000  Resp_cpu: 9749910
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 1255.329313  Resp: 1255.329313  Degree: 1
      Cost_io: 1255.000000  Cost_cpu: 9749910
      Resp_io: 1255.000000  Resp_cpu: 9749910
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Not used T1_T1F_ID1
      Cost = 4333.601935, sel = 0.200000
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 345.414447
          resc: 345.414447  resc_io: 345.000000  resc_cpu: 12270452
          resp: 345.414447  resp_io: 345.000000  resc_cpu: 12270452
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  125.000759 = outer (1249.998884) * inner (4.000000) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  4999.995536, outer: 1249.998884, inner: 4.000000, sel: 0.025000
Join Card - Rounded: 125 Computed: 125.000759
Join order aborted: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[9]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 4.000000  Cost: 1.000508  Resp: 1.000508  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 7.004654  Resp: 7.004654  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 137786
      Resp_io: 7.000000  Resp_cpu: 137786
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.001635  Resp: 5.001635  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48409
      Resp_io: 5.000000  Resp_cpu: 48409
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.001635  Resp: 5.001635  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48409
      Resp_io: 5.000000  Resp_cpu: 48409
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001635
          resc: 5.001635  resc_io: 5.000000  resc_cpu: 48409
          resp: 5.001635  resp_io: 5.000000  resc_cpu: 48409
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  4.000000 = outer (4.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 4 Computed: 4.000000
  Outer table:  T1  Alias: T1
    resc: 1.000508  card 4.000000  bytes:   deg: 1  resp: 1.000508
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001590  Resp: 6.001590  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001590 
     resc: 6.001590 resc_io: 4.000000 resc_cpu: 59260769
     resp: 6.001590 resp_io: 4.000000 resp_cpu: 59260769
  Outer table:  T1  Alias: T1
    resc: 1.000508  card 4.000000  bytes:   deg: 1  resp: 1.000508
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021847  Resp: 4.021847  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021847  
     resc: 4.021847 resc_io: 4.000000 resc_cpu: 646829
     resp: 4.021847 resp_io: 4.000000 resp_cpu: 646829
Best:: JoinMethod: Hash
       Cost: 4.021847  Degree: 1  Resp: 4.021847  Card: 4.000000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 4.000000  Cost: 4.021847  Resp: 4.021847  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   7.250000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2065  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   7.250000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.250000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500487.066731 (cpu filter eval) (= 50.048707 (per row) * 10000.000000 (#rows))
                       =   2578523.066731
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 33.370216  Resp: 33.370216  Degree: 1
      Cost_io: 33.000000  Cost_cpu: 10960921
      Resp_io: 33.000000  Resp_cpu: 10960921
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.250000  resc_cpu: 1907009
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 37.279492  Resp: 37.279492  Degree: 1
      Cost_io: 37.000000  Cost_cpu: 8274864
      Resp_io: 37.000000  Resp_cpu: 8274864
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9272
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 8.023100  Resp: 8.023100  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 683918
      Resp_io: 8.000000  Resp_cpu: 683918
kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

kkofmx: index filter:"L"."ID2"="T2"."ID2"

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9272
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 8.023100  Resp: 8.023100  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 683918
      Resp_io: 8.000000  Resp_cpu: 683918
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 3.1250e-07 
    NL Join : Cost: 20.068047  Resp: 20.068047  Degree: 1
      Cost_io: 20.000000  Cost_cpu: 2014654
      Resp_io: 20.000000  Resp_cpu: 2014654
  ****** trying bitmap/domain indexes ******
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 0.000000  resc_cpu: 1900
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.022104  Resp: 4.022104  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 654429
      Resp_io: 4.000000  Resp_cpu: 654429

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 20.059587  Resp: 20.059587  Degree: 1
      Cost_io: 20.000000  Cost_cpu: 1764172
      Resp_io: 20.000000  Resp_cpu: 1764172
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_ID2
      Cost = 4.022140, sel = 8.0000e-04
    Not used T2_T2F1_T2F2_ID2
      Cost = 21.084876, sel = 0.125000
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 8.023100
          resc: 8.023100  resc_io: 8.000000  resc_cpu: 683918
          resp: 8.023100  resp_io: 8.000000  resc_cpu: 683918
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.100001 = outer (4.000000) * inner (1249.998884) * sel (2.0000e-05)
Join cardinality for HJ/SMJ (no post filters):  3.999996, outer: 4.000000, inner: 1249.998884, sel: 2.0000e-05
Join Card - Rounded: 1 Computed: 0.100001
  Outer table:  L  Alias: L
    resc: 4.021847  card 4.000000  bytes:   deg: 1  resp: 4.021847
  Inner table:  T2  Alias: T2
    resc: 5.011758  card: 1249.998884  bytes:   deg: 1  resp: 5.011758
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  SM join: Resc: 11.053187  Resp: 11.053187  [multiMatchCost=0.000000]
SM Join
  SM cost: 11.053187 
     resc: 11.053187 resc_io: 9.000000 resc_cpu: 60788368
     resp: 11.053187 resp_io: 9.000000 resp_cpu: 60788368
  Outer table:  L  Alias: L
    resc: 4.021847  card 4.000000  bytes:   deg: 1  resp: 4.021847
  Inner table:  T2  Alias: T2
    resc: 5.011758  card: 1249.998884  bytes:   deg: 1  resp: 5.011758
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024508  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 9.058113  Resp: 9.058113  [multiMatchCost=0.000000]
HA Join
  HA cost: 9.058113  
     resc: 9.058113 resc_io: 9.000000 resc_cpu: 1720539
     resp: 9.058113 resp_io: 9.000000 resp_cpu: 1720539
Join order aborted: cost > best plan cost
***********************
Join order[10]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 4.000000  Cost: 1.000508  Resp: 1.000508  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   7.250000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2065  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   7.250000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.250000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 608833.413784 (cpu filter eval) (= 60.883341 (per row) * 10000.000000 (#rows))
                       =   2686869.413784
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 30.363515  Resp: 30.363515  Degree: 1
      Cost_io: 30.000000  Cost_cpu: 10762521
      Resp_io: 30.000000  Resp_cpu: 10762521
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.250000  resc_cpu: 2015355
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 34.272790  Resp: 34.272790  Degree: 1
      Cost_io: 34.000000  Cost_cpu: 8076464
      Resp_io: 34.000000  Resp_cpu: 8076464
kkofmx: index filter: ?? 

kkofmx: index filter: ?? 

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.003125 
    NL Join : Cost: 17.058622  Resp: 17.058622  Degree: 1
      Cost_io: 17.000000  Cost_cpu: 1735603
      Resp_io: 17.000000  Resp_cpu: 1735603
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 17.058622
          resc: 17.058622  resc_io: 17.000000  resc_cpu: 1735603
          resp: 17.058622  resp_io: 17.000000  resc_cpu: 1735603
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  125.000759 = outer (4.000000) * inner (1249.998884) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  4999.995536, outer: 4.000000, inner: 1249.998884, sel: 0.025000
Join Card - Rounded: 125 Computed: 125.000759
Join order aborted: cost > best plan cost
***********************
Join order[11]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 1249.998884  Cost: 5.011758  Resp: 5.011758  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   1.084800
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   1.084800 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.084800
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 1362.307310  Resp: 1362.307310  Degree: 1
      Cost_io: 1361.000000  Cost_cpu: 38705310
      Resp_io: 1361.000000  Resp_cpu: 38705310
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 1362.307310
          resc: 1362.307310  resc_io: 1361.000000  resc_cpu: 38705310
          resp: 1362.307310  resp_io: 1361.000000  resc_cpu: 38705310
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  9.999991 = outer (1249.998884) * inner (10.000000) * sel (8.0000e-04)
Join Card - Rounded: 10 Computed: 9.999991
  Outer table:  T2  Alias: T2
    resc: 5.011758  card 1249.998884  bytes:   deg: 1  resp: 5.011758
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 10.032397  Resp: 10.032397  [multiMatchCost=0.000000]
SM Join
  SM cost: 10.032397 
     resc: 10.032397 resc_io: 8.000000 resc_cpu: 60172862
     resp: 10.032397 resp_io: 8.000000 resp_cpu: 60172862
  Outer table:  T2  Alias: T2
    resc: 5.011758  card 1249.998884  bytes:   deg: 1  resp: 5.011758
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.026632  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 4  probefrag: 1  ppasses: 1
  Hash join: Resc: 8.039410  Resp: 8.039410  [multiMatchCost=0.000000]
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 5.011758  card: 1249.998884  bytes:   deg: 1  resp: 5.011758
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024538  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 8.037316  Resp: 8.037316  [multiMatchCost=0.000000]
HA Join
  HA cost: 8.037316 swapped 
     resc: 8.037316 resc_io: 8.000000 resc_cpu: 1104796
     resp: 8.037316 resp_io: 8.000000 resp_cpu: 1104796
Join order aborted: cost > best plan cost
***********************
Join order[12]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 1249.998884  Cost: 5.011758  Resp: 5.011758  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.084800
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2080  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   1.084800 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.084800
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 1216.433603 (cpu filter eval) (= 121.643360 (per row) * 10.000000 (#rows))
                       =   31402.193603
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 1362.337557  Resp: 1362.337557  Degree: 1
      Cost_io: 1361.000000  Cost_cpu: 39600852
      Resp_io: 1361.000000  Resp_cpu: 39600852
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.272000  resc_cpu: 9538
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 345.414447  Resp: 345.414447  Degree: 1
      Cost_io: 345.000000  Cost_cpu: 12270452
      Resp_io: 345.000000  Resp_cpu: 12270452
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 15043
    ix_sel: 0.400000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 1255.667031  Resp: 1255.667031  Degree: 1
      Cost_io: 1255.000000  Cost_cpu: 19748677
      Resp_io: 1255.000000  Resp_cpu: 19748677
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 1255.329313  Resp: 1255.329313  Degree: 1
      Cost_io: 1255.000000  Cost_cpu: 9749910
      Resp_io: 1255.000000  Resp_cpu: 9749910
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 1255.329313  Resp: 1255.329313  Degree: 1
      Cost_io: 1255.000000  Cost_cpu: 9749910
      Resp_io: 1255.000000  Resp_cpu: 9749910
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Not used T1_T1F_ID1
      Cost = 4333.601935, sel = 0.200000
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 345.414447
          resc: 345.414447  resc_io: 345.000000  resc_cpu: 12270452
          resp: 345.414447  resp_io: 345.000000  resc_cpu: 12270452
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  125.000759 = outer (1249.998884) * inner (4.000000) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  4999.995536, outer: 1249.998884, inner: 4.000000, sel: 0.025000
Join Card - Rounded: 125 Computed: 125.000759
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between L[L](serial) and T1[T1](serial); jm = 8; right side access path = IndexRange
---- serial Sort-Merge-Join -> NONE
--- Distribution method for 
join between T1[T1](serial) and T2[T2](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial - SMJ/HJ: both input serial
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

LORE: Trying or-Expansion on query block SEL$1 (#0)
LORE: Or-expansion bypassed: No index driver found in OR chain: 
id=0  predicate=(LNNVL("T2"."T2F1"=14) OR LNNVL("T2"."T2F2"=13)) AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 AND ("T1"."T1F"=0 OR "T1"."T1F"=1) AND ("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"

LORE: ******** Next OR predicate ********

LORE: Trying or-Expansion on query block SEL$1 (#0) on OR chain:
id=0  predicate=("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"

LORE: ******** OR-branching ********

LORE: or-expansion-subheap (create addr=0x7fa8a287fe58)
****************
QUERY BLOCK TEXT
****************
SELECT /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null FROM l, t1, t2 WHERE  
(  ( t1.t1f = 0 AND t2.t2f1 BETWEEN 9 AND 10)       OR 
   ( t1.t1f = 1 AND t2.t2f1 = 14 AND t2.t2f2 = 13  )   )  AND 
    ( l.id1 = t1.id1 AND l.id2 = t2.id2 )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$1 nbfros=3 flg=0
  fro(0): flg=4 objn=73956 hint_alias="L"@"SEL$1"
  fro(1): flg=4 objn=73958 hint_alias="T1"@"SEL$1"
  fro(2): flg=4 objn=73960 hint_alias="T2"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 2467 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: T2  Alias: T2
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  25  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T2F1(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#3): T2F2(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#1): ID2(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: T2_ID2  Col#: 1
  LVLS: 1  #LB: 20  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: T2_T2F1_T2F2_ID2  Col#: 2 3 1
  LVLS: 1  #LB: 29  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 168.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: T1  Alias: T1
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T1F(NUMBER)
    AvgLen: 3 NDV: 5 Nulls: 0 Density: 0.200000 Min: 0.000000 Max: 4.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: T1_T1F_ID1  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  L  Alias:  L
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
  Column (#2): ID2(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: L_ID1  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$1 (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for L
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for L[L] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: L  Alias: L
    Card: Original: 10.000000  Rounded: 10  Computed: 10.000000  Non Adjusted: 10.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                       =   30185.760000
  Access Path: TableScan
    Cost:  3.001020  Resp: 3.001020  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 30186
      Resp_io: 3.000000  Resp_cpu: 30186
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3.001020  Degree: 1  Resp: 3.001020  Card: 10.000000  Bytes: 0.000000

Access path analysis for T1
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T1[T1] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE


 kkecdn: Single Table Predicate:"T1"."T1F"=0 OR "T1"."T1F"=1
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

 kkecdn: Single Table Predicate:"T1"."T1F"=0
  Estimated selectivity: 0.200000 , col: #2 
  Table: T1  Alias: T1
    Card: Original: 10.000000  Rounded: 1  Computed: 0.800000  Non Adjusted: 0.800000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 680.000000 (cpu filter eval) (= 68.000000 (per row) * 10.000000 (#rows))
                       =   30865.760000
  Access Path: TableScan
    Cost:  3.001043  Resp: 3.001043  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 30866
      Resp_io: 3.000000  Resp_cpu: 30866
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9001
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000304  Resp: 2.000304  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9001
      Resp_io: 2.000000  Resp_cpu: 9001
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.080000 
    Cost: 1.000260  Resp: 1.000260  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T1_T1F_ID1
         Cost: 1.000260  Degree: 1  Resp: 1.000260  Card: 0.800000  Bytes: 0.000000

Access path analysis for T2
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T2[T2] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE


 kkecdn: Single Table Predicate: ?? 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F1">=9
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F1"<=10
  Estimated selectivity: 1.000000 , col: #2 

 kkecdn: Single Table Predicate:"T2"."T2F1">=9
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F1"<=10
  Estimated selectivity: 1.000000 , col: #2 
  Table: T2  Alias: T2
    Card: Original: 10000.000000  Rounded: 1250  Computed: 1249.998884  Non Adjusted: 1249.998884
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2065  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 556600.957487 (cpu filter eval) (= 55.660096 (per row) * 10000.000000 (#rows))
                       =   2634636.957487
  Access Path: TableScan
    Cost:  9.088987  Resp: 9.088987  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2634637
      Resp_io: 9.000000  Resp_cpu: 2634637
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1963123
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.066306  Resp: 10.066306  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1963123
      Resp_io: 10.000000  Resp_cpu: 1963123
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 5.000000  resc_cpu: 285607
    ix_sel: 0.125000  ix_sel_with_filters: 0.011161 
    Cost: 5.012135  Resp: 5.012135  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T2_T2F1_T2F2_ID2
         Cost: 5.012135  Degree: 1  Resp: 5.012135  Card: 1249.998884  Bytes: 0.000000

(newjo-restore) [2 1 0 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is OR expanded SEL$1 (#0)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  L[L]#0  T1[T1]#1  T2[T2]#2

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.200000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=0)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.200000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.200000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 568.000000 (cpu filter eval) (= 56.800000 (per row) * 10.000000 (#rows))
                       =   30753.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 15.011407  Resp: 15.011407  Degree: 1
      Cost_io: 15.000000  Cost_cpu: 337723
      Resp_io: 15.000000  Resp_cpu: 337723
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.400000  resc_cpu: 8889
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 7.004022  Resp: 7.004022  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 119080
      Resp_io: 7.000000  Resp_cpu: 119080
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.200000 , col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.008000 
    NL Join : Cost: 3.001405  Resp: 3.001405  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 41586
      Resp_io: 3.000000  Resp_cpu: 41586
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.001405
          resc: 3.001405  resc_io: 3.000000  resc_cpu: 41586
          resp: 3.001405  resp_io: 3.000000  resc_cpu: 41586
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.800000 = outer (10.000000) * inner (0.800000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.800000
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
SM Join (with index on outer)
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 2.000000  resc_cpu: 17943
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2.000606  Resp: 2.000606  Degree: 1
  Outer table:  L  Alias: L
    resc: 2.000606  card 10.000000  bytes:   deg: 1  resp: 2.000606
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 4.000866  Resp: 4.000866  [multiMatchCost=0.000000]
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021599  Resp: 4.021599  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021599  
     resc: 4.021599 resc_io: 4.000000 resc_cpu: 639487
     resp: 4.021599 resp_io: 4.000000 resp_cpu: 639487
Best:: JoinMethod: NestedLoop
       Cost: 3.001405  Degree: 1  Resp: 3.001405  Card: 0.800000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 3.001405  Resp: 3.001405  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2065  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2080  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500445.280766 (cpu filter eval) (= 50.044528 (per row) * 10000.000000 (#rows))
                       =   2578481.280766
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 12.088495  Resp: 12.088495  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 2620067
      Resp_io: 12.000000  Resp_cpu: 2620067
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906967
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 13.065814  Resp: 13.065814  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 1948553
      Resp_io: 13.000000  Resp_cpu: 1948553
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001718  Resp: 4.001718  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 50853
      Resp_io: 4.000000  Resp_cpu: 50853
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

kkofmx: index filter:"L"."ID2"="T2"."ID2"

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001718  Resp: 4.001718  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 50853
      Resp_io: 4.000000  Resp_cpu: 50853
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 1.1161e-06 
    NL Join : Cost: 7.012952  Resp: 7.012952  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 383480
      Resp_io: 7.000000  Resp_cpu: 383480
  ****** trying bitmap/domain indexes ******
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 0.000000  resc_cpu: 1900
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.001469  Resp: 3.001469  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 43486
      Resp_io: 3.000000  Resp_cpu: 43486

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 7.010839  Resp: 7.010839  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 320922
      Resp_io: 7.000000  Resp_cpu: 320922
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_ID2
      Cost = 3.001505, sel = 8.0000e-04
    Not used T2_T2F1_T2F2_ID2
      Cost = 8.036115, sel = 0.125000
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001718
          resc: 4.001718  resc_io: 4.000000  resc_cpu: 50853
          resp: 4.001718  resp_io: 4.000000  resc_cpu: 50853
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.799999 = outer (0.800000) * inner (1249.998884) * sel (8.0000e-04)
Join Card - Rounded: 1 Computed: 0.799999
  Outer table:  T1  Alias: T1
    resc: 3.001405  card 0.800000  bytes:   deg: 1  resp: 3.001405
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  SM join: Resc: 10.033109  Resp: 10.033109  [multiMatchCost=0.000000]
SM Join
  SM cost: 10.033109 
     resc: 10.033109 resc_io: 8.000000 resc_cpu: 60193923
     resp: 10.033109 resp_io: 8.000000 resp_cpu: 60193923
  Outer table:  T1  Alias: T1
    resc: 3.001405  card 0.800000  bytes:   deg: 1  resp: 3.001405
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024493  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 8.038032  Resp: 8.038032  [multiMatchCost=0.000000]
HA Join
  HA cost: 8.038032  
     resc: 8.038032 resc_io: 8.000000 resc_cpu: 1126004
     resp: 8.038032 resp_io: 8.000000 resp_cpu: 1126004
Best:: JoinMethod: NestedLoop
       Cost: 4.001718  Degree: 1  Resp: 4.001718  Card: 0.799999 Bytes: 
***********************
Best so far:  Table#: 0  cost: 3.001020  card: 10.000000  bytes: 60.000000
              Table#: 1  cost: 3.001405  card: 0.800000  bytes: 12.000000
              Table#: 2  cost: 4.001718  card: 0.799999  bytes: 22.000000
***********************
Join order[2]:  L[L]#0  T2[T2]#2  T1[T1]#1

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2065  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500445.280766 (cpu filter eval) (= 50.044528 (per row) * 10000.000000 (#rows))
                       =   2578481.280766
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 72.871927  Resp: 72.871927  Degree: 1
      Cost_io: 72.000000  Cost_cpu: 25814999
      Resp_io: 72.000000  Resp_cpu: 25814999
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1906967
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 83.645116  Resp: 83.645116  Degree: 1
      Cost_io: 83.000000  Cost_cpu: 19099856
      Resp_io: 83.000000  Resp_cpu: 19099856
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004150  Resp: 13.004150  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122857
      Resp_io: 13.000000  Resp_cpu: 122857
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

kkofmx: index filter:"L"."ID2"="T2"."ID2"

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004150  Resp: 13.004150  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122857
      Resp_io: 13.000000  Resp_cpu: 122857
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 1.1161e-06 
    NL Join : Cost: 43.116498  Resp: 43.116498  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 3449133
      Resp_io: 43.000000  Resp_cpu: 3449133
  ****** trying bitmap/domain indexes ******
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 0.000000  resc_cpu: 1900
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.001661  Resp: 3.001661  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 49186
      Resp_io: 3.000000  Resp_cpu: 49186

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 43.095368  Resp: 43.095368  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 2823543
      Resp_io: 43.000000  Resp_cpu: 2823543
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_ID2
      Cost = 3.001698, sel = 8.0000e-04
    Not used T2_T2F1_T2F2_ID2
      Cost = 44.120680, sel = 0.125000
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 13.004150
          resc: 13.004150  resc_io: 13.000000  resc_cpu: 122857
          resp: 13.004150  resp_io: 13.000000  resc_cpu: 122857
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  9.999991 = outer (10.000000) * inner (1249.998884) * sel (8.0000e-04)
Join Card - Rounded: 10 Computed: 9.999991
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  SM join: Resc: 10.032774  Resp: 10.032774  [multiMatchCost=0.000000]
SM Join
  SM cost: 10.032774 
     resc: 10.032774 resc_io: 8.000000 resc_cpu: 60184019
     resp: 10.032774 resp_io: 8.000000 resp_cpu: 60184019
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024538  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 8.037692  Resp: 8.037692  [multiMatchCost=0.000000]
HA Join
  HA cost: 8.037692  
     resc: 8.037692 resc_io: 8.000000 resc_cpu: 1115954
     resp: 8.037692 resp_io: 8.000000 resp_cpu: 1115954
Join order aborted: cost > best plan cost
***********************
Join order[3]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 4.001297  Resp: 4.001297  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38387
      Resp_io: 4.000000  Resp_cpu: 38387
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000542
          resc: 2.000542  resc_io: 2.000000  resc_cpu: 16043
          resp: 2.000542  resp_io: 2.000000  resc_cpu: 16043
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.800000 = outer (0.800000) * inner (10.000000) * sel (0.100000)
Join cardinality for NL:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join cardinality without POSQ:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join Card - Rounded: 1 Computed: 0.800000
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021584  Resp: 4.021584  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021584  
     resc: 4.021584 resc_io: 4.000000 resc_cpu: 639037
     resp: 4.021584 resp_io: 4.000000 resp_cpu: 639037
Best:: JoinMethod: NestedLoop
       Cost: 2.000542  Degree: 1  Resp: 2.000542  Card: 0.800000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 2.000542  Resp: 2.000542  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2065  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500445.280766 (cpu filter eval) (= 50.044528 (per row) * 10000.000000 (#rows))
                       =   2578481.280766
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 11.087633  Resp: 11.087633  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 2594524
      Resp_io: 11.000000  Resp_cpu: 2594524
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906967
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 12.064952  Resp: 12.064952  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1923010
      Resp_io: 12.000000  Resp_cpu: 1923010
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25310
      Resp_io: 3.000000  Resp_cpu: 25310
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

kkofmx: index filter:"L"."ID2"="T2"."ID2"

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25310
      Resp_io: 3.000000  Resp_cpu: 25310
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 1.1161e-06 
    NL Join : Cost: 6.012090  Resp: 6.012090  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 357938
      Resp_io: 6.000000  Resp_cpu: 357938
  ****** trying bitmap/domain indexes ******
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 0.000000  resc_cpu: 1900
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000606  Resp: 2.000606  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17943
      Resp_io: 2.000000  Resp_cpu: 17943

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 6.009977  Resp: 6.009977  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 295379
      Resp_io: 6.000000  Resp_cpu: 295379
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_ID2
      Cost = 2.000643, sel = 8.0000e-04
    Not used T2_T2F1_T2F2_ID2
      Cost = 7.035252, sel = 0.125000
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000855
          resc: 3.000855  resc_io: 3.000000  resc_cpu: 25310
          resp: 3.000855  resp_io: 3.000000  resc_cpu: 25310
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.799999 = outer (0.800000) * inner (1249.998884) * sel (8.0000e-04)
Join Card - Rounded: 1 Computed: 0.799999
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  SM join: Resc: 9.032246  Resp: 9.032246  [multiMatchCost=0.000000]
SM Join
  SM cost: 9.032246 
     resc: 9.032246 resc_io: 7.000000 resc_cpu: 60168380
     resp: 9.032246 resp_io: 7.000000 resp_cpu: 60168380
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024493  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 7.037169  Resp: 7.037169  [multiMatchCost=0.000000]
HA Join
  HA cost: 7.037169  
     resc: 7.037169 resc_io: 7.000000 resc_cpu: 1100461
     resp: 7.037169 resp_io: 7.000000 resp_cpu: 1100461
Plan cardinality mismatch: best card= 0.79999928571   curr card= 0.79999928571
Best:: JoinMethod: NestedLoop
       Cost: 3.000855  Degree: 1  Resp: 3.000855  Card: 0.799999 Bytes: 
***********************
Best so far:  Table#: 1  cost: 1.000260  card: 0.800000  bytes: 6.000000
              Table#: 0  cost: 2.000542  card: 0.800000  bytes: 12.000000
              Table#: 2  cost: 3.000855  card: 0.799999  bytes: 22.000000
***********************
Join order[4]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2065  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 556600.957487 (cpu filter eval) (= 55.660096 (per row) * 10000.000000 (#rows))
                       =   2634636.957487
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 10.089248  Resp: 10.089248  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2642338
      Resp_io: 10.000000  Resp_cpu: 2642338
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1963123
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 11.066567  Resp: 11.066567  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1970824
      Resp_io: 11.000000  Resp_cpu: 1970824
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.011161 
    NL Join : Cost: 5.012183  Resp: 5.012183  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 360698
      Resp_io: 5.000000  Resp_cpu: 360698
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.012183
          resc: 5.012183  resc_io: 5.000000  resc_cpu: 360698
          resp: 5.012183  resp_io: 5.000000  resc_cpu: 360698
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  999.999107 = outer (0.800000) * inner (1249.998884) * sel (1.000000)
Join Card - Rounded: 1000 Computed: 999.999107
Join order aborted: cost > best plan cost
***********************
Join order[5]:  T2[T2]#2  L[L]#0  T1[T1]#1
Join order aborted: cost > best plan cost
***********************
Join order[6]:  T2[T2]#2  T1[T1]#1  L[L]#0
Join order aborted: cost > best plan cost
***********************
Permutations for Starting Table :1
Join order[7]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 4.001297  Resp: 4.001297  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38387
      Resp_io: 4.000000  Resp_cpu: 38387
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000542
          resc: 2.000542  resc_io: 2.000000  resc_cpu: 16043
          resp: 2.000542  resp_io: 2.000000  resc_cpu: 16043
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.800000 = outer (0.800000) * inner (10.000000) * sel (0.100000)
Join cardinality for NL:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join cardinality without POSQ:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join Card - Rounded: 1 Computed: 0.800000
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021584  Resp: 4.021584  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021584  
     resc: 4.021584 resc_io: 4.000000 resc_cpu: 639037
     resp: 4.021584 resp_io: 4.000000 resp_cpu: 639037
Best:: JoinMethod: NestedLoop
       Cost: 2.000542  Degree: 1  Resp: 2.000542  Card: 0.800000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 2.000542  Resp: 2.000542  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2065  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2080  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500445.280766 (cpu filter eval) (= 50.044528 (per row) * 10000.000000 (#rows))
                       =   2578481.280766
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 11.087633  Resp: 11.087633  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 2594524
      Resp_io: 11.000000  Resp_cpu: 2594524
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906967
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 12.064952  Resp: 12.064952  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1923010
      Resp_io: 12.000000  Resp_cpu: 1923010
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25310
      Resp_io: 3.000000  Resp_cpu: 25310
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

kkofmx: index filter:"L"."ID2"="T2"."ID2"

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25310
      Resp_io: 3.000000  Resp_cpu: 25310
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 1.1161e-06 
    NL Join : Cost: 6.012090  Resp: 6.012090  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 357938
      Resp_io: 6.000000  Resp_cpu: 357938
  ****** trying bitmap/domain indexes ******
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 0.000000  resc_cpu: 1900
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000606  Resp: 2.000606  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17943
      Resp_io: 2.000000  Resp_cpu: 17943

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 6.009977  Resp: 6.009977  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 295379
      Resp_io: 6.000000  Resp_cpu: 295379
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_ID2
      Cost = 2.000643, sel = 8.0000e-04
    Not used T2_T2F1_T2F2_ID2
      Cost = 7.035252, sel = 0.125000
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000855
          resc: 3.000855  resc_io: 3.000000  resc_cpu: 25310
          resp: 3.000855  resp_io: 3.000000  resc_cpu: 25310
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.799999 = outer (0.800000) * inner (1249.998884) * sel (8.0000e-04)
Join Card - Rounded: 1 Computed: 0.799999
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  SM join: Resc: 9.032246  Resp: 9.032246  [multiMatchCost=0.000000]
SM Join
  SM cost: 9.032246 
     resc: 9.032246 resc_io: 7.000000 resc_cpu: 60168380
     resp: 9.032246 resp_io: 7.000000 resp_cpu: 60168380
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024493  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 7.037169  Resp: 7.037169  [multiMatchCost=0.000000]
HA Join
  HA cost: 7.037169  
     resc: 7.037169 resc_io: 7.000000 resc_cpu: 1100461
     resp: 7.037169 resp_io: 7.000000 resp_cpu: 1100461
Join order aborted: cost > best plan cost
***********************
Join order[8]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2065  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 556600.957487 (cpu filter eval) (= 55.660096 (per row) * 10000.000000 (#rows))
                       =   2634636.957487
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 10.089248  Resp: 10.089248  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2642338
      Resp_io: 10.000000  Resp_cpu: 2642338
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1963123
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 11.066567  Resp: 11.066567  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1970824
      Resp_io: 11.000000  Resp_cpu: 1970824
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.011161 
    NL Join : Cost: 5.012183  Resp: 5.012183  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 360698
      Resp_io: 5.000000  Resp_cpu: 360698
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.012183
          resc: 5.012183  resc_io: 5.000000  resc_cpu: 360698
          resp: 5.012183  resp_io: 5.000000  resc_cpu: 360698
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  999.999107 = outer (0.800000) * inner (1249.998884) * sel (1.000000)
Join Card - Rounded: 1000 Computed: 999.999107
Join order aborted: cost > best plan cost
***********************
Join order[9]:  T2[T2]#2  L[L]#0  T1[T1]#1
Join order aborted: cost > best plan cost
***********************
Join order[10]:  T2[T2]#2  T1[T1]#1  L[L]#0
Join order aborted: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[11]:  T2[T2]#2  L[L]#0  T1[T1]#1
Join order aborted: cost > best plan cost
***********************
Join order[12]:  T2[T2]#2  T1[T1]#1  L[L]#0
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between T1[T1](serial) and L[L](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL
--- Distribution method for 
join between L[L](serial) and T2[T2](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

LORE: or-expansion-subheap (delete addr=0x7fa8a287fe58, in-use=123672, alloc=130256)

LORE: ******** OR-branching ********

LORE: or-expansion-subheap (create addr=0x7fa8a287fe58)
****************
QUERY BLOCK TEXT
****************
SELECT /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null FROM l, t1, t2 WHERE  
(  ( t1.t1f = 0 AND t2.t2f1 BETWEEN 9 AND 10)       OR 
   ( t1.t1f = 1 AND t2.t2f1 = 14 AND t2.t2f2 = 13  )   )  AND 
    ( l.id1 = t1.id1 AND l.id2 = t2.id2 )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$1 nbfros=3 flg=0
  fro(0): flg=4 objn=73956 hint_alias="L"@"SEL$1"
  fro(1): flg=4 objn=73958 hint_alias="T1"@"SEL$1"
  fro(2): flg=4 objn=73960 hint_alias="T2"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 2467 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: T2  Alias: T2
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  25  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T2F1(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#3): T2F2(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#1): ID2(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: T2_ID2  Col#: 1
  LVLS: 1  #LB: 20  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: T2_T2F1_T2F2_ID2  Col#: 2 3 1
  LVLS: 1  #LB: 29  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 168.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: T1  Alias: T1
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T1F(NUMBER)
    AvgLen: 3 NDV: 5 Nulls: 0 Density: 0.200000 Min: 0.000000 Max: 4.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: T1_T1F_ID1  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  L  Alias:  L
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
  Column (#2): ID2(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: L_ID1  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$1 (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for L
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for L[L] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: L  Alias: L
    Card: Original: 10.000000  Rounded: 10  Computed: 10.000000  Non Adjusted: 10.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                       =   30185.760000
  Access Path: TableScan
    Cost:  3.001020  Resp: 3.001020  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 30186
      Resp_io: 3.000000  Resp_cpu: 30186
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3.001020  Degree: 1  Resp: 3.001020  Card: 10.000000  Bytes: 0.000000

Access path analysis for T1
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T1[T1] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE


 kkecdn: Single Table Predicate:"T1"."T1F"=0 OR "T1"."T1F"=1
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

 kkecdn: Single Table Predicate:"T1"."T1F"=1
  Estimated selectivity: 0.200000 , col: #2 
  Table: T1  Alias: T1
    Card: Original: 10.000000  Rounded: 1  Computed: 0.800000  Non Adjusted: 0.800000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 680.000000 (cpu filter eval) (= 68.000000 (per row) * 10.000000 (#rows))
                       =   30865.760000
  Access Path: TableScan
    Cost:  3.001043  Resp: 3.001043  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 30866
      Resp_io: 3.000000  Resp_cpu: 30866
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9001
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000304  Resp: 2.000304  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9001
      Resp_io: 2.000000  Resp_cpu: 9001
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.080000 
    Cost: 1.000260  Resp: 1.000260  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T1_T1F_ID1
         Cost: 1.000260  Degree: 1  Resp: 1.000260  Card: 0.800000  Bytes: 0.000000

Access path analysis for T2
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T2[T2] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 0.125000 , col: #3 


 kkecdn: Single Table Predicate: ?? 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F1">=9
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F1"<=10
  Estimated selectivity: 1.000000 , col: #2 

 kkecdn: Single Table Predicate:"T2"."T2F1"=14
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F2"=13
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Table: T2  Alias: T2
    Card: Original: 10000.000000  Rounded: 1  Computed: 0.000000  Non Adjusted: 0.000000
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2048  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2065  ("T2"."T2F1">=9)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.526150 (cpu filter eval) (= 50.002553 (per row) * 10000.000000 (#rows))
                       =   2578061.526150
  Access Path: TableScan
    Cost:  9.087077  Resp: 9.087077  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2578062
      Resp_io: 9.000000  Resp_cpu: 2578062
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.064395  Resp: 10.064395  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1906547
      Resp_io: 10.000000  Resp_cpu: 1906547
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 8.9286e-07  ix_sel_with_filters: 7.9719e-08 
    Cost: 2.000490  Resp: 2.000490  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T2_T2F1_T2F2_ID2
         Cost: 2.000490  Degree: 1  Resp: 2.000490  Card: 0.000000  Bytes: 0.000000

(newjo-restore) [2 1 0 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is OR expanded SEL$1 (#0)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  L[L]#0  T1[T1]#1  T2[T2]#2

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.200000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.200000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.200000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 568.000000 (cpu filter eval) (= 56.800000 (per row) * 10.000000 (#rows))
                       =   30753.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 15.011407  Resp: 15.011407  Degree: 1
      Cost_io: 15.000000  Cost_cpu: 337723
      Resp_io: 15.000000  Resp_cpu: 337723
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.400000  resc_cpu: 8889
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 7.004022  Resp: 7.004022  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 119080
      Resp_io: 7.000000  Resp_cpu: 119080
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.200000 , col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.008000 
    NL Join : Cost: 3.001405  Resp: 3.001405  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 41586
      Resp_io: 3.000000  Resp_cpu: 41586
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.001405
          resc: 3.001405  resc_io: 3.000000  resc_cpu: 41586
          resp: 3.001405  resp_io: 3.000000  resc_cpu: 41586
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.800000 = outer (10.000000) * inner (0.800000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.800000
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
SM Join (with index on outer)
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 2.000000  resc_cpu: 17943
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2.000606  Resp: 2.000606  Degree: 1
  Outer table:  L  Alias: L
    resc: 2.000606  card 10.000000  bytes:   deg: 1  resp: 2.000606
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 4.000866  Resp: 4.000866  [multiMatchCost=0.000000]
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021599  Resp: 4.021599  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021599  
     resc: 4.021599 resc_io: 4.000000 resc_cpu: 639487
     resp: 4.021599 resp_io: 4.000000 resp_cpu: 639487
Best:: JoinMethod: NestedLoop
       Cost: 3.001405  Degree: 1  Resp: 3.001405  Card: 0.800000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 3.001405  Resp: 3.001405  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2081  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.020421 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.020421
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 12.088481  Resp: 12.088481  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 2619647
      Resp_io: 12.000000  Resp_cpu: 2619647
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 13.065800  Resp: 13.065800  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 1948133
      Resp_io: 13.000000  Resp_cpu: 1948133
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001717  Resp: 4.001717  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 50847
      Resp_io: 4.000000  Resp_cpu: 50847
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001717  Resp: 4.001717  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 50847
      Resp_io: 4.000000  Resp_cpu: 50847
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 7.9719e-12 
    NL Join : Cost: 4.001683  Resp: 4.001683  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 49816
      Resp_io: 4.000000  Resp_cpu: 49816
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001683
          resc: 4.001683  resc_io: 4.000000  resc_cpu: 49816
          resp: 4.001683  resp_io: 4.000000  resc_cpu: 49816
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.800000) * inner (0.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T1  Alias: T1
    resc: 3.001405  card 0.800000  bytes:   deg: 1  resp: 3.001405
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 7.001894  Resp: 7.001894  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001894 
     resc: 7.001894 resc_io: 5.000000 resc_cpu: 59269771
     resp: 7.001894 resp_io: 5.000000 resp_cpu: 59269771
  Outer table:  T1  Alias: T1
    resc: 3.001405  card 0.800000  bytes:   deg: 1  resp: 3.001405
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020274  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.022168  Resp: 5.022168  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.022168  
     resc: 5.022168 resc_io: 5.000000 resc_cpu: 656338
     resp: 5.022168 resp_io: 5.000000 resp_cpu: 656338
Best:: JoinMethod: NestedLoop
       Cost: 4.001683  Degree: 1  Resp: 4.001683  Card: 0.000000 Bytes: 
***********************
Best so far:  Table#: 0  cost: 3.001020  card: 10.000000  bytes: 60.000000
              Table#: 1  cost: 3.001405  card: 0.800000  bytes: 12.000000
              Table#: 2  cost: 4.001683  card: 0.000000  bytes: 22.000000
***********************
Join order[2]:  L[L]#0  T2[T2]#2  T1[T1]#1

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2081  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.020421 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.020421
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 72.871785  Resp: 72.871785  Degree: 1
      Cost_io: 72.000000  Cost_cpu: 25810796
      Resp_io: 72.000000  Resp_cpu: 25810796
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 83.644974  Resp: 83.644974  Degree: 1
      Cost_io: 83.000000  Cost_cpu: 19095654
      Resp_io: 83.000000  Resp_cpu: 19095654
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004148  Resp: 13.004148  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122800
      Resp_io: 13.000000  Resp_cpu: 122800
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004148  Resp: 13.004148  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122800
      Resp_io: 13.000000  Resp_cpu: 122800
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 7.9719e-12 
    NL Join : Cost: 13.003799  Resp: 13.003799  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 112489
      Resp_io: 13.000000  Resp_cpu: 112489
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 13.003799
          resc: 13.003799  resc_io: 13.000000  resc_cpu: 112489
          resp: 13.003799  resp_io: 13.000000  resc_cpu: 112489
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (10.000000) * inner (0.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 7.001560  Resp: 7.001560  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001560 
     resc: 7.001560 resc_io: 5.000000 resc_cpu: 59259868
     resp: 7.001560 resp_io: 5.000000 resp_cpu: 59259868
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021829  Resp: 5.021829  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021829  
     resc: 5.021829 resc_io: 5.000000 resc_cpu: 646288
     resp: 5.021829 resp_io: 5.000000 resp_cpu: 646288
Join order aborted: cost > best plan cost
***********************
Join order[3]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 4.001297  Resp: 4.001297  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38387
      Resp_io: 4.000000  Resp_cpu: 38387
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000542
          resc: 2.000542  resc_io: 2.000000  resc_cpu: 16043
          resp: 2.000542  resp_io: 2.000000  resc_cpu: 16043
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.800000 = outer (0.800000) * inner (10.000000) * sel (0.100000)
Join cardinality for NL:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join cardinality without POSQ:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join Card - Rounded: 1 Computed: 0.800000
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021584  Resp: 4.021584  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021584  
     resc: 4.021584 resc_io: 4.000000 resc_cpu: 639037
     resp: 4.021584 resp_io: 4.000000 resp_cpu: 639037
Best:: JoinMethod: NestedLoop
       Cost: 2.000542  Degree: 1  Resp: 2.000542  Card: 0.800000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 2.000542  Resp: 2.000542  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2081  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.020421 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.020421
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 11.087618  Resp: 11.087618  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 2594104
      Resp_io: 11.000000  Resp_cpu: 2594104
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 12.064937  Resp: 12.064937  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1922590
      Resp_io: 12.000000  Resp_cpu: 1922590
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25304
      Resp_io: 3.000000  Resp_cpu: 25304
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25304
      Resp_io: 3.000000  Resp_cpu: 25304
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 7.9719e-12 
    NL Join : Cost: 3.000820  Resp: 3.000820  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24273
      Resp_io: 3.000000  Resp_cpu: 24273
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000820
          resc: 3.000820  resc_io: 3.000000  resc_cpu: 24273
          resp: 3.000820  resp_io: 3.000000  resc_cpu: 24273
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.800000) * inner (0.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 6.001032  Resp: 6.001032  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001032 
     resc: 6.001032 resc_io: 4.000000 resc_cpu: 59244228
     resp: 6.001032 resp_io: 4.000000 resp_cpu: 59244228
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020274  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021306  Resp: 4.021306  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021306  
     resc: 4.021306 resc_io: 4.000000 resc_cpu: 630795
     resp: 4.021306 resp_io: 4.000000 resp_cpu: 630795
Best:: JoinMethod: NestedLoop
       Cost: 3.000820  Degree: 1  Resp: 3.000820  Card: 0.000000 Bytes: 
***********************
Best so far:  Table#: 1  cost: 1.000260  card: 0.800000  bytes: 6.000000
              Table#: 0  cost: 2.000542  card: 0.800000  bytes: 12.000000
              Table#: 2  cost: 3.000820  card: 0.000000  bytes: 22.000000
***********************
Join order[4]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2081  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.526150 (cpu filter eval) (= 50.002553 (per row) * 10000.000000 (#rows))
                       =   2578061.526150
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 10.087337  Resp: 10.087337  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2585763
      Resp_io: 10.000000  Resp_cpu: 2585763
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 11.064656  Resp: 11.064656  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1914249
      Resp_io: 11.000000  Resp_cpu: 1914249
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-07  ix_sel_with_filters: 7.9719e-08 
    NL Join : Cost: 2.000538  Resp: 2.000538  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15932
      Resp_io: 2.000000  Resp_cpu: 15932
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000538
          resc: 2.000538  resc_io: 2.000000  resc_cpu: 15932
          resp: 2.000538  resp_io: 2.000000  resc_cpu: 15932
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.800000) * inner (0.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Best:: JoinMethod: NestedLoop
       Cost: 2.000538  Degree: 1  Resp: 2.000538  Card: 0.000000 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000538  Resp: 2.000538  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.400000 (cpu filter eval) (= 50.040000 (per row) * 10.000000 (#rows))
                       =   30686.160000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001575  Resp: 5.001575  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 46618
      Resp_io: 5.000000  Resp_cpu: 46618
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000822  Resp: 3.000822  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24323
      Resp_io: 3.000000  Resp_cpu: 24323
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000822  Resp: 3.000822  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24323
      Resp_io: 3.000000  Resp_cpu: 24323
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000822
          resc: 3.000822  resc_io: 3.000000  resc_cpu: 24323
          resp: 3.000822  resp_io: 3.000000  resc_cpu: 24323
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T2  Alias: T2
    resc: 2.000538  card 0.000000  bytes:   deg: 1  resp: 2.000538
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001608  Resp: 7.001608  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001608 
     resc: 7.001608 resc_io: 5.000000 resc_cpu: 59261298
     resp: 7.001608 resp_io: 5.000000 resp_cpu: 59261298
  Outer table:  T2  Alias: T2
    resc: 2.000538  card 0.000000  bytes:   deg: 1  resp: 2.000538
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021862  Resp: 5.021862  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021862  
     resc: 5.021862 resc_io: 5.000000 resc_cpu: 647268
     resp: 5.021862 resp_io: 5.000000 resp_cpu: 647268
Join order aborted: cost > best plan cost
***********************
Join order[5]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001526  Resp: 5.001526  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45188
      Resp_io: 5.000000  Resp_cpu: 45188
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001526
          resc: 5.001526  resc_io: 5.000000  resc_cpu: 45188
          resp: 5.001526  resp_io: 5.000000  resc_cpu: 45188
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001560  Resp: 7.001560  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001560 
     resc: 7.001560 resc_io: 5.000000 resc_cpu: 59259868
     resp: 7.001560 resp_io: 5.000000 resp_cpu: 59259868
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021814  Resp: 5.021814  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021814  
     resc: 5.021814 resc_io: 5.000000 resc_cpu: 645838
     resp: 5.021814 resp_io: 5.000000 resp_cpu: 645838
Join order aborted: cost > best plan cost
***********************
Join order[6]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 680.000000 (cpu filter eval) (= 68.000000 (per row) * 10.000000 (#rows))
                       =   30865.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001532  Resp: 5.001532  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45368
      Resp_io: 5.000000  Resp_cpu: 45368
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9001
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000794  Resp: 4.000794  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23503
      Resp_io: 4.000000  Resp_cpu: 23503
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.200000 , col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.080000 
    NL Join : Cost: 3.000750  Resp: 3.000750  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 22203
      Resp_io: 3.000000  Resp_cpu: 22203
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000750
          resc: 3.000750  resc_io: 3.000000  resc_cpu: 22203
          resp: 3.000750  resp_io: 3.000000  resc_cpu: 22203
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (0.800000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Best:: JoinMethod: NestedLoop
       Cost: 3.000750  Degree: 1  Resp: 3.000750  Card: 0.000000 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 3.000750  Resp: 3.000750  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.400000 (cpu filter eval) (= 50.040000 (per row) * 10.000000 (#rows))
                       =   30686.160000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.001786  Resp: 6.001786  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 52889
      Resp_io: 6.000000  Resp_cpu: 52889
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30595
      Resp_io: 4.000000  Resp_cpu: 30595
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30595
      Resp_io: 4.000000  Resp_cpu: 30595
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001033
          resc: 4.001033  resc_io: 4.000000  resc_cpu: 30595
          resp: 4.001033  resp_io: 4.000000  resc_cpu: 30595
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.001820  Resp: 8.001820  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.001820 
     resc: 8.001820 resc_io: 6.000000 resc_cpu: 59267569
     resp: 8.001820 resp_io: 6.000000 resp_cpu: 59267569
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022074  Resp: 6.022074  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022074  
     resc: 6.022074 resc_io: 6.000000 resc_cpu: 653539
     resp: 6.022074 resp_io: 6.000000 resp_cpu: 653539
Join order aborted: cost > best plan cost
***********************
Permutations for Starting Table :1
Join order[7]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001526  Resp: 5.001526  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45188
      Resp_io: 5.000000  Resp_cpu: 45188
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001526
          resc: 5.001526  resc_io: 5.000000  resc_cpu: 45188
          resp: 5.001526  resp_io: 5.000000  resc_cpu: 45188
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001560  Resp: 7.001560  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001560 
     resc: 7.001560 resc_io: 5.000000 resc_cpu: 59259868
     resp: 7.001560 resp_io: 5.000000 resp_cpu: 59259868
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021814  Resp: 5.021814  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021814  
     resc: 5.021814 resc_io: 5.000000 resc_cpu: 645838
     resp: 5.021814 resp_io: 5.000000 resp_cpu: 645838
Join order aborted: cost > best plan cost
***********************
Join order[8]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 680.000000 (cpu filter eval) (= 68.000000 (per row) * 10.000000 (#rows))
                       =   30865.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001532  Resp: 5.001532  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45368
      Resp_io: 5.000000  Resp_cpu: 45368
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9001
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000794  Resp: 4.000794  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23503
      Resp_io: 4.000000  Resp_cpu: 23503
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.200000 , col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.080000 
    NL Join : Cost: 3.000750  Resp: 3.000750  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 22203
      Resp_io: 3.000000  Resp_cpu: 22203
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000750
          resc: 3.000750  resc_io: 3.000000  resc_cpu: 22203
          resp: 3.000750  resp_io: 3.000000  resc_cpu: 22203
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (0.800000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Best:: JoinMethod: NestedLoop
       Cost: 3.000750  Degree: 1  Resp: 3.000750  Card: 0.000000 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 3.000750  Resp: 3.000750  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.400000 (cpu filter eval) (= 50.040000 (per row) * 10.000000 (#rows))
                       =   30686.160000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.001786  Resp: 6.001786  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 52889
      Resp_io: 6.000000  Resp_cpu: 52889
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30595
      Resp_io: 4.000000  Resp_cpu: 30595
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30595
      Resp_io: 4.000000  Resp_cpu: 30595
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001033
          resc: 4.001033  resc_io: 4.000000  resc_cpu: 30595
          resp: 4.001033  resp_io: 4.000000  resc_cpu: 30595
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.001820  Resp: 8.001820  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.001820 
     resc: 8.001820 resc_io: 6.000000 resc_cpu: 59267569
     resp: 8.001820 resp_io: 6.000000 resp_cpu: 59267569
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022074  Resp: 6.022074  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022074  
     resc: 6.022074 resc_io: 6.000000 resc_cpu: 653539
     resp: 6.022074 resp_io: 6.000000 resp_cpu: 653539
Join order aborted: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[9]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 4.001297  Resp: 4.001297  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38387
      Resp_io: 4.000000  Resp_cpu: 38387
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000542
          resc: 2.000542  resc_io: 2.000000  resc_cpu: 16043
          resp: 2.000542  resp_io: 2.000000  resc_cpu: 16043
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.800000 = outer (0.800000) * inner (10.000000) * sel (0.100000)
Join cardinality for NL:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join cardinality without POSQ:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join Card - Rounded: 1 Computed: 0.800000
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021584  Resp: 4.021584  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021584  
     resc: 4.021584 resc_io: 4.000000 resc_cpu: 639037
     resp: 4.021584 resp_io: 4.000000 resp_cpu: 639037
Best:: JoinMethod: NestedLoop
       Cost: 2.000542  Degree: 1  Resp: 2.000542  Card: 0.800000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 2.000542  Resp: 2.000542  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2081  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.020421 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.020421
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 11.087618  Resp: 11.087618  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 2594104
      Resp_io: 11.000000  Resp_cpu: 2594104
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 12.064937  Resp: 12.064937  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1922590
      Resp_io: 12.000000  Resp_cpu: 1922590
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25304
      Resp_io: 3.000000  Resp_cpu: 25304
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25304
      Resp_io: 3.000000  Resp_cpu: 25304
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 7.9719e-12 
    NL Join : Cost: 3.000820  Resp: 3.000820  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24273
      Resp_io: 3.000000  Resp_cpu: 24273
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000820
          resc: 3.000820  resc_io: 3.000000  resc_cpu: 24273
          resp: 3.000820  resp_io: 3.000000  resc_cpu: 24273
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.800000) * inner (0.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 6.001032  Resp: 6.001032  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001032 
     resc: 6.001032 resc_io: 4.000000 resc_cpu: 59244228
     resp: 6.001032 resp_io: 4.000000 resp_cpu: 59244228
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020274  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021306  Resp: 4.021306  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021306  
     resc: 4.021306 resc_io: 4.000000 resc_cpu: 630795
     resp: 4.021306 resp_io: 4.000000 resp_cpu: 630795
Join order aborted: cost > best plan cost
***********************
Join order[10]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2081  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.526150 (cpu filter eval) (= 50.002553 (per row) * 10000.000000 (#rows))
                       =   2578061.526150
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 10.087337  Resp: 10.087337  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2585763
      Resp_io: 10.000000  Resp_cpu: 2585763
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 11.064656  Resp: 11.064656  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1914249
      Resp_io: 11.000000  Resp_cpu: 1914249
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-07  ix_sel_with_filters: 7.9719e-08 
    NL Join : Cost: 2.000538  Resp: 2.000538  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15932
      Resp_io: 2.000000  Resp_cpu: 15932
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000538
          resc: 2.000538  resc_io: 2.000000  resc_cpu: 15932
          resp: 2.000538  resp_io: 2.000000  resc_cpu: 15932
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.800000) * inner (0.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Best:: JoinMethod: NestedLoop
       Cost: 2.000538  Degree: 1  Resp: 2.000538  Card: 0.000000 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000538  Resp: 2.000538  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.400000 (cpu filter eval) (= 50.040000 (per row) * 10.000000 (#rows))
                       =   30686.160000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001575  Resp: 5.001575  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 46618
      Resp_io: 5.000000  Resp_cpu: 46618
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000822  Resp: 3.000822  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24323
      Resp_io: 3.000000  Resp_cpu: 24323
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000822  Resp: 3.000822  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24323
      Resp_io: 3.000000  Resp_cpu: 24323
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000822
          resc: 3.000822  resc_io: 3.000000  resc_cpu: 24323
          resp: 3.000822  resp_io: 3.000000  resc_cpu: 24323
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T2  Alias: T2
    resc: 2.000538  card 0.000000  bytes:   deg: 1  resp: 2.000538
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001608  Resp: 7.001608  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001608 
     resc: 7.001608 resc_io: 5.000000 resc_cpu: 59261298
     resp: 7.001608 resp_io: 5.000000 resp_cpu: 59261298
  Outer table:  T2  Alias: T2
    resc: 2.000538  card 0.000000  bytes:   deg: 1  resp: 2.000538
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021862  Resp: 5.021862  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021862  
     resc: 5.021862 resc_io: 5.000000 resc_cpu: 647268
     resp: 5.021862 resp_io: 5.000000 resp_cpu: 647268
Join order aborted: cost > best plan cost
***********************
Join order[11]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001526  Resp: 5.001526  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45188
      Resp_io: 5.000000  Resp_cpu: 45188
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001526
          resc: 5.001526  resc_io: 5.000000  resc_cpu: 45188
          resp: 5.001526  resp_io: 5.000000  resc_cpu: 45188
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001560  Resp: 7.001560  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001560 
     resc: 7.001560 resc_io: 5.000000 resc_cpu: 59259868
     resp: 7.001560 resp_io: 5.000000 resp_cpu: 59259868
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021814  Resp: 5.021814  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021814  
     resc: 5.021814 resc_io: 5.000000 resc_cpu: 645838
     resp: 5.021814 resp_io: 5.000000 resp_cpu: 645838
Join order aborted: cost > best plan cost
***********************
Join order[12]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 680.000000 (cpu filter eval) (= 68.000000 (per row) * 10.000000 (#rows))
                       =   30865.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001532  Resp: 5.001532  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45368
      Resp_io: 5.000000  Resp_cpu: 45368
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9001
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000794  Resp: 4.000794  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23503
      Resp_io: 4.000000  Resp_cpu: 23503
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.200000 , col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.080000 
    NL Join : Cost: 3.000750  Resp: 3.000750  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 22203
      Resp_io: 3.000000  Resp_cpu: 22203
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000750
          resc: 3.000750  resc_io: 3.000000  resc_cpu: 22203
          resp: 3.000750  resp_io: 3.000000  resc_cpu: 22203
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (0.800000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Best:: JoinMethod: NestedLoop
       Cost: 3.000750  Degree: 1  Resp: 3.000750  Card: 0.000000 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 3.000750  Resp: 3.000750  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.400000 (cpu filter eval) (= 50.040000 (per row) * 10.000000 (#rows))
                       =   30686.160000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.001786  Resp: 6.001786  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 52889
      Resp_io: 6.000000  Resp_cpu: 52889
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30595
      Resp_io: 4.000000  Resp_cpu: 30595
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30595
      Resp_io: 4.000000  Resp_cpu: 30595
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001033
          resc: 4.001033  resc_io: 4.000000  resc_cpu: 30595
          resp: 4.001033  resp_io: 4.000000  resc_cpu: 30595
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.001820  Resp: 8.001820  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.001820 
     resc: 8.001820 resc_io: 6.000000 resc_cpu: 59267569
     resp: 8.001820 resp_io: 6.000000 resp_cpu: 59267569
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022074  Resp: 6.022074  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022074  
     resc: 6.022074 resc_io: 6.000000 resc_cpu: 653539
     resp: 6.022074 resp_io: 6.000000 resp_cpu: 653539
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between T1[T1](serial) and L[L](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL
--- Distribution method for 
join between L[L](serial) and T2[T2](serial); jm = 14; right side access path = IndexRange
kkopqIsSerialJoin: serial NLJ: both inputs serial
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

LORE: or-expansion-subheap (delete addr=0x7fa8a287fe58, in-use=123528, alloc=131000)
LORE: or-expansion is better cost:6.001675

LORE: ******** Same chain after expansion ********
****************
QUERY BLOCK TEXT
****************
SELECT /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null FROM l, t1, t2 WHERE  
(  ( t1.t1f = 0 AND t2.t2f1 BETWEEN 9 AND 10)       OR 
   ( t1.t1f = 1 AND t2.t2f1 = 14 AND t2.t2f2 = 13  )   )  AND 
    ( l.id1 = t1.id1 AND l.id2 = t2.id2 )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$1 nbfros=3 flg=0
  fro(0): flg=4 objn=73956 hint_alias="L"@"SEL$1"
  fro(1): flg=4 objn=73958 hint_alias="T1"@"SEL$1"
  fro(2): flg=4 objn=73960 hint_alias="T2"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 2467 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: T2  Alias: T2
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  25  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T2F1(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#3): T2F2(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#1): ID2(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: T2_ID2  Col#: 1
  LVLS: 1  #LB: 20  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: T2_T2F1_T2F2_ID2  Col#: 2 3 1
  LVLS: 1  #LB: 29  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 168.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: T1  Alias: T1
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T1F(NUMBER)
    AvgLen: 3 NDV: 5 Nulls: 0 Density: 0.200000 Min: 0.000000 Max: 4.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: T1_T1F_ID1  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  L  Alias:  L
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
  Column (#2): ID2(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: L_ID1  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$1 (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for L
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for L[L] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: L  Alias: L
    Card: Original: 10.000000  Rounded: 10  Computed: 10.000000  Non Adjusted: 10.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                       =   30185.760000
  Access Path: TableScan
    Cost:  3.001020  Resp: 3.001020  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 30186
      Resp_io: 3.000000  Resp_cpu: 30186
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3.001020  Degree: 1  Resp: 3.001020  Card: 10.000000  Bytes: 0.000000

Access path analysis for T1
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T1[T1] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 0.200000 , col: #2 


 kkecdn: Single Table Predicate:"T1"."T1F"=1
  Estimated selectivity: 0.200000 , col: #2 

 kkecdn: Single Table Predicate:"T1"."T1F"=0 OR "T1"."T1F"=1
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Table: T1  Alias: T1
    Card: Original: 10.000000  Rounded: 1  Computed: 0.800000  Non Adjusted: 0.800000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 680.000000 (cpu filter eval) (= 68.000000 (per row) * 10.000000 (#rows))
                       =   30865.760000
  Access Path: TableScan
    Cost:  3.001043  Resp: 3.001043  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 30866
      Resp_io: 3.000000  Resp_cpu: 30866
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9001
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000304  Resp: 2.000304  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9001
      Resp_io: 2.000000  Resp_cpu: 9001
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.080000 
    Cost: 1.000260  Resp: 1.000260  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T1_T1F_ID1
         Cost: 1.000260  Degree: 1  Resp: 1.000260  Card: 0.800000  Bytes: 0.000000

Access path analysis for T2
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T2[T2] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 0.125000 , col: #2 
  Estimated selectivity: 0.125000 , col: #3 


 kkecdn: Single Table Predicate:"T2"."T2F1"=14
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F2"=13
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate: ?? 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F1">=9
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F1"<=10
  Estimated selectivity: 1.000000 , col: #2 
  Table: T2  Alias: T2
    Card: Original: 10000.000000  Rounded: 1  Computed: 0.000000  Non Adjusted: 0.000000
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2081  ("T2"."T2F1">=9)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.526150 (cpu filter eval) (= 50.002553 (per row) * 10000.000000 (#rows))
                       =   2578061.526150
  Access Path: TableScan
    Cost:  9.087077  Resp: 9.087077  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2578062
      Resp_io: 9.000000  Resp_cpu: 2578062
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.064395  Resp: 10.064395  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1906547
      Resp_io: 10.000000  Resp_cpu: 1906547
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 8.9286e-07  ix_sel_with_filters: 7.9719e-08 
    Cost: 2.000490  Resp: 2.000490  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T2_T2F1_T2F2_ID2
         Cost: 2.000490  Degree: 1  Resp: 2.000490  Card: 0.000000  Bytes: 0.000000

(newjo-restore) [2 1 0 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is OR expanded SEL$1 (#0)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  L[L]#0  T1[T1]#1  T2[T2]#2

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.200000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.200000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.200000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 568.000000 (cpu filter eval) (= 56.800000 (per row) * 10.000000 (#rows))
                       =   30753.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 15.011407  Resp: 15.011407  Degree: 1
      Cost_io: 15.000000  Cost_cpu: 337723
      Resp_io: 15.000000  Resp_cpu: 337723
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.400000  resc_cpu: 8889
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 7.004022  Resp: 7.004022  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 119080
      Resp_io: 7.000000  Resp_cpu: 119080
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.200000 , col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.008000 
    NL Join : Cost: 3.001405  Resp: 3.001405  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 41586
      Resp_io: 3.000000  Resp_cpu: 41586
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.001405
          resc: 3.001405  resc_io: 3.000000  resc_cpu: 41586
          resp: 3.001405  resp_io: 3.000000  resc_cpu: 41586
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.800000 = outer (10.000000) * inner (0.800000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.800000
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
SM Join (with index on outer)
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 2.000000  resc_cpu: 17943
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2.000606  Resp: 2.000606  Degree: 1
  Outer table:  L  Alias: L
    resc: 2.000606  card 10.000000  bytes:   deg: 1  resp: 2.000606
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 4.000866  Resp: 4.000866  [multiMatchCost=0.000000]
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021599  Resp: 4.021599  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021599  
     resc: 4.021599 resc_io: 4.000000 resc_cpu: 639487
     resp: 4.021599 resp_io: 4.000000 resp_cpu: 639487
Best:: JoinMethod: NestedLoop
       Cost: 3.001405  Degree: 1  Resp: 3.001405  Card: 0.800000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 3.001405  Resp: 3.001405  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2081  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.020421 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.020421
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 12.088481  Resp: 12.088481  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 2619647
      Resp_io: 12.000000  Resp_cpu: 2619647
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 13.065800  Resp: 13.065800  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 1948133
      Resp_io: 13.000000  Resp_cpu: 1948133
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001717  Resp: 4.001717  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 50847
      Resp_io: 4.000000  Resp_cpu: 50847
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001717  Resp: 4.001717  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 50847
      Resp_io: 4.000000  Resp_cpu: 50847
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 7.9719e-12 
    NL Join : Cost: 4.001683  Resp: 4.001683  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 49816
      Resp_io: 4.000000  Resp_cpu: 49816
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001683
          resc: 4.001683  resc_io: 4.000000  resc_cpu: 49816
          resp: 4.001683  resp_io: 4.000000  resc_cpu: 49816
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.800000) * inner (0.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T1  Alias: T1
    resc: 3.001405  card 0.800000  bytes:   deg: 1  resp: 3.001405
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 7.001894  Resp: 7.001894  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001894 
     resc: 7.001894 resc_io: 5.000000 resc_cpu: 59269771
     resp: 7.001894 resp_io: 5.000000 resp_cpu: 59269771
  Outer table:  T1  Alias: T1
    resc: 3.001405  card 0.800000  bytes:   deg: 1  resp: 3.001405
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020274  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.022168  Resp: 5.022168  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.022168  
     resc: 5.022168 resc_io: 5.000000 resc_cpu: 656338
     resp: 5.022168 resp_io: 5.000000 resp_cpu: 656338
Best:: JoinMethod: NestedLoop
       Cost: 4.001683  Degree: 1  Resp: 4.001683  Card: 0.000000 Bytes: 
***********************
Best so far:  Table#: 0  cost: 3.001020  card: 10.000000  bytes: 60.000000
              Table#: 1  cost: 3.001405  card: 0.800000  bytes: 12.000000
              Table#: 2  cost: 4.001683  card: 0.000000  bytes: 22.000000
***********************
Join order[2]:  L[L]#0  T2[T2]#2  T1[T1]#1

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2081  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.020421 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.020421
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 72.871785  Resp: 72.871785  Degree: 1
      Cost_io: 72.000000  Cost_cpu: 25810796
      Resp_io: 72.000000  Resp_cpu: 25810796
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 83.644974  Resp: 83.644974  Degree: 1
      Cost_io: 83.000000  Cost_cpu: 19095654
      Resp_io: 83.000000  Resp_cpu: 19095654
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004148  Resp: 13.004148  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122800
      Resp_io: 13.000000  Resp_cpu: 122800
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004148  Resp: 13.004148  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122800
      Resp_io: 13.000000  Resp_cpu: 122800
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 7.9719e-12 
    NL Join : Cost: 13.003799  Resp: 13.003799  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 112489
      Resp_io: 13.000000  Resp_cpu: 112489
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 13.003799
          resc: 13.003799  resc_io: 13.000000  resc_cpu: 112489
          resp: 13.003799  resp_io: 13.000000  resc_cpu: 112489
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (10.000000) * inner (0.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 7.001560  Resp: 7.001560  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001560 
     resc: 7.001560 resc_io: 5.000000 resc_cpu: 59259868
     resp: 7.001560 resp_io: 5.000000 resp_cpu: 59259868
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021829  Resp: 5.021829  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021829  
     resc: 5.021829 resc_io: 5.000000 resc_cpu: 646288
     resp: 5.021829 resp_io: 5.000000 resp_cpu: 646288
Join order aborted: cost > best plan cost
***********************
Join order[3]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 4.001297  Resp: 4.001297  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38387
      Resp_io: 4.000000  Resp_cpu: 38387
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000542
          resc: 2.000542  resc_io: 2.000000  resc_cpu: 16043
          resp: 2.000542  resp_io: 2.000000  resc_cpu: 16043
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.800000 = outer (0.800000) * inner (10.000000) * sel (0.100000)
Join cardinality for NL:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join cardinality without POSQ:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join Card - Rounded: 1 Computed: 0.800000
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021584  Resp: 4.021584  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021584  
     resc: 4.021584 resc_io: 4.000000 resc_cpu: 639037
     resp: 4.021584 resp_io: 4.000000 resp_cpu: 639037
Best:: JoinMethod: NestedLoop
       Cost: 2.000542  Degree: 1  Resp: 2.000542  Card: 0.800000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 2.000542  Resp: 2.000542  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2081  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.020421 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.020421
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 11.087618  Resp: 11.087618  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 2594104
      Resp_io: 11.000000  Resp_cpu: 2594104
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 12.064937  Resp: 12.064937  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1922590
      Resp_io: 12.000000  Resp_cpu: 1922590
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25304
      Resp_io: 3.000000  Resp_cpu: 25304
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25304
      Resp_io: 3.000000  Resp_cpu: 25304
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 7.9719e-12 
    NL Join : Cost: 3.000820  Resp: 3.000820  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24273
      Resp_io: 3.000000  Resp_cpu: 24273
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000820
          resc: 3.000820  resc_io: 3.000000  resc_cpu: 24273
          resp: 3.000820  resp_io: 3.000000  resc_cpu: 24273
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.800000) * inner (0.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 6.001032  Resp: 6.001032  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001032 
     resc: 6.001032 resc_io: 4.000000 resc_cpu: 59244228
     resp: 6.001032 resp_io: 4.000000 resp_cpu: 59244228
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020274  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021306  Resp: 4.021306  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021306  
     resc: 4.021306 resc_io: 4.000000 resc_cpu: 630795
     resp: 4.021306 resp_io: 4.000000 resp_cpu: 630795
Best:: JoinMethod: NestedLoop
       Cost: 3.000820  Degree: 1  Resp: 3.000820  Card: 0.000000 Bytes: 
***********************
Best so far:  Table#: 1  cost: 1.000260  card: 0.800000  bytes: 6.000000
              Table#: 0  cost: 2.000542  card: 0.800000  bytes: 12.000000
              Table#: 2  cost: 3.000820  card: 0.000000  bytes: 22.000000
***********************
Join order[4]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2081  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.526150 (cpu filter eval) (= 50.002553 (per row) * 10000.000000 (#rows))
                       =   2578061.526150
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 10.087337  Resp: 10.087337  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2585763
      Resp_io: 10.000000  Resp_cpu: 2585763
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 11.064656  Resp: 11.064656  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1914249
      Resp_io: 11.000000  Resp_cpu: 1914249
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-07  ix_sel_with_filters: 7.9719e-08 
    NL Join : Cost: 2.000538  Resp: 2.000538  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15932
      Resp_io: 2.000000  Resp_cpu: 15932
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000538
          resc: 2.000538  resc_io: 2.000000  resc_cpu: 15932
          resp: 2.000538  resp_io: 2.000000  resc_cpu: 15932
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.800000) * inner (0.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Best:: JoinMethod: NestedLoop
       Cost: 2.000538  Degree: 1  Resp: 2.000538  Card: 0.000000 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000538  Resp: 2.000538  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.400000 (cpu filter eval) (= 50.040000 (per row) * 10.000000 (#rows))
                       =   30686.160000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001575  Resp: 5.001575  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 46618
      Resp_io: 5.000000  Resp_cpu: 46618
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000822  Resp: 3.000822  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24323
      Resp_io: 3.000000  Resp_cpu: 24323
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000822  Resp: 3.000822  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24323
      Resp_io: 3.000000  Resp_cpu: 24323
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000822
          resc: 3.000822  resc_io: 3.000000  resc_cpu: 24323
          resp: 3.000822  resp_io: 3.000000  resc_cpu: 24323
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T2  Alias: T2
    resc: 2.000538  card 0.000000  bytes:   deg: 1  resp: 2.000538
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001608  Resp: 7.001608  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001608 
     resc: 7.001608 resc_io: 5.000000 resc_cpu: 59261298
     resp: 7.001608 resp_io: 5.000000 resp_cpu: 59261298
  Outer table:  T2  Alias: T2
    resc: 2.000538  card 0.000000  bytes:   deg: 1  resp: 2.000538
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021862  Resp: 5.021862  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021862  
     resc: 5.021862 resc_io: 5.000000 resc_cpu: 647268
     resp: 5.021862 resp_io: 5.000000 resp_cpu: 647268
Join order aborted: cost > best plan cost
***********************
Join order[5]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001526  Resp: 5.001526  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45188
      Resp_io: 5.000000  Resp_cpu: 45188
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001526
          resc: 5.001526  resc_io: 5.000000  resc_cpu: 45188
          resp: 5.001526  resp_io: 5.000000  resc_cpu: 45188
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001560  Resp: 7.001560  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001560 
     resc: 7.001560 resc_io: 5.000000 resc_cpu: 59259868
     resp: 7.001560 resp_io: 5.000000 resp_cpu: 59259868
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021814  Resp: 5.021814  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021814  
     resc: 5.021814 resc_io: 5.000000 resc_cpu: 645838
     resp: 5.021814 resp_io: 5.000000 resp_cpu: 645838
Join order aborted: cost > best plan cost
***********************
Join order[6]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 680.000000 (cpu filter eval) (= 68.000000 (per row) * 10.000000 (#rows))
                       =   30865.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001532  Resp: 5.001532  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45368
      Resp_io: 5.000000  Resp_cpu: 45368
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9001
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000794  Resp: 4.000794  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23503
      Resp_io: 4.000000  Resp_cpu: 23503
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.200000 , col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.080000 
    NL Join : Cost: 3.000750  Resp: 3.000750  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 22203
      Resp_io: 3.000000  Resp_cpu: 22203
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000750
          resc: 3.000750  resc_io: 3.000000  resc_cpu: 22203
          resp: 3.000750  resp_io: 3.000000  resc_cpu: 22203
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (0.800000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Best:: JoinMethod: NestedLoop
       Cost: 3.000750  Degree: 1  Resp: 3.000750  Card: 0.000000 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 3.000750  Resp: 3.000750  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.400000 (cpu filter eval) (= 50.040000 (per row) * 10.000000 (#rows))
                       =   30686.160000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.001786  Resp: 6.001786  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 52889
      Resp_io: 6.000000  Resp_cpu: 52889
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30595
      Resp_io: 4.000000  Resp_cpu: 30595
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30595
      Resp_io: 4.000000  Resp_cpu: 30595
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001033
          resc: 4.001033  resc_io: 4.000000  resc_cpu: 30595
          resp: 4.001033  resp_io: 4.000000  resc_cpu: 30595
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.001820  Resp: 8.001820  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.001820 
     resc: 8.001820 resc_io: 6.000000 resc_cpu: 59267569
     resp: 8.001820 resp_io: 6.000000 resp_cpu: 59267569
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022074  Resp: 6.022074  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022074  
     resc: 6.022074 resc_io: 6.000000 resc_cpu: 653539
     resp: 6.022074 resp_io: 6.000000 resp_cpu: 653539
Join order aborted: cost > best plan cost
***********************
Permutations for Starting Table :1
Join order[7]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001526  Resp: 5.001526  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45188
      Resp_io: 5.000000  Resp_cpu: 45188
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001526
          resc: 5.001526  resc_io: 5.000000  resc_cpu: 45188
          resp: 5.001526  resp_io: 5.000000  resc_cpu: 45188
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001560  Resp: 7.001560  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001560 
     resc: 7.001560 resc_io: 5.000000 resc_cpu: 59259868
     resp: 7.001560 resp_io: 5.000000 resp_cpu: 59259868
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021814  Resp: 5.021814  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021814  
     resc: 5.021814 resc_io: 5.000000 resc_cpu: 645838
     resp: 5.021814 resp_io: 5.000000 resp_cpu: 645838
Join order aborted: cost > best plan cost
***********************
Join order[8]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 680.000000 (cpu filter eval) (= 68.000000 (per row) * 10.000000 (#rows))
                       =   30865.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001532  Resp: 5.001532  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45368
      Resp_io: 5.000000  Resp_cpu: 45368
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9001
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000794  Resp: 4.000794  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23503
      Resp_io: 4.000000  Resp_cpu: 23503
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.200000 , col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.080000 
    NL Join : Cost: 3.000750  Resp: 3.000750  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 22203
      Resp_io: 3.000000  Resp_cpu: 22203
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000750
          resc: 3.000750  resc_io: 3.000000  resc_cpu: 22203
          resp: 3.000750  resp_io: 3.000000  resc_cpu: 22203
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (0.800000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Best:: JoinMethod: NestedLoop
       Cost: 3.000750  Degree: 1  Resp: 3.000750  Card: 0.000000 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 3.000750  Resp: 3.000750  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.400000 (cpu filter eval) (= 50.040000 (per row) * 10.000000 (#rows))
                       =   30686.160000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.001786  Resp: 6.001786  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 52889
      Resp_io: 6.000000  Resp_cpu: 52889
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30595
      Resp_io: 4.000000  Resp_cpu: 30595
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30595
      Resp_io: 4.000000  Resp_cpu: 30595
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001033
          resc: 4.001033  resc_io: 4.000000  resc_cpu: 30595
          resp: 4.001033  resp_io: 4.000000  resc_cpu: 30595
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.001820  Resp: 8.001820  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.001820 
     resc: 8.001820 resc_io: 6.000000 resc_cpu: 59267569
     resp: 8.001820 resp_io: 6.000000 resp_cpu: 59267569
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022074  Resp: 6.022074  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022074  
     resc: 6.022074 resc_io: 6.000000 resc_cpu: 653539
     resp: 6.022074 resp_io: 6.000000 resp_cpu: 653539
Join order aborted: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[9]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 4.001297  Resp: 4.001297  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38387
      Resp_io: 4.000000  Resp_cpu: 38387
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000542
          resc: 2.000542  resc_io: 2.000000  resc_cpu: 16043
          resp: 2.000542  resp_io: 2.000000  resc_cpu: 16043
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.800000 = outer (0.800000) * inner (10.000000) * sel (0.100000)
Join cardinality for NL:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join cardinality without POSQ:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join Card - Rounded: 1 Computed: 0.800000
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021584  Resp: 4.021584  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021584  
     resc: 4.021584 resc_io: 4.000000 resc_cpu: 639037
     resp: 4.021584 resp_io: 4.000000 resp_cpu: 639037
Best:: JoinMethod: NestedLoop
       Cost: 2.000542  Degree: 1  Resp: 2.000542  Card: 0.800000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 2.000542  Resp: 2.000542  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2081  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.020421 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.020421
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 11.087618  Resp: 11.087618  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 2594104
      Resp_io: 11.000000  Resp_cpu: 2594104
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 12.064937  Resp: 12.064937  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1922590
      Resp_io: 12.000000  Resp_cpu: 1922590
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25304
      Resp_io: 3.000000  Resp_cpu: 25304
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25304
      Resp_io: 3.000000  Resp_cpu: 25304
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 7.9719e-12 
    NL Join : Cost: 3.000820  Resp: 3.000820  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24273
      Resp_io: 3.000000  Resp_cpu: 24273
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000820
          resc: 3.000820  resc_io: 3.000000  resc_cpu: 24273
          resp: 3.000820  resp_io: 3.000000  resc_cpu: 24273
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.800000) * inner (0.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 6.001032  Resp: 6.001032  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001032 
     resc: 6.001032 resc_io: 4.000000 resc_cpu: 59244228
     resp: 6.001032 resp_io: 4.000000 resp_cpu: 59244228
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020274  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021306  Resp: 4.021306  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021306  
     resc: 4.021306 resc_io: 4.000000 resc_cpu: 630795
     resp: 4.021306 resp_io: 4.000000 resp_cpu: 630795
Join order aborted: cost > best plan cost
***********************
Join order[10]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2081  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.526150 (cpu filter eval) (= 50.002553 (per row) * 10000.000000 (#rows))
                       =   2578061.526150
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 10.087337  Resp: 10.087337  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2585763
      Resp_io: 10.000000  Resp_cpu: 2585763
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 11.064656  Resp: 11.064656  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1914249
      Resp_io: 11.000000  Resp_cpu: 1914249
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-07  ix_sel_with_filters: 7.9719e-08 
    NL Join : Cost: 2.000538  Resp: 2.000538  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15932
      Resp_io: 2.000000  Resp_cpu: 15932
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000538
          resc: 2.000538  resc_io: 2.000000  resc_cpu: 15932
          resp: 2.000538  resp_io: 2.000000  resc_cpu: 15932
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.800000) * inner (0.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Best:: JoinMethod: NestedLoop
       Cost: 2.000538  Degree: 1  Resp: 2.000538  Card: 0.000000 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000538  Resp: 2.000538  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.400000 (cpu filter eval) (= 50.040000 (per row) * 10.000000 (#rows))
                       =   30686.160000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001575  Resp: 5.001575  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 46618
      Resp_io: 5.000000  Resp_cpu: 46618
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000822  Resp: 3.000822  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24323
      Resp_io: 3.000000  Resp_cpu: 24323
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000822  Resp: 3.000822  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24323
      Resp_io: 3.000000  Resp_cpu: 24323
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000822
          resc: 3.000822  resc_io: 3.000000  resc_cpu: 24323
          resp: 3.000822  resp_io: 3.000000  resc_cpu: 24323
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T2  Alias: T2
    resc: 2.000538  card 0.000000  bytes:   deg: 1  resp: 2.000538
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001608  Resp: 7.001608  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001608 
     resc: 7.001608 resc_io: 5.000000 resc_cpu: 59261298
     resp: 7.001608 resp_io: 5.000000 resp_cpu: 59261298
  Outer table:  T2  Alias: T2
    resc: 2.000538  card 0.000000  bytes:   deg: 1  resp: 2.000538
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021862  Resp: 5.021862  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021862  
     resc: 5.021862 resc_io: 5.000000 resc_cpu: 647268
     resp: 5.021862 resp_io: 5.000000 resp_cpu: 647268
Join order aborted: cost > best plan cost
***********************
Join order[11]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001526  Resp: 5.001526  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45188
      Resp_io: 5.000000  Resp_cpu: 45188
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001526
          resc: 5.001526  resc_io: 5.000000  resc_cpu: 45188
          resp: 5.001526  resp_io: 5.000000  resc_cpu: 45188
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001560  Resp: 7.001560  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001560 
     resc: 7.001560 resc_io: 5.000000 resc_cpu: 59259868
     resp: 7.001560 resp_io: 5.000000 resp_cpu: 59259868
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021814  Resp: 5.021814  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021814  
     resc: 5.021814 resc_io: 5.000000 resc_cpu: 645838
     resp: 5.021814 resp_io: 5.000000 resp_cpu: 645838
Join order aborted: cost > best plan cost
***********************
Join order[12]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 680.000000 (cpu filter eval) (= 68.000000 (per row) * 10.000000 (#rows))
                       =   30865.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001532  Resp: 5.001532  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45368
      Resp_io: 5.000000  Resp_cpu: 45368
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9001
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000794  Resp: 4.000794  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23503
      Resp_io: 4.000000  Resp_cpu: 23503
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.200000 , col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.080000 
    NL Join : Cost: 3.000750  Resp: 3.000750  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 22203
      Resp_io: 3.000000  Resp_cpu: 22203
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000750
          resc: 3.000750  resc_io: 3.000000  resc_cpu: 22203
          resp: 3.000750  resp_io: 3.000000  resc_cpu: 22203
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (0.800000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Best:: JoinMethod: NestedLoop
       Cost: 3.000750  Degree: 1  Resp: 3.000750  Card: 0.000000 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 3.000750  Resp: 3.000750  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.400000 (cpu filter eval) (= 50.040000 (per row) * 10.000000 (#rows))
                       =   30686.160000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.001786  Resp: 6.001786  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 52889
      Resp_io: 6.000000  Resp_cpu: 52889
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30595
      Resp_io: 4.000000  Resp_cpu: 30595
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30595
      Resp_io: 4.000000  Resp_cpu: 30595
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001033
          resc: 4.001033  resc_io: 4.000000  resc_cpu: 30595
          resp: 4.001033  resp_io: 4.000000  resc_cpu: 30595
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.001820  Resp: 8.001820  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.001820 
     resc: 8.001820 resc_io: 6.000000 resc_cpu: 59267569
     resp: 8.001820 resp_io: 6.000000 resp_cpu: 59267569
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022074  Resp: 6.022074  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022074  
     resc: 6.022074 resc_io: 6.000000 resc_cpu: 653539
     resp: 6.022074 resp_io: 6.000000 resp_cpu: 653539
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between T1[T1](serial) and L[L](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL
--- Distribution method for 
join between L[L](serial) and T2[T2](serial); jm = 14; right side access path = IndexRange
kkopqIsSerialJoin: serial NLJ: both inputs serial
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

LORE: Trying or-Expansion on query block SEL$1 (#0)
LORE: Or-expansion bypassed: No index driver found in OR chain: 
id=0  predicate=(LNNVL("T2"."T2F1"=14) OR LNNVL("T2"."T2F2"=13)) AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 AND ("T1"."T1F"=0 OR "T1"."T1F"=1) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"
****************
QUERY BLOCK TEXT
****************
SELECT /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null FROM l, t1, t2 WHERE  
(  ( t1.t1f = 0 AND t2.t2f1 BETWEEN 9 AND 10)       OR 
   ( t1.t1f = 1 AND t2.t2f1 = 14 AND t2.t2f2 = 13  )   )  AND 
    ( l.id1 = t1.id1 AND l.id2 = t2.id2 )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$1 nbfros=3 flg=0
  fro(0): flg=4 objn=73956 hint_alias="L"@"SEL$1"
  fro(1): flg=4 objn=73958 hint_alias="T1"@"SEL$1"
  fro(2): flg=4 objn=73960 hint_alias="T2"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 2467 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: T2  Alias: T2
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  25  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T2F1(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#3): T2F2(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#1): ID2(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: T2_ID2  Col#: 1
  LVLS: 1  #LB: 20  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: T2_T2F1_T2F2_ID2  Col#: 2 3 1
  LVLS: 1  #LB: 29  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 168.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: T1  Alias: T1
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T1F(NUMBER)
    AvgLen: 3 NDV: 5 Nulls: 0 Density: 0.200000 Min: 0.000000 Max: 4.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: T1_T1F_ID1  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  L  Alias:  L
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
  Column (#2): ID2(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: L_ID1  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$1 (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for L
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for L[L] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: L  Alias: L
    Card: Original: 10.000000  Rounded: 10  Computed: 10.000000  Non Adjusted: 10.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                       =   30185.760000
  Access Path: TableScan
    Cost:  3.001020  Resp: 3.001020  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 30186
      Resp_io: 3.000000  Resp_cpu: 30186
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3.001020  Degree: 1  Resp: 3.001020  Card: 10.000000  Bytes: 0.000000

Access path analysis for T1
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T1[T1] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 0.200000 , col: #2 


 kkecdn: Single Table Predicate:"T1"."T1F"=0
  Estimated selectivity: 0.200000 , col: #2 

 kkecdn: Single Table Predicate:"T1"."T1F"=0 OR "T1"."T1F"=1
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Table: T1  Alias: T1
    Card: Original: 10.000000  Rounded: 1  Computed: 0.800000  Non Adjusted: 0.800000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=0)
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 680.000000 (cpu filter eval) (= 68.000000 (per row) * 10.000000 (#rows))
                       =   30865.760000
  Access Path: TableScan
    Cost:  3.001043  Resp: 3.001043  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 30866
      Resp_io: 3.000000  Resp_cpu: 30866
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9001
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000304  Resp: 2.000304  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9001
      Resp_io: 2.000000  Resp_cpu: 9001
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.080000 
    Cost: 1.000260  Resp: 1.000260  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T1_T1F_ID1
         Cost: 1.000260  Degree: 1  Resp: 1.000260  Card: 0.800000  Bytes: 0.000000

Access path analysis for T2
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T2[T2] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE


 kkecdn: Single Table Predicate:"T2"."T2F1">=9
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F1"<=10
  Estimated selectivity: 1.000000 , col: #2 

 kkecdn: Single Table Predicate: ?? 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F1">=9
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F1"<=10
  Estimated selectivity: 1.000000 , col: #2 
  Table: T2  Alias: T2
    Card: Original: 10000.000000  Rounded: 1250  Computed: 1249.998884  Non Adjusted: 1249.998884
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2080  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 556600.957487 (cpu filter eval) (= 55.660096 (per row) * 10000.000000 (#rows))
                       =   2634636.957487
  Access Path: TableScan
    Cost:  9.088987  Resp: 9.088987  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2634637
      Resp_io: 9.000000  Resp_cpu: 2634637
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1963123
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.066306  Resp: 10.066306  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1963123
      Resp_io: 10.000000  Resp_cpu: 1963123
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 5.000000  resc_cpu: 285607
    ix_sel: 0.125000  ix_sel_with_filters: 0.011161 
    Cost: 5.012135  Resp: 5.012135  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T2_T2F1_T2F2_ID2
         Cost: 5.012135  Degree: 1  Resp: 5.012135  Card: 1249.998884  Bytes: 0.000000

(newjo-restore) [2 1 0 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is OR expanded SEL$1 (#0)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  L[L]#0  T1[T1]#1  T2[T2]#2

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.200000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=0)
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.200000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.200000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 568.000000 (cpu filter eval) (= 56.800000 (per row) * 10.000000 (#rows))
                       =   30753.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 15.011407  Resp: 15.011407  Degree: 1
      Cost_io: 15.000000  Cost_cpu: 337723
      Resp_io: 15.000000  Resp_cpu: 337723
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.400000  resc_cpu: 8889
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 7.004022  Resp: 7.004022  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 119080
      Resp_io: 7.000000  Resp_cpu: 119080
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.200000 , col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.008000 
    NL Join : Cost: 3.001405  Resp: 3.001405  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 41586
      Resp_io: 3.000000  Resp_cpu: 41586
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.001405
          resc: 3.001405  resc_io: 3.000000  resc_cpu: 41586
          resp: 3.001405  resp_io: 3.000000  resc_cpu: 41586
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.800000 = outer (10.000000) * inner (0.800000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.800000
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
SM Join (with index on outer)
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 2.000000  resc_cpu: 17943
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2.000606  Resp: 2.000606  Degree: 1
  Outer table:  L  Alias: L
    resc: 2.000606  card 10.000000  bytes:   deg: 1  resp: 2.000606
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 4.000866  Resp: 4.000866  [multiMatchCost=0.000000]
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021599  Resp: 4.021599  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021599  
     resc: 4.021599 resc_io: 4.000000 resc_cpu: 639487
     resp: 4.021599 resp_io: 4.000000 resp_cpu: 639487
Best:: JoinMethod: NestedLoop
       Cost: 3.001405  Degree: 1  Resp: 3.001405  Card: 0.800000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 3.001405  Resp: 3.001405  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Cost of predicates:
    io = 0.000000, cpu = 60.000500, sel = 1.000000 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.800000 flag = 2048  (LNNVL("T1"."T1F"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2048  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2064  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2080  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500449.107324 (cpu filter eval) (= 50.044911 (per row) * 10000.000000 (#rows))
                       =   2578485.107324
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 12.088495  Resp: 12.088495  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 2620071
      Resp_io: 12.000000  Resp_cpu: 2620071
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906971
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 13.065814  Resp: 13.065814  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 1948557
      Resp_io: 13.000000  Resp_cpu: 1948557
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001718  Resp: 4.001718  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 50853
      Resp_io: 4.000000  Resp_cpu: 50853
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

kkofmx: index filter: ?? 

kkofmx: index filter:"L"."ID2"="T2"."ID2"

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001718  Resp: 4.001718  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 50853
      Resp_io: 4.000000  Resp_cpu: 50853
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 1.1161e-06 
    NL Join : Cost: 7.012953  Resp: 7.012953  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 383486
      Resp_io: 7.000000  Resp_cpu: 383486
  ****** trying bitmap/domain indexes ******
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 0.000000  resc_cpu: 1900
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.001469  Resp: 3.001469  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 43486
      Resp_io: 3.000000  Resp_cpu: 43486

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 7.010839  Resp: 7.010839  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 320922
      Resp_io: 7.000000  Resp_cpu: 320922
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_ID2
      Cost = 3.001505, sel = 8.0000e-04
    Not used T2_T2F1_T2F2_ID2
      Cost = 8.036115, sel = 0.125000
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001718
          resc: 4.001718  resc_io: 4.000000  resc_cpu: 50853
          resp: 4.001718  resp_io: 4.000000  resc_cpu: 50853
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.799999 = outer (0.800000) * inner (1249.998884) * sel (8.0000e-04)
Join cardinality for HJ/SMJ (no post filters):  0.799999, outer: 0.800000, inner: 1249.998884, sel: 8.0000e-04
Join Card - Rounded: 1 Computed: 0.799999
  Outer table:  T1  Alias: T1
    resc: 3.001405  card 0.800000  bytes:   deg: 1  resp: 3.001405
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  SM join: Resc: 10.033109  Resp: 10.033109  [multiMatchCost=0.000000]
SM Join
  SM cost: 10.033109 
     resc: 10.033109 resc_io: 8.000000 resc_cpu: 60193923
     resp: 10.033109 resp_io: 8.000000 resp_cpu: 60193923
  Outer table:  T1  Alias: T1
    resc: 3.001405  card 0.800000  bytes:   deg: 1  resp: 3.001405
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024493  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 8.038032  Resp: 8.038032  [multiMatchCost=0.000000]
HA Join
  HA cost: 8.038032  
     resc: 8.038032 resc_io: 8.000000 resc_cpu: 1126004
     resp: 8.038032 resp_io: 8.000000 resp_cpu: 1126004
Best:: JoinMethod: NestedLoop
       Cost: 4.001718  Degree: 1  Resp: 4.001718  Card: 0.799999 Bytes: 
***********************
Best so far:  Table#: 0  cost: 3.001020  card: 10.000000  bytes: 60.000000
              Table#: 1  cost: 3.001405  card: 0.800000  bytes: 12.000000
              Table#: 2  cost: 4.001718  card: 0.799999  bytes: 22.000000
***********************
Join order[2]:  L[L]#0  T2[T2]#2  T1[T1]#1

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2064  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500445.280766 (cpu filter eval) (= 50.044528 (per row) * 10000.000000 (#rows))
                       =   2578481.280766
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 72.871927  Resp: 72.871927  Degree: 1
      Cost_io: 72.000000  Cost_cpu: 25814999
      Resp_io: 72.000000  Resp_cpu: 25814999
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1906967
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 83.645116  Resp: 83.645116  Degree: 1
      Cost_io: 83.000000  Cost_cpu: 19099856
      Resp_io: 83.000000  Resp_cpu: 19099856
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004150  Resp: 13.004150  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122857
      Resp_io: 13.000000  Resp_cpu: 122857
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

kkofmx: index filter:"L"."ID2"="T2"."ID2"

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004150  Resp: 13.004150  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122857
      Resp_io: 13.000000  Resp_cpu: 122857
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 1.1161e-06 
    NL Join : Cost: 43.116498  Resp: 43.116498  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 3449133
      Resp_io: 43.000000  Resp_cpu: 3449133
  ****** trying bitmap/domain indexes ******
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 0.000000  resc_cpu: 1900
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.001661  Resp: 3.001661  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 49186
      Resp_io: 3.000000  Resp_cpu: 49186

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 43.095368  Resp: 43.095368  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 2823543
      Resp_io: 43.000000  Resp_cpu: 2823543
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_ID2
      Cost = 3.001698, sel = 8.0000e-04
    Not used T2_T2F1_T2F2_ID2
      Cost = 44.120680, sel = 0.125000
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 13.004150
          resc: 13.004150  resc_io: 13.000000  resc_cpu: 122857
          resp: 13.004150  resp_io: 13.000000  resc_cpu: 122857
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  9.999991 = outer (10.000000) * inner (1249.998884) * sel (8.0000e-04)
Join Card - Rounded: 10 Computed: 9.999991
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  SM join: Resc: 10.032774  Resp: 10.032774  [multiMatchCost=0.000000]
SM Join
  SM cost: 10.032774 
     resc: 10.032774 resc_io: 8.000000 resc_cpu: 60184019
     resp: 10.032774 resp_io: 8.000000 resp_cpu: 60184019
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024538  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 8.037692  Resp: 8.037692  [multiMatchCost=0.000000]
HA Join
  HA cost: 8.037692  
     resc: 8.037692 resc_io: 8.000000 resc_cpu: 1115954
     resp: 8.037692 resp_io: 8.000000 resp_cpu: 1115954
Join order aborted: cost > best plan cost
***********************
Join order[3]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 4.001297  Resp: 4.001297  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38387
      Resp_io: 4.000000  Resp_cpu: 38387
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000542
          resc: 2.000542  resc_io: 2.000000  resc_cpu: 16043
          resp: 2.000542  resp_io: 2.000000  resc_cpu: 16043
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.800000 = outer (0.800000) * inner (10.000000) * sel (0.100000)
Join cardinality for NL:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join cardinality without POSQ:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join Card - Rounded: 1 Computed: 0.800000
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021584  Resp: 4.021584  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021584  
     resc: 4.021584 resc_io: 4.000000 resc_cpu: 639037
     resp: 4.021584 resp_io: 4.000000 resp_cpu: 639037
Best:: JoinMethod: NestedLoop
       Cost: 2.000542  Degree: 1  Resp: 2.000542  Card: 0.800000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 2.000542  Resp: 2.000542  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 60.000500, sel = 1.000000 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.800000 flag = 2048  (LNNVL("T1"."T1F"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2048  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2064  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500449.107324 (cpu filter eval) (= 50.044911 (per row) * 10000.000000 (#rows))
                       =   2578485.107324
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 11.087633  Resp: 11.087633  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 2594528
      Resp_io: 11.000000  Resp_cpu: 2594528
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906971
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 12.064952  Resp: 12.064952  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1923014
      Resp_io: 12.000000  Resp_cpu: 1923014
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25310
      Resp_io: 3.000000  Resp_cpu: 25310
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

kkofmx: index filter: ?? 

kkofmx: index filter:"L"."ID2"="T2"."ID2"

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25310
      Resp_io: 3.000000  Resp_cpu: 25310
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 1.1161e-06 
    NL Join : Cost: 6.012090  Resp: 6.012090  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 357943
      Resp_io: 6.000000  Resp_cpu: 357943
  ****** trying bitmap/domain indexes ******
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 0.000000  resc_cpu: 1900
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000606  Resp: 2.000606  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17943
      Resp_io: 2.000000  Resp_cpu: 17943

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 6.009977  Resp: 6.009977  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 295379
      Resp_io: 6.000000  Resp_cpu: 295379
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_ID2
      Cost = 2.000643, sel = 8.0000e-04
    Not used T2_T2F1_T2F2_ID2
      Cost = 7.035252, sel = 0.125000
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000855
          resc: 3.000855  resc_io: 3.000000  resc_cpu: 25310
          resp: 3.000855  resp_io: 3.000000  resc_cpu: 25310
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.799999 = outer (0.800000) * inner (1249.998884) * sel (8.0000e-04)
Join cardinality for HJ/SMJ (no post filters):  0.799999, outer: 0.800000, inner: 1249.998884, sel: 8.0000e-04
Join Card - Rounded: 1 Computed: 0.799999
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  SM join: Resc: 9.032246  Resp: 9.032246  [multiMatchCost=0.000000]
SM Join
  SM cost: 9.032246 
     resc: 9.032246 resc_io: 7.000000 resc_cpu: 60168380
     resp: 9.032246 resp_io: 7.000000 resp_cpu: 60168380
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024493  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 7.037169  Resp: 7.037169  [multiMatchCost=0.000000]
HA Join
  HA cost: 7.037169  
     resc: 7.037169 resc_io: 7.000000 resc_cpu: 1100461
     resp: 7.037169 resp_io: 7.000000 resp_cpu: 1100461
Plan cardinality mismatch: best card= 0.79999914286   curr card= 0.79999914286
Best:: JoinMethod: NestedLoop
       Cost: 3.000855  Degree: 1  Resp: 3.000855  Card: 0.799999 Bytes: 
***********************
Best so far:  Table#: 1  cost: 1.000260  card: 0.800000  bytes: 6.000000
              Table#: 0  cost: 2.000542  card: 0.800000  bytes: 12.000000
              Table#: 2  cost: 3.000855  card: 0.799999  bytes: 22.000000
***********************
Join order[4]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 60.000500, sel = 1.000000 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.800000 flag = 2048  (LNNVL("T1"."T1F"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2048  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2064  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 561384.154918 (cpu filter eval) (= 56.138415 (per row) * 10000.000000 (#rows))
                       =   2639420.154918
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 10.089409  Resp: 10.089409  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2647122
      Resp_io: 10.000000  Resp_cpu: 2647122
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1967906
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 11.066728  Resp: 11.066728  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1975607
      Resp_io: 11.000000  Resp_cpu: 1975607
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

kkofmx: index filter: ?? 

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.011161 
    NL Join : Cost: 5.012409  Resp: 5.012409  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 367395
      Resp_io: 5.000000  Resp_cpu: 367395
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.012409
          resc: 5.012409  resc_io: 5.000000  resc_cpu: 367395
          resp: 5.012409  resp_io: 5.000000  resc_cpu: 367395
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  999.998929 = outer (0.800000) * inner (1249.998884) * sel (1.000000)
Join cardinality for HJ/SMJ (no post filters):  999.999107, outer: 0.800000, inner: 1249.998884, sel: 1.000000
Join Card - Rounded: 1000 Computed: 999.998929
Join order aborted: cost > best plan cost
***********************
Join order[5]:  T2[T2]#2  L[L]#0  T1[T1]#1
Join order aborted: cost > best plan cost
***********************
Join order[6]:  T2[T2]#2  T1[T1]#1  L[L]#0
Join order aborted: cost > best plan cost
***********************
Permutations for Starting Table :1
Join order[7]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 4.001297  Resp: 4.001297  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38387
      Resp_io: 4.000000  Resp_cpu: 38387
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000542
          resc: 2.000542  resc_io: 2.000000  resc_cpu: 16043
          resp: 2.000542  resp_io: 2.000000  resc_cpu: 16043
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.800000 = outer (0.800000) * inner (10.000000) * sel (0.100000)
Join cardinality for NL:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join cardinality without POSQ:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join Card - Rounded: 1 Computed: 0.800000
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021584  Resp: 4.021584  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021584  
     resc: 4.021584 resc_io: 4.000000 resc_cpu: 639037
     resp: 4.021584 resp_io: 4.000000 resp_cpu: 639037
Best:: JoinMethod: NestedLoop
       Cost: 2.000542  Degree: 1  Resp: 2.000542  Card: 0.800000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 2.000542  Resp: 2.000542  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 60.000500, sel = 1.000000 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.800000 flag = 2048  (LNNVL("T1"."T1F"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2048  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2064  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2080  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500449.107324 (cpu filter eval) (= 50.044911 (per row) * 10000.000000 (#rows))
                       =   2578485.107324
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 11.087633  Resp: 11.087633  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 2594528
      Resp_io: 11.000000  Resp_cpu: 2594528
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906971
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 12.064952  Resp: 12.064952  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1923014
      Resp_io: 12.000000  Resp_cpu: 1923014
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25310
      Resp_io: 3.000000  Resp_cpu: 25310
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

kkofmx: index filter: ?? 

kkofmx: index filter:"L"."ID2"="T2"."ID2"

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25310
      Resp_io: 3.000000  Resp_cpu: 25310
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 1.1161e-06 
    NL Join : Cost: 6.012090  Resp: 6.012090  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 357943
      Resp_io: 6.000000  Resp_cpu: 357943
  ****** trying bitmap/domain indexes ******
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 0.000000  resc_cpu: 1900
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000606  Resp: 2.000606  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17943
      Resp_io: 2.000000  Resp_cpu: 17943

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 6.009977  Resp: 6.009977  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 295379
      Resp_io: 6.000000  Resp_cpu: 295379
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_ID2
      Cost = 2.000643, sel = 8.0000e-04
    Not used T2_T2F1_T2F2_ID2
      Cost = 7.035252, sel = 0.125000
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000855
          resc: 3.000855  resc_io: 3.000000  resc_cpu: 25310
          resp: 3.000855  resp_io: 3.000000  resc_cpu: 25310
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.799999 = outer (0.800000) * inner (1249.998884) * sel (8.0000e-04)
Join cardinality for HJ/SMJ (no post filters):  0.799999, outer: 0.800000, inner: 1249.998884, sel: 8.0000e-04
Join Card - Rounded: 1 Computed: 0.799999
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  SM join: Resc: 9.032246  Resp: 9.032246  [multiMatchCost=0.000000]
SM Join
  SM cost: 9.032246 
     resc: 9.032246 resc_io: 7.000000 resc_cpu: 60168380
     resp: 9.032246 resp_io: 7.000000 resp_cpu: 60168380
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024493  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 7.037169  Resp: 7.037169  [multiMatchCost=0.000000]
HA Join
  HA cost: 7.037169  
     resc: 7.037169 resc_io: 7.000000 resc_cpu: 1100461
     resp: 7.037169 resp_io: 7.000000 resp_cpu: 1100461
Join order aborted: cost > best plan cost
***********************
Join order[8]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 60.000500, sel = 1.000000 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.800000 flag = 2048  (LNNVL("T1"."T1F"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2048  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2064  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 561384.154918 (cpu filter eval) (= 56.138415 (per row) * 10000.000000 (#rows))
                       =   2639420.154918
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 10.089409  Resp: 10.089409  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2647122
      Resp_io: 10.000000  Resp_cpu: 2647122
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1967906
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 11.066728  Resp: 11.066728  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1975607
      Resp_io: 11.000000  Resp_cpu: 1975607
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

kkofmx: index filter: ?? 

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.011161 
    NL Join : Cost: 5.012409  Resp: 5.012409  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 367395
      Resp_io: 5.000000  Resp_cpu: 367395
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.012409
          resc: 5.012409  resc_io: 5.000000  resc_cpu: 367395
          resp: 5.012409  resp_io: 5.000000  resc_cpu: 367395
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  999.998929 = outer (0.800000) * inner (1249.998884) * sel (1.000000)
Join cardinality for HJ/SMJ (no post filters):  999.999107, outer: 0.800000, inner: 1249.998884, sel: 1.000000
Join Card - Rounded: 1000 Computed: 999.998929
Join order aborted: cost > best plan cost
***********************
Join order[9]:  T2[T2]#2  L[L]#0  T1[T1]#1
Join order aborted: cost > best plan cost
***********************
Join order[10]:  T2[T2]#2  T1[T1]#1  L[L]#0
Join order aborted: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[11]:  T2[T2]#2  L[L]#0  T1[T1]#1
Join order aborted: cost > best plan cost
***********************
Join order[12]:  T2[T2]#2  T1[T1]#1  L[L]#0
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between T1[T1](serial) and L[L](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL
--- Distribution method for 
join between L[L](serial) and T2[T2](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

LORE: Trying or-Expansion on query block SEL$1 (#0)
LORE: Or-expansion bypassed: No index driver found in OR chain: 
id=0  predicate=(LNNVL("T1"."T1F"=1) OR LNNVL("T2"."T2F1"=14) OR LNNVL("T2"."T2F2"=13)) AND "T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 AND (LNNVL("T2"."T2F1"=14) OR LNNVL("T2"."T2F2"=13)) AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 AND ("T1"."T1F"=0 OR "T1"."T1F"=1) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"
LORE: Or-expansion bypassed: No index driver found in OR chain: 
id=0  predicate=(LNNVL("T2"."T2F1"=14) OR LNNVL("T2"."T2F2"=13)) AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 AND ("T1"."T1F"=0 OR "T1"."T1F"=1) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"

LORE: ******** Final costing  ********
Registered qb: SEL$1_1 0x8126d988 (OR EXPANSION SEL$1; SEL$1; 8 LIST)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$1_1 nbfros=3 flg=0
    fro(0): flg=0 objn=73956 hint_alias="L"@"SEL$1"
    fro(1): flg=0 objn=73958 hint_alias="T1"@"SEL$1"
    fro(2): flg=0 objn=73960 hint_alias="T2"@"SEL$1"

LORE: Predicate chain for or-expanded branch SEL$1_1 is:
id=0  predicate="T2"."T2F1"=14 AND "T2"."T2F2"=13 AND ("T1"."T1F"=0 OR "T1"."T1F"=1) AND ("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"
****************
QUERY BLOCK TEXT
****************
SELECT /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null FROM l, t1, t2 WHERE  
(  ( t1.t1f = 0 AND t2.t2f1 BETWEEN 9 AND 10)       OR 
   ( t1.t1f = 1 AND t2.t2f1 = 14 AND t2.t2f2 = 13  )   )  AND 
    ( l.id1 = t1.id1 AND l.id2 = t2.id2 )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$1_1 nbfros=3 flg=0
  fro(0): flg=0 objn=73956 hint_alias="L"@"SEL$1"
  fro(1): flg=0 objn=73958 hint_alias="T1"@"SEL$1"
  fro(2): flg=0 objn=73960 hint_alias="T2"@"SEL$1"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 2467 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: T2  Alias: T2
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  25  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T2F1(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#3): T2F2(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#1): ID2(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: T2_ID2  Col#: 1
  LVLS: 1  #LB: 20  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: T2_T2F1_T2F2_ID2  Col#: 2 3 1
  LVLS: 1  #LB: 29  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 168.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: T1  Alias: T1
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T1F(NUMBER)
    AvgLen: 3 NDV: 5 Nulls: 0 Density: 0.200000 Min: 0.000000 Max: 4.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: T1_T1F_ID1  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  L  Alias:  L
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
  Column (#2): ID2(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: L_ID1  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$1_1 (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for L
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for L[L] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: L  Alias: L
    Card: Original: 10.000000  Rounded: 10  Computed: 10.000000  Non Adjusted: 10.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                       =   30185.760000
  Access Path: TableScan
    Cost:  3.001020  Resp: 3.001020  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 30186
      Resp_io: 3.000000  Resp_cpu: 30186
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3.001020  Degree: 1  Resp: 3.001020  Card: 10.000000  Bytes: 0.000000

Access path analysis for T1
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T1[T1] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE

 kkecdn: Single Table Predicate:"T1"."T1F"=0 OR "T1"."T1F"=1
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Table: T1  Alias: T1
    Card: Original: 10.000000  Rounded: 4  Computed: 4.000000  Non Adjusted: 4.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 900.000000 (cpu filter eval) (= 90.000000 (per row) * 10.000000 (#rows))
                       =   31085.760000
  Access Path: TableScan
    Cost:  3.001050  Resp: 3.001050  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 31086
      Resp_io: 3.000000  Resp_cpu: 31086
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9221
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000311  Resp: 2.000311  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9221
      Resp_io: 2.000000  Resp_cpu: 9221
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 15043
    ix_sel: 0.400000  ix_sel_with_filters: 0.400000 
    Cost: 1.000508  Resp: 1.000508  Degree: 1
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    Cost: 1.000254  Resp: 1.000254  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    Cost: 1.000254  Resp: 1.000254  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Not used T1_T1F_ID1
      Cost = 2.000267, sel = 0.200000
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T1_T1F_ID1
         Cost: 1.000508  Degree: 1  Resp: 1.000508  Card: 4.000000  Bytes: 0.000000

Access path analysis for T2
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T2[T2] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 0.125000 , col: #2 
  Estimated selectivity: 0.125000 , col: #3 


 kkecdn: Single Table Predicate:"T2"."T2F1"=14
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F2"=13
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Table: T2  Alias: T2
    Card: Original: 10000.000000  Rounded: 1  Computed: 0.008929  Non Adjusted: 0.008929
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2081  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2080  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.000000 (cpu filter eval) (= 50.002500 (per row) * 10000.000000 (#rows))
                       =   2578061.000000
  Access Path: TableScan
    Cost:  9.087077  Resp: 9.087077  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2578061
      Resp_io: 9.000000  Resp_cpu: 2578061
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.064395  Resp: 10.064395  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1906547
      Resp_io: 10.000000  Resp_cpu: 1906547
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 8.9286e-07  ix_sel_with_filters: 8.9286e-07 
    Cost: 2.000488  Resp: 2.000488  Degree: 1
  ****** trying bitmap/domain indexes ******

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 8.9286e-07  ix_sel_with_filters: 8.9286e-07 
    Cost: 2.000488  Resp: 2.000488  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 5.000000  resc_cpu: 285607
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    Cost: 5.009647  Resp: 5.009647  Degree: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_T2F1_T2F2_ID2
      Cost = 3.000488, sel = 8.9286e-07
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T2_T2F1_T2F2_ID2
         Cost: 2.000488  Degree: 1  Resp: 2.000488  Card: 0.008929  Bytes: 0.000000

(newjo-restore) [2 1 0 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is OR expanded SEL$1_1 (#0)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  L[L]#0  T1[T1]#1  T2[T2]#2

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.200000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.200000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.200000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 590.000000 (cpu filter eval) (= 59.000000 (per row) * 10.000000 (#rows))
                       =   30775.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 15.011414  Resp: 15.011414  Degree: 1
      Cost_io: 15.000000  Cost_cpu: 337943
      Resp_io: 15.000000  Resp_cpu: 337943
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.400000  resc_cpu: 8911
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 7.004029  Resp: 7.004029  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 119300
      Resp_io: 7.000000  Resp_cpu: 119300
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:   Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
 Sel: 0.200000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.200000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 14643
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 13.005965  Resp: 13.005965  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 176615
      Resp_io: 13.000000  Resp_cpu: 176615
  ****** trying bitmap/domain indexes ******

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.001374  Resp: 3.001374  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 40686
      Resp_io: 3.000000  Resp_cpu: 40686

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.001374  Resp: 3.001374  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 40686
      Resp_io: 3.000000  Resp_cpu: 40686
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 13.003560  Resp: 13.003560  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 105400
      Resp_io: 13.000000  Resp_cpu: 105400
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Used T1_T1F_ID1
      Cost = 3.001375, sel = 0.020000
    Used T1_T1F_ID1
      Cost = 3.001375, sel = 0.020000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 7.004029
          resc: 7.004029  resc_io: 7.000000  resc_cpu: 119300
          resp: 7.004029  resp_io: 7.000000  resc_cpu: 119300
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 6.001590  Resp: 6.001590  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001590 
     resc: 6.001590 resc_io: 4.000000 resc_cpu: 59260769
     resp: 6.001590 resp_io: 4.000000 resp_cpu: 59260769
SM Join (with index on outer)
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 2.000000  resc_cpu: 17943
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2.000606  Resp: 2.000606  Degree: 1
  Outer table:  L  Alias: L
    resc: 2.000606  card 10.000000  bytes:   deg: 1  resp: 2.000606
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 4.001126  Resp: 4.001126  [multiMatchCost=0.000000]
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020330  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021878  Resp: 4.021878  [multiMatchCost=0.000020]
HA Join
  HA cost: 4.021878  
     resc: 4.021878 resc_io: 4.000000 resc_cpu: 647729
     resp: 4.021878 resp_io: 4.000000 resp_cpu: 647729
Best:: JoinMethod: SortMerge
       Cost: 4.001126  Degree: 1  Resp: 4.001126  Card: 10.000000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 4.001126  Resp: 4.001126  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2080  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.020836 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.020836
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 73.871892  Resp: 73.871892  Degree: 1
      Cost_io: 72.000000  Cost_cpu: 55420798
      Resp_io: 72.000000  Resp_cpu: 55420798
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 84.645081  Resp: 84.645081  Degree: 1
      Cost_io: 83.000000  Cost_cpu: 48705656
      Resp_io: 83.000000  Resp_cpu: 48705656
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 14.004254  Resp: 14.004254  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 29732802
      Resp_io: 13.000000  Resp_cpu: 29732802
kkofmx: index filter: ?? 

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 14.004254  Resp: 14.004254  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 29732802
      Resp_io: 13.000000  Resp_cpu: 29732802
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 2.2322e-12 
    NL Join : Cost: 14.003927  Resp: 14.003927  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 29723096
      Resp_io: 13.000000  Resp_cpu: 29723096
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 14.003927
          resc: 14.003927  resc_io: 13.000000  resc_cpu: 29723096
          resp: 14.003927  resp_io: 13.000000  resc_cpu: 29723096
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.000223 = outer (10.000000) * inner (0.008929) * sel (0.002500)
Join cardinality for HJ/SMJ (no post filters):  0.008929, outer: 10.000000, inner: 0.008929, sel: 0.002500
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  T1  Alias: T1
    resc: 4.001126  card 10.000000  bytes:   deg: 1  resp: 4.001126
  Inner table:  T2  Alias: T2
    resc: 2.000488  card: 0.008929  bytes:   deg: 1  resp: 2.000488
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 8.001665  Resp: 8.001665  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.001665 
     resc: 8.001665 resc_io: 5.000000 resc_cpu: 88869811
     resp: 8.001665 resp_io: 5.000000 resp_cpu: 88869811
  Outer table:  T1  Alias: T1
    resc: 4.001126  card 10.000000  bytes:   deg: 1  resp: 4.001126
  Inner table:  T2  Alias: T2
    resc: 2.000488  card: 0.008929  bytes:   deg: 1  resp: 2.000488
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.021934  Resp: 6.021934  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.021934  
     resc: 6.021934 resc_io: 5.000000 resc_cpu: 30256231
     resp: 6.021934 resp_io: 5.000000 resp_cpu: 30256231
Best:: JoinMethod: Hash
       Cost: 6.021934  Degree: 1  Resp: 6.021934  Card: 0.000223 Bytes: 
***********************
Best so far:  Table#: 0  cost: 2.000606  card: 10.000000  bytes: 60.000000
              Table#: 1  cost: 4.001126  card: 10.000000  bytes: 120.000000
              Table#: 2  cost: 6.021934  card: 0.000223  bytes: 22.000000
***********************
Join order[2]:  L[L]#0  T2[T2]#2  T1[T1]#1

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.019984 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.019984
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 72.871785  Resp: 72.871785  Degree: 1
      Cost_io: 72.000000  Cost_cpu: 25810796
      Resp_io: 72.000000  Resp_cpu: 25810796
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 83.644974  Resp: 83.644974  Degree: 1
      Cost_io: 83.000000  Cost_cpu: 19095654
      Resp_io: 83.000000  Resp_cpu: 19095654
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004148  Resp: 13.004148  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122800
      Resp_io: 13.000000  Resp_cpu: 122800
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004148  Resp: 13.004148  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122800
      Resp_io: 13.000000  Resp_cpu: 122800
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 8.9286e-11 
    NL Join : Cost: 13.003780  Resp: 13.003780  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 111900
      Resp_io: 13.000000  Resp_cpu: 111900
  ****** trying bitmap/domain indexes ******

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 8.9286e-11 
    NL Join : Cost: 13.003780  Resp: 13.003780  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 111900
      Resp_io: 13.000000  Resp_cpu: 111900

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 43.095368  Resp: 43.095368  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 2823543
      Resp_io: 43.000000  Resp_cpu: 2823543
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_T2F1_T2F2_ID2
      Cost = 13.003780, sel = 8.9286e-08
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 13.003780
          resc: 13.003780  resc_io: 13.000000  resc_cpu: 111900
          resp: 13.003780  resp_io: 13.000000  resc_cpu: 111900
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.008929 = outer (10.000000) * inner (0.008929) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.008929
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 2.000488  card: 0.008929  bytes:   deg: 1  resp: 2.000488
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 7.001558  Resp: 7.001558  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001558 
     resc: 7.001558 resc_io: 5.000000 resc_cpu: 59259809
     resp: 7.001558 resp_io: 5.000000 resp_cpu: 59259809
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 2.000488  card: 0.008929  bytes:   deg: 1  resp: 2.000488
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021827  Resp: 5.021827  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021827  
     resc: 5.021827 resc_io: 5.000000 resc_cpu: 646229
     resp: 5.021827 resp_io: 5.000000 resp_cpu: 646229
Best:: JoinMethod: Hash
       Cost: 5.021827  Degree: 1  Resp: 5.021827  Card: 0.008929 Bytes: 

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.008929  Cost: 5.021827  Resp: 5.021827  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2080  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2080  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 621.643360 (cpu filter eval) (= 62.164336 (per row) * 10.000000 (#rows))
                       =   30807.403360
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 8.022868  Resp: 8.022868  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 677036
      Resp_io: 8.000000  Resp_cpu: 677036
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 8943
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 7.022129  Resp: 7.022129  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 655172
      Resp_io: 7.000000  Resp_cpu: 655172
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:   Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
 Sel: 0.200000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.200000
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 14643
    ix_sel: 0.200000  ix_sel_with_filters: 0.005000 
    NL Join : Cost: 6.022330  Resp: 6.022330  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 661110
      Resp_io: 6.000000  Resp_cpu: 661110
  ****** trying bitmap/domain indexes ******

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.021862  Resp: 5.021862  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 647279
      Resp_io: 5.000000  Resp_cpu: 647279

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.021862  Resp: 5.021862  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 647279
      Resp_io: 5.000000  Resp_cpu: 647279
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 6.022081  Resp: 6.022081  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 653750
      Resp_io: 6.000000  Resp_cpu: 653750
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Not used  bitmap node 
    Used  bitmap node 
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  Access path: Bitmap index - accepted
    Cost: 14.442524 Cost_io: 13.398006 Cost_cpu: 30924879.681888 Sel: 0.200000
    Not Believed to be index-only
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 6.022330
          resc: 6.022330  resc_io: 6.000000  resc_cpu: 661110
          resp: 6.022330  resp_io: 6.000000  resc_cpu: 661110
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.000223 = outer (0.008929) * inner (10.000000) * sel (0.002500)
Join cardinality for HJ/SMJ (no post filters):  0.008929, outer: 0.008929, inner: 10.000000, sel: 0.002500
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  T2  Alias: T2
    resc: 5.021827  card 0.008929  bytes:   deg: 1  resp: 5.021827
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 8.022347  Resp: 8.022347  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.022347 
     resc: 8.022347 resc_io: 6.000000 resc_cpu: 59875315
     resp: 8.022347 resp_io: 6.000000 resp_cpu: 59875315
  Outer table:  T2  Alias: T2
    resc: 5.021827  card 0.008929  bytes:   deg: 1  resp: 5.021827
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020284  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.042619  Resp: 6.042619  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.042619  
     resc: 6.042619 resc_io: 6.000000 resc_cpu: 1261822
     resp: 6.042619 resp_io: 6.000000 resp_cpu: 1261822
Join order aborted: cost > best plan cost
***********************
Join order[3]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 4.000000  Cost: 1.000508  Resp: 1.000508  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 7.004654  Resp: 7.004654  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 137786
      Resp_io: 7.000000  Resp_cpu: 137786
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.001635  Resp: 5.001635  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48409
      Resp_io: 5.000000  Resp_cpu: 48409
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.001635  Resp: 5.001635  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48409
      Resp_io: 5.000000  Resp_cpu: 48409
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001635
          resc: 5.001635  resc_io: 5.000000  resc_cpu: 48409
          resp: 5.001635  resp_io: 5.000000  resc_cpu: 48409
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  T1  Alias: T1
    resc: 1.000508  card 4.000000  bytes:   deg: 1  resp: 1.000508
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001590  Resp: 6.001590  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001590 
     resc: 6.001590 resc_io: 4.000000 resc_cpu: 59260769
     resp: 6.001590 resp_io: 4.000000 resp_cpu: 59260769
  Outer table:  T1  Alias: T1
    resc: 1.000508  card 4.000000  bytes:   deg: 1  resp: 1.000508
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021847  Resp: 4.021847  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021847  
     resc: 4.021847 resc_io: 4.000000 resc_cpu: 646829
     resp: 4.021847 resp_io: 4.000000 resp_cpu: 646829
Best:: JoinMethod: Hash
       Cost: 4.021847  Degree: 1  Resp: 4.021847  Card: 10.000000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 4.021847  Resp: 4.021847  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2049  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2048  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2080  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.020836 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.020836
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 73.892613  Resp: 73.892613  Degree: 1
      Cost_io: 73.000000  Cost_cpu: 26427439
      Resp_io: 73.000000  Resp_cpu: 26427439
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 84.665802  Resp: 84.665802  Degree: 1
      Cost_io: 84.000000  Cost_cpu: 19712296
      Resp_io: 84.000000  Resp_cpu: 19712296
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 14.024975  Resp: 14.024975  Degree: 1
      Cost_io: 14.000000  Cost_cpu: 739443
      Resp_io: 14.000000  Resp_cpu: 739443
kkofmx: index filter: ?? 

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 14.024975  Resp: 14.024975  Degree: 1
      Cost_io: 14.000000  Cost_cpu: 739443
      Resp_io: 14.000000  Resp_cpu: 739443
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 2.2322e-12 
    NL Join : Cost: 14.024648  Resp: 14.024648  Degree: 1
      Cost_io: 14.000000  Cost_cpu: 729737
      Resp_io: 14.000000  Resp_cpu: 729737
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 14.024648
          resc: 14.024648  resc_io: 14.000000  resc_cpu: 729737
          resp: 14.024648  resp_io: 14.000000  resc_cpu: 729737
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.000223 = outer (10.000000) * inner (0.008929) * sel (0.002500)
Join cardinality for HJ/SMJ (no post filters):  0.008929, outer: 10.000000, inner: 0.008929, sel: 0.002500
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  L  Alias: L
    resc: 4.021847  card 10.000000  bytes:   deg: 1  resp: 4.021847
  Inner table:  T2  Alias: T2
    resc: 2.000488  card: 0.008929  bytes:   deg: 1  resp: 2.000488
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 8.022386  Resp: 8.022386  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.022386 
     resc: 8.022386 resc_io: 6.000000 resc_cpu: 59876451
     resp: 8.022386 resp_io: 6.000000 resp_cpu: 59876451
  Outer table:  L  Alias: L
    resc: 4.021847  card 10.000000  bytes:   deg: 1  resp: 4.021847
  Inner table:  T2  Alias: T2
    resc: 2.000488  card: 0.008929  bytes:   deg: 1  resp: 2.000488
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.042655  Resp: 6.042655  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.042655  
     resc: 6.042655 resc_io: 6.000000 resc_cpu: 1262872
     resp: 6.042655 resp_io: 6.000000 resp_cpu: 1262872
Join order aborted: cost > best plan cost
***********************
Join order[4]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 4.000000  Cost: 1.000508  Resp: 1.000508  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   7.250000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2080  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2080  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   7.250000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.250000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500026.066012 (cpu filter eval) (= 50.002607 (per row) * 10000.000000 (#rows))
                       =   2578062.066012
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 30.348814  Resp: 30.348814  Degree: 1
      Cost_io: 30.000000  Cost_cpu: 10327291
      Resp_io: 30.000000  Resp_cpu: 10327291
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.250000  resc_cpu: 1906548
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 34.258090  Resp: 34.258090  Degree: 1
      Cost_io: 34.000000  Cost_cpu: 7641234
      Resp_io: 34.000000  Resp_cpu: 7641234
kkofmx: index filter: ?? 

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-07  ix_sel_with_filters: 2.2322e-08 
    NL Join : Cost: 5.001628  Resp: 5.001628  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48206
      Resp_io: 5.000000  Resp_cpu: 48206
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001628
          resc: 5.001628  resc_io: 5.000000  resc_cpu: 48206
          resp: 5.001628  resp_io: 5.000000  resc_cpu: 48206
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.002232 = outer (10.000000) * inner (0.008929) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  0.089286, outer: 10.000000, inner: 0.008929, sel: 0.025000
Join Card - Rounded: 1 Computed: 0.002232
Best:: JoinMethod: NestedLoop
       Cost: 5.001628  Degree: 1  Resp: 5.001628  Card: 0.002232 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.002232  Cost: 5.001628  Resp: 5.001628  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.399680 (cpu filter eval) (= 50.039968 (per row) * 10.000000 (#rows))
                       =   30686.159680
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 8.002665  Resp: 8.002665  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 78892
      Resp_io: 8.000000  Resp_cpu: 78892
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 6.001912  Resp: 6.001912  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 56598
      Resp_io: 6.000000  Resp_cpu: 56598
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 6.001912  Resp: 6.001912  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 56598
      Resp_io: 6.000000  Resp_cpu: 56598
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 6.001912
          resc: 6.001912  resc_io: 6.000000  resc_cpu: 56598
          resp: 6.001912  resp_io: 6.000000  resc_cpu: 56598
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000223 = outer (0.002232) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  T2  Alias: T2
    resc: 5.001628  card 0.002232  bytes:   deg: 1  resp: 5.001628
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 10.002698  Resp: 10.002698  [multiMatchCost=0.000000]
SM Join
  SM cost: 10.002698 
     resc: 10.002698 resc_io: 8.000000 resc_cpu: 59293572
     resp: 10.002698 resp_io: 8.000000 resp_cpu: 59293572
  Outer table:  T2  Alias: T2
    resc: 5.001628  card 0.002232  bytes:   deg: 1  resp: 5.001628
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 8.022952  Resp: 8.022952  [multiMatchCost=0.000000]
HA Join
  HA cost: 8.022952  
     resc: 8.022952 resc_io: 8.000000 resc_cpu: 679542
     resp: 8.022952 resp_io: 8.000000 resp_cpu: 679542
Plan cardinality mismatch: best card= 0.00022321584   curr card= 0.00022321584
Best:: JoinMethod: NestedLoop
       Cost: 6.001912  Degree: 1  Resp: 6.001912  Card: 0.000223 Bytes: 
***********************
Best so far:  Table#: 1  cost: 1.000508  card: 4.000000  bytes: 24.000000
              Table#: 2  cost: 5.001628  card: 0.002232  bytes: 16.000000
              Table#: 0  cost: 6.001912  card: 0.000223  bytes: 22.000000
***********************
Join order[5]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000488  Resp: 2.000488  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001524  Resp: 5.001524  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45129
      Resp_io: 5.000000  Resp_cpu: 45129
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001524
          resc: 5.001524  resc_io: 5.000000  resc_cpu: 45129
          resp: 5.001524  resp_io: 5.000000  resc_cpu: 45129
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.008929 = outer (0.008929) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.008929
  Outer table:  T2  Alias: T2
    resc: 2.000488  card 0.008929  bytes:   deg: 1  resp: 2.000488
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001558  Resp: 7.001558  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001558 
     resc: 7.001558 resc_io: 5.000000 resc_cpu: 59259809
     resp: 7.001558 resp_io: 5.000000 resp_cpu: 59259809
  Outer table:  T2  Alias: T2
    resc: 2.000488  card 0.008929  bytes:   deg: 1  resp: 2.000488
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021812  Resp: 5.021812  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021812  
     resc: 5.021812 resc_io: 5.000000 resc_cpu: 645779
     resp: 5.021812 resp_io: 5.000000 resp_cpu: 645779
Best:: JoinMethod: Hash
       Cost: 5.021812  Degree: 1  Resp: 5.021812  Card: 0.008929 Bytes: 

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.008929  Cost: 5.021812  Resp: 5.021812  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2080  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2080  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 621.643360 (cpu filter eval) (= 62.164336 (per row) * 10.000000 (#rows))
                       =   30807.403360
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 8.022852  Resp: 8.022852  Degree: 1
      Cost_io: 8.000000  Cost_cpu: 676586
      Resp_io: 8.000000  Resp_cpu: 676586
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 8943
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 7.022114  Resp: 7.022114  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 654722
      Resp_io: 7.000000  Resp_cpu: 654722
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:   Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
 Sel: 0.200000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.200000
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 14643
    ix_sel: 0.200000  ix_sel_with_filters: 0.005000 
    NL Join : Cost: 6.022314  Resp: 6.022314  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 660660
      Resp_io: 6.000000  Resp_cpu: 660660
  ****** trying bitmap/domain indexes ******

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.021847  Resp: 5.021847  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 646829
      Resp_io: 5.000000  Resp_cpu: 646829

  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.021847  Resp: 5.021847  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 646829
      Resp_io: 5.000000  Resp_cpu: 646829
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 6.022066  Resp: 6.022066  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 653300
      Resp_io: 6.000000  Resp_cpu: 653300
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Not used  bitmap node 
    Used  bitmap node 
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  Access path: Bitmap index - accepted
    Cost: 14.442494 Cost_io: 13.398006 Cost_cpu: 30923979.681888 Sel: 0.200000
    Not Believed to be index-only
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 6.022314
          resc: 6.022314  resc_io: 6.000000  resc_cpu: 660660
          resp: 6.022314  resp_io: 6.000000  resc_cpu: 660660
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.000223 = outer (0.008929) * inner (10.000000) * sel (0.002500)
Join cardinality for HJ/SMJ (no post filters):  0.008929, outer: 0.008929, inner: 10.000000, sel: 0.002500
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  L  Alias: L
    resc: 5.021812  card 0.008929  bytes:   deg: 1  resp: 5.021812
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
  SM join: Resc: 8.022332  Resp: 8.022332  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.022332 
     resc: 8.022332 resc_io: 6.000000 resc_cpu: 59874865
     resp: 8.022332 resp_io: 6.000000 resp_cpu: 59874865
  Outer table:  L  Alias: L
    resc: 5.021812  card 0.008929  bytes:   deg: 1  resp: 5.021812
  Inner table:  T1  Alias: T1
    resc: 1.000508  card: 4.000000  bytes:   deg: 1  resp: 1.000508
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020284  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.042604  Resp: 6.042604  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.042604  
     resc: 6.042604 resc_io: 6.000000 resc_cpu: 1261372
     resp: 6.042604 resp_io: 6.000000 resp_cpu: 1261372
Plan cardinality mismatch: best card= 0.00022321584   curr card= 0.00022321584
Join order aborted: cost > best plan cost
***********************
Join order[6]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000488  Resp: 2.000488  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2080  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 1216.433603 (cpu filter eval) (= 121.643360 (per row) * 10.000000 (#rows))
                       =   31402.193603
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001548  Resp: 5.001548  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45845
      Resp_io: 5.000000  Resp_cpu: 45845
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9538
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000810  Resp: 4.000810  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23981
      Resp_io: 4.000000  Resp_cpu: 23981
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 15043
    ix_sel: 0.400000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 3.001012  Resp: 3.001012  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 29963
      Resp_io: 3.000000  Resp_cpu: 29963
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 3.000742  Resp: 3.000742  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 21964
      Resp_io: 3.000000  Resp_cpu: 21964
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 3.000742  Resp: 3.000742  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 21964
      Resp_io: 3.000000  Resp_cpu: 21964
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Not used T1_T1F_ID1
      Cost = 4.000757, sel = 0.200000
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.001012
          resc: 3.001012  resc_io: 3.000000  resc_cpu: 29963
          resp: 3.001012  resp_io: 3.000000  resc_cpu: 29963
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.002232 = outer (0.008929) * inner (10.000000) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  0.089286, outer: 0.008929, inner: 10.000000, sel: 0.025000
Join Card - Rounded: 1 Computed: 0.002232
Best:: JoinMethod: NestedLoop
       Cost: 3.001012  Degree: 1  Resp: 3.001012  Card: 0.002232 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.002232  Cost: 3.001012  Resp: 3.001012  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2048  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.399680 (cpu filter eval) (= 50.039968 (per row) * 10.000000 (#rows))
                       =   30686.159680
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.002048  Resp: 6.002048  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 60649
      Resp_io: 6.000000  Resp_cpu: 60649
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001295  Resp: 4.001295  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38355
      Resp_io: 4.000000  Resp_cpu: 38355
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001295  Resp: 4.001295  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38355
      Resp_io: 4.000000  Resp_cpu: 38355
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001295
          resc: 4.001295  resc_io: 4.000000  resc_cpu: 38355
          resp: 4.001295  resp_io: 4.000000  resc_cpu: 38355
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000223 = outer (0.002232) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  T1  Alias: T1
    resc: 3.001012  card 0.002232  bytes:   deg: 1  resp: 3.001012
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.002082  Resp: 8.002082  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.002082 
     resc: 8.002082 resc_io: 6.000000 resc_cpu: 59275329
     resp: 8.002082 resp_io: 6.000000 resp_cpu: 59275329
  Outer table:  T1  Alias: T1
    resc: 3.001012  card 0.002232  bytes:   deg: 1  resp: 3.001012
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022336  Resp: 6.022336  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022336  
     resc: 6.022336 resc_io: 6.000000 resc_cpu: 661299
     resp: 6.022336 resp_io: 6.000000 resp_cpu: 661299
Best:: JoinMethod: NestedLoop
       Cost: 4.001295  Degree: 1  Resp: 4.001295  Card: 0.000223 Bytes: 
***********************
Best so far:  Table#: 2  cost: 2.000488  card: 0.008929  bytes: 10.000000
              Table#: 1  cost: 3.001012  card: 0.002232  bytes: 16.000000
              Table#: 0  cost: 4.001295  card: 0.000223  bytes: 22.000000
***********************
Permutations for Starting Table :1
Join order[7]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000488  Resp: 2.000488  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001524  Resp: 5.001524  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45129
      Resp_io: 5.000000  Resp_cpu: 45129
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001524
          resc: 5.001524  resc_io: 5.000000  resc_cpu: 45129
          resp: 5.001524  resp_io: 5.000000  resc_cpu: 45129
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.008929 = outer (0.008929) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.008929
  Outer table:  T2  Alias: T2
    resc: 2.000488  card 0.008929  bytes:   deg: 1  resp: 2.000488
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001558  Resp: 7.001558  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001558 
     resc: 7.001558 resc_io: 5.000000 resc_cpu: 59259809
     resp: 7.001558 resp_io: 5.000000 resp_cpu: 59259809
  Outer table:  T2  Alias: T2
    resc: 2.000488  card 0.008929  bytes:   deg: 1  resp: 2.000488
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021812  Resp: 5.021812  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021812  
     resc: 5.021812 resc_io: 5.000000 resc_cpu: 645779
     resp: 5.021812 resp_io: 5.000000 resp_cpu: 645779
Join order aborted: cost > best plan cost
***********************
Join order[8]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000488  Resp: 2.000488  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2080  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 1216.433603 (cpu filter eval) (= 121.643360 (per row) * 10.000000 (#rows))
                       =   31402.193603
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001548  Resp: 5.001548  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45845
      Resp_io: 5.000000  Resp_cpu: 45845
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9538
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000810  Resp: 4.000810  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23981
      Resp_io: 4.000000  Resp_cpu: 23981
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 15043
    ix_sel: 0.400000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 3.001012  Resp: 3.001012  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 29963
      Resp_io: 3.000000  Resp_cpu: 29963
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 3.000742  Resp: 3.000742  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 21964
      Resp_io: 3.000000  Resp_cpu: 21964
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 3.000742  Resp: 3.000742  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 21964
      Resp_io: 3.000000  Resp_cpu: 21964
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Not used T1_T1F_ID1
      Cost = 4.000757, sel = 0.200000
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.001012
          resc: 3.001012  resc_io: 3.000000  resc_cpu: 29963
          resp: 3.001012  resp_io: 3.000000  resc_cpu: 29963
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.002232 = outer (0.008929) * inner (10.000000) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  0.089286, outer: 0.008929, inner: 10.000000, sel: 0.025000
Join Card - Rounded: 1 Computed: 0.002232
Best:: JoinMethod: NestedLoop
       Cost: 3.001012  Degree: 1  Resp: 3.001012  Card: 0.002232 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.002232  Cost: 3.001012  Resp: 3.001012  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.399680 (cpu filter eval) (= 50.039968 (per row) * 10.000000 (#rows))
                       =   30686.159680
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.002048  Resp: 6.002048  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 60649
      Resp_io: 6.000000  Resp_cpu: 60649
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001295  Resp: 4.001295  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38355
      Resp_io: 4.000000  Resp_cpu: 38355
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001295  Resp: 4.001295  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38355
      Resp_io: 4.000000  Resp_cpu: 38355
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001295
          resc: 4.001295  resc_io: 4.000000  resc_cpu: 38355
          resp: 4.001295  resp_io: 4.000000  resc_cpu: 38355
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000223 = outer (0.002232) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  T1  Alias: T1
    resc: 3.001012  card 0.002232  bytes:   deg: 1  resp: 3.001012
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.002082  Resp: 8.002082  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.002082 
     resc: 8.002082 resc_io: 6.000000 resc_cpu: 59275329
     resp: 8.002082 resp_io: 6.000000 resp_cpu: 59275329
  Outer table:  T1  Alias: T1
    resc: 3.001012  card 0.002232  bytes:   deg: 1  resp: 3.001012
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022336  Resp: 6.022336  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022336  
     resc: 6.022336 resc_io: 6.000000 resc_cpu: 661299
     resp: 6.022336 resp_io: 6.000000 resp_cpu: 661299
Join order aborted: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[9]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 4.000000  Cost: 1.000508  Resp: 1.000508  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   1.500000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.500000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.500000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 7.004654  Resp: 7.004654  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 137786
      Resp_io: 7.000000  Resp_cpu: 137786
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.001635  Resp: 5.001635  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48409
      Resp_io: 5.000000  Resp_cpu: 48409
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 5.001635  Resp: 5.001635  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48409
      Resp_io: 5.000000  Resp_cpu: 48409
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001635
          resc: 5.001635  resc_io: 5.000000  resc_cpu: 48409
          resp: 5.001635  resp_io: 5.000000  resc_cpu: 48409
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  10.000000 = outer (10.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 10 Computed: 10.000000
  Outer table:  T1  Alias: T1
    resc: 1.000508  card 4.000000  bytes:   deg: 1  resp: 1.000508
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              4
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29607202
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001590  Resp: 6.001590  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001590 
     resc: 6.001590 resc_io: 4.000000 resc_cpu: 59260769
     resp: 6.001590 resp_io: 4.000000 resp_cpu: 59260769
  Outer table:  T1  Alias: T1
    resc: 1.000508  card 4.000000  bytes:   deg: 1  resp: 1.000508
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021847  Resp: 4.021847  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021847  
     resc: 4.021847 resc_io: 4.000000 resc_cpu: 646829
     resp: 4.021847 resp_io: 4.000000 resp_cpu: 646829
Join order aborted: cost > best plan cost
***********************
Join order[10]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 4.000000  Cost: 1.000508  Resp: 1.000508  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   7.250000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2065  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2048  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2080  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   7.250000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   7.250000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500026.066012 (cpu filter eval) (= 50.002607 (per row) * 10000.000000 (#rows))
                       =   2578062.066012
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 30.348814  Resp: 30.348814  Degree: 1
      Cost_io: 30.000000  Cost_cpu: 10327291
      Resp_io: 30.000000  Resp_cpu: 10327291
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.250000  resc_cpu: 1906548
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 34.258090  Resp: 34.258090  Degree: 1
      Cost_io: 34.000000  Cost_cpu: 7641234
      Resp_io: 34.000000  Resp_cpu: 7641234
kkofmx: index filter: ?? 

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-07  ix_sel_with_filters: 2.2322e-08 
    NL Join : Cost: 5.001628  Resp: 5.001628  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 48206
      Resp_io: 5.000000  Resp_cpu: 48206
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001628
          resc: 5.001628  resc_io: 5.000000  resc_cpu: 48206
          resp: 5.001628  resp_io: 5.000000  resc_cpu: 48206
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.002232 = outer (10.000000) * inner (0.008929) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  0.089286, outer: 10.000000, inner: 0.008929, sel: 0.025000
Join Card - Rounded: 1 Computed: 0.002232
Join order aborted: cost > best plan cost
***********************
Join order[11]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000488  Resp: 2.000488  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001524  Resp: 5.001524  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45129
      Resp_io: 5.000000  Resp_cpu: 45129
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001524
          resc: 5.001524  resc_io: 5.000000  resc_cpu: 45129
          resp: 5.001524  resp_io: 5.000000  resc_cpu: 45129
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.008929 = outer (0.008929) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.008929
  Outer table:  T2  Alias: T2
    resc: 2.000488  card 0.008929  bytes:   deg: 1  resp: 2.000488
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001558  Resp: 7.001558  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001558 
     resc: 7.001558 resc_io: 5.000000 resc_cpu: 59259809
     resp: 7.001558 resp_io: 5.000000 resp_cpu: 59259809
  Outer table:  T2  Alias: T2
    resc: 2.000488  card 0.008929  bytes:   deg: 1  resp: 2.000488
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021812  Resp: 5.021812  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021812  
     resc: 5.021812 resc_io: 5.000000 resc_cpu: 645779
     resp: 5.021812 resp_io: 5.000000 resp_cpu: 645779
Join order aborted: cost > best plan cost
***********************
Join order[12]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.008929  Cost: 2.000488  Resp: 2.000488  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2048  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = 0.000000, cpu = 119.393345, sel = 0.025000 flag = 2080  (OR chain)
      io = 0.000000, cpu = 60.892857, sel = 0.025000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=0)
        io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2080  ("T2"."T2F1">=9)
        io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
      io = 0.000000, cpu = 60.000500, sel = 0.000000 flag = 0  (AND chain)
        io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
        io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
        io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 1216.433603 (cpu filter eval) (= 121.643360 (per row) * 10.000000 (#rows))
                       =   31402.193603
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001548  Resp: 5.001548  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45845
      Resp_io: 5.000000  Resp_cpu: 45845
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9538
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000810  Resp: 4.000810  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23981
      Resp_io: 4.000000  Resp_cpu: 23981
kkofmx: index filter: ?? 

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 15043
    ix_sel: 0.400000  ix_sel_with_filters: 0.010000 
    NL Join : Cost: 3.001012  Resp: 3.001012  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 29963
      Resp_io: 3.000000  Resp_cpu: 29963
  ****** trying bitmap/domain indexes ******
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 3.000742  Resp: 3.000742  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 21964
      Resp_io: 3.000000  Resp_cpu: 21964
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Estimated selectivity: 0.200000 , col: #2 
 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.200000 
    NL Join : Cost: 3.000742  Resp: 3.000742  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 21964
      Resp_io: 3.000000  Resp_cpu: 21964
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              2
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606932
      Total Temp space used: 0
  Bitmap nodes:
    Not used T1_T1F_ID1
      Cost = 4.000757, sel = 0.200000
    Used T1_T1F_ID1
      Cost = 0.000000, sel = 0.000000
  Bitmap nodes:
    Used  bitmap node 
    Not used  bitmap node 
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.001012
          resc: 3.001012  resc_io: 3.000000  resc_cpu: 29963
          resp: 3.001012  resp_io: 3.000000  resc_cpu: 29963
  Estimated selectivity: 0.200000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 

  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.002232 = outer (0.008929) * inner (10.000000) * sel (0.025000)
Join cardinality for HJ/SMJ (no post filters):  0.089286, outer: 0.008929, inner: 10.000000, sel: 0.025000
Join Card - Rounded: 1 Computed: 0.002232
Best:: JoinMethod: NestedLoop
       Cost: 3.001012  Degree: 1  Resp: 3.001012  Card: 0.002232 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.002232  Cost: 3.001012  Resp: 3.001012  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000799 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.399680 (cpu filter eval) (= 50.039968 (per row) * 10.000000 (#rows))
                       =   30686.159680
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.002048  Resp: 6.002048  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 60649
      Resp_io: 6.000000  Resp_cpu: 60649
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001295  Resp: 4.001295  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38355
      Resp_io: 4.000000  Resp_cpu: 38355
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001295  Resp: 4.001295  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38355
      Resp_io: 4.000000  Resp_cpu: 38355
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001295
          resc: 4.001295  resc_io: 4.000000  resc_cpu: 38355
          resp: 4.001295  resp_io: 4.000000  resc_cpu: 38355
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000223 = outer (0.002232) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000223
  Outer table:  T1  Alias: T1
    resc: 3.001012  card 0.002232  bytes:   deg: 1  resp: 3.001012
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.002082  Resp: 8.002082  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.002082 
     resc: 8.002082 resc_io: 6.000000 resc_cpu: 59275329
     resp: 8.002082 resp_io: 6.000000 resp_cpu: 59275329
  Outer table:  T1  Alias: T1
    resc: 3.001012  card 0.002232  bytes:   deg: 1  resp: 3.001012
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022336  Resp: 6.022336  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022336  
     resc: 6.022336 resc_io: 6.000000 resc_cpu: 661299
     resp: 6.022336 resp_io: 6.000000 resp_cpu: 661299
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between T2[T2](serial) and T1[T1](serial); jm = 14; right side access path = IndexRange
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL
--- Distribution method for 
join between T1[T1](serial) and L[L](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

Transfer Optimizer annotations for query block SEL$1_1 (#0)
AP: Checking validity for query block SEL$1_1, sqlid=a5t76fz006a0y
AP: Adaptive joins bypassed for query block SEL$1_1 due to OR expansion
AutoDOP: Consider caching for T2[T2](obj#-1) 
cost:2.000488 blkSize:8192 objSize:25.00 marObjSize:23.75 bufSize:135102.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible for first input in join order
id=0 frofkks[i] (index start key) predicate="T2"."T2F1"=14
id=0 frofkks[i] (index start key) predicate="T2"."T2F2"=13
id=0 frofkke[i] (index stop key) predicate="T2"."T2F1"=14
id=0 frofkke[i] (index stop key) predicate="T2"."T2F2"=13
Transfer optimizer annotations for T2[T2]
AutoDOP: Consider caching for T1[T1](obj#-1) 
cost:3.001012 blkSize:8192 objSize:4.00 marObjSize:3.80 bufSize:135102.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible based on distribution
id=0 frofkks[i] (index start key) predicate="T1"."T1F"=0 OR "T1"."T1F"=1
id=0 frofkke[i] (index stop key) predicate="T1"."T1F"=0 OR "T1"."T1F"=1
id=0 froiand (index only filter) predicate="T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 OR "T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13
Transfer optimizer annotations for T1[T1]
AutoDOP: Consider caching for L[L](obj#73956) 
cost:4.001295 blkSize:8192 objSize:4.00 marObjSize:3.80 bufSize:135102.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible based on distribution
id=0 frofkks[i] (index start key) predicate="L"."ID1"="T1"."ID1"
id=0 frofkke[i] (index stop key) predicate="L"."ID1"="T1"."ID1"
id=0 frofand predicate="L"."ID2"="T2"."ID2"
Transfer optimizer annotations for L[L]
Final cost for query block SEL$1_1 (#0) - All Rows Plan:
  Best join order: 6
  Cost: 4.001295  Degree: 1  Card: 1.000000  Bytes: 22.000000
  Resc: 4.001295  Resc_io: 4.000000  Resc_cpu: 38355
  Resp: 4.001295  Resp_io: 4.000000  Resc_cpu: 38355
Registered qb: SEL$1_2 0x8126d988 (OR EXPANSION SEL$1)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$1_2 nbfros=3 flg=0
    fro(0): flg=4 objn=73956 hint_alias="L"@"SEL$1_2"
    fro(1): flg=4 objn=73958 hint_alias="T1"@"SEL$1_2"
    fro(2): flg=4 objn=73960 hint_alias="T2"@"SEL$1_2"

LORE: Predicate chain for or-expanded branch SEL$1_2 is:
id=0  predicate="T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13 AND (LNNVL("T2"."T2F1"=14) OR LNNVL("T2"."T2F2"=13)) AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 AND ("T1"."T1F"=0 OR "T1"."T1F"=1) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"
****************
QUERY BLOCK TEXT
****************
SELECT /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null FROM l, t1, t2 WHERE  
(  ( t1.t1f = 0 AND t2.t2f1 BETWEEN 9 AND 10)       OR 
   ( t1.t1f = 1 AND t2.t2f1 = 14 AND t2.t2f2 = 13  )   )  AND 
    ( l.id1 = t1.id1 AND l.id2 = t2.id2 )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$1_2 nbfros=3 flg=0
  fro(0): flg=0 objn=73956 hint_alias="L"@"SEL$1_2"
  fro(1): flg=0 objn=73958 hint_alias="T1"@"SEL$1_2"
  fro(2): flg=0 objn=73960 hint_alias="T2"@"SEL$1_2"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 2467 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: T2  Alias: T2
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  25  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T2F1(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#3): T2F2(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#1): ID2(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: T2_ID2  Col#: 1
  LVLS: 1  #LB: 20  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: T2_T2F1_T2F2_ID2  Col#: 2 3 1
  LVLS: 1  #LB: 29  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 168.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: T1  Alias: T1
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T1F(NUMBER)
    AvgLen: 3 NDV: 5 Nulls: 0 Density: 0.200000 Min: 0.000000 Max: 4.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: T1_T1F_ID1  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  L  Alias:  L
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
  Column (#2): ID2(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: L_ID1  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$1_2 (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for L
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for L[L] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: L  Alias: L
    Card: Original: 10.000000  Rounded: 10  Computed: 10.000000  Non Adjusted: 10.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                       =   30185.760000
  Access Path: TableScan
    Cost:  3.001020  Resp: 3.001020  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 30186
      Resp_io: 3.000000  Resp_cpu: 30186
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3.001020  Degree: 1  Resp: 3.001020  Card: 10.000000  Bytes: 0.000000

Access path analysis for T1
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T1[T1] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 0.200000 , col: #2 


 kkecdn: Single Table Predicate:"T1"."T1F"=1
  Estimated selectivity: 0.200000 , col: #2 

 kkecdn: Single Table Predicate:"T1"."T1F"=0 OR "T1"."T1F"=1
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Table: T1  Alias: T1
    Card: Original: 10.000000  Rounded: 1  Computed: 0.800000  Non Adjusted: 0.800000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 680.000000 (cpu filter eval) (= 68.000000 (per row) * 10.000000 (#rows))
                       =   30865.760000
  Access Path: TableScan
    Cost:  3.001043  Resp: 3.001043  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 30866
      Resp_io: 3.000000  Resp_cpu: 30866
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9001
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000304  Resp: 2.000304  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9001
      Resp_io: 2.000000  Resp_cpu: 9001
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.080000 
    Cost: 1.000260  Resp: 1.000260  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T1_T1F_ID1
         Cost: 1.000260  Degree: 1  Resp: 1.000260  Card: 0.800000  Bytes: 0.000000

Access path analysis for T2
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T2[T2] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 0.125000 , col: #2 
  Estimated selectivity: 0.125000 , col: #3 


 kkecdn: Single Table Predicate:"T2"."T2F1"=14
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F2"=13
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate: ?? 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F1">=9
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F1"<=10
  Estimated selectivity: 1.000000 , col: #2 
  Table: T2  Alias: T2
    Card: Original: 10000.000000  Rounded: 1  Computed: 0.000000  Non Adjusted: 0.000000
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2081  ("T2"."T2F1">=9)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.526150 (cpu filter eval) (= 50.002553 (per row) * 10000.000000 (#rows))
                       =   2578061.526150
  Access Path: TableScan
    Cost:  9.087077  Resp: 9.087077  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2578062
      Resp_io: 9.000000  Resp_cpu: 2578062
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.064395  Resp: 10.064395  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1906547
      Resp_io: 10.000000  Resp_cpu: 1906547
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 2.000000  resc_cpu: 14443
    ix_sel: 8.9286e-07  ix_sel_with_filters: 7.9719e-08 
    Cost: 2.000490  Resp: 2.000490  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T2_T2F1_T2F2_ID2
         Cost: 2.000490  Degree: 1  Resp: 2.000490  Card: 0.000000  Bytes: 0.000000

(newjo-restore) [2 1 0 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is OR expanded SEL$1_2 (#0)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  L[L]#0  T1[T1]#1  T2[T2]#2

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.200000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.200000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.200000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 568.000000 (cpu filter eval) (= 56.800000 (per row) * 10.000000 (#rows))
                       =   30753.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 15.011407  Resp: 15.011407  Degree: 1
      Cost_io: 15.000000  Cost_cpu: 337723
      Resp_io: 15.000000  Resp_cpu: 337723
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.400000  resc_cpu: 8889
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 7.004022  Resp: 7.004022  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 119080
      Resp_io: 7.000000  Resp_cpu: 119080
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.200000 , col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.008000 
    NL Join : Cost: 3.001405  Resp: 3.001405  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 41586
      Resp_io: 3.000000  Resp_cpu: 41586
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.001405
          resc: 3.001405  resc_io: 3.000000  resc_cpu: 41586
          resp: 3.001405  resp_io: 3.000000  resc_cpu: 41586
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.800000 = outer (10.000000) * inner (0.800000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.800000
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
SM Join (with index on outer)
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 2.000000  resc_cpu: 17943
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2.000606  Resp: 2.000606  Degree: 1
  Outer table:  L  Alias: L
    resc: 2.000606  card 10.000000  bytes:   deg: 1  resp: 2.000606
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 4.000866  Resp: 4.000866  [multiMatchCost=0.000000]
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021599  Resp: 4.021599  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021599  
     resc: 4.021599 resc_io: 4.000000 resc_cpu: 639487
     resp: 4.021599 resp_io: 4.000000 resp_cpu: 639487
Best:: JoinMethod: NestedLoop
       Cost: 3.001405  Degree: 1  Resp: 3.001405  Card: 0.800000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 3.001405  Resp: 3.001405  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2081  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.020421 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.020421
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 12.088481  Resp: 12.088481  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 2619647
      Resp_io: 12.000000  Resp_cpu: 2619647
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 13.065800  Resp: 13.065800  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 1948133
      Resp_io: 13.000000  Resp_cpu: 1948133
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001717  Resp: 4.001717  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 50847
      Resp_io: 4.000000  Resp_cpu: 50847
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001717  Resp: 4.001717  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 50847
      Resp_io: 4.000000  Resp_cpu: 50847
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 7.9719e-12 
    NL Join : Cost: 4.001683  Resp: 4.001683  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 49816
      Resp_io: 4.000000  Resp_cpu: 49816
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001683
          resc: 4.001683  resc_io: 4.000000  resc_cpu: 49816
          resp: 4.001683  resp_io: 4.000000  resc_cpu: 49816
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.800000) * inner (0.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T1  Alias: T1
    resc: 3.001405  card 0.800000  bytes:   deg: 1  resp: 3.001405
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 7.001894  Resp: 7.001894  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001894 
     resc: 7.001894 resc_io: 5.000000 resc_cpu: 59269771
     resp: 7.001894 resp_io: 5.000000 resp_cpu: 59269771
  Outer table:  T1  Alias: T1
    resc: 3.001405  card 0.800000  bytes:   deg: 1  resp: 3.001405
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020274  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.022168  Resp: 5.022168  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.022168  
     resc: 5.022168 resc_io: 5.000000 resc_cpu: 656338
     resp: 5.022168 resp_io: 5.000000 resp_cpu: 656338
Best:: JoinMethod: NestedLoop
       Cost: 4.001683  Degree: 1  Resp: 4.001683  Card: 0.000000 Bytes: 
***********************
Best so far:  Table#: 0  cost: 3.001020  card: 10.000000  bytes: 60.000000
              Table#: 1  cost: 3.001405  card: 0.800000  bytes: 12.000000
              Table#: 2  cost: 4.001683  card: 0.000000  bytes: 22.000000
***********************
Join order[2]:  L[L]#0  T2[T2]#2  T1[T1]#1

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2081  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.020421 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.020421
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 72.871785  Resp: 72.871785  Degree: 1
      Cost_io: 72.000000  Cost_cpu: 25810796
      Resp_io: 72.000000  Resp_cpu: 25810796
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 83.644974  Resp: 83.644974  Degree: 1
      Cost_io: 83.000000  Cost_cpu: 19095654
      Resp_io: 83.000000  Resp_cpu: 19095654
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004148  Resp: 13.004148  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122800
      Resp_io: 13.000000  Resp_cpu: 122800
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004148  Resp: 13.004148  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122800
      Resp_io: 13.000000  Resp_cpu: 122800
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 7.9719e-12 
    NL Join : Cost: 13.003799  Resp: 13.003799  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 112489
      Resp_io: 13.000000  Resp_cpu: 112489
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 13.003799
          resc: 13.003799  resc_io: 13.000000  resc_cpu: 112489
          resp: 13.003799  resp_io: 13.000000  resc_cpu: 112489
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (10.000000) * inner (0.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 7.001560  Resp: 7.001560  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001560 
     resc: 7.001560 resc_io: 5.000000 resc_cpu: 59259868
     resp: 7.001560 resp_io: 5.000000 resp_cpu: 59259868
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021829  Resp: 5.021829  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021829  
     resc: 5.021829 resc_io: 5.000000 resc_cpu: 646288
     resp: 5.021829 resp_io: 5.000000 resp_cpu: 646288
Join order aborted: cost > best plan cost
***********************
Join order[3]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 4.001297  Resp: 4.001297  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38387
      Resp_io: 4.000000  Resp_cpu: 38387
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000542
          resc: 2.000542  resc_io: 2.000000  resc_cpu: 16043
          resp: 2.000542  resp_io: 2.000000  resc_cpu: 16043
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.800000 = outer (0.800000) * inner (10.000000) * sel (0.100000)
Join cardinality for NL:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join cardinality without POSQ:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join Card - Rounded: 1 Computed: 0.800000
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021584  Resp: 4.021584  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021584  
     resc: 4.021584 resc_io: 4.000000 resc_cpu: 639037
     resp: 4.021584 resp_io: 4.000000 resp_cpu: 639037
Best:: JoinMethod: NestedLoop
       Cost: 2.000542  Degree: 1  Resp: 2.000542  Card: 0.800000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 2.000542  Resp: 2.000542  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2081  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.020421 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.020421
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 11.087618  Resp: 11.087618  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 2594104
      Resp_io: 11.000000  Resp_cpu: 2594104
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 12.064937  Resp: 12.064937  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1922590
      Resp_io: 12.000000  Resp_cpu: 1922590
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25304
      Resp_io: 3.000000  Resp_cpu: 25304
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25304
      Resp_io: 3.000000  Resp_cpu: 25304
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 7.9719e-12 
    NL Join : Cost: 3.000820  Resp: 3.000820  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24273
      Resp_io: 3.000000  Resp_cpu: 24273
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000820
          resc: 3.000820  resc_io: 3.000000  resc_cpu: 24273
          resp: 3.000820  resp_io: 3.000000  resc_cpu: 24273
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.800000) * inner (0.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 6.001032  Resp: 6.001032  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001032 
     resc: 6.001032 resc_io: 4.000000 resc_cpu: 59244228
     resp: 6.001032 resp_io: 4.000000 resp_cpu: 59244228
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020274  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021306  Resp: 4.021306  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021306  
     resc: 4.021306 resc_io: 4.000000 resc_cpu: 630795
     resp: 4.021306 resp_io: 4.000000 resp_cpu: 630795
Best:: JoinMethod: NestedLoop
       Cost: 3.000820  Degree: 1  Resp: 3.000820  Card: 0.000000 Bytes: 
***********************
Best so far:  Table#: 1  cost: 1.000260  card: 0.800000  bytes: 6.000000
              Table#: 0  cost: 2.000542  card: 0.800000  bytes: 12.000000
              Table#: 2  cost: 3.000820  card: 0.000000  bytes: 22.000000
***********************
Join order[4]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2081  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.526150 (cpu filter eval) (= 50.002553 (per row) * 10000.000000 (#rows))
                       =   2578061.526150
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 10.087337  Resp: 10.087337  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2585763
      Resp_io: 10.000000  Resp_cpu: 2585763
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 11.064656  Resp: 11.064656  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1914249
      Resp_io: 11.000000  Resp_cpu: 1914249
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-07  ix_sel_with_filters: 7.9719e-08 
    NL Join : Cost: 2.000538  Resp: 2.000538  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15932
      Resp_io: 2.000000  Resp_cpu: 15932
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000538
          resc: 2.000538  resc_io: 2.000000  resc_cpu: 15932
          resp: 2.000538  resp_io: 2.000000  resc_cpu: 15932
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.800000) * inner (0.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Best:: JoinMethod: NestedLoop
       Cost: 2.000538  Degree: 1  Resp: 2.000538  Card: 0.000000 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000538  Resp: 2.000538  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.400000 (cpu filter eval) (= 50.040000 (per row) * 10.000000 (#rows))
                       =   30686.160000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001575  Resp: 5.001575  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 46618
      Resp_io: 5.000000  Resp_cpu: 46618
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000822  Resp: 3.000822  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24323
      Resp_io: 3.000000  Resp_cpu: 24323
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000822  Resp: 3.000822  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24323
      Resp_io: 3.000000  Resp_cpu: 24323
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000822
          resc: 3.000822  resc_io: 3.000000  resc_cpu: 24323
          resp: 3.000822  resp_io: 3.000000  resc_cpu: 24323
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T2  Alias: T2
    resc: 2.000538  card 0.000000  bytes:   deg: 1  resp: 2.000538
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001608  Resp: 7.001608  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001608 
     resc: 7.001608 resc_io: 5.000000 resc_cpu: 59261298
     resp: 7.001608 resp_io: 5.000000 resp_cpu: 59261298
  Outer table:  T2  Alias: T2
    resc: 2.000538  card 0.000000  bytes:   deg: 1  resp: 2.000538
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021862  Resp: 5.021862  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021862  
     resc: 5.021862 resc_io: 5.000000 resc_cpu: 647268
     resp: 5.021862 resp_io: 5.000000 resp_cpu: 647268
Join order aborted: cost > best plan cost
***********************
Join order[5]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001526  Resp: 5.001526  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45188
      Resp_io: 5.000000  Resp_cpu: 45188
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001526
          resc: 5.001526  resc_io: 5.000000  resc_cpu: 45188
          resp: 5.001526  resp_io: 5.000000  resc_cpu: 45188
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001560  Resp: 7.001560  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001560 
     resc: 7.001560 resc_io: 5.000000 resc_cpu: 59259868
     resp: 7.001560 resp_io: 5.000000 resp_cpu: 59259868
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021814  Resp: 5.021814  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021814  
     resc: 5.021814 resc_io: 5.000000 resc_cpu: 645838
     resp: 5.021814 resp_io: 5.000000 resp_cpu: 645838
Join order aborted: cost > best plan cost
***********************
Join order[6]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 680.000000 (cpu filter eval) (= 68.000000 (per row) * 10.000000 (#rows))
                       =   30865.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001532  Resp: 5.001532  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45368
      Resp_io: 5.000000  Resp_cpu: 45368
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9001
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000794  Resp: 4.000794  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23503
      Resp_io: 4.000000  Resp_cpu: 23503
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.200000 , col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.080000 
    NL Join : Cost: 3.000750  Resp: 3.000750  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 22203
      Resp_io: 3.000000  Resp_cpu: 22203
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000750
          resc: 3.000750  resc_io: 3.000000  resc_cpu: 22203
          resp: 3.000750  resp_io: 3.000000  resc_cpu: 22203
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (0.800000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Best:: JoinMethod: NestedLoop
       Cost: 3.000750  Degree: 1  Resp: 3.000750  Card: 0.000000 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 3.000750  Resp: 3.000750  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.400000 (cpu filter eval) (= 50.040000 (per row) * 10.000000 (#rows))
                       =   30686.160000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.001786  Resp: 6.001786  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 52889
      Resp_io: 6.000000  Resp_cpu: 52889
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30595
      Resp_io: 4.000000  Resp_cpu: 30595
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30595
      Resp_io: 4.000000  Resp_cpu: 30595
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001033
          resc: 4.001033  resc_io: 4.000000  resc_cpu: 30595
          resp: 4.001033  resp_io: 4.000000  resc_cpu: 30595
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.001820  Resp: 8.001820  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.001820 
     resc: 8.001820 resc_io: 6.000000 resc_cpu: 59267569
     resp: 8.001820 resp_io: 6.000000 resp_cpu: 59267569
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022074  Resp: 6.022074  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022074  
     resc: 6.022074 resc_io: 6.000000 resc_cpu: 653539
     resp: 6.022074 resp_io: 6.000000 resp_cpu: 653539
Join order aborted: cost > best plan cost
***********************
Permutations for Starting Table :1
Join order[7]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001526  Resp: 5.001526  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45188
      Resp_io: 5.000000  Resp_cpu: 45188
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001526
          resc: 5.001526  resc_io: 5.000000  resc_cpu: 45188
          resp: 5.001526  resp_io: 5.000000  resc_cpu: 45188
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001560  Resp: 7.001560  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001560 
     resc: 7.001560 resc_io: 5.000000 resc_cpu: 59259868
     resp: 7.001560 resp_io: 5.000000 resp_cpu: 59259868
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021814  Resp: 5.021814  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021814  
     resc: 5.021814 resc_io: 5.000000 resc_cpu: 645838
     resp: 5.021814 resp_io: 5.000000 resp_cpu: 645838
Join order aborted: cost > best plan cost
***********************
Join order[8]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 680.000000 (cpu filter eval) (= 68.000000 (per row) * 10.000000 (#rows))
                       =   30865.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001532  Resp: 5.001532  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45368
      Resp_io: 5.000000  Resp_cpu: 45368
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9001
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000794  Resp: 4.000794  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23503
      Resp_io: 4.000000  Resp_cpu: 23503
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.200000 , col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.080000 
    NL Join : Cost: 3.000750  Resp: 3.000750  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 22203
      Resp_io: 3.000000  Resp_cpu: 22203
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000750
          resc: 3.000750  resc_io: 3.000000  resc_cpu: 22203
          resp: 3.000750  resp_io: 3.000000  resc_cpu: 22203
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (0.800000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Best:: JoinMethod: NestedLoop
       Cost: 3.000750  Degree: 1  Resp: 3.000750  Card: 0.000000 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 3.000750  Resp: 3.000750  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.400000 (cpu filter eval) (= 50.040000 (per row) * 10.000000 (#rows))
                       =   30686.160000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.001786  Resp: 6.001786  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 52889
      Resp_io: 6.000000  Resp_cpu: 52889
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30595
      Resp_io: 4.000000  Resp_cpu: 30595
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30595
      Resp_io: 4.000000  Resp_cpu: 30595
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001033
          resc: 4.001033  resc_io: 4.000000  resc_cpu: 30595
          resp: 4.001033  resp_io: 4.000000  resc_cpu: 30595
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.001820  Resp: 8.001820  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.001820 
     resc: 8.001820 resc_io: 6.000000 resc_cpu: 59267569
     resp: 8.001820 resp_io: 6.000000 resp_cpu: 59267569
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022074  Resp: 6.022074  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022074  
     resc: 6.022074 resc_io: 6.000000 resc_cpu: 653539
     resp: 6.022074 resp_io: 6.000000 resp_cpu: 653539
Join order aborted: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[9]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 4.001297  Resp: 4.001297  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38387
      Resp_io: 4.000000  Resp_cpu: 38387
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000542
          resc: 2.000542  resc_io: 2.000000  resc_cpu: 16043
          resp: 2.000542  resp_io: 2.000000  resc_cpu: 16043
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.800000 = outer (0.800000) * inner (10.000000) * sel (0.100000)
Join cardinality for NL:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join cardinality without POSQ:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join Card - Rounded: 1 Computed: 0.800000
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021584  Resp: 4.021584  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021584  
     resc: 4.021584 resc_io: 4.000000 resc_cpu: 639037
     resp: 4.021584 resp_io: 4.000000 resp_cpu: 639037
Best:: JoinMethod: NestedLoop
       Cost: 2.000542  Degree: 1  Resp: 2.000542  Card: 0.800000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 2.000542  Resp: 2.000542  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2081  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.020421 (cpu filter eval) (= 50.002502 (per row) * 10000.000000 (#rows))
                       =   2578061.020421
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 11.087618  Resp: 11.087618  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 2594104
      Resp_io: 11.000000  Resp_cpu: 2594104
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 12.064937  Resp: 12.064937  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1922590
      Resp_io: 12.000000  Resp_cpu: 1922590
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25304
      Resp_io: 3.000000  Resp_cpu: 25304
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9261
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25304
      Resp_io: 3.000000  Resp_cpu: 25304
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-11  ix_sel_with_filters: 7.9719e-12 
    NL Join : Cost: 3.000820  Resp: 3.000820  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24273
      Resp_io: 3.000000  Resp_cpu: 24273
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000820
          resc: 3.000820  resc_io: 3.000000  resc_cpu: 24273
          resp: 3.000820  resp_io: 3.000000  resc_cpu: 24273
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.800000) * inner (0.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 6.001032  Resp: 6.001032  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001032 
     resc: 6.001032 resc_io: 4.000000 resc_cpu: 59244228
     resp: 6.001032 resp_io: 4.000000 resp_cpu: 59244228
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 2.000490  card: 0.000000  bytes:   deg: 1  resp: 2.000490
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020274  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021306  Resp: 4.021306  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021306  
     resc: 4.021306 resc_io: 4.000000 resc_cpu: 630795
     resp: 4.021306 resp_io: 4.000000 resp_cpu: 630795
Join order aborted: cost > best plan cost
***********************
Join order[10]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000050 flag = 2064  ("T2"."T2F1"=14)
    io = NOCOST, cpu = 50.000000, sel = 0.017857 flag = 2064  ("T2"."T2F2"=13)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2081  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500025.526150 (cpu filter eval) (= 50.002553 (per row) * 10000.000000 (#rows))
                       =   2578061.526150
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 10.087337  Resp: 10.087337  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2585763
      Resp_io: 10.000000  Resp_cpu: 2585763
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906547
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 11.064656  Resp: 11.064656  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1914249
      Resp_io: 11.000000  Resp_cpu: 1914249
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 1.000000  resc_cpu: 8171
    ix_sel: 8.9286e-07  ix_sel_with_filters: 7.9719e-08 
    NL Join : Cost: 2.000538  Resp: 2.000538  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 15932
      Resp_io: 2.000000  Resp_cpu: 15932
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000538
          resc: 2.000538  resc_io: 2.000000  resc_cpu: 15932
          resp: 2.000538  resp_io: 2.000000  resc_cpu: 15932
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.800000) * inner (0.000000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Best:: JoinMethod: NestedLoop
       Cost: 2.000538  Degree: 1  Resp: 2.000538  Card: 0.000000 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000538  Resp: 2.000538  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2064  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.400000 (cpu filter eval) (= 50.040000 (per row) * 10.000000 (#rows))
                       =   30686.160000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001575  Resp: 5.001575  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 46618
      Resp_io: 5.000000  Resp_cpu: 46618
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000822  Resp: 3.000822  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24323
      Resp_io: 3.000000  Resp_cpu: 24323
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 3.000822  Resp: 3.000822  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 24323
      Resp_io: 3.000000  Resp_cpu: 24323
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000822
          resc: 3.000822  resc_io: 3.000000  resc_cpu: 24323
          resp: 3.000822  resp_io: 3.000000  resc_cpu: 24323
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T2  Alias: T2
    resc: 2.000538  card 0.000000  bytes:   deg: 1  resp: 2.000538
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001608  Resp: 7.001608  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001608 
     resc: 7.001608 resc_io: 5.000000 resc_cpu: 59261298
     resp: 7.001608 resp_io: 5.000000 resp_cpu: 59261298
  Outer table:  T2  Alias: T2
    resc: 2.000538  card 0.000000  bytes:   deg: 1  resp: 2.000538
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021862  Resp: 5.021862  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021862  
     resc: 5.021862 resc_io: 5.000000 resc_cpu: 647268
     resp: 5.021862 resp_io: 5.000000 resp_cpu: 647268
Join order aborted: cost > best plan cost
***********************
Join order[11]:  T2[T2]#2  L[L]#0  T1[T1]#1

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 5.001526  Resp: 5.001526  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45188
      Resp_io: 5.000000  Resp_cpu: 45188
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.001526
          resc: 5.001526  resc_io: 5.000000  resc_cpu: 45188
          resp: 5.001526  resp_io: 5.000000  resc_cpu: 45188
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     21 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 7.001560  Resp: 7.001560  [multiMatchCost=0.000000]
SM Join
  SM cost: 7.001560 
     resc: 7.001560 resc_io: 5.000000 resc_cpu: 59259868
     resp: 7.001560 resp_io: 5.000000 resp_cpu: 59259868
  Outer table:  T2  Alias: T2
    resc: 2.000490  card 0.000000  bytes:   deg: 1  resp: 2.000490
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 5.021814  Resp: 5.021814  [multiMatchCost=0.000000]
HA Join
  HA cost: 5.021814  
     resc: 5.021814 resc_io: 5.000000 resc_cpu: 645838
     resp: 5.021814 resp_io: 5.000000 resp_cpu: 645838
Join order aborted: cost > best plan cost
***********************
Join order[12]:  T2[T2]#2  T1[T1]#1  L[L]#0

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 0.000000  Cost: 2.000490  Resp: 2.000490  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=1)
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 680.000000 (cpu filter eval) (= 68.000000 (per row) * 10.000000 (#rows))
                       =   30865.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 5.001532  Resp: 5.001532  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 45368
      Resp_io: 5.000000  Resp_cpu: 45368
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9001
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 4.000794  Resp: 4.000794  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 23503
      Resp_io: 4.000000  Resp_cpu: 23503
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.200000 , col: #2 

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.080000 
    NL Join : Cost: 3.000750  Resp: 3.000750  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 22203
      Resp_io: 3.000000  Resp_cpu: 22203
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000750
          resc: 3.000750  resc_io: 3.000000  resc_cpu: 22203
          resp: 3.000750  resp_io: 3.000000  resc_cpu: 22203
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (0.800000) * sel (1.000000)
Join Card - Rounded: 1 Computed: 0.000000
Best:: JoinMethod: NestedLoop
       Cost: 3.000750  Degree: 1  Resp: 3.000750  Card: 0.000000 Bytes: 

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.000000  Cost: 3.000750  Resp: 3.000750  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.400000 (cpu filter eval) (= 50.040000 (per row) * 10.000000 (#rows))
                       =   30686.160000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 6.001786  Resp: 6.001786  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 52889
      Resp_io: 6.000000  Resp_cpu: 52889
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30595
      Resp_io: 4.000000  Resp_cpu: 30595
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8391
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 4.001033  Resp: 4.001033  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 30595
      Resp_io: 4.000000  Resp_cpu: 30595
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001033
          resc: 4.001033  resc_io: 4.000000  resc_cpu: 30595
          resp: 4.001033  resp_io: 4.000000  resc_cpu: 30595
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.000000 = outer (0.000000) * inner (10.000000) * sel (0.010000)
Join Card - Rounded: 1 Computed: 0.000000
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     28 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 8.001820  Resp: 8.001820  [multiMatchCost=0.000000]
SM Join
  SM cost: 8.001820 
     resc: 8.001820 resc_io: 6.000000 resc_cpu: 59267569
     resp: 8.001820 resp_io: 6.000000 resp_cpu: 59267569
  Outer table:  T1  Alias: T1
    resc: 3.000750  card 0.000000  bytes:   deg: 1  resp: 3.000750
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 6.022074  Resp: 6.022074  [multiMatchCost=0.000000]
HA Join
  HA cost: 6.022074  
     resc: 6.022074 resc_io: 6.000000 resc_cpu: 653539
     resp: 6.022074 resp_io: 6.000000 resp_cpu: 653539
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between T1[T1](serial) and L[L](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL
--- Distribution method for 
join between L[L](serial) and T2[T2](serial); jm = 14; right side access path = IndexRange
kkopqIsSerialJoin: serial NLJ: both inputs serial
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

Transfer Optimizer annotations for query block SEL$1_2 (#0)
AP: Checking validity for query block SEL$1_2, sqlid=a5t76fz006a0y
AP: Adaptive joins bypassed for query block SEL$1_2 due to OR expansion
AutoDOP: Consider caching for T1[T1](obj#-1) 
cost:1.000260 blkSize:8192 objSize:4.00 marObjSize:3.80 bufSize:135102.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible for first input in join order
id=0 frofkks[i] (index start key) predicate="T1"."T1F"=1
id=0 frofkke[i] (index stop key) predicate="T1"."T1F"=1
id=0 froiand (index only filter) predicate="T1"."T1F"=0 OR "T1"."T1F"=1
Transfer optimizer annotations for T1[T1]
AutoDOP: Consider caching for L[L](obj#73956) 
cost:2.000542 blkSize:8192 objSize:4.00 marObjSize:3.80 bufSize:135102.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible based on distribution
id=0 frofkks[i] (index start key) predicate="L"."ID1"="T1"."ID1"
id=0 frofkke[i] (index stop key) predicate="L"."ID1"="T1"."ID1"
Transfer optimizer annotations for L[L]
AutoDOP: Consider caching for T2[T2](obj#-1) 
cost:3.000820 blkSize:8192 objSize:25.00 marObjSize:23.75 bufSize:135102.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible based on distribution
id=0 frofkks[i] (index start key) predicate="T2"."T2F1"=14
id=0 frofkks[i] (index start key) predicate="T2"."T2F2"=13
id=0 frofkks[i] (index start key) predicate="L"."ID2"="T2"."ID2"
id=0 frofkke[i] (index stop key) predicate="T2"."T2F1"=14
id=0 frofkke[i] (index stop key) predicate="T2"."T2F2"=13
id=0 frofkke[i] (index stop key) predicate="L"."ID2"="T2"."ID2"
id=0 froiand (index only filter) predicate="T2"."T2F1">=9 AND "T2"."T2F1"<=10 AND (LNNVL("T2"."T2F1"=14) OR LNNVL("T2"."T2F2"=13))
Transfer optimizer annotations for T2[T2]
Final cost for query block SEL$1_2 (#0) - All Rows Plan:
  Best join order: 3
  Cost: 7.002115  Degree: 1  Card: 2.000000  Bytes: 44.000000
  Resc: 7.002115  Resc_io: 7.000000  Resc_cpu: 62628
  Resp: 7.002115  Resp_io: 7.000000  Resc_cpu: 62628
Registered qb: SEL$1_3 0x8126d988 (OR EXPANSION SEL$1)
---------------------
QUERY BLOCK SIGNATURE
---------------------
  signature (): qb_name=SEL$1_3 nbfros=3 flg=0
    fro(0): flg=4 objn=73956 hint_alias="L"@"SEL$1_3"
    fro(1): flg=4 objn=73958 hint_alias="T1"@"SEL$1_3"
    fro(2): flg=4 objn=73960 hint_alias="T2"@"SEL$1_3"

LORE: Predicate chain for or-expanded branch SEL$1_3 is:
id=0  predicate=(LNNVL("T1"."T1F"=1) OR LNNVL("T2"."T2F1"=14) OR LNNVL("T2"."T2F2"=13)) AND "T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 AND (LNNVL("T2"."T2F1"=14) OR LNNVL("T2"."T2F2"=13)) AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 AND ("T1"."T1F"=0 OR "T1"."T1F"=1) AND "L"."ID1"="T1"."ID1" AND "L"."ID2"="T2"."ID2"
****************
QUERY BLOCK TEXT
****************
SELECT /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null FROM l, t1, t2 WHERE  
(  ( t1.t1f = 0 AND t2.t2f1 BETWEEN 9 AND 10)       OR 
   ( t1.t1f = 1 AND t2.t2f1 = 14 AND t2.t2f2 = 13  )   )  AND 
    ( l.id1 = t1.id1 AND l.id2 = t2.id2 )
---------------------
QUERY BLOCK SIGNATURE
---------------------
signature (optimizer): qb_name=SEL$1_3 nbfros=3 flg=0
  fro(0): flg=0 objn=73956 hint_alias="L"@"SEL$1_3"
  fro(1): flg=0 objn=73958 hint_alias="T1"@"SEL$1_3"
  fro(2): flg=0 objn=73960 hint_alias="T2"@"SEL$1_3"

-----------------------------
SYSTEM STATISTICS INFORMATION
-----------------------------
Using dictionary system stats.
  Using NOWORKLOAD Stats
  CPUSPEEDNW: 2467 millions instructions/sec (default is 100)
  IOTFRSPEED: 4096 bytes per millisecond (default is 4096)
  IOSEEKTIM:  10 milliseconds (default is 10)
  MBRC:       NO VALUE blocks (default is 8)

***************************************
BASE STATISTICAL INFORMATION
***********************
Table Stats::
  Table: T2  Alias: T2
  #Rows: 10000  SSZ: 0  LGR: 0  #Blks:  25  AvgRowLen:  10.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T2F1(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#3): T2F2(NUMBER)
    AvgLen: 3 NDV: 8 Nulls: 0 Density: 0.125000 Min: 0.000000 Max: 7.000000
  Column (#1): ID2(NUMBER)
    AvgLen: 4 NDV: 10000 Nulls: 0 Density: 0.000100 Min: 1.000000 Max: 10000.000000
Index Stats::
  Index: T2_ID2  Col#: 1
  LVLS: 1  #LB: 20  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 21.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
  Index: T2_T2F1_T2F2_ID2  Col#: 2 3 1
  LVLS: 1  #LB: 29  #DK: 10000  LB/K: 1.00  DB/K: 1.00  CLUF: 168.00  NRW: 10000.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table: T1  Alias: T1
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#2): T1F(NUMBER)
    AvgLen: 3 NDV: 5 Nulls: 0 Density: 0.200000 Min: 0.000000 Max: 4.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: T1_T1F_ID1  Col#: 2 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
***********************
Table Stats::
  Table:  L  Alias:  L
  #Rows: 10  SSZ: 0  LGR: 0  #Blks:  4  AvgRowLen:  6.00  NEB: 0  ChainCnt:  0.00  ScanRate:  0.00  SPC: 0  RFL: 0  RNF: 0  CBK: 0  CHR: 0  KQDFLG: 1
  #IMCUs: 0  IMCRowCnt: 0  IMCJournalRowCnt: 0  #IMCBlocks: 0  IMCQuotient: 0.000000
  Column (#1): ID1(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
  Column (#2): ID2(NUMBER)
    AvgLen: 3 NDV: 10 Nulls: 0 Density: 0.100000 Min: 1.000000 Max: 10.000000
Index Stats::
  Index: L_ID1  Col#: 1
  LVLS: 0  #LB: 1  #DK: 10  LB/K: 1.00  DB/K: 1.00  CLUF: 1.00  NRW: 10.00 SSZ: 0.00 LGR: 0.00 CBK: 0.00 GQL: 0.00 CHR: 0.00 KQDFLG: 8192 BSZ: 1
  KKEISFLG: 1 
=======================================
SPD: BEGIN context at query block level
=======================================
Query Block SEL$1_3 (#0)
Return code in qosdSetupDirCtx4QB: NOCTX
=====================================
SPD: END context at query block level
=====================================
Access path analysis for L
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for L[L] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Table: L  Alias: L
    Card: Original: 10.000000  Rounded: 10  Computed: 10.000000  Non Adjusted: 10.000000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                       =   30185.760000
  Access Path: TableScan
    Cost:  3.001020  Resp: 3.001020  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 30186
      Resp_io: 3.000000  Resp_cpu: 30186
  ****** trying bitmap/domain indexes ******
 ****** Costing Index L_ID1
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 9121
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 1.000308  Resp: 1.000308  Degree: 0
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: TableScan
         Cost: 3.001020  Degree: 1  Resp: 3.001020  Card: 10.000000  Bytes: 0.000000

Access path analysis for T1
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T1[T1] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE
  Estimated selectivity: 0.200000 , col: #2 


 kkecdn: Single Table Predicate:"T1"."T1F"=0
  Estimated selectivity: 0.200000 , col: #2 

 kkecdn: Single Table Predicate:"T1"."T1F"=0 OR "T1"."T1F"=1
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Table: T1  Alias: T1
    Card: Original: 10.000000  Rounded: 1  Computed: 0.800000  Non Adjusted: 0.800000
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=0)
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 680.000000 (cpu filter eval) (= 68.000000 (per row) * 10.000000 (#rows))
                       =   30865.760000
  Access Path: TableScan
    Cost:  3.001043  Resp: 3.001043  Degree: 0
      Cost_io: 3.000000  Cost_cpu: 30866
      Resp_io: 3.000000  Resp_cpu: 30866
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 2.000000  resc_cpu: 9001
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  2.000304  Resp: 2.000304  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 9001
      Resp_io: 2.000000  Resp_cpu: 9001
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN

  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T1_T1F_ID1
    resc_io: 1.000000  resc_cpu: 7521
    ix_sel: 0.200000  ix_sel_with_filters: 0.080000 
    Cost: 1.000260  Resp: 1.000260  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T1_T1F_ID1
         Cost: 1.000260  Degree: 1  Resp: 1.000260  Card: 0.800000  Bytes: 0.000000

Access path analysis for T2
***************************************
SINGLE TABLE ACCESS PATH 
  Single Table Cardinality Estimation for T2[T2] 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = TABLE


 kkecdn: Single Table Predicate:"T2"."T2F1">=9
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F1"<=10
  Estimated selectivity: 1.000000 , col: #2 

 kkecdn: Single Table Predicate: ?? 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F1">=9
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred

 kkecdn: Single Table Predicate:"T2"."T2F1"<=10
  Estimated selectivity: 1.000000 , col: #2 
  Table: T2  Alias: T2
    Card: Original: 10000.000000  Rounded: 1250  Computed: 1249.998884  Non Adjusted: 1249.998884
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2064  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2080  ("T2"."T2F1">=9)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 556600.957487 (cpu filter eval) (= 55.660096 (per row) * 10000.000000 (#rows))
                       =   2634636.957487
  Access Path: TableScan
    Cost:  9.088987  Resp: 9.088987  Degree: 0
      Cost_io: 9.000000  Cost_cpu: 2634637
      Resp_io: 9.000000  Resp_cpu: 2634637
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1963123
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Access Path: index (FFS)
    Cost:  10.066306  Resp: 10.066306  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 1963123
      Resp_io: 10.000000  Resp_cpu: 1963123
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 5.000000  resc_cpu: 285607
    ix_sel: 0.125000  ix_sel_with_filters: 0.011161 
    Cost: 5.012135  Resp: 5.012135  Degree: 1
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******
  Best:: AccessPath: IndexRange
  Index: T2_T2F1_T2F2_ID2
         Cost: 5.012135  Degree: 1  Resp: 5.012135  Card: 1249.998884  Bytes: 0.000000

(newjo-restore) [2 1 0 ]
***************************************


OPTIMIZER STATISTICS AND COMPUTATIONS
PJE:  Bypassed; QB is OR expanded SEL$1_3 (#0)
***************************************
GENERAL PLANS
***************************************
Considering cardinality-based initial join order.
Permutations for Starting Table :0
Join order[1]:  L[L]#0  T1[T1]#1  T2[T2]#2

***************
Now joining: T1[T1]#1
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T1
  Scan IO  Cost (Disk) =   1.200000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2064  ("T1"."T1F"=0)
    io = 0.000000, cpu = 90.000000, sel = 0.400000 flag = 2080  (Inlist)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=0)
      io = NOCOST, cpu = 50.000000, sel = 0.200000 flag = 2048  ("T1"."T1F"=1)
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   1.200000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   1.200000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 568.000000 (cpu filter eval) (= 56.800000 (per row) * 10.000000 (#rows))
                       =   30753.760000
  Inner table: T1  Alias: T1
  Access Path: TableScan
    NL Join:  Cost: 15.011407  Resp: 15.011407  Degree: 1
      Cost_io: 15.000000  Cost_cpu: 337723
      Resp_io: 15.000000  Resp_cpu: 337723
  Access Path: index (index (FFS))
    Index: T1_T1F_ID1
    resc_io: 0.400000  resc_cpu: 8889
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T1  Alias: T1
  Access Path: index (FFS)
    NL Join:  Cost: 7.004022  Resp: 7.004022  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 119080
      Resp_io: 7.000000  Resp_cpu: 119080
kkofmx: index filter:"T1"."T1F"=0 OR "T1"."T1F"=1

 ****** Costing Index T1_T1F_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  Estimated selectivity: 0.200000 , col: #2 
  ColGroup Usage:: PredCnt: 2  Matches Full: #1  Partial:  Sel: 0.100000
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Access Path: index (AllEqJoinGuess)
    Index: T1_T1F_ID1
    resc_io: 0.000000  resc_cpu: 1050
    ix_sel: 0.100000  ix_sel_with_filters: 0.008000 
    NL Join : Cost: 3.001405  Resp: 3.001405  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 41586
      Resp_io: 3.000000  Resp_cpu: 41586
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.001405
          resc: 3.001405  resc_io: 3.000000  resc_cpu: 41586
          resp: 3.001405  resp_io: 3.000000  resc_cpu: 41586
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.800000 = outer (10.000000) * inner (0.800000) * sel (0.100000)
Join Card - Rounded: 1 Computed: 0.800000
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
SM Join (with index on outer)
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (FullScan)
    Index: L_ID1
    resc_io: 2.000000  resc_cpu: 17943
    ix_sel: 1.000000  ix_sel_with_filters: 1.000000 
    Cost: 2.000606  Resp: 2.000606  Degree: 1
  Outer table:  L  Alias: L
    resc: 2.000606  card 10.000000  bytes:   deg: 1  resp: 2.000606
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
  SM join: Resc: 4.000866  Resp: 4.000866  [multiMatchCost=0.000000]
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T1  Alias: T1
    resc: 1.000260  card: 0.800000  bytes:   deg: 1  resp: 1.000260
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020320  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021599  Resp: 4.021599  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021599  
     resc: 4.021599 resc_io: 4.000000 resc_cpu: 639487
     resp: 4.021599 resp_io: 4.000000 resp_cpu: 639487
Best:: JoinMethod: NestedLoop
       Cost: 3.001405  Degree: 1  Resp: 3.001405  Card: 0.800000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 3.001405  Resp: 3.001405  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 60.000500, sel = 1.000000 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.800000 flag = 2048  (LNNVL("T1"."T1F"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2048  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2064  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2080  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500449.107324 (cpu filter eval) (= 50.044911 (per row) * 10000.000000 (#rows))
                       =   2578485.107324
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 12.088495  Resp: 12.088495  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 2620071
      Resp_io: 12.000000  Resp_cpu: 2620071
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906971
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 13.065814  Resp: 13.065814  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 1948557
      Resp_io: 13.000000  Resp_cpu: 1948557
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001718  Resp: 4.001718  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 50853
      Resp_io: 4.000000  Resp_cpu: 50853
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

kkofmx: index filter: ?? 

kkofmx: index filter:"L"."ID2"="T2"."ID2"

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 4.001718  Resp: 4.001718  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 50853
      Resp_io: 4.000000  Resp_cpu: 50853
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 1.1161e-06 
    NL Join : Cost: 7.012953  Resp: 7.012953  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 383486
      Resp_io: 7.000000  Resp_cpu: 383486
  ****** trying bitmap/domain indexes ******
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 0.000000  resc_cpu: 1900
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.001469  Resp: 3.001469  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 43486
      Resp_io: 3.000000  Resp_cpu: 43486

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 7.010839  Resp: 7.010839  Degree: 1
      Cost_io: 7.000000  Cost_cpu: 320922
      Resp_io: 7.000000  Resp_cpu: 320922
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_ID2
      Cost = 3.001505, sel = 8.0000e-04
    Not used T2_T2F1_T2F2_ID2
      Cost = 8.036115, sel = 0.125000
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 4.001718
          resc: 4.001718  resc_io: 4.000000  resc_cpu: 50853
          resp: 4.001718  resp_io: 4.000000  resc_cpu: 50853
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.799999 = outer (0.800000) * inner (1249.998884) * sel (8.0000e-04)
Join cardinality for HJ/SMJ (no post filters):  0.799999, outer: 0.800000, inner: 1249.998884, sel: 8.0000e-04
Join Card - Rounded: 1 Computed: 0.799999
  Outer table:  T1  Alias: T1
    resc: 3.001405  card 0.800000  bytes:   deg: 1  resp: 3.001405
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  SM join: Resc: 10.033109  Resp: 10.033109  [multiMatchCost=0.000000]
SM Join
  SM cost: 10.033109 
     resc: 10.033109 resc_io: 8.000000 resc_cpu: 60193923
     resp: 10.033109 resp_io: 8.000000 resp_cpu: 60193923
  Outer table:  T1  Alias: T1
    resc: 3.001405  card 0.800000  bytes:   deg: 1  resp: 3.001405
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024493  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 8.038032  Resp: 8.038032  [multiMatchCost=0.000000]
HA Join
  HA cost: 8.038032  
     resc: 8.038032 resc_io: 8.000000 resc_cpu: 1126004
     resp: 8.038032 resp_io: 8.000000 resp_cpu: 1126004
Best:: JoinMethod: NestedLoop
       Cost: 4.001718  Degree: 1  Resp: 4.001718  Card: 0.799999 Bytes: 
***********************
Best so far:  Table#: 0  cost: 3.001020  card: 10.000000  bytes: 60.000000
              Table#: 1  cost: 3.001405  card: 0.800000  bytes: 12.000000
              Table#: 2  cost: 4.001718  card: 0.799999  bytes: 22.000000
***********************
Join order[2]:  L[L]#0  T2[T2]#2  T1[T1]#1

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 10.000000  Cost: 3.001020  Resp: 3.001020  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   6.900000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2064  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   6.900000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   6.900000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500445.280766 (cpu filter eval) (= 50.044528 (per row) * 10000.000000 (#rows))
                       =   2578481.280766
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 72.871927  Resp: 72.871927  Degree: 1
      Cost_io: 72.000000  Cost_cpu: 25814999
      Resp_io: 72.000000  Resp_cpu: 25814999
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 8.000000  resc_cpu: 1906967
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 83.645116  Resp: 83.645116  Degree: 1
      Cost_io: 83.000000  Cost_cpu: 19099856
      Resp_io: 83.000000  Resp_cpu: 19099856
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004150  Resp: 13.004150  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122857
      Resp_io: 13.000000  Resp_cpu: 122857
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

kkofmx: index filter:"L"."ID2"="T2"."ID2"

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9267
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 13.004150  Resp: 13.004150  Degree: 1
      Cost_io: 13.000000  Cost_cpu: 122857
      Resp_io: 13.000000  Resp_cpu: 122857
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 1.1161e-06 
    NL Join : Cost: 43.116498  Resp: 43.116498  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 3449133
      Resp_io: 43.000000  Resp_cpu: 3449133
  ****** trying bitmap/domain indexes ******
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 0.000000  resc_cpu: 1900
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.001661  Resp: 3.001661  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 49186
      Resp_io: 3.000000  Resp_cpu: 49186

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 43.095368  Resp: 43.095368  Degree: 1
      Cost_io: 43.000000  Cost_cpu: 2823543
      Resp_io: 43.000000  Resp_cpu: 2823543
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_ID2
      Cost = 3.001698, sel = 8.0000e-04
    Not used T2_T2F1_T2F2_ID2
      Cost = 44.120680, sel = 0.125000
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 13.004150
          resc: 13.004150  resc_io: 13.000000  resc_cpu: 122857
          resp: 13.004150  resp_io: 13.000000  resc_cpu: 122857
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  9.999991 = outer (10.000000) * inner (1249.998884) * sel (8.0000e-04)
Join Card - Rounded: 10 Computed: 9.999991
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  SM join: Resc: 10.032774  Resp: 10.032774  [multiMatchCost=0.000000]
SM Join
  SM cost: 10.032774 
     resc: 10.032774 resc_io: 8.000000 resc_cpu: 60184019
     resp: 10.032774 resp_io: 8.000000 resp_cpu: 60184019
  Outer table:  L  Alias: L
    resc: 3.001020  card 10.000000  bytes:   deg: 1  resp: 3.001020
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024538  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 8.037692  Resp: 8.037692  [multiMatchCost=0.000000]
HA Join
  HA cost: 8.037692  
     resc: 8.037692 resc_io: 8.000000 resc_cpu: 1115954
     resp: 8.037692 resp_io: 8.000000 resp_cpu: 1115954
Join order aborted: cost > best plan cost
***********************
Join order[3]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 4.001297  Resp: 4.001297  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38387
      Resp_io: 4.000000  Resp_cpu: 38387
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000542
          resc: 2.000542  resc_io: 2.000000  resc_cpu: 16043
          resp: 2.000542  resp_io: 2.000000  resc_cpu: 16043
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.800000 = outer (0.800000) * inner (10.000000) * sel (0.100000)
Join cardinality for NL:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join cardinality without POSQ:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join Card - Rounded: 1 Computed: 0.800000
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021584  Resp: 4.021584  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021584  
     resc: 4.021584 resc_io: 4.000000 resc_cpu: 639037
     resp: 4.021584 resp_io: 4.000000 resp_cpu: 639037
Best:: JoinMethod: NestedLoop
       Cost: 2.000542  Degree: 1  Resp: 2.000542  Card: 0.800000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 2.000542  Resp: 2.000542  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 60.000500, sel = 1.000000 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.800000 flag = 2048  (LNNVL("T1"."T1F"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2048  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2064  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500449.107324 (cpu filter eval) (= 50.044911 (per row) * 10000.000000 (#rows))
                       =   2578485.107324
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 11.087633  Resp: 11.087633  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 2594528
      Resp_io: 11.000000  Resp_cpu: 2594528
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906971
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 12.064952  Resp: 12.064952  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1923014
      Resp_io: 12.000000  Resp_cpu: 1923014
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25310
      Resp_io: 3.000000  Resp_cpu: 25310
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

kkofmx: index filter: ?? 

kkofmx: index filter:"L"."ID2"="T2"."ID2"

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25310
      Resp_io: 3.000000  Resp_cpu: 25310
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 1.1161e-06 
    NL Join : Cost: 6.012090  Resp: 6.012090  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 357943
      Resp_io: 6.000000  Resp_cpu: 357943
  ****** trying bitmap/domain indexes ******
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 0.000000  resc_cpu: 1900
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000606  Resp: 2.000606  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17943
      Resp_io: 2.000000  Resp_cpu: 17943

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 6.009977  Resp: 6.009977  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 295379
      Resp_io: 6.000000  Resp_cpu: 295379
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_ID2
      Cost = 2.000643, sel = 8.0000e-04
    Not used T2_T2F1_T2F2_ID2
      Cost = 7.035252, sel = 0.125000
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000855
          resc: 3.000855  resc_io: 3.000000  resc_cpu: 25310
          resp: 3.000855  resp_io: 3.000000  resc_cpu: 25310
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.799999 = outer (0.800000) * inner (1249.998884) * sel (8.0000e-04)
Join cardinality for HJ/SMJ (no post filters):  0.799999, outer: 0.800000, inner: 1249.998884, sel: 8.0000e-04
Join Card - Rounded: 1 Computed: 0.799999
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  SM join: Resc: 9.032246  Resp: 9.032246  [multiMatchCost=0.000000]
SM Join
  SM cost: 9.032246 
     resc: 9.032246 resc_io: 7.000000 resc_cpu: 60168380
     resp: 9.032246 resp_io: 7.000000 resp_cpu: 60168380
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024493  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 7.037169  Resp: 7.037169  [multiMatchCost=0.000000]
HA Join
  HA cost: 7.037169  
     resc: 7.037169 resc_io: 7.000000 resc_cpu: 1100461
     resp: 7.037169 resp_io: 7.000000 resp_cpu: 1100461
Plan cardinality mismatch: best card= 0.79999914286   curr card= 0.79999914286
Best:: JoinMethod: NestedLoop
       Cost: 3.000855  Degree: 1  Resp: 3.000855  Card: 0.799999 Bytes: 
***********************
Best so far:  Table#: 1  cost: 1.000260  card: 0.800000  bytes: 6.000000
              Table#: 0  cost: 2.000542  card: 0.800000  bytes: 12.000000
              Table#: 2  cost: 3.000855  card: 0.799999  bytes: 22.000000
***********************
Join order[4]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 60.000500, sel = 1.000000 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.800000 flag = 2048  (LNNVL("T1"."T1F"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2048  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2064  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 561384.154918 (cpu filter eval) (= 56.138415 (per row) * 10000.000000 (#rows))
                       =   2639420.154918
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 10.089409  Resp: 10.089409  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2647122
      Resp_io: 10.000000  Resp_cpu: 2647122
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1967906
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 11.066728  Resp: 11.066728  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1975607
      Resp_io: 11.000000  Resp_cpu: 1975607
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

kkofmx: index filter: ?? 

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.011161 
    NL Join : Cost: 5.012409  Resp: 5.012409  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 367395
      Resp_io: 5.000000  Resp_cpu: 367395
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.012409
          resc: 5.012409  resc_io: 5.000000  resc_cpu: 367395
          resp: 5.012409  resp_io: 5.000000  resc_cpu: 367395
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  999.998929 = outer (0.800000) * inner (1249.998884) * sel (1.000000)
Join cardinality for HJ/SMJ (no post filters):  999.999107, outer: 0.800000, inner: 1249.998884, sel: 1.000000
Join Card - Rounded: 1000 Computed: 999.998929
Join order aborted: cost > best plan cost
***********************
Join order[5]:  T2[T2]#2  L[L]#0  T1[T1]#1
Join order aborted: cost > best plan cost
***********************
Join order[6]:  T2[T2]#2  T1[T1]#1  L[L]#0
Join order aborted: cost > best plan cost
***********************
Permutations for Starting Table :1
Join order[7]:  T1[T1]#1  L[L]#0  T2[T2]#2

***************
Now joining: L[L]#0
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for L
  Scan IO  Cost (Disk) =   3.000000
  Scan CPU Cost (Disk) =   30185.760000
  Cost of predicates:
    io = NOCOST, cpu = 50.000000, sel = 0.100000 flag = 2064  ("L"."ID1"="T1"."ID1")
  Total Scan IO  Cost  =   3.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10.000000 (#rows))
                       =   3.000000
  Total Scan CPU  Cost =   30185.760000 (scan (Disk))
                         + 500.000000 (cpu filter eval) (= 50.000000 (per row) * 10.000000 (#rows))
                       =   30685.760000
  Inner table: L  Alias: L
  Access Path: TableScan
    NL Join:  Cost: 4.001297  Resp: 4.001297  Degree: 1
      Cost_io: 4.000000  Cost_cpu: 38387
      Resp_io: 4.000000  Resp_cpu: 38387
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
 ****** Costing Index L_ID1
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: L_ID1
    resc_io: 1.000000  resc_cpu: 8341
    ix_sel: 0.100000  ix_sel_with_filters: 0.100000 
    NL Join : Cost: 2.000542  Resp: 2.000542  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 16043
      Resp_io: 2.000000  Resp_cpu: 16043
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 2.000542
          resc: 2.000542  resc_io: 2.000000  resc_cpu: 16043
          resp: 2.000542  resp_io: 2.000000  resc_cpu: 16043
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
Join Card:  0.800000 = outer (0.800000) * inner (10.000000) * sel (0.100000)
Join cardinality for NL:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join cardinality without POSQ:  0.800000, outer: 0.800000, inner: 10.000000, sel: 0.100000
Join Card - Rounded: 1 Computed: 0.800000
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     17 Total Rows:             10
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29608338
      Total Temp space used: 0
  SM join: Resc: 6.001330  Resp: 6.001330  [multiMatchCost=0.000000]
SM Join
  SM cost: 6.001330 
     resc: 6.001330 resc_io: 4.000000 resc_cpu: 59253067
     resp: 6.001330 resp_io: 4.000000 resp_cpu: 59253067
  Outer table:  T1  Alias: T1
    resc: 1.000260  card 0.800000  bytes:   deg: 1  resp: 1.000260
  Inner table:  L  Alias: L
    resc: 3.001020  card: 10.000000  bytes:   deg: 1  resp: 3.001020
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.020304  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 1  ppasses: 1
  Hash join: Resc: 4.021584  Resp: 4.021584  [multiMatchCost=0.000000]
HA Join
  HA cost: 4.021584  
     resc: 4.021584 resc_io: 4.000000 resc_cpu: 639037
     resp: 4.021584 resp_io: 4.000000 resp_cpu: 639037
Best:: JoinMethod: NestedLoop
       Cost: 2.000542  Degree: 1  Resp: 2.000542  Card: 0.800000 Bytes: 

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 2.000542  Resp: 2.000542  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 60.000500, sel = 1.000000 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.800000 flag = 2048  (LNNVL("T1"."T1F"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2048  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2064  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2080  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2080  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2080  ("T2"."T2F1"<=10)
    io = NOCOST, cpu = 50.000000, sel = 0.000800 flag = 2048  ("L"."ID2"="T2"."ID2")
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 500449.107324 (cpu filter eval) (= 50.044911 (per row) * 10000.000000 (#rows))
                       =   2578485.107324
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 11.087633  Resp: 11.087633  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 2594528
      Resp_io: 11.000000  Resp_cpu: 2594528
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1906971
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 12.064952  Resp: 12.064952  Degree: 1
      Cost_io: 12.000000  Cost_cpu: 1923014
      Resp_io: 12.000000  Resp_cpu: 1923014
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (UniqueScan)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25310
      Resp_io: 3.000000  Resp_cpu: 25310
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

kkofmx: index filter: ?? 

kkofmx: index filter:"L"."ID2"="T2"."ID2"

 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 1.000000  resc_cpu: 9268
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 3.000855  Resp: 3.000855  Degree: 1
      Cost_io: 3.000000  Cost_cpu: 25310
      Resp_io: 3.000000  Resp_cpu: 25310
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 1.1161e-06 
    NL Join : Cost: 6.012090  Resp: 6.012090  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 357943
      Resp_io: 6.000000  Resp_cpu: 357943
  ****** trying bitmap/domain indexes ******
 ****** Costing Index T2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Access Path: index (AllEqUnique)
    Index: T2_ID2
    resc_io: 0.000000  resc_cpu: 1900
    ix_sel: 1.0000e-04  ix_sel_with_filters: 1.0000e-04 
    NL Join : Cost: 2.000606  Resp: 2.000606  Degree: 1
      Cost_io: 2.000000  Cost_cpu: 17943
      Resp_io: 2.000000  Resp_cpu: 17943

  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.125000 
    NL Join : Cost: 6.009977  Resp: 6.009977  Degree: 1
      Cost_io: 6.000000  Cost_cpu: 295379
      Resp_io: 6.000000  Resp_cpu: 295379
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  Bitmap nodes:
    Used T2_ID2
      Cost = 2.000643, sel = 8.0000e-04
    Not used T2_T2F1_T2F2_ID2
      Cost = 7.035252, sel = 0.125000
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 3.000855
          resc: 3.000855  resc_io: 3.000000  resc_cpu: 25310
          resp: 3.000855  resp_io: 3.000000  resc_cpu: 25310
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  0.799999 = outer (0.800000) * inner (1249.998884) * sel (8.0000e-04)
Join cardinality for HJ/SMJ (no post filters):  0.799999, outer: 0.800000, inner: 1249.998884, sel: 8.0000e-04
Join Card - Rounded: 1 Computed: 0.799999
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 1 Row size:     24 Total Rows:              1
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 29606842
      Total Temp space used: 0
    SORT ressource         Sort statistics
      Sort width:         598 Area size:      536576 Max Area size:   104857600
      Degree:               1
      Blocks to Sort: 4 Row size:     21 Total Rows:           1250
      Initial runs:   1 Merge passes:  0 IO Cost / pass:          0
      Total IO sort cost: 0.000000      Total CPU sort cost: 30186227
      Total Temp space used: 0
  SM join: Resc: 9.032246  Resp: 9.032246  [multiMatchCost=0.000000]
SM Join
  SM cost: 9.032246 
     resc: 9.032246 resc_io: 7.000000 resc_cpu: 60168380
     resp: 9.032246 resp_io: 7.000000 resp_cpu: 60168380
  Outer table:  L  Alias: L
    resc: 2.000542  card 0.800000  bytes:   deg: 1  resp: 2.000542
  Inner table:  T2  Alias: T2
    resc: 5.012135  card: 1249.998884  bytes:   deg: 1  resp: 5.012135
    using dmeth: 2  #groups: 1
    Cost per ptn: 0.024493  #ptns: 1
    hash_area: 131 (max=25600) buildfrag: 1  probefrag: 4  ppasses: 1
  Hash join: Resc: 7.037169  Resp: 7.037169  [multiMatchCost=0.000000]
HA Join
  HA cost: 7.037169  
     resc: 7.037169 resc_io: 7.000000 resc_cpu: 1100461
     resp: 7.037169 resp_io: 7.000000 resp_cpu: 1100461
Join order aborted: cost > best plan cost
***********************
Join order[8]:  T1[T1]#1  T2[T2]#2  L[L]#0

***************
Now joining: T2[T2]#2
***************
NL Join
  Outer table: Card: 0.800000  Cost: 1.000260  Resp: 1.000260  Degree: 1  Bytes: 
Access path analysis for T2
  Scan IO  Cost (Disk) =   9.000000
  Scan CPU Cost (Disk) =   2078036.000000
  Cost of predicates:
    io = 0.000000, cpu = 60.000500, sel = 1.000000 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.800000 flag = 2048  (LNNVL("T1"."T1F"=1))
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2048  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2048  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2064  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2064  ("T2"."T2F1"<=10)
    io = 0.000000, cpu = 50.002500, sel = 0.999999 flag = 2048  (OR chain)
      io = NOCOST, cpu = 50.000000, sel = 0.999950 flag = 2051  (LNNVL("T2"."T2F1"=14))
      io = NOCOST, cpu = 50.000000, sel = 0.982143 flag = 2050  (LNNVL("T2"."T2F2"=13))
    io = NOCOST, cpu = 50.000000, sel = 0.089286 flag = 2048  ("T2"."T2F1">=9)
    io = NOCOST, cpu = 50.000000, sel = 1.000000 flag = 2048  ("T2"."T2F1"<=10)
  Total Scan IO  Cost  =   9.000000 (scan (Disk))
                         + 0.000000 (io filter eval) (= 0.000000 (per row) * 10000.000000 (#rows))
                       =   9.000000
  Total Scan CPU  Cost =   2078036.000000 (scan (Disk))
                         + 561384.154918 (cpu filter eval) (= 56.138415 (per row) * 10000.000000 (#rows))
                       =   2639420.154918
  Inner table: T2  Alias: T2
  Access Path: TableScan
    NL Join:  Cost: 10.089409  Resp: 10.089409  Degree: 1
      Cost_io: 10.000000  Cost_cpu: 2647122
      Resp_io: 10.000000  Resp_cpu: 2647122
  Access Path: index (index (FFS))
    Index: T2_T2F1_T2F2_ID2
    resc_io: 10.000000  resc_cpu: 1967906
    ix_sel: 0.000000  ix_sel_with_filters: 1.000000 
  Inner table: T2  Alias: T2
  Access Path: index (FFS)
    NL Join:  Cost: 11.066728  Resp: 11.066728  Degree: 1
      Cost_io: 11.000000  Cost_cpu: 1975607
      Resp_io: 11.000000  Resp_cpu: 1975607
kkofmx: index filter: ?? 

kkofmx: index filter:"T2"."T2F1">=9

kkofmx: index filter:"T2"."T2F1"<=10

kkofmx: index filter: ?? 

 ****** Costing Index T2_T2F1_T2F2_ID2
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SCAN
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_FILTER
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = INDEX_SKIP_SCAN
  Using prorated density: 0.089286 of col #2 as selectivity of out-of-range/non-existent value pred
  Estimated selectivity: 1.000000 , col: #2 
  Access Path: index (IndexOnly)
    Index: T2_T2F1_T2F2_ID2
    resc_io: 4.000000  resc_cpu: 279336
    ix_sel: 0.125000  ix_sel_with_filters: 0.011161 
    NL Join : Cost: 5.012409  Resp: 5.012409  Degree: 1
      Cost_io: 5.000000  Cost_cpu: 367395
      Resp_io: 5.000000  Resp_cpu: 367395
  ****** trying bitmap/domain indexes ******
  ****** finished trying bitmap/domain indexes ******

  Best NL cost: 5.012409
          resc: 5.012409  resc_io: 5.000000  resc_cpu: 367395
          resp: 5.012409  resp_io: 5.000000  resc_cpu: 367395
  SPD: Return code in qosdDSDirSetup: NOCTX, estType = JOIN
  Estimated selectivity: 0.200000 , col: #2 
  Using prorated density: 5.0000e-05 of col #2 as selectivity of out-of-range/non-existent value pred
  Using prorated density: 0.017857 of col #3 as selectivity of out-of-range/non-existent value pred
Join Card:  999.998929 = outer (0.800000) * inner (1249.998884) * sel (1.000000)
Join cardinality for HJ/SMJ (no post filters):  999.999107, outer: 0.800000, inner: 1249.998884, sel: 1.000000
Join Card - Rounded: 1000 Computed: 999.998929
Join order aborted: cost > best plan cost
***********************
Join order[9]:  T2[T2]#2  L[L]#0  T1[T1]#1
Join order aborted: cost > best plan cost
***********************
Join order[10]:  T2[T2]#2  T1[T1]#1  L[L]#0
Join order aborted: cost > best plan cost
***********************
Permutations for Starting Table :2
Join order[11]:  T2[T2]#2  L[L]#0  T1[T1]#1
Join order aborted: cost > best plan cost
***********************
Join order[12]:  T2[T2]#2  T1[T1]#1  L[L]#0
Join order aborted: cost > best plan cost
***********************
(newjo-stop-1) k:2, spcnt:2, perm:12, maxperm:120

*********************************
Number of join permutations tried: 12
*********************************
Enumerating distribution method (advanced)
--- Distribution method for 
join between T1[T1](serial) and L[L](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL
--- Distribution method for 
join between L[L](serial) and T2[T2](serial); jm = 14; right side access path = IndexUnique
kkopqIsSerialJoin: serial NLJ: both inputs serial
kkopqIsSerialJoin: serial NLJ: both inputs serial
---- serial NL-Join -> SERIAL

Transfer Optimizer annotations for query block SEL$1_3 (#0)
AP: Checking validity for query block SEL$1_3, sqlid=a5t76fz006a0y
AP: Adaptive joins bypassed for query block SEL$1_3 due to OR expansion
AutoDOP: Consider caching for T1[T1](obj#-1) 
cost:1.000260 blkSize:8192 objSize:4.00 marObjSize:3.80 bufSize:135102.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible for first input in join order
id=0 frofkks[i] (index start key) predicate="T1"."T1F"=0
id=0 frofkke[i] (index stop key) predicate="T1"."T1F"=0
id=0 froiand (index only filter) predicate="T1"."T1F"=0 OR "T1"."T1F"=1
Transfer optimizer annotations for T1[T1]
AutoDOP: Consider caching for L[L](obj#73956) 
cost:2.000542 blkSize:8192 objSize:4.00 marObjSize:3.80 bufSize:135102.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible based on distribution
id=0 frofkks[i] (index start key) predicate="L"."ID1"="T1"."ID1"
id=0 frofkke[i] (index stop key) predicate="L"."ID1"="T1"."ID1"
Transfer optimizer annotations for L[L]
AutoDOP: Consider caching for T2[T2](obj#-1) 
cost:3.000855 blkSize:8192 objSize:25.00 marObjSize:23.75 bufSize:135102.00 affPercent:80 smallTab:YES affinitized:NO
kkecComputeAPDop: IO Dop: 0.000000 - CPU Dop: 0.000000
Replication not feasible based on distribution
id=0 frofkks[i] (index start key) predicate="L"."ID2"="T2"."ID2"
id=0 frofkke[i] (index stop key) predicate="L"."ID2"="T2"."ID2"
id=0 frofand predicate="T2"."T2F1">=9 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 AND "T2"."T2F1"<=10 AND (LNNVL("T1"."T1F"=1) OR LNNVL("T2"."T2F1"=14) OR LNNVL("T2"."T2F2"=13)) AND (LNNVL("T2"."T2F1"=14) OR LNNVL("T2"."T2F2"=13))
Transfer optimizer annotations for T2[T2]
Final cost for query block SEL$1_3 (#0) - All Rows Plan:
  Best join order: 3
  Cost: 10.002970  Degree: 1  Card: 3.000000  Bytes: 66.000000
  Resc: 10.002970  Resc_io: 10.000000  Resc_cpu: 87938
  Resp: 10.002970  Resp_io: 10.000000  Resc_cpu: 87938
kkoqbc-subheap (delete addr=0x7fa8a7b4fb80, in-use=1074896, alloc=1093640)
kkoqbc-end:
        :
    call(in-use=314848, alloc=1425800), compile(in-use=453704, alloc=454960), execution(in-use=493936, alloc=495984)

kkoqbc: finish optimizing query block SEL$1 (#0)
CBRID: T2 @ SEL$1 - no blocking operation found
CBRID: T1 @ SEL$1 - no blocking operation found
CBRID: L @ SEL$1 - no blocking operation found
CBRID: T1 @ SEL$1 - no blocking operation found
CBRID: L @ SEL$1 - no blocking operation found
CBRID: T2 @ SEL$1 - no blocking operation found
CBRID: T1 @ SEL$1 - no blocking operation found
CBRID: L @ SEL$1 - no blocking operation found
CBRID: T2 @ SEL$1 - no blocking operation found
apadrv-end
          :
    call(in-use=314848, alloc=1425800), compile(in-use=455608, alloc=458976), execution(in-use=497992, alloc=500040)


CBRID: L @ SEL$1 NLJBatching allocation - Failure - not a columnar organized table
CBRID: L @ SEL$1 TableLookup allocation - Failure - bug-fix control
CBRID: L @ SEL$1 TableLookup allocation - Failure - bug-fix control
CBRID: L @ SEL$1 TableLookup allocation - Failure - bug-fix control
CBRID: T2 @ SEL$1 NLJBatching allocation - Failure - not a columnar organized table
CBRID: T2 @ SEL$1 TableLookup allocation - Failure - bug-fix control
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
kkeCostToTime: using io calibrate stats maxpmbps=200(MB/s) 
 block_size=8192 mb_io_count=1 mb_io_size=8192 (bytes) 
 tot_io_size=0(MB) time=0(ms)
Starting SQL statement dump

user_id=105 user_name=PDBADMIN module=SQLcl action=
sql_id=a5t76fz006a0y plan_hash_value=361567242 problem_type=3 command_type=3
----- Current SQL Statement for this session (sql_id=a5t76fz006a0y) -----
explain plan for SELECT /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null FROM l, t1, t2 WHERE  
(  ( t1.t1f = 0 AND t2.t2f1 BETWEEN 9 AND 10)       OR 
   ( t1.t1f = 1 AND t2.t2f1 = 14 AND t2.t2f2 = 13  )   )  AND 
    ( l.id1 = t1.id1 AND l.id2 = t2.id2 )
sql_text_length=268
sql=explain plan for SELECT /*+ OPT_PARAM('_optimizer_cbqt_or_expansion' 'off') */ null FROM l, t1, t2 WHERE  
(  ( t1.t1f = 0 AND t2.t2f1 BETWEEN 9 AND 10)       OR 
   ( t1.t1f = 1 AND t2.t2f1 = 14 AND t2.t2f2 = 13  )   )  AND 
    ( l.id1 = t1.id1 AND l.id2 = t2.id2 )
----- Explain Plan Dump -----
----- Plan Table -----
 
============
Plan Table
============
-----------------------------------------------------------+-----------------------------------+
| Id  | Operation                        | Name            | Rows  | Bytes | Cost  | Time      |
-----------------------------------------------------------+-----------------------------------+
| 0   | SELECT STATEMENT                 |                 |       |       |    10 |           |
| 1   |  CONCATENATION                   |                 |       |       |       |           |
| 2   |   NESTED LOOPS                   |                 |     1 |    22 |     4 |  00:00:01 |
| 3   |    NESTED LOOPS                  |                 |     1 |    22 |     4 |  00:00:01 |
| 4   |     NESTED LOOPS                 |                 |     1 |    16 |     3 |  00:00:01 |
| 5   |      INDEX RANGE SCAN            | T2_T2F1_T2F2_ID2|     1 |    10 |     2 |  00:00:01 |
| 6   |      INLIST ITERATOR             |                 |       |       |       |           |
| 7   |       INDEX RANGE SCAN           | T1_T1F_ID1      |     1 |     6 |     1 |  00:00:01 |
| 8   |     INDEX UNIQUE SCAN            | L_ID1           |     1 |       |     0 |           |
| 9   |    TABLE ACCESS BY INDEX ROWID   | L               |     1 |     6 |     1 |  00:00:01 |
| 10  |   NESTED LOOPS                   |                 |     1 |    22 |     3 |  00:00:01 |
| 11  |    NESTED LOOPS                  |                 |     1 |    12 |     2 |  00:00:01 |
| 12  |     INDEX RANGE SCAN             | T1_T1F_ID1      |     1 |     6 |     1 |  00:00:01 |
| 13  |     TABLE ACCESS BY INDEX ROWID  | L               |     1 |     6 |     1 |  00:00:01 |
| 14  |      INDEX UNIQUE SCAN           | L_ID1           |     1 |       |     0 |           |
| 15  |    INDEX RANGE SCAN              | T2_T2F1_T2F2_ID2|     1 |    10 |     1 |  00:00:01 |
| 16  |   NESTED LOOPS                   |                 |     1 |    22 |     3 |  00:00:01 |
| 17  |    NESTED LOOPS                  |                 |     1 |    22 |     3 |  00:00:01 |
| 18  |     NESTED LOOPS                 |                 |     1 |    12 |     2 |  00:00:01 |
| 19  |      INDEX RANGE SCAN            | T1_T1F_ID1      |     1 |     6 |     1 |  00:00:01 |
| 20  |      TABLE ACCESS BY INDEX ROWID | L               |     1 |     6 |     1 |  00:00:01 |
| 21  |       INDEX UNIQUE SCAN          | L_ID1           |     1 |       |     0 |           |
| 22  |     INDEX UNIQUE SCAN            | T2_ID2          |     1 |       |     0 |           |
| 23  |    TABLE ACCESS BY INDEX ROWID   | T2              |     1 |    10 |     1 |  00:00:01 |
-----------------------------------------------------------+-----------------------------------+
Query Block Name / Object Alias (identified by operation id):
------------------------------------------------------------
 1 - SEL$1                
 5 - SEL$1_1              / "T2"@"SEL$1"
 7 - SEL$1_1              / "T1"@"SEL$1"
 8 - SEL$1_1              / "L"@"SEL$1"
 9 - SEL$1_1              / "L"@"SEL$1"
12 - SEL$1_2              / "T1"@"SEL$1_2"
13 - SEL$1_2              / "L"@"SEL$1_2"
14 - SEL$1_2              / "L"@"SEL$1_2"
15 - SEL$1_2              / "T2"@"SEL$1_2"
19 - SEL$1_3              / "T1"@"SEL$1_3"
20 - SEL$1_3              / "L"@"SEL$1_3"
21 - SEL$1_3              / "L"@"SEL$1_3"
22 - SEL$1_3              / "T2"@"SEL$1_3"
23 - SEL$1_3              / "T2"@"SEL$1_3"
------------------------------------------------------------
Predicate Information:
----------------------
5 - access("T2"."T2F1"=14 AND "T2"."T2F2"=13)
7 - access(("T1"."T1F"=0 OR "T1"."T1F"=1))
7 - filter((("T1"."T1F"=0 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10) OR ("T1"."T1F"=1 AND "T2"."T2F1"=14 AND "T2"."T2F2"=13)))
8 - access("L"."ID1"="T1"."ID1")
9 - filter("L"."ID2"="T2"."ID2")
12 - access("T1"."T1F"=1)
12 - filter(("T1"."T1F"=0 OR "T1"."T1F"=1))
14 - access("L"."ID1"="T1"."ID1")
15 - access("T2"."T2F1"=14 AND "T2"."T2F2"=13 AND "L"."ID2"="T2"."ID2")
15 - filter(("T2"."T2F1">=9 AND "T2"."T2F1"<=10 AND (LNNVL("T2"."T2F1"=14) OR LNNVL("T2"."T2F2"=13))))
19 - access("T1"."T1F"=0)
19 - filter(("T1"."T1F"=0 OR "T1"."T1F"=1))
21 - access("L"."ID1"="T1"."ID1")
22 - access("L"."ID2"="T2"."ID2")
23 - filter(("T2"."T2F1">=9 AND "T2"."T2F1">=9 AND "T2"."T2F1"<=10 AND "T2"."T2F1"<=10 AND (LNNVL("T1"."T1F"=1) OR LNNVL("T2"."T2F1"=14) OR LNNVL("T2"."T2F2"=13)) AND (LNNVL("T2"."T2F1"=14) OR LNNVL("T2"."T2F2"=13))))
 
Content of other_xml column
===========================
  has_user_tab   : yes
  db_version     : 19.0.0.0
  parse_schema   : PDBADMIN
  plan_hash_full : 3842289756
  plan_hash      : 361567242
  plan_hash_2    : 3842289756
-----------------
Optimizer Metrics
-----------------
<stats type="compilation"><stat name="bg">2</stat></stats>
---------------------
QUERY BLOCK REGISTRY
---------------------
<qb_registry><q o="2" f="y"><n><![CDATA[SEL$1]]></n><f><h><t><![CDATA[L]]></t><s><![CDATA[SEL$1]]></s></h><h><t><![CDATA[T1]]></t><s><![CDATA[SEL$1]]></s></h><h><t><![CDATA[T2]]></t><s><![CDATA[SEL$1]]></s></h></f></q><q o="11" f="y"><n><![CDATA[SEL$1_2]]></n><p><![CDATA[SEL$1]]></p><i><o><t>BN</t><v><![CDATA[2]]></v></o></i><f><h><t><![CDATA[L]]></t><s><![CDATA[SEL$1_2]]></s></h><h><t><![CDATA[T1]]></t><s><![CDATA[SEL$1_2]]></s></h><h><t><![CDATA[T2]]></t><s><![CDATA[SEL$1_2]]></s></h></f></q><q o="11" f="y" h="y"><n><![CDATA[SEL$1_1]]></n><p><![CDATA[SEL$1]]></p><i><o><t>BN</t><v><![CDATA[1]]></v></o></i><f><h><t><![CDATA[L]]></t><s><![CDATA[SEL$1]]></s></h><h><t><![CDATA[T1]]></t><s><![CDATA[SEL$1]]></s></h><h><t><![CDATA[T2]]></t><s><![CDATA[SEL$1]]></s></h></f></q><q o="11" f="y"><n><![CDATA[SEL$1_3]]></n><p><![CDATA[SEL$1]]></p><i><o><t>BN</t><v><![CDATA[3]]></v></o></i><f><h><t><![CDATA[L]]></t><s><![CDATA[SEL$1_3]]></s></h><h><t><![CDATA[T1]]></t><s><![CDATA[SEL$1_3]]></s></h><h><t><![CDATA[T2]]></t><s><![CDATA[SEL$1_3]]></s></h></f></q></qb_registry>
  Outline Data:
  /*+
    BEGIN_OUTLINE_DATA
      IGNORE_OPTIM_EMBEDDED_HINTS
      OPTIMIZER_FEATURES_ENABLE('19.1.0')
      DB_VERSION('19.1.0')
      OPT_PARAM('_optimizer_cbqt_or_expansion' 'off')
      ALL_ROWS
      OUTLINE_LEAF(@"SEL$1")
      OUTLINE_LEAF(@"SEL$1_1")
      USE_CONCAT(@"SEL$1" 8 OR_PREDICATES(0 36))
      OUTLINE_LEAF(@"SEL$1_2")
      OUTLINE_LEAF(@"SEL$1_3")
      INDEX(@"SEL$1_1" "T2"@"SEL$1" ("T2"."T2F1" "T2"."T2F2" "T2"."ID2"))
      INDEX(@"SEL$1_1" "T1"@"SEL$1" ("T1"."T1F" "T1"."ID1"))
      INDEX(@"SEL$1_1" "L"@"SEL$1" ("L"."ID1"))
      INDEX(@"SEL$1_2" "T1"@"SEL$1_2" ("T1"."T1F" "T1"."ID1"))
      INDEX_RS_ASC(@"SEL$1_2" "L"@"SEL$1_2" ("L"."ID1"))
      INDEX(@"SEL$1_2" "T2"@"SEL$1_2" ("T2"."T2F1" "T2"."T2F2" "T2"."ID2"))
      INDEX(@"SEL$1_3" "T1"@"SEL$1_3" ("T1"."T1F" "T1"."ID1"))
      INDEX_RS_ASC(@"SEL$1_3" "L"@"SEL$1_3" ("L"."ID1"))
      INDEX(@"SEL$1_3" "T2"@"SEL$1_3" ("T2"."ID2"))
      LEADING(@"SEL$1_1" "T2"@"SEL$1" "T1"@"SEL$1" "L"@"SEL$1")
      LEADING(@"SEL$1_2" "T1"@"SEL$1_2" "L"@"SEL$1_2" "T2"@"SEL$1_2")
      LEADING(@"SEL$1_3" "T1"@"SEL$1_3" "L"@"SEL$1_3" "T2"@"SEL$1_3")
      USE_NL(@"SEL$1_1" "T1"@"SEL$1")
      USE_NL(@"SEL$1_1" "L"@"SEL$1")
      NLJ_BATCHING(@"SEL$1_1" "L"@"SEL$1")
      USE_NL(@"SEL$1_2" "L"@"SEL$1_2")
      USE_NL(@"SEL$1_2" "T2"@"SEL$1_2")
      USE_NL(@"SEL$1_3" "L"@"SEL$1_3")
      USE_NL(@"SEL$1_3" "T2"@"SEL$1_3")
      NLJ_BATCHING(@"SEL$1_3" "T2"@"SEL$1_3")
    END_OUTLINE_DATA
  */
  Hint Report:
    Statement:
      OPT_PARAM('_optimizer_cbqt_or_expansion' 'off')
  End Hint Report
 
Optimizer state dump:
Compilation Environment Dump
optimizer_mode_hinted               = false
optimizer_features_hinted           = 0.0.0
parallel_execution_enabled          = true
parallel_query_forced_dop           = 0
parallel_dml_forced_dop             = 0
parallel_ddl_forced_degree          = 0
parallel_ddl_forced_instances       = 0
_query_rewrite_fudge                = 90
optimizer_features_enable           = 19.1.0
_optimizer_search_limit             = 5
cpu_count                           = 8
active_instance_count               = 1
parallel_threads_per_cpu            = 1
hash_area_size                      = 131072
bitmap_merge_area_size              = 1048576
sort_area_size                      = 65536
sort_area_retained_size             = 0
_sort_elimination_cost_ratio        = 0
_optimizer_block_size               = 8192
_sort_multiblock_read_count         = 2
_hash_multiblock_io_count           = 0
_db_file_optimizer_read_count       = 8
_optimizer_max_permutations         = 2000
pga_aggregate_target                = 524288 KB
_pga_max_size                       = 204800 KB
_query_rewrite_maxdisjunct          = 257
_smm_auto_min_io_size               = 56 KB
_smm_auto_max_io_size               = 248 KB
_smm_min_size                       = 524 KB
_smm_max_size_static                = 102400 KB
_smm_px_max_size_static             = 262144 KB
_cpu_to_io                          = 0
_optimizer_undo_cost_change         = 19.1.0
parallel_query_mode                 = enabled
_enable_parallel_dml                = disabled
parallel_ddl_mode                   = enabled
optimizer_mode                      = all_rows
sqlstat_enabled                     = false
_optimizer_percent_parallel         = 101
_always_anti_join                   = choose
_always_semi_join                   = choose
_optimizer_mode_force               = true
_partition_view_enabled             = true
_always_star_transformation         = false
_query_rewrite_or_error             = false
_hash_join_enabled                  = true
cursor_sharing                      = exact
_b_tree_bitmap_plans                = true
star_transformation_enabled         = false
_optimizer_cost_model               = choose
_new_sort_cost_estimate             = true
_complex_view_merging               = true
_unnest_subquery                    = true
_eliminate_common_subexpr           = true
_pred_move_around                   = true
_convert_set_to_join                = false
_push_join_predicate                = true
_push_join_union_view               = true
_fast_full_scan_enabled             = true
_optim_enhance_nnull_detection      = true
_parallel_broadcast_enabled         = true
_px_broadcast_fudge_factor          = 100
_ordered_nested_loop                = true
_no_or_expansion                    = false
optimizer_index_cost_adj            = 100
optimizer_index_caching             = 0
_system_index_caching               = 0
_disable_datalayer_sampling         = false
query_rewrite_enabled               = true
query_rewrite_integrity             = enforced
_query_cost_rewrite                 = true
_query_rewrite_2                    = true
_query_rewrite_1                    = true
_query_rewrite_expression           = true
_query_rewrite_jgmigrate            = true
_query_rewrite_fpc                  = true
_query_rewrite_drj                  = false
_full_pwise_join_enabled            = true
_partial_pwise_join_enabled         = true
_left_nested_loops_random           = true
_improved_row_length_enabled        = true
_index_join_enabled                 = true
_enable_type_dep_selectivity        = true
_improved_outerjoin_card            = true
_optimizer_adjust_for_nulls         = true
_optimizer_degree                   = 0
_use_column_stats_for_function      = true
_subquery_pruning_enabled           = true
_subquery_pruning_mv_enabled        = false
_or_expand_nvl_predicate            = true
_like_with_bind_as_equality         = false
_table_scan_cost_plus_one           = true
_cost_equality_semi_join            = true
_default_non_equality_sel_check     = true
_new_initial_join_orders            = true
_oneside_colstat_for_equijoins      = true
_optim_peek_user_binds              = true
_minimal_stats_aggregation          = true
_force_temptables_for_gsets         = false
workarea_size_policy                = auto
_smm_auto_cost_enabled              = true
_gs_anti_semi_join_allowed          = true
_optim_new_default_join_sel         = true
optimizer_dynamic_sampling          = 2
_pre_rewrite_push_pred              = true
_optimizer_new_join_card_computation = true
_union_rewrite_for_gs               = yes_gset_mvs
_generalized_pruning_enabled        = true
_optim_adjust_for_part_skews        = true
_force_datefold_trunc               = false
statistics_level                    = typical
_optimizer_system_stats_usage       = true
skip_unusable_indexes               = true
_remove_aggr_subquery               = true
_optimizer_push_down_distinct       = 0
_dml_monitoring_enabled             = true
_optimizer_undo_changes             = false
_predicate_elimination_enabled      = true
_nested_loop_fudge                  = 100
_project_view_columns               = true
_local_communication_costing_enabled = true
_local_communication_ratio          = 50
_query_rewrite_vop_cleanup          = true
_slave_mapping_enabled              = true
_optimizer_cost_based_transformation = linear
_optimizer_mjc_enabled              = true
_right_outer_hash_enable            = true
_spr_push_pred_refspr               = true
_optimizer_cache_stats              = false
_optimizer_cbqt_factor              = 50
_optimizer_squ_bottomup             = true
_fic_area_size                      = 131072
_optimizer_skip_scan_enabled        = true
_optimizer_cost_filter_pred         = false
_optimizer_sortmerge_join_enabled   = true
_optimizer_join_sel_sanity_check    = true
_mmv_query_rewrite_enabled          = true
_bt_mmv_query_rewrite_enabled       = true
_add_stale_mv_to_dependency_list    = true
_distinct_view_unnesting            = false
_optimizer_dim_subq_join_sel        = true
_optimizer_disable_strans_sanity_checks = 0
_optimizer_compute_index_stats      = true
_push_join_union_view2              = true
optimizer_ignore_hints              = false
_optimizer_random_plan              = 0
_query_rewrite_setopgrw_enable      = true
_optimizer_correct_sq_selectivity   = true
_disable_function_based_index       = false
_optimizer_join_order_control       = 3
_optimizer_cartesian_enabled        = true
_optimizer_starplan_enabled         = true
_extended_pruning_enabled           = true
_optimizer_push_pred_cost_based     = true
_optimizer_null_aware_antijoin      = true
_optimizer_extend_jppd_view_types   = true
_sql_model_unfold_forloops          = run_time
_enable_dml_lock_escalation         = false
_bloom_filter_enabled               = true
_update_bji_ipdml_enabled           = 0
_optimizer_extended_cursor_sharing  = udo
_dm_max_shared_pool_pct             = 1
_optimizer_cost_hjsmj_multimatch    = true
_optimizer_transitivity_retain      = true
_px_pwg_enabled                     = true
optimizer_secure_view_merging       = true
_optimizer_join_elimination_enabled = true
flashback_table_rpi                 = non_fbt
_optimizer_cbqt_no_size_restriction = true
_optimizer_enhanced_filter_push     = true
_optimizer_filter_pred_pullup       = true
_rowsrc_trace_level                 = 0
_simple_view_merging                = true
_optimizer_rownum_pred_based_fkr    = true
_optimizer_better_inlist_costing    = all
_optimizer_self_induced_cache_cost  = false
_optimizer_min_cache_blocks         = 10
_optimizer_or_expansion             = depth
_optimizer_order_by_elimination_enabled = true
_optimizer_outer_to_anti_enabled    = true
_selfjoin_mv_duplicates             = true
_dimension_skip_null                = true
_force_rewrite_enable               = false
_optimizer_star_tran_in_with_clause = true
_optimizer_complex_pred_selectivity = true
_optimizer_connect_by_cost_based    = true
_gby_hash_aggregation_enabled       = true
_globalindex_pnum_filter_enabled    = true
_px_minus_intersect                 = true
_fix_control_key                    = 0
_force_slave_mapping_intra_part_loads = false
_force_tmp_segment_loads            = false
_query_mmvrewrite_maxpreds          = 10
_query_mmvrewrite_maxintervals      = 5
_query_mmvrewrite_maxinlists        = 5
_query_mmvrewrite_maxdmaps          = 10
_query_mmvrewrite_maxcmaps          = 20
_query_mmvrewrite_maxregperm        = 512
_query_mmvrewrite_maxqryinlistvals  = 500
_disable_parallel_conventional_load = false
_trace_virtual_columns              = false
_replace_virtual_columns            = true
_virtual_column_overload_allowed    = true
_kdt_buffering                      = true
_first_k_rows_dynamic_proration     = true
_optimizer_sortmerge_join_inequality = true
_optimizer_aw_stats_enabled         = true
_bloom_pruning_enabled              = true
result_cache_mode                   = MANUAL
_px_ual_serial_input                = true
_optimizer_skip_scan_guess          = false
_enable_row_shipping                = true
_row_shipping_threshold             = 100
_row_shipping_explain               = false
transaction_isolation_level         = read_commited
_optimizer_distinct_elimination     = true
_optimizer_multi_level_push_pred    = true
_optimizer_group_by_placement       = true
_optimizer_rownum_bind_default      = 10
_enable_query_rewrite_on_remote_objs = true
_optimizer_extended_cursor_sharing_rel = simple
_optimizer_adaptive_cursor_sharing  = true
_direct_path_insert_features        = 0
_optimizer_improve_selectivity      = true
optimizer_use_pending_statistics    = false
_optimizer_enable_density_improvements = true
_optimizer_aw_join_push_enabled     = true
_optimizer_connect_by_combine_sw    = true
_enable_pmo_ctas                    = 0
_optimizer_native_full_outer_join   = force
_bloom_predicate_enabled            = true
_optimizer_enable_extended_stats    = true
_is_lock_table_for_ddl_wait_lock    = 0
_pivot_implementation_method        = choose
optimizer_capture_sql_plan_baselines = false
optimizer_use_sql_plan_baselines    = true
_optimizer_star_trans_min_cost      = 0
_optimizer_star_trans_min_ratio     = 0
_with_subquery                      = OPTIMIZER
_optimizer_fkr_index_cost_bias      = 10
_optimizer_use_subheap              = true
parallel_degree_policy              = manual
parallel_degree                     = 0
parallel_min_time_threshold         = 10
_parallel_time_unit                 = 10
_optimizer_or_expansion_subheap     = true
_optimizer_free_transformation_heap = true
_optimizer_reuse_cost_annotations   = true
_result_cache_auto_size_threshold   = 100
_result_cache_auto_time_threshold   = 1000
_optimizer_nested_rollup_for_gset   = 100
_nlj_batching_enabled               = 1
parallel_query_default_dop          = 0
is_recur_flags                      = 0
optimizer_use_invisible_indexes     = false
flashback_data_archive_internal_cursor = 0
_optimizer_extended_stats_usage_control = 192
_parallel_syspls_obey_force         = true
cell_offload_processing             = true
_rdbms_internal_fplib_enabled       = false
db_file_multiblock_read_count       = 128
_bloom_folding_enabled              = true
_mv_generalized_oj_refresh_opt      = true
cell_offload_compaction             = ADAPTIVE
cell_offload_plan_display           = AUTO
_bloom_predicate_offload            = true
_bloom_filter_size                  = 0
_bloom_pushing_max                  = 512
parallel_degree_limit               = 65535
parallel_force_local                = false
parallel_max_degree                 = 8
total_cpu_count                     = 8
_optimizer_coalesce_subqueries      = true
_optimizer_fast_pred_transitivity   = true
_optimizer_fast_access_pred_analysis = true
_optimizer_unnest_disjunctive_subq  = true
_optimizer_unnest_corr_set_subq     = true
_optimizer_distinct_agg_transform   = true
_aggregation_optimization_settings  = 0
_optimizer_connect_by_elim_dups     = true
_optimizer_eliminate_filtering_join = true
_connect_by_use_union_all           = true
dst_upgrade_insert_conv             = true
advanced_queuing_internal_cursor    = 0
_optimizer_unnest_all_subqueries    = true
parallel_autodop                    = 0
parallel_ddldml                     = 0
_parallel_cluster_cache_policy      = adaptive
_parallel_scalability               = 50
iot_internal_cursor                 = 0
_optimizer_instance_count           = 0
_optimizer_connect_by_cb_whr_only   = false
_suppress_scn_chk_for_cqn           = nosuppress_1466
_optimizer_join_factorization       = true
_optimizer_use_cbqt_star_transformation = true
_optimizer_table_expansion          = true
_and_pruning_enabled                = true
_deferred_constant_folding_mode     = DEFAULT
_optimizer_distinct_placement       = true
partition_pruning_internal_cursor   = 0
parallel_hinted                     = none
_sql_compatibility                  = 0
_optimizer_use_feedback             = true
_optimizer_try_st_before_jppd       = true
_dml_frequency_tracking             = false
_optimizer_interleave_jppd          = true
kkb_drop_empty_segments             = 0
_px_partition_scan_enabled          = true
_px_partition_scan_threshold        = 64
_optimizer_false_filter_pred_pullup = true
_bloom_minmax_enabled               = true
only_move_row                       = 0
_optimizer_enable_table_lookup_by_nl = true
parallel_execution_message_size     = 16384
_px_loc_msg_cost                    = 1000
_px_net_msg_cost                    = 10000
_optimizer_generate_transitive_pred = true
_optimizer_cube_join_enabled        = true
_optimizer_filter_pushdown          = true
deferred_segment_creation           = true
_optimizer_outer_join_to_inner      = true
_allow_level_without_connect_by     = false
_max_rwgs_groupings                 = 8192
_optimizer_hybrid_fpwj_enabled      = true
_px_replication_enabled             = true
ilm_filter                          = 0
_optimizer_partial_join_eval        = true
_px_concurrent                      = true
_px_object_sampling_enabled         = true
_px_back_to_parallel                = OFF
_optimizer_unnest_scalar_sq         = true
_optimizer_full_outer_join_to_outer = true
_px_filter_parallelized             = true
_px_filter_skew_handling            = true
_zonemap_use_enabled                = true
_zonemap_control                    = 0
_optimizer_multi_table_outerjoin    = true
_px_groupby_pushdown                = force
_partition_advisor_srs_active       = true
_optimizer_ansi_join_lateral_enhance = true
_px_parallelize_expression          = true
_fast_index_maintenance             = true
_optimizer_ansi_rearchitecture      = true
_optimizer_gather_stats_on_load     = true
ilm_access_tracking                 = 0
ilm_dml_timestamp                   = 0
_px_adaptive_dist_method            = choose
_px_adaptive_dist_method_threshold  = 0
_optimizer_batch_table_access_by_rowid = true
optimizer_adaptive_reporting_only   = false
_optimizer_ads_max_table_count      = 0
_optimizer_ads_time_limit           = 0
_optimizer_ads_use_result_cache     = true
_px_wif_dfo_declumping              = choose
_px_wif_extend_distribution_keys    = true
_px_join_skew_handling              = true
_px_join_skew_ratio                 = 10
_px_join_skew_minfreq               = 30
CLI_internal_cursor                 = 0
_parallel_fault_tolerance_enabled   = false
_parallel_fault_tolerance_threshold = 3
_px_partial_rollup_pushdown         = adaptive
_px_single_server_enabled           = true
_optimizer_dsdir_usage_control      = 0
_px_cpu_autodop_enabled             = true
_px_cpu_process_bandwidth           = 200
_sql_hvshare_threshold              = 0
_px_tq_rowhvs                       = true
_optimizer_use_gtt_session_stats    = true
_optimizer_proc_rate_level          = basic
_px_hybrid_TSM_HWMB_load            = true
_optimizer_use_histograms           = true
PMO_altidx_rebuild                  = 0
_cell_offload_expressions           = true
_cell_materialize_virtual_columns   = true
_cell_materialize_all_expressions   = false
_rowsets_enabled                    = true
_rowsets_target_maxsize             = 524288
_rowsets_max_rows                   = 256
_use_hidden_partitions              = 0
_px_load_monitor_threshold          = 10000
_px_numa_support_enabled            = false
total_processor_group_count         = 1
_adaptive_window_consolidator_enabled = true
_optimizer_strans_adaptive_pruning  = true
_bloom_rm_filter                    = false
_optimizer_null_accepting_semijoin  = true
_long_varchar_allow_IOT             = 0
_parallel_ctas_enabled              = true
_cell_offload_complex_processing    = true
_optimizer_performance_feedback     = off
_optimizer_proc_rate_source         = DEFAULT
_hashops_prefetch_size              = 4
_cell_offload_sys_context           = true
_multi_commit_global_index_maint    = 0
_stat_aggs_one_pass_algorithm       = false
_dbg_scan                           = 0
_oltp_comp_dbg_scan                 = 0
_arch_comp_dbg_scan                 = 0
_optimizer_gather_feedback          = true
_upddel_dba_hash_mask_bits          = 0
_px_pwmr_enabled                    = true
_px_cdb_view_enabled                = true
_bloom_sm_enabled                   = true
_optimizer_cluster_by_rowid         = true
_optimizer_cluster_by_rowid_control = 129
_partition_cdb_view_enabled         = true
_common_data_view_enabled           = true
_pred_push_cdb_view_enabled         = true
_rowsets_cdb_view_enabled           = true
_distinct_agg_optimization_gsets    = choose
_array_cdb_view_enabled             = true
_optimizer_adaptive_plan_control    = 0
_optimizer_adaptive_random_seed     = 0
_optimizer_cbqt_or_expansion        = on
_inmemory_dbg_scan                  = 0
_gby_vector_aggregation_enabled     = true
_optimizer_vector_transformation    = true
_optimizer_vector_fact_dim_ratio    = 10
_key_vector_max_size                = 0
_key_vector_predicate_enabled       = true
_key_vector_predicate_threshold     = 0
_vector_operations_control          = 0
_optimizer_vector_min_fact_rows     = 10000000
parallel_dblink                     = 0
_px_scalable_invdist                = true
_key_vector_offload                 = predicate
_optimizer_aggr_groupby_elim        = true
_optimizer_reduce_groupby_key       = true
_vector_serialize_temp_threshold    = 1000
_always_vector_transformation       = false
_optimizer_cluster_by_rowid_batched = true
_object_link_fixed_enabled          = true
optimizer_inmemory_aware            = true
_optimizer_inmemory_table_expansion = true
_optimizer_inmemory_gen_pushable_preds = true
_optimizer_inmemory_autodop         = true
_optimizer_inmemory_access_path     = true
_optimizer_inmemory_bloom_filter    = true
_parallel_inmemory_min_time_threshold = 1
_parallel_inmemory_time_unit        = 1
_rc_sys_obj_enabled                 = true
_optimizer_nlj_hj_adaptive_join     = true
_indexable_con_id                   = true
_bloom_serial_filter                = on
inmemory_force                      = default
inmemory_query                      = enable
_inmemory_query_scan                = true
_inmemory_query_fetch_by_rowid      = false
_inmemory_pruning                   = on
_px_autodop_pq_overhead             = true
_px_external_table_default_stats    = true
_optimizer_key_vector_aggr_factor   = 75
_optimizer_vector_cost_adj          = 100
_cdb_cross_container                = 65535
_cdb_view_parallel_degree           = 65535
_optimizer_hll_entry                = 4096
_px_cdb_view_join_enabled           = true
inmemory_size                       = 0
_external_table_smart_scan          = hadoop_only
_optimizer_inmemory_minmax_pruning  = true
_approx_cnt_distinct_gby_pushdown   = choose
_approx_cnt_distinct_optimization   = 0
_optimizer_ads_use_partial_results  = true
_query_execution_time_limit         = 0
_optimizer_inmemory_cluster_aware_dop = true
_optimizer_db_blocks_buffers        = 0 KB
_query_rewrite_use_on_query_computation = true
_px_scalable_invdist_mcol           = true
_optimizer_bushy_join               = off
_optimizer_bushy_fact_dim_ratio     = 20
_optimizer_bushy_fact_min_size      = 100000
_optimizer_bushy_cost_factor        = 100
_rmt_for_table_redef_enabled        = true
_optimizer_eliminate_subquery       = true
_sqlexec_cache_aware_hash_join_enabled = true
_zonemap_usage_tracking             = true
_sqlexec_hash_based_distagg_enabled = false
_sqlexec_disable_hash_based_distagg_tiv = false
_sqlexec_hash_based_distagg_ssf_enabled = true
_sqlexec_distagg_optimization_settings = 0
approx_for_aggregation              = false
approx_for_count_distinct           = false
_optimizer_union_all_gsets          = true
_rowsets_use_encoding               = true
_rowsets_max_enc_rows               = 64
_optimizer_enhanced_join_elimination = true
_optimizer_multicol_join_elimination = true
_key_vector_create_pushdown_threshold = 20000
_optimizer_enable_plsql_stats       = true
_recursive_with_parallel            = true
_recursive_with_branch_iterations   = 7
_px_dist_agg_partial_rollup_pushdown = adaptive
_px_adaptive_dist_bypass_enabled    = true
_enable_view_pdb                    = true
_optimizer_key_vector_pruning_enabled = true
_pwise_distinct_enabled             = true
_recursive_with_using_temp_table    = false
_partition_read_only                = true
_sql_alias_scope                    = true
_cdb_view_no_skip_migrate           = false
_approx_perc_sampling_err_rate      = 2
_sqlexec_encoding_aware_hj_enabled  = true
rim_node_exist                      = 0
_enable_containers_subquery         = true
_force_containers_subquery          = false
_cell_offload_vector_groupby        = true
_vector_encoding_mode               = manual
_ds_xt_split_count                  = 1
_ds_sampling_method                 = PROGRESSIVE
_optimizer_ads_use_spd_cache        = true
_optimizer_use_table_scanrate       = HADOOP_ONLY
_optimizer_use_xt_rowid             = true
_xt_sampling_scan_granules          = on
_recursive_with_control             = 0
_sqlexec_use_rwo_aware_expr_analysis = true
_optimizer_band_join_aware          = true
_optimizer_vector_base_dim_fact_factor = 200
approx_for_percentile               = none
_approx_percentile_optimization     = 0
_projection_pushdown                = true
_px_object_sampling                 = 200
_optimizer_adaptive_plans_continuous = false
_optimizer_adaptive_plans_iterative = false
_ds_enable_view_sampling            = true
_optimizer_generate_ptf_implied_preds = true
_optimizer_inmemory_use_stored_stats = AUTO
_cdb_special_old_xplan              = true
uniaud_internal_cursor              = 0
_kd_dbg_control                     = 0
_mv_access_compute_fresh_data       = on
_bloom_filter_ratio                 = 35
_optimizer_control_shard_qry_processing = 65528
containers_parallel_degree          = 65535
sql_from_coordinator                = 0
_xt_sampling_scan_granules_min_granules = 1
_in_memory_cdt                      = LIMITED
_in_memory_cdt_maxpx                = 4
_px_partition_load_dist_threshold   = 64
_px_adaptive_dist_bypass_optimization = 1
_optimizer_interleave_or_expansion  = true
optimizer_adaptive_plans            = true
optimizer_adaptive_statistics       = false
_optimizer_use_feedback_for_join    = false
_optimizer_ads_for_pq               = false
_px_join_skewed_values_count        = 0
optimizer_ignore_parallel_hints     = false
parallel_min_degree                 = 1
_px_nlj_bcast_rr_threshold          = 10
_optimizer_gather_stats_on_load_all = false
_optimizer_gather_stats_on_load_hist = false
_optimizer_allow_all_access_paths   = true
_key_vector_double_enabled          = true
_key_vector_timestamp_enabled       = true
_optimizer_answering_query_using_stats = false
_disable_dblink_optim               = true
_cell_offload_hybrid_processing     = true
_read_optimized_table_lookup        = true
_optimizer_key_vector_payload       = true
_optimizer_vector_fact_payload_ratio = 20
_bloom_pruning_setops_enabled       = true
_bloom_filter_setops_enabled        = true
_key_vector_shared_dgk_ht           = true
_px_pwise_wif_enabled               = true
_sqlexec_reorder_wif_enabled        = true
_px_partition_skew_threshold        = 80
_sqlexec_pwiseops_with_sqlfuncs_enabled = true
_sqlexec_pwiseops_with_binds_enabled = true
_px_shared_hash_join                = false
_px_reuse_server_groups             = multi
_px_join_skew_null_handling         = true
_px_join_skew_use_histogram         = true
_px_join_skew_sampling_time_limit   = 50
_px_join_skew_sampling_percent      = 0
_cdb_view_no_skip_restricted        = false
_inmemory_external_table            = true
_sqlexec_use_kgghash3               = true
_cell_offload_vector_groupby_force  = false
_hcs_enable_pred_push               = true
parallel_dop_doubled                = 0
_optimizer_gather_stats_on_load_index = true
_con_map_sql_enforcement            = true
_uniq_cons_sql_enforcement          = true
_ref_cons_sql_enforcement           = true
_is_lock_table_for_split_merge      = 0
_cell_offload_vector_groupby_fact_key = true
_px_scalable_gby_invdist            = true
_px_dynamic_granules                = true
_px_dynamic_granules_adjust         = 10
_px_hybrid_partition_execution_enabled = true
_px_hybrid_partition_skew_threshold = 10
_optimizer_key_vector_use_max_size  = 1048576
_cell_offload_vector_groupby_withnojoin = true
_key_vector_join_pushdown_enabled   = true
_cell_offload_grand_total           = true
_optimizer_key_vector_payload_dim_aggs = false
_optimizer_use_auto_indexes         = AUTO
_optimizer_use_stats_on_conventional_dml = true
_optimizer_gather_stats_on_conventional_dml = true
_optimizer_use_stats_on_conventional_config = 0
_skip_pset_col_chk                  = 0
_nls_binary                         = false
_optimizer_quarantine_sql           = true
_optimizer_gather_stats_on_conventional_config = 0
_nls_forced_binary                  = 0
_utl32k_mv_query                    = false
_optimizer_auto_index_allow         = AUTO
Bug Fix Control Environment
    fix  3834770 = 1       
    fix  3746511 = enabled
    fix  4519016 = enabled
    fix  3118776 = enabled
    fix  4488689 = enabled
    fix  2194204 = disabled
    fix  2660592 = enabled
    fix  2320291 = enabled
    fix  2324795 = enabled
    fix  4308414 = enabled
    fix  3499674 = disabled
    fix  4569940 = enabled
    fix  4631959 = enabled
    fix  4519340 = enabled
    fix  4550003 = enabled
    fix  1403283 = enabled
    fix  4554846 = enabled
    fix  4602374 = enabled
    fix  4584065 = enabled
    fix  4545833 = enabled
    fix  4611850 = enabled
    fix  4663698 = enabled
    fix  4663804 = enabled
    fix  4666174 = enabled
    fix  4567767 = enabled
    fix  4556762 = 15      
    fix  4728348 = enabled
    fix  4708389 = enabled
    fix  4175830 = enabled
    fix  4752814 = enabled
    fix  4583239 = enabled
    fix  4386734 = enabled
    fix  4887636 = enabled
    fix  4483240 = enabled
    fix  4872602 = disabled
    fix  4711525 = enabled
    fix  4545802 = enabled
    fix  4605810 = enabled
    fix  4704779 = enabled
    fix  4900129 = enabled
    fix  4924149 = enabled
    fix  4663702 = enabled
    fix  4878299 = enabled
    fix  4658342 = enabled
    fix  4881533 = enabled
    fix  4676955 = enabled
    fix  4273361 = enabled
    fix  4967068 = enabled
    fix  4969880 = disabled
    fix  5005866 = enabled
    fix  5015557 = enabled
    fix  4705343 = enabled
    fix  4904838 = enabled
    fix  4716096 = enabled
    fix  4483286 = disabled
    fix  4722900 = enabled
    fix  4615392 = enabled
    fix  5096560 = enabled
    fix  5029464 = enabled
    fix  4134994 = enabled
    fix  4904890 = enabled
    fix  5104624 = enabled
    fix  5014836 = enabled
    fix  4768040 = enabled
    fix  4600710 = enabled
    fix  5129233 = enabled
    fix  4595987 = enabled
    fix  4908162 = enabled
    fix  5139520 = enabled
    fix  5084239 = enabled
    fix  5143477 = disabled
    fix  2663857 = enabled
    fix  4717546 = enabled
    fix  5240264 = disabled
    fix  5099909 = enabled
    fix  5240607 = enabled
    fix  5195882 = enabled
    fix  5220356 = enabled
    fix  5263572 = enabled
    fix  5385629 = enabled
    fix  5302124 = enabled
    fix  5391942 = enabled
    fix  5384335 = enabled
    fix  5482831 = enabled
    fix  4158812 = enabled
    fix  5387148 = enabled
    fix  5383891 = enabled
    fix  5466973 = enabled
    fix  5396162 = enabled
    fix  5394888 = enabled
    fix  5395291 = enabled
    fix  5236908 = enabled
    fix  5509293 = enabled
    fix  5449488 = enabled
    fix  5567933 = enabled
    fix  5570494 = enabled
    fix  5288623 = enabled
    fix  5505995 = enabled
    fix  5505157 = enabled
    fix  5112460 = enabled
    fix  5554865 = enabled
    fix  5112260 = enabled
    fix  5112352 = enabled
    fix  5547058 = enabled
    fix  5618040 = enabled
    fix  5585313 = enabled
    fix  5547895 = enabled
    fix  5634346 = enabled
    fix  5620485 = enabled
    fix  5483301 = enabled
    fix  5657044 = enabled
    fix  5694984 = enabled
    fix  5868490 = enabled
    fix  5650477 = enabled
    fix  5611962 = enabled
    fix  4279274 = enabled
    fix  5741121 = enabled
    fix  5714944 = enabled
    fix  5391505 = enabled
    fix  5762598 = enabled
    fix  5578791 = enabled
    fix  5259048 = enabled
    fix  5882954 = enabled
    fix  2492766 = enabled
    fix  5707608 = enabled
    fix  5891471 = enabled
    fix  5884780 = enabled
    fix  5680702 = enabled
    fix  5371452 = enabled
    fix  5838613 = enabled
    fix  5949981 = enabled
    fix  5624216 = enabled
    fix  5741044 = enabled
    fix  5976822 = enabled
    fix  6006457 = enabled
    fix  5872956 = enabled
    fix  5923644 = enabled
    fix  5943234 = enabled
    fix  5844495 = enabled
    fix  4168080 = enabled
    fix  6020579 = enabled
    fix  5842686 = disabled
    fix  5996801 = enabled
    fix  5593639 = enabled
    fix  6133948 = enabled
    fix  3151991 = enabled
    fix  6146906 = enabled
    fix  6239909 = enabled
    fix  6267621 = enabled
    fix  5909305 = enabled
    fix  6279918 = enabled
    fix  6141818 = enabled
    fix  6151963 = enabled
    fix  6251917 = enabled
    fix  6282093 = enabled
    fix  6119510 = enabled
    fix  6119382 = enabled
    fix  3801750 = enabled
    fix  5705630 = disabled
    fix  5944076 = enabled
    fix  5406763 = enabled
    fix  6070954 = enabled
    fix  6282944 = enabled
    fix  6138746 = enabled
    fix  6082745 = enabled
    fix  3426050 = enabled
    fix   599680 = enabled
    fix  6062266 = enabled
    fix  6087237 = enabled
    fix  6122894 = enabled
    fix  6377505 = enabled
    fix  5893768 = enabled
    fix  6163564 = enabled
    fix  6073325 = enabled
    fix  6188881 = enabled
    fix  6007259 = enabled
    fix  6239971 = enabled
    fix  5284200 = disabled
    fix  6042205 = enabled
    fix  6051211 = enabled
    fix  6434668 = enabled
    fix  6438752 = enabled
    fix  5936366 = enabled
    fix  6439032 = enabled
    fix  6438892 = enabled
    fix  6006300 = enabled
    fix  5947231 = enabled
    fix  5416118 = 1       
    fix  6365442 = 1       
    fix  6239039 = enabled
    fix  6502845 = enabled
    fix  6913094 = enabled
    fix  6029469 = enabled
    fix  5919513 = enabled
    fix  6057611 = enabled
    fix  6469667 = enabled
    fix  6608941 = disabled
    fix  6368066 = enabled
    fix  6329318 = enabled
    fix  6656356 = enabled
    fix  4507997 = enabled
    fix  6671155 = enabled
    fix  6694548 = enabled
    fix  6688200 = enabled
    fix  6612471 = enabled
    fix  6708183 = disabled
    fix  6326934 = enabled
    fix  6520717 = disabled
    fix  6714199 = enabled
    fix  6681545 = enabled
    fix  6748058 = enabled
    fix  6167716 = enabled
    fix  6674254 = enabled
    fix  6468287 = enabled
    fix  6503543 = enabled
    fix  6808773 = disabled
    fix  6766962 = enabled
    fix  6120483 = enabled
    fix  6670551 = enabled
    fix  6771838 = enabled
    fix  6626018 = disabled
    fix  6530596 = enabled
    fix  6778642 = enabled
    fix  6699059 = enabled
    fix  6376551 = enabled
    fix  6429113 = enabled
    fix  6782437 = enabled
    fix  6776808 = enabled
    fix  6765823 = enabled
    fix  6768660 = enabled
    fix  6782665 = enabled
    fix  6610822 = enabled
    fix  6514189 = enabled
    fix  6818410 = enabled
    fix  6827696 = enabled
    fix  6773613 = enabled
    fix  5902962 = enabled
    fix  6956212 = enabled
    fix  3056297 = enabled
    fix  6440977 = disabled
    fix  6972291 = disabled
    fix  6904146 = enabled
    fix  6221403 = enabled
    fix  5475051 = enabled
    fix  6845871 = enabled
    fix  5468809 = enabled
    fix  6917633 = enabled
    fix  4444536 = disabled
    fix  6955210 = enabled
    fix  6994194 = enabled
    fix  6399597 = disabled
    fix  6951776 = enabled
    fix  5648287 = 3       
    fix  6987082 = disabled
    fix  7132036 = enabled
    fix  6980350 = enabled
    fix  5199213 = enabled
    fix  7138405 = enabled
    fix  7148689 = enabled
    fix  6820988 = enabled
    fix  7032684 = enabled
    fix  6617866 = enabled
    fix  7155968 = enabled
    fix  7127980 = enabled
    fix  6982954 = enabled
    fix  7241819 = enabled
    fix  6897034 = enabled
    fix  7236148 = enabled
    fix  7298570 = enabled
    fix  7249095 = enabled
    fix  7314499 = enabled
    fix  7324224 = enabled
    fix  7289023 = enabled
    fix  7237571 = enabled
    fix  7116357 = enabled
    fix  7345484 = enabled
    fix  7375179 = enabled
    fix  6430500 = disabled
    fix  5897486 = enabled
    fix  6774209 = enabled
    fix  7306637 = enabled
    fix  6451322 = enabled
    fix  7208131 = enabled
    fix  7388652 = enabled
    fix  7127530 = enabled
    fix  6751206 = enabled
    fix  6669103 = enabled
    fix  7430474 = enabled
    fix  6990305 = enabled
    fix  7043307 = enabled
    fix  3120429 = enabled
    fix  7452823 = disabled
    fix  6838105 = enabled
    fix  6769711 = enabled
    fix  7170213 = enabled
    fix  6528872 = enabled
    fix  7295298 = enabled
    fix  5922070 = enabled
    fix  7259468 = enabled
    fix  6418552 = enabled
    fix  4619997 = enabled
    fix  7524366 = enabled
    fix  6942476 = enabled
    fix  6418771 = enabled
    fix  7375077 = enabled
    fix  5400639 = enabled
    fix  4570921 = enabled
    fix  7426911 = enabled
    fix  5099019 = disabled
    fix  7528216 = enabled
    fix  7521266 = enabled
    fix  7385140 = enabled
    fix  7576516 = enabled
    fix  7573526 = enabled
    fix  7576476 = enabled
    fix  7165898 = enabled
    fix  7263214 = enabled
    fix  3320140 = enabled
    fix  7555510 = enabled
    fix  7613118 = enabled
    fix  7597059 = enabled
    fix  7558911 = enabled
    fix  5520732 = enabled
    fix  7679490 = disabled
    fix  7449971 = enabled
    fix  3628118 = enabled
    fix  4370840 = enabled
    fix  7281191 = enabled
    fix  7519687 = enabled
    fix  5029592 = 3       
    fix  6012093 = 1       
    fix  6053861 = disabled
    fix  6941515 = disabled
    fix  7696414 = enabled
    fix  7272039 = enabled
    fix  7834811 = enabled
    fix  7640597 = enabled
    fix  7341616 = enabled
    fix  7168184 = enabled
    fix   399198 = enabled
    fix  7831070 = enabled
    fix  7676897 = disabled
    fix  7414637 = enabled
    fix  7585456 = enabled
    fix  8202421 = enabled
    fix  7658097 = disabled
    fix  8251486 = enabled
    fix  7132684 = enabled
    fix  7512227 = enabled
    fix  6972987 = enabled
    fix  7199035 = enabled
    fix  8243446 = enabled
    fix  7650462 = enabled
    fix  6720701 = enabled
    fix  7592673 = enabled
    fix  7718694 = enabled
    fix  7534027 = enabled
    fix  7708267 = enabled
    fix  5716785 = enabled
    fix  7356191 = enabled
    fix  7679161 = enabled
    fix  7597159 = enabled
    fix  7499258 = enabled
    fix  8328363 = enabled
    fix  7452863 = enabled
    fix  8284930 = enabled
    fix  7298626 = enabled
    fix  7657126 = enabled
    fix  8371884 = enabled
    fix  8318020 = enabled
    fix  8255423 = enabled
    fix  7135745 = enabled
    fix  8356253 = enabled
    fix  7534257 = enabled
    fix  8323407 = enabled
    fix  7539815 = enabled
    fix  8289316 = enabled
    fix  8447850 = enabled
    fix  7675944 = enabled
    fix  8355120 = enabled
    fix  7176746 = enabled
    fix  8442891 = enabled
    fix  8373261 = enabled
    fix  7679164 = enabled
    fix  7670533 = enabled
    fix  8408665 = enabled
    fix  8491399 = enabled
    fix  8348392 = enabled
    fix  8348585 = enabled
    fix  8335178 = enabled
    fix  8247017 = enabled
    fix  7325597 = enabled
    fix  8531490 = enabled
    fix  6163600 = enabled
    fix  8589278 = disabled
    fix  8557992 = enabled
    fix  7556098 = enabled
    fix  8580883 = enabled
    fix  5892599 = disabled
    fix  8609714 = enabled
    fix  8619631 = disabled
    fix  8672915 = enabled
    fix  8514561 = enabled
    fix  8213977 = enabled
    fix  8560951 = disabled
    fix  8578587 = enabled
    fix  8287870 = enabled
    fix  8467123 = enabled
    fix  8602185 = enabled
    fix  8519457 = enabled
    fix  3335182 = enabled
    fix  8602840 = enabled
    fix  8725296 = enabled
    fix  8628970 = enabled
    fix  6754080 = enabled
    fix  8767442 = enabled
    fix  8760135 = enabled
    fix  8644935 = enabled
    fix  8352378 = enabled
    fix  8685327 = enabled
    fix  8763472 = enabled
    fix  8773324 = enabled
    fix  8813674 = enabled
    fix  8532236 = enabled
    fix  8629716 = enabled
    fix  7277732 = enabled
    fix  8692170 = enabled
    fix  8900973 = enabled
    fix  8919133 = enabled
    fix  8927050 = enabled
    fix  8551880 = enabled
    fix  8901237 = enabled
    fix  8812372 = enabled
    fix  6236862 = enabled
    fix  8528517 = enabled
    fix  7215982 = enabled
    fix  8214022 = enabled
    fix  8595392 = enabled
    fix  8890233 = enabled
    fix  8999317 = enabled
    fix  9004800 = enabled
    fix  8986163 = enabled
    fix  8855396 = enabled
    fix  8800514 = 20      
    fix  9007859 = enabled
    fix  8198783 = disabled
    fix  9053879 = enabled
    fix  6086930 = enabled
    fix  7641601 = enabled
    fix  9052506 = enabled
    fix  9103775 = enabled
    fix  9047975 = enabled
    fix  8893626 = enabled
    fix  9111170 = enabled
    fix  8971829 = enabled
    fix  7628358 = enabled
    fix  9125151 = enabled
    fix  9039715 = enabled
    fix  9106224 = enabled
    fix  9185228 = enabled
    fix  9206747 = enabled
    fix  9088510 = enabled
    fix  9143856 = enabled
    fix  8833381 = enabled
    fix  8949971 = enabled
    fix  8951812 = enabled
    fix  9148171 = enabled
    fix  8706652 = enabled
    fix  9245114 = enabled
    fix  8802198 = enabled
    fix  9011016 = enabled
    fix  9265681 = enabled
    fix  7284269 = enabled
    fix  9272549 = enabled
    fix  8917507 = 7       
    fix  8531463 = enabled
    fix  9263333 = enabled
    fix  8675087 = enabled
    fix  8896955 = enabled
    fix  9041934 = enabled
    fix  9344709 = enabled
    fix  9024933 = enabled
    fix  9033718 = enabled
    fix  9240455 = enabled
    fix  9081848 = enabled
    fix  5982893 = enabled
    fix  9287401 = enabled
    fix  8590021 = enabled
    fix  9340120 = enabled
    fix  9355794 = enabled
    fix  9356656 = enabled
    fix  9385634 = enabled
    fix  9069046 = enabled
    fix  9239337 = enabled
    fix  9300228 = enabled
    fix  9298010 = enabled
    fix  9384170 = enabled
    fix  9407929 = enabled
    fix  8836806 = enabled
    fix  9344055 = enabled
    fix  9274675 = enabled
    fix  9203723 = enabled
    fix  9443476 = enabled
    fix  9195582 = enabled
    fix  8226666 = enabled
    fix  9433490 = enabled
    fix  9065494 = enabled
    fix  9303766 = enabled
    fix  9437283 = enabled
    fix  9116214 = enabled
    fix  9456688 = enabled
    fix  9456746 = disabled
    fix  9342979 = enabled
    fix  9465425 = enabled
    fix  9092442 = enabled
    fix  4926618 = enabled
    fix  8792846 = enabled
    fix  9474259 = enabled
    fix  9495669 = disabled
    fix  6472966 = enabled
    fix  6408301 = enabled
    fix  9380298 = disabled
    fix  8500130 = enabled
    fix  9584723 = enabled
    fix  9270951 = enabled
    fix  9508254 = enabled
    fix  9593680 = enabled
    fix  9196440 = disabled
    fix  9309281 = enabled
    fix  8693158 = enabled
    fix  9381638 = enabled
    fix  9383967 = enabled
    fix  7711900 = enabled
    fix  9218587 = enabled
    fix  9728438 = enabled
    fix  9038395 = enabled
    fix  9577300 = enabled
    fix  9171113 = enabled
    fix  8973745 = enabled
    fix  9732434 = enabled
    fix  8937971 = disabled
    fix  9102474 = enabled
    fix  9243499 = enabled
    fix  9791810 = enabled
    fix  9785632 = enabled
    fix  9898249 = enabled
    fix  9153459 = enabled
    fix  9680430 = enabled
    fix  9841679 = enabled
    fix  9912503 = enabled
    fix  9850461 = enabled
    fix  9762592 = 3       
    fix  9716877 = enabled
    fix  9814067 = enabled
    fix  9776736 = enabled
    fix  8349119 = enabled
    fix  9958518 = enabled
    fix 10041074 = enabled
    fix 10004943 = enabled
    fix  9980661 = enabled
    fix  9554026 = enabled
    fix  9593547 = enabled
    fix  9833381 = enabled
    fix 10043801 = enabled
    fix  9940732 = enabled
    fix  9702850 = enabled
    fix  9659125 = 0       
    fix  9668086 = enabled
    fix  9476520 = enabled
    fix 10158107 = enabled
    fix 10148457 = enabled
    fix 10106423 = enabled
    fix  9721439 = disabled
    fix 10162430 = enabled
    fix 10134677 = enabled
    fix 10182051 = 3       
    fix 10175079 = enabled
    fix 10026972 = enabled
    fix 10192889 = enabled
    fix  3566843 = enabled
    fix  9550277 = disabled
    fix 10236566 = enabled
    fix 10227392 = enabled
    fix  8961143 = enabled
    fix  9721228 = enabled
    fix 10080014 = enabled
    fix 10101489 = enabled
    fix  9929609 = enabled
    fix 10015652 = enabled
    fix  9918661 = enabled
    fix 10333395 = enabled
    fix 10336499 = disabled
    fix 10182672 = enabled
    fix  9578670 = enabled
    fix 10232225 = enabled
    fix 10330090 = enabled
    fix 10232623 = enabled
    fix  9630092 = disabled
    fix 10271790 = enabled
    fix  9227576 = enabled
    fix 10197666 = enabled
    fix 10376744 = enabled
    fix  8274946 = enabled
    fix 10046368 = enabled
    fix  9569678 = enabled
    fix  9002661 = enabled
    fix 10038373 = enabled
    fix  9477688 = enabled
    fix 10013899 = enabled
    fix  9832338 = enabled
    fix 10623119 = enabled
    fix  9898066 = enabled
    fix 11699884 = enabled
    fix 10640430 = enabled
    fix 10428450 = enabled
    fix 10117760 = enabled
    fix 11720178 = enabled
    fix  9881812 = enabled
    fix 10428278 = enabled
    fix 11741436 = enabled
    fix 11668189 = enabled
    fix 10359631 = enabled
    fix  9829887 = enabled
    fix  8275054 = enabled
    fix 11814428 = enabled
    fix 11676888 = disabled
    fix 10348427 = enabled
    fix 11843512 = enabled
    fix 11657468 = enabled
    fix 11877160 = enabled
    fix 11738631 = enabled
    fix 11744086 = enabled
    fix 11830663 = enabled
    fix 11853331 = enabled
    fix  9748015 = enabled
    fix 11834739 = enabled
    fix  6055658 = enabled
    fix 11740670 = enabled
    fix 11940126 = enabled
    fix 12315002 = enabled
    fix  8275023 = enabled
    fix 12352373 = enabled
    fix 12390139 = enabled
    fix 11935589 = enabled
    fix 10226906 = enabled
    fix 12327548 = enabled
    fix 12388221 = enabled
    fix 11892888 = enabled
    fix 11814265 = enabled
    fix 10230017 = enabled
    fix 12341619 = enabled
    fix 11744016 = enabled
    fix 10216738 = enabled
    fix 10298302 = enabled
    fix 12563419 = enabled
    fix 12399886 = enabled
    fix 12584007 = enabled
    fix 11881047 = enabled
    fix 12534597 = enabled
    fix  8683604 = enabled
    fix 12410972 = enabled
    fix  7147087 = enabled
    fix 11846314 = enabled
    fix 12535474 = enabled
    fix 12561635 = enabled
    fix 12432426 = enabled
    fix  9913117 = enabled
    fix 12432089 = enabled
    fix 12587690 = enabled
    fix 11858963 = enabled
    fix 12569245 = enabled
    fix 12569300 = enabled
    fix  7308975 = disabled
    fix 12569316 = enabled
    fix 12569321 = enabled
    fix 12335617 = enabled
    fix  9002958 = enabled
    fix 12591120 = enabled
    fix 11876260 = enabled
    fix 12313574 = enabled
    fix 12569713 = enabled
    fix 12348584 = enabled
    fix 10420220 = enabled
    fix 12559453 = enabled
    fix 12727549 = enabled
    fix 12728203 = enabled
    fix 12828479 = enabled
    fix 10181153 = enabled
    fix  9971371 = disabled
    fix 12864791 = enabled
    fix 12810427 = enabled
    fix 12605402 = enabled
    fix 12861609 = enabled
    fix 12915337 = enabled
    fix 12942119 = enabled
    fix 12622441 = enabled
    fix 11072246 = enabled
    fix 12739252 = enabled
    fix 12953765 = enabled
    fix 12905116 = enabled
    fix 12978495 = enabled
    fix  9633142 = disabled
    fix  3639130 = enabled
    fix 12827166 = enabled
    fix 12944193 = enabled
    fix 13020272 = enabled
    fix 12673320 = enabled
    fix 12975771 = enabled
    fix 12882092 = enabled
    fix 12379334 = enabled
    fix 12723414 = enabled
    fix  9488694 = disabled
    fix 13255388 = 10      
    fix 11727871 = enabled
    fix 13110511 = enabled
    fix 13075297 = enabled
    fix 13345888 = enabled
    fix 11657903 = disabled
    fix 13396096 = enabled
    fix 12591379 = enabled
    fix 13398214 = enabled
    fix 13382280 = enabled
    fix 12869367 = enabled
    fix 12999577 = enabled
    fix 12433153 = enabled
    fix  9094254 = enabled
    fix 13104618 = enabled
    fix 13524237 = enabled
    fix 11813257 = enabled
    fix 13489017 = enabled
    fix 12954320 = enabled
    fix 13555551 = enabled
    fix 13499154 = enabled
    fix 13036910 = enabled
    fix 13545925 = enabled
    fix 13545956 = enabled
    fix 13545989 = enabled
    fix 12839247 = enabled
    fix  9858777 = enabled
    fix 13568366 = enabled
    fix 13393357 = enabled
    fix 13040171 = enabled
    fix 13406619 = enabled
    fix 13594757 = enabled
    fix 13543207 = enabled
    fix 13594712 = enabled
    fix 12648629 = enabled
    fix 13549808 = enabled
    fix 13634700 = enabled
    fix  8792821 = enabled
    fix 13454409 = enabled
    fix 13146487 = enabled
    fix 13592248 = enabled
    fix 11689541 = enabled
    fix 13527374 = enabled
    fix 13430622 = enabled
    fix 13704562 = enabled
    fix  9547706 = enabled
    fix 13497184 = enabled
    fix 13704977 = enabled
    fix 13734456 = enabled
    fix 13070532 = enabled
    fix  6520878 = enabled
    fix  2273284 = enabled
    fix 13786127 = enabled
    fix 13065064 = enabled
    fix 13972896 = enabled
    fix 11843466 = enabled
    fix 13777823 = enabled
    fix 13616573 = enabled
    fix 13831671 = enabled
    fix 13652216 = enabled
    fix 13912192 = enabled
    fix 13909909 = enabled
    fix 13849486 = enabled
    fix 13321547 = enabled
    fix 13886606 = disabled
    fix 14013502 = enabled
    fix 13850256 = enabled
    fix 13929275 = enabled
    fix 11732303 = enabled
    fix 13906168 = enabled
    fix 14055128 = enabled
    fix 12856200 = enabled
    fix 14008590 = enabled
    fix 13627489 = disabled
    fix 13961105 = enabled
    fix 13583722 = enabled
    fix 13076238 = enabled
    fix 13936229 = enabled
    fix  9852856 = enabled
    fix  3904125 = enabled
    fix  5910187 = enabled
    fix 10068316 = enabled
    fix 14029891 = enabled
    fix  4215125 = enabled
    fix 13711083 = enabled
    fix 13973691 = enabled
    fix 13486825 = enabled
    fix 13682550 = enabled
    fix 13826669 = enabled
    fix 14033181 = enabled
    fix 13836796 = enabled
    fix 12555499 = enabled
    fix 13568506 = enabled
    fix  9891396 = enabled
    fix 13699643 = enabled
    fix 13835788 = enabled
    fix  7271518 = enabled
    fix 14127824 = enabled
    fix 12557401 = enabled
    fix 13350470 = enabled
    fix 14095362 = enabled
    fix 13000118 = enabled
    fix 14254795 = enabled
    fix 14012261 = enabled
    fix 14241953 = enabled
    fix 14221012 = enabled
    fix 13329748 = enabled
    fix 13843964 = enabled
    fix 14254052 = enabled
    fix 13814866 = enabled
    fix 14255600 = disabled
    fix 13735304 = enabled
    fix 14142884 = disabled
    fix 12909121 = enabled
    fix 14464068 = enabled
    fix 14295250 = 45000   
    fix  6873091 = enabled
    fix 13448445 = enabled
    fix 14155722 = enabled
    fix 14098180 = enabled
    fix 11905801 = enabled
    fix 14467202 = enabled
    fix 14541122 = enabled
    fix 13905599 = disabled
    fix 14320077 = enabled
    fix 14243782 = enabled
    fix  9114915 = enabled
    fix 14516175 = enabled
    fix 12812697 = enabled
    fix 13109345 = enabled
    fix 14456124 = enabled
    fix 14605040 = enabled
    fix 14595273 = disabled
    fix 14176247 = enabled
    fix 11894476 = enabled
    fix 14256885 = enabled
    fix 14545269 = disabled
    fix 14668404 = disabled
    fix 14144611 = enabled
    fix 14346182 = enabled
    fix 13083139 = enabled
    fix 14726188 = enabled
    fix 14707009 = enabled
    fix 14703133 = enabled
    fix 14618560 = enabled
    fix 14170552 = enabled
    fix 13263174 = enabled
    fix 14669785 = enabled
    fix 14633570 = enabled
    fix 14755138 = enabled
    fix 14682092 = enabled
    fix 14712222 = enabled
    fix 14570575 = enabled
    fix 14707748 = disabled
    fix 14684079 = enabled
    fix 13245379 = enabled
    fix 13853916 = enabled
    fix 13699007 = enabled
    fix 14843189 = enabled
    fix 14147762 = enabled
    fix 14795969 = enabled
    fix 14746036 = 1       
    fix 14750501 = enabled
    fix 13891981 = enabled
    fix 15996520 = enabled
    fix 16026776 = enabled
    fix 13573073 = enabled
    fix 13263455 = enabled
    fix 16053273 = enabled
    fix 16029607 = enabled
    fix 14242833 = enabled
    fix 13362020 = enabled
    fix 13799389 = enabled
    fix 12693573 = enabled
    fix 15998585 = enabled
    fix 16166364 = enabled
    fix 14723910 = enabled
    fix 15873008 = enabled
    fix 14133928 = enabled
    fix 16085999 = enabled
    fix 14176203 = enabled
    fix 16226575 = enabled
    fix 16015637 = enabled
    fix 15968693 = disabled
    fix 16220895 = enabled
    fix 16178821 = enabled
    fix 11865196 = enabled
    fix 16237969 = enabled
    fix 16058481 = enabled
    fix 13361493 = enabled
    fix 16264537 = enabled
    fix 14401107 = enabled
    fix 13943459 = enabled
    fix 13994546 = enabled
    fix  7174435 = enabled
    fix 14750443 = enabled
    fix 14469756 = enabled
    fix 14552075 = enabled
    fix 16324844 = enabled
    fix 13583529 = enabled
    fix 14565911 = enabled
    fix 13526551 = enabled
    fix 16368002 = enabled
    fix 16077770 = enabled
    fix 16419357 = enabled
    fix 15889476 = disabled
    fix 16273483 = enabled
    fix 16496848 = disabled
    fix 14107333 = enabled
    fix 11814337 = enabled
    fix 15882436 = enabled
    fix 14764840 = enabled
    fix 16226660 = enabled
    fix 16555865 = enabled
    fix 16625151 = enabled
    fix 16092378 = enabled
    fix 16487030 = enabled
    fix  9552303 = enabled
    fix 16609749 = enabled
    fix 16751246 = enabled
    fix 13253977 = enabled
    fix 14058291 = disabled
    fix 16749025 = enabled
    fix 16750067 = enabled
    fix 16726844 = enabled
    fix 15899648 = enabled
    fix 16690013 = enabled
    fix 15996156 = enabled
    fix 16544878 = enabled
    fix  9413591 = disabled
    fix 16792882 = 0       
    fix 16725982 = enabled
    fix 14648222 = enabled
    fix 16799181 = enabled
    fix 16516883 = enabled
    fix 16507317 = enabled
    fix 16837274 = enabled
    fix 14085520 = enabled
    fix 16713081 = enabled
    fix 14703295 = enabled
    fix 16908409 = enabled
    fix 16212250 = enabled
    fix 13692395 = disabled
    fix 17087729 = enabled
    fix 17088819 = enabled
    fix 13848786 = enabled
    fix 13522189 = enabled
    fix 16400122 = enabled
    fix 16796185 = enabled
    fix 15950252 = enabled
    fix 17070464 = enabled
    fix 16976121 = enabled
    fix 14580303 = enabled
    fix 16554552 = enabled
    fix 16582322 = enabled
    fix 16712213 = enabled
    fix 17382690 = enabled
    fix 14846352 = enabled
    fix 16516751 = enabled
    fix  3174223 = enabled
    fix  8611462 = enabled
    fix 14851437 = 3       
    fix 17348895 = enabled
    fix 16515789 = enabled
    fix  5451645 = disabled
    fix 14062749 = enabled
    fix 16346018 = enabled
    fix 12977599 = enabled
    fix 14191778 = enabled
    fix 15939321 = enabled
    fix 16874299 = enabled
    fix 16470836 = enabled
    fix 16805362 = disabled
    fix 17442009 = disabled
    fix 16825679 = enabled
    fix 17543180 = enabled
    fix 17301564 = enabled
    fix 12373708 = enabled
    fix 17397506 = enabled
    fix 14558315 = enabled
    fix 16615686 = enabled
    fix 16622801 = enabled
    fix 10038517 = enabled
    fix 16954950 = enabled
    fix 17728161 = enabled
    fix 17760375 = enabled
    fix 14311185 = enabled
    fix 13077335 = disabled
    fix 13458979 = disabled
    fix 17485514 = enabled
    fix 17599514 = enabled
    fix 17640863 = enabled
    fix 17716301 = enabled
    fix 17368047 = disabled
    fix 17597748 = enabled
    fix 17303359 = enabled
    fix 17376322 = disabled
    fix 16391176 = disabled
    fix 16673868 = enabled
    fix 17800514 = enabled
    fix 14826303 = enabled
    fix 17663076 = enabled
    fix 17760755 = enabled
    fix 17793460 = enabled
    fix 17997159 = enabled
    fix 17938754 = enabled
    fix 14733442 = enabled
    fix 17727676 = enabled
    fix 17781659 = enabled
    fix 17526569 = enabled
    fix 17950612 = enabled
    fix 17760686 = enabled
    fix 17696414 = enabled
    fix 17799716 = enabled
    fix 18116777 = enabled
    fix 18159664 = disabled
    fix 16052625 = enabled
    fix 18091750 = enabled
    fix 17572606 = enabled
    fix 17971955 = enabled
    fix 17946915 = enabled
    fix 18196576 = enabled
    fix 10145667 = enabled
    fix 17736165 = enabled
    fix 16434021 = enabled
    fix 18035463 = enabled
    fix 18011820 = enabled
    fix 16405740 = enabled
    fix 14612201 = enabled
    fix 17491018 = enabled
    fix 18365267 = enabled
    fix 17986549 = enabled
    fix 18115594 = enabled
    fix 18182018 = enabled
    fix 18302923 = enabled
    fix 18377553 = enabled
    fix  5677419 = enabled
    fix 17896018 = disabled
    fix 13097308 = enabled
    fix 17863980 = enabled
    fix 17567154 = enabled
    fix 18398980 = enabled
    fix 17023040 = enabled
    fix 17991403 = 1       
    fix 16033838 = enabled
    fix 17908541 = enabled
    fix 18134680 = enabled
    fix 18405517 = 0       
    fix 18304693 = enabled
    fix 18456944 = enabled
    fix 18467455 = enabled
    fix 18425876 = enabled
    fix 18508675 = enabled
    fix 17473046 = disabled
    fix 18636079 = enabled
    fix 18388128 = enabled
    fix 18415557 = enabled
    fix 18385778 = enabled
    fix 18308329 = enabled
    fix 18461984 = enabled
    fix 17973658 = enabled
    fix 18558952 = enabled
    fix  9912950 = enabled
    fix 18751128 = enabled
    fix 16809786 = enabled
    fix 18795224 = enabled
    fix 14776289 = enabled
    fix 18823135 = enabled
    fix 18874242 = enabled
    fix 18770199 = disabled
    fix  4185270 = disabled
    fix 18765574 = enabled
    fix 18754357 = disabled
    fix 18959892 = enabled
    fix 17324379 = disabled
    fix 18952882 = enabled
    fix 18924221 = enabled
    fix 18422714 = enabled
    fix 18798414 = enabled
    fix 18969167 = enabled
    fix 16191689 = enabled
    fix 18907562 = enabled
    fix 19055664 = enabled
    fix 18898582 = enabled
    fix 18960760 = enabled
    fix 19070454 = enabled
    fix 19230097 = enabled
    fix 19063497 = enabled
    fix 19046459 = enabled
    fix 19269482 = enabled
    fix 18876528 = enabled
    fix 19227996 = enabled
    fix 18864613 = enabled
    fix 19239478 = enabled
    fix 19451895 = enabled
    fix 19450139 = enabled
    fix 18907390 = enabled
    fix 19025959 = enabled
    fix 19309574 = enabled
    fix 16774698 = enabled
    fix 16923858 = 6       
    fix 19546825 = enabled
    fix 19475484 = enabled
    fix 19498595 = enabled
    fix 16934526 = enabled
    fix 19287919 = enabled
    fix 19386746 = enabled
    fix 19774486 = enabled
    fix 19803410 = enabled
    fix 18671960 = enabled
    fix 19484911 = enabled
    fix 19731940 = enabled
    fix 19604408 = enabled
    fix 14402409 = enabled
    fix 16486095 = enabled
    fix 19563657 = enabled
    fix 19632232 = enabled
    fix 19889960 = enabled
    fix 17208933 = enabled
    fix 19710102 = enabled
    fix 18697515 = enabled
    fix 18318631 = enabled
    fix 19377983 = enabled
    fix 20078639 = enabled
    fix 19503668 = enabled
    fix 20124288 = enabled
    fix 19847091 = enabled
    fix 12989345 = enabled
    fix 12618642 = enabled
    fix 19779920 = enabled
    fix 20186282 = enabled
    fix 20186295 = enabled
    fix 19563433 = enabled
    fix 19848804 = enabled
    fix 20046257 = enabled
    fix 20265690 = enabled
    fix 16047938 = enabled
    fix 19507904 = enabled
    fix 18915345 = enabled
    fix 20173686 = disabled
    fix 20329321 = enabled
    fix 20225191 = enabled
    fix 18776755 = enabled
    fix 19882842 = enabled
    fix 20010996 = enabled
    fix 20445764 = disabled
    fix 19728543 = disabled
    fix 20379571 = enabled
    fix 20129763 = enabled
    fix 19899588 = enabled
    fix 10098852 = enabled
    fix 19663421 = disabled
    fix 20355502 = 0       
    fix 20526705 = enabled
    fix 20465582 = enabled
    fix 20581886 = disabled
    fix 16732417 = enabled
    fix 20732410 = enabled
    fix 20289688 = enabled
    fix 20543684 = enabled
    fix 20636003 = enabled
    fix 20506136 = enabled
    fix 20458598 = disabled
    fix 20830312 = enabled
    fix 19768896 = enabled
    fix 20321661 = enabled
    fix 19814541 = enabled
    fix 20933264 = enabled
    fix 17443547 = enabled
    fix 20602794 = enabled
    fix 19123152 = enabled
    fix 19899833 = enabled
    fix 20754928 = enabled
    fix 20808265 = enabled
    fix 20808192 = enabled
    fix 20340595 = enabled
    fix 14474264 = disabled
    fix 20508819 = enabled
    fix 21098866 = disabled
    fix 18949550 = enabled
    fix 14775297 = enabled
    fix 19568958 = disabled
    fix 20923950 = enabled
    fix 21283159 = enabled
    fix 17497847 = enabled
    fix 21211629 = enabled
    fix 20819668 = disabled
    fix 20232513 = enabled
    fix 20906782 = enabled
    fix 20587527 = enabled
    fix 20914534 = disabled
    fix 20830544 = enabled
    fix 16851194 = enabled
    fix 19186783 = enabled
    fix 19653920 = enabled
    fix 21211786 = enabled
    fix 21057343 = enabled
    fix 21503478 = enabled
    fix 19808939 = disabled
    fix 21476032 = enabled
    fix 20859246 = enabled
    fix 20838633 = 2       
    fix 21639419 = enabled
    fix 20951803 = enabled
    fix 21683982 = enabled
    fix 20216500 = enabled
    fix 21614112 = enabled
    fix 20906162 = enabled
    fix 20854798 = enabled
    fix 21509656 = enabled
    fix 21833220 = enabled
    fix 21802552 = enabled
    fix 21452843 = enabled
    fix 21553593 = enabled
    fix 21093805 = enabled
    fix 16220085 = disabled
    fix 21800590 = enabled
    fix 21273039 = enabled
    fix 16750133 = enabled
    fix 22013607 = enabled
    fix 22152372 = enabled
    fix 22077191 = enabled
    fix 22123025 = enabled
    fix 16913734 = enabled
    fix  8357294 = enabled
    fix 12670904 = enabled
    fix 21979983 = enabled
    fix 22158526 = enabled
    fix 21971099 = enabled
    fix 22090662 = enabled
    fix 22149010 = disabled
    fix 21300129 = enabled
    fix 21339278 = enabled
    fix 20270511 = enabled
    fix 21424812 = enabled
    fix 22114090 = enabled
    fix 22310074 = disabled
    fix 22159570 = enabled
    fix 22272439 = enabled
    fix 22372694 = enabled
    fix 22514195 = enabled
    fix 20413540 = enabled
    fix 22520315 = enabled
    fix 22649054 = enabled
    fix  8617254 = enabled
    fix 22020067 = enabled
    fix 22864730 = enabled
    fix 21099502 = enabled
    fix 22904304 = enabled
    fix 22967807 = enabled
    fix 22879002 = enabled
    fix 23019286 = enabled
    fix 22760704 = enabled
    fix 20853506 = enabled
    fix 22540411 = disabled
    fix 22513493 = enabled
    fix 22518491 = enabled
    fix 23103096 = enabled
    fix 22143411 = enabled
    fix 23180670 = enabled
    fix 23002609 = enabled
    fix 22928015 = 1       
    fix 23210039 = enabled
    fix 23102649 = enabled
    fix 23071621 = enabled
    fix 22822245 = enabled
    fix 23136865 = enabled
    fix 23176721 = enabled
    fix 23308385 = enabled
    fix 23223113 = enabled
    fix 22301868 = disabled
    fix 22258300 = enabled
    fix 22205301 = enabled
    fix 23514473 = 1       
    fix 23556483 = enabled
    fix 21305617 = enabled
    fix 22533539 = enabled
    fix 23596611 = enabled
    fix 20347374 = disabled
    fix 22937293 = enabled
    fix 20107874 = enabled
    fix 19582337 = enabled
    fix 22746853 = enabled
    fix 23537232 = enabled
    fix 23565188 = enabled
    fix 20228468 = enabled
    fix 22393169 = enabled
    fix 24426912 = enabled
    fix 24690046 = enabled
    fix 23732552 = enabled
    fix 20648883 = enabled
    fix 24654471 = enabled
    fix 23738304 = enabled
    fix 24010030 = enabled
    fix 22766607 = enabled
    fix 24600280 = enabled
    fix 24845754 = enabled
    fix 24533235 = enabled
    fix 22128803 = enabled
    fix 24926999 = enabled
    fix 24434608 = enabled
    fix 25094218 = enabled
    fix 24819957 = enabled
    fix 23478835 = enabled
    fix 24745366 = enabled
    fix 24920138 = disabled
    fix 24570810 = enabled
    fix 25058954 = enabled
    fix 24518392 = enabled
    fix 23738186 = enabled
    fix 25234139 = enabled
    fix 25108065 = enabled
    fix 22212124 = enabled
    fix 25123105 = enabled
    fix 25078728 = enabled
    fix 23719498 = 0       
    fix 25090203 = enabled
    fix 23197730 = enabled
    fix 23738553 = enabled
    fix 22070473 = enabled
    fix 19956351 = enabled
    fix 25393617 = enabled
    fix 21130817 = enabled
    fix 25342352 = enabled
    fix 25167306 = disabled
    fix 23473108 = enabled
    fix 25501716 = enabled
    fix 22973474 = enabled
    fix 22153026 = enabled
    fix 25367727 = enabled
    fix 25477783 = enabled
    fix 25493582 = enabled
    fix 22205362 = enabled
    fix 23249829 = enabled
    fix 25120742 = enabled
    fix 23853877 = disabled
    fix 25796244 = enabled
    fix 25575369 = enabled
    fix 25643889 = disabled
    fix 25436615 = enabled
    fix 25478095 = enabled
    fix 25405100 = enabled
    fix 24952618 = enabled
    fix 25809211 = enabled
    fix 26094674 = enabled
    fix 21183079 = enabled
    fix 25948370 = enabled
    fix 24545933 = enabled
    fix 25926263 = enabled
    fix 26019148 = enabled
    fix 25995431 = enabled
    fix 21870589 = enabled
    fix 24584046 = enabled
    fix 26374214 = enabled
    fix 25476149 = enabled
    fix 25345279 = enabled
    fix 24478915 = enabled
    fix 26541991 = enabled
    fix 26338880 = enabled
    fix 26270685 = disabled
    fix 26560136 = enabled
    fix 26671842 = enabled
    fix 26712343 = enabled
    fix 26585420 = enabled
    fix 26677151 = enabled
    fix 26367868 = enabled
    fix 25323193 = enabled
    fix 26552730 = disabled
    fix 26177646 = enabled
    fix 23643560 = enabled
    fix 25792706 = enabled
    fix 27057772 = disabled
    fix 26986173 = enabled
    fix 26423085 = enabled
    fix 27077069 = enabled
    fix 26536320 = enabled
    fix 25138211 = enabled
    fix 27321179 = enabled
    fix 27343844 = enabled
    fix 26790514 = enabled
    fix 27282295 = enabled
    fix 27432718 = enabled
    fix 27268249 = enabled
    fix 25507796 = enabled
    fix 25507810 = enabled
    fix 25507823 = disabled
    fix 25507828 = enabled
    fix 25660695 = enabled
    fix 27311177 = enabled
    fix 24841671 = enabled
    fix 26842212 = enabled
    fix 27559630 = enabled
    fix 27436816 = enabled
    fix 23098284 = enabled
    fix 26660568 = enabled
    fix 27693205 = enabled
    fix 27096140 = disabled
    fix 27174324 = enabled
    fix 27000158 = enabled
    fix 27208525 = enabled
    fix 27745220 = enabled
    fix 26527656 = enabled
    fix 27675947 = disabled
    fix 26566785 = enabled
    fix 27175987 = enabled
    fix  8932139 = enabled
    fix 18816560 = enabled
    fix 27466597 = enabled
    fix 27210659 = enabled
    fix 27643128 = enabled
    fix 27782339 = enabled
    fix 24761824 = enabled
    fix 27634227 = enabled
    fix 26733841 = enabled
    fix 27971253 = enabled
    fix 22174392 = enabled
    fix 27730925 = enabled
    fix 22559379 = enabled
    fix 27622097 = enabled
    fix 20424684 = enabled
    fix 27593424 = enabled
    fix 28096482 = enabled
    fix 24573561 = enabled
    fix 22582700 = enabled
    fix 28201419 = enabled
    fix 26836964 = disabled
    fix 27991474 = enabled
    fix 28210382 = enabled
    fix 27500916 = enabled
    fix 28012754 = 7       
    fix 28071742 = enabled
    fix 27836278 = enabled
    fix 28256899 = enabled
    fix 28345522 = 0       
    fix 28084251 = enabled
    fix 23058521 = enabled
    fix 28242450 = enabled
    fix 28135957 = enabled
    fix 27680422 = 1       
    fix 28378804 = enabled
    fix 28660798 = enabled
    fix 28606162 = disabled
    fix 28816113 = enabled
    fix 27541468 = enabled
    fix 28725660 = enabled
    fix 28072567 = enabled
    fix 28835937 = enabled


Query Block Registry:
SEL$1 0x8126d988 (PARSER) [FINAL]
  SEL$1_3 0x8126d988 (OR EXPANSION SEL$1) [FINAL]
  SEL$1_2 0x8126d988 (OR EXPANSION SEL$1) [FINAL]
  SEL$1_1 0x8126d988 (OR EXPANSION SEL$1; SEL$1; 8 LIST) [FINAL]
  SEL$1_1 0x8126d988 (OR EXPANSION SEL$1; SEL$1; 8 LIST) [FINAL]

:
    call(in-use=359800, alloc=1425800), compile(in-use=601848, alloc=701872), execution(in-use=779288, alloc=781840)

End of Optimizer State Dump
Dumping Hints
=============
  atom_hint=(@=0x65112870 err=0 resol=0 used=1 token=1087 org=1 lvl=1 txt=OPT_PARAM ())
====================== END SQL Statement Dump ======================
